/**
 * React v0.8.0
 */
!function(e){"object"==typeof exports?module.exports=e():"function"==typeof define&&define.amd?define(e):"undefined"!=typeof window?window.React=e():"undefined"!=typeof global?global.React=e():"undefined"!=typeof self&&(self.React=e())}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule $
 * @typechecks
 */

var ge = require("./ge");
var ex = require("./ex");

/**
 * Find a node by ID.
 *
 * If your application code depends on the existence of the element, use $,
 * which will throw if the element doesn't exist.
 *
 * If you're not sure whether or not the element exists, use ge instead, and
 * manually check for the element's existence in your application code.
 *
 * @param {string|DOMDocument|DOMElement|DOMTextNode|Comment} id
 * @return {DOMDocument|DOMElement|DOMTextNode|Comment}
 */
function $(id) {
  var element = ge(id);
  if (!element) {
    throw new Error(ex(
      'Tried to get element with id of "%s" but it is not present on the page.',
      id
    ));
  }
  return element;
}

module.exports = $;

},{"./ex":85,"./ge":89}],2:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule CSSProperty
 */

"use strict";

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  fillOpacity: true,
  fontWeight: true,
  lineHeight: true,
  opacity: true,
  orphans: true,
  zIndex: true,
  zoom: true
};

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundImage: true,
    backgroundPosition: true,
    backgroundRepeat: true,
    backgroundColor: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;

},{}],3:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule CSSPropertyOperations
 * @typechecks static-only
 */

"use strict";

var CSSProperty = require("./CSSProperty");

var dangerousStyleValue = require("./dangerousStyleValue");
var escapeTextForBrowser = require("./escapeTextForBrowser");
var hyphenate = require("./hyphenate");
var memoizeStringOnly = require("./memoizeStringOnly");

var processStyleName = memoizeStringOnly(function(styleName) {
  return escapeTextForBrowser(hyphenate(styleName));
});

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {

  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   *
   * @param {object} styles
   * @return {?string}
   */
  createMarkupForStyles: function(styles) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   */
  setValueForStyles: function(node, styles) {
    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
      if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }

};

module.exports = CSSPropertyOperations;

},{"./CSSProperty":2,"./dangerousStyleValue":82,"./escapeTextForBrowser":84,"./hyphenate":97,"./memoizeStringOnly":106}],4:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule CallbackRegistry
 * @typechecks static-only
 */

"use strict";

var listenerBank = {};

/**
 * Stores "listeners" by `registrationName`/`id`. There should be at most one
 * "listener" per `registrationName`/`id` in the `listenerBank`.
 *
 * Access listeners via `listenerBank[registrationName][id]`.
 *
 * @class CallbackRegistry
 * @internal
 */
var CallbackRegistry = {

  /**
   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
   *
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {?function} listener The callback to store.
   */
  putListener: function(id, registrationName, listener) {
    var bankForRegistrationName =
      listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[id] = listener;
  },

  /**
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function(id, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    return bankForRegistrationName && bankForRegistrationName[id];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function(id, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    if (bankForRegistrationName) {
      delete bankForRegistrationName[id];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {string} id ID of the DOM element.
   */
  deleteAllListeners: function(id) {
    for (var registrationName in listenerBank) {
      delete listenerBank[registrationName][id];
    }
  },

  /**
   * This is needed for tests only. Do not use!
   */
  __purge: function() {
    listenerBank = {};
  }

};

module.exports = CallbackRegistry;

},{}],5:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ChangeEventPlugin
 */

"use strict";

var EventConstants = require("./EventConstants");
var EventPluginHub = require("./EventPluginHub");
var EventPropagators = require("./EventPropagators");
var ExecutionEnvironment = require("./ExecutionEnvironment");
var SyntheticEvent = require("./SyntheticEvent");

var isEventSupported = require("./isEventSupported");
var isTextInputElement = require("./isTextInputElement");
var keyOf = require("./keyOf");

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: keyOf({onChange: null}),
      captured: keyOf({onChangeCapture: null})
    }
  }
};

/**
 * For IE shims
 */
var activeElement = null;
var activeElementID = null;
var activeElementValue = null;
var activeElementValueProp = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  return (
    elem.nodeName === 'SELECT' ||
    (elem.nodeName === 'INPUT' && elem.type === 'file')
  );
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (
    !('documentMode' in document) || document.documentMode > 8
  );
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = SyntheticEvent.getPooled(
    eventTypes.change,
    activeElementID,
    nativeEvent
  );
  EventPropagators.accumulateTwoPhaseDispatches(event);

  // If change bubbled, we'd just bind to it like all the other events
  // and have it go through ReactEventTopLevelCallback. Since it doesn't, we
  // manually listen for the change event and so we have to enqueue and
  // process the abstract event manually.
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue();
}

function startWatchingForChangeEventIE8(target, targetID) {
  activeElement = target;
  activeElementID = targetID;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementID = null;
}

function getTargetIDForChangeEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topChange) {
    return topLevelTargetID;
  }
}
function handleEventsForChangeEventIE8(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topFocus) {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForChangeEventIE8();
  }
}


/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events
  isInputEventSupported = isEventSupported('input') && (
    !('documentMode' in document) || document.documentMode > 9
  );
}

/**
 * (For old IE.) Replacement getter/setter for the `value` property that gets
 * set on the active element.
 */
var newValueProp =  {
  get: function() {
    return activeElementValueProp.get.call(this);
  },
  set: function(val) {
    // Cast to a string so we can do equality checks.
    activeElementValue = '' + val;
    activeElementValueProp.set.call(this, val);
  }
};

/**
 * (For old IE.) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetID) {
  activeElement = target;
  activeElementID = targetID;
  activeElementValue = target.value;
  activeElementValueProp = Object.getOwnPropertyDescriptor(
    target.constructor.prototype,
    'value'
  );

  Object.defineProperty(activeElement, 'value', newValueProp);
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For old IE.) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  // delete restores the original property definition
  delete activeElement.value;
  activeElement.detachEvent('onpropertychange', handlePropertyChange);

  activeElement = null;
  activeElementID = null;
  activeElementValue = null;
  activeElementValueProp = null;
}

/**
 * (For old IE.) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  var value = nativeEvent.srcElement.value;
  if (value === activeElementValue) {
    return;
  }
  activeElementValue = value;

  manualDispatchChangeEvent(nativeEvent);
}

/**
 * If a `change` event should be fired, returns the target's ID.
 */
function getTargetIDForInputEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topInput) {
    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
    // what we want so fall through here and trigger an abstract event
    return topLevelTargetID;
  }
}

// For IE8 and IE9.
function handleEventsForInputEventIE(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topFocus) {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetIDForInputEventIE(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topSelectionChange ||
      topLevelType === topLevelTypes.topKeyUp ||
      topLevelType === topLevelTypes.topKeyDown) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    if (activeElement && activeElement.value !== activeElementValue) {
      activeElementValue = activeElement.value;
      return activeElementID;
    }
  }
}


/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  return (
    elem.nodeName === 'INPUT' &&
    (elem.type === 'checkbox' || elem.type === 'radio')
  );
}

function getTargetIDForClickEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topClick) {
    return topLevelTargetID;
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    var getTargetIDFunc, handleEventFunc;
    if (shouldUseChangeEvent(topLevelTarget)) {
      if (doesChangeEventBubble) {
        getTargetIDFunc = getTargetIDForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(topLevelTarget)) {
      if (isInputEventSupported) {
        getTargetIDFunc = getTargetIDForInputEvent;
      } else {
        getTargetIDFunc = getTargetIDForInputEventIE;
        handleEventFunc = handleEventsForInputEventIE;
      }
    } else if (shouldUseClickEvent(topLevelTarget)) {
      getTargetIDFunc = getTargetIDForClickEvent;
    }

    if (getTargetIDFunc) {
      var targetID = getTargetIDFunc(
        topLevelType,
        topLevelTarget,
        topLevelTargetID
      );
      if (targetID) {
        var event = SyntheticEvent.getPooled(
          eventTypes.change,
          targetID,
          nativeEvent
        );
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(
        topLevelType,
        topLevelTarget,
        topLevelTargetID
      );
    }
  }

};

module.exports = ChangeEventPlugin;

},{"./EventConstants":14,"./EventPluginHub":16,"./EventPropagators":19,"./ExecutionEnvironment":20,"./SyntheticEvent":66,"./isEventSupported":99,"./isTextInputElement":101,"./keyOf":105}],6:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule CompositionEventPlugin
 * @typechecks static-only
 */

"use strict";

var EventConstants = require("./EventConstants");
var EventPropagators = require("./EventPropagators");
var ExecutionEnvironment = require("./ExecutionEnvironment");
var ReactInputSelection = require("./ReactInputSelection");
var SyntheticCompositionEvent = require("./SyntheticCompositionEvent");

var getTextContentAccessor = require("./getTextContentAccessor");
var keyOf = require("./keyOf");

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var useCompositionEvent = ExecutionEnvironment.canUseDOM &&
  'CompositionEvent' in window;
var topLevelTypes = EventConstants.topLevelTypes;
var currentComposition = null;

// Events and their corresponding property names.
var eventTypes = {
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionEnd: null}),
      captured: keyOf({onCompositionEndCapture: null})
    }
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionStart: null}),
      captured: keyOf({onCompositionStartCapture: null})
    }
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionUpdate: null}),
      captured: keyOf({onCompositionUpdateCapture: null})
    }
  }
};

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionStart:
      return eventTypes.compositionStart;
    case topLevelTypes.topCompositionEnd:
      return eventTypes.compositionEnd;
    case topLevelTypes.topCompositionUpdate:
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackStart(topLevelType, nativeEvent) {
  return (
    topLevelType === topLevelTypes.topKeyDown &&
    nativeEvent.keyCode === START_KEYCODE
  );
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topKeyUp:
      // Command keys insert or clear IME input.
      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);
    case topLevelTypes.topKeyDown:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return (nativeEvent.keyCode !== START_KEYCODE);
    case topLevelTypes.topKeyPress:
    case topLevelTypes.topMouseDown:
    case topLevelTypes.topBlur:
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Helper class stores information about selection and document state
 * so we can figure out what changed at a later date.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this.root = root;
  this.startSelection = ReactInputSelection.getSelection(root);
  this.startValue = this.getText();
}

/**
 * Get current text of input.
 *
 * @return {string}
 */
FallbackCompositionState.prototype.getText = function() {
  return this.root.value || this.root[getTextContentAccessor()];
};

/**
 * Text that has changed since the start of composition.
 *
 * @return {string}
 */
FallbackCompositionState.prototype.getData = function() {
  var endValue = this.getText();
  var prefixLength = this.startSelection.start;
  var suffixLength = this.startValue.length - this.startSelection.end;

  return endValue.substr(
    prefixLength,
    endValue.length - suffixLength - prefixLength
  );
};

/**
 * This plugin creates `onCompositionStart`, `onCompositionUpdate` and
 * `onCompositionEnd` events on inputs, textareas and contentEditable
 * nodes.
 */
var CompositionEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    var eventType;
    var data;

    if (useCompositionEvent) {
      eventType = getCompositionEventType(topLevelType);
    } else if (!currentComposition) {
      if (isFallbackStart(topLevelType, nativeEvent)) {
        eventType = eventTypes.start;
        currentComposition = new FallbackCompositionState(topLevelTarget);
      }
    } else if (isFallbackEnd(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionEnd;
      data = currentComposition.getData();
      currentComposition = null;
    }

    if (eventType) {
      var event = SyntheticCompositionEvent.getPooled(
        eventType,
        topLevelTargetID,
        nativeEvent
      );
      if (data) {
        // Inject data generated from fallback path into the synthetic event.
        // This matches the property of native CompositionEventInterface.
        event.data = data;
      }
      EventPropagators.accumulateTwoPhaseDispatches(event);
      return event;
    }
  }
};

module.exports = CompositionEventPlugin;

},{"./EventConstants":14,"./EventPropagators":19,"./ExecutionEnvironment":20,"./ReactInputSelection":47,"./SyntheticCompositionEvent":65,"./getTextContentAccessor":95,"./keyOf":105}],7:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule DOMChildrenOperations
 * @typechecks static-only
 */

"use strict";

var Danger = require("./Danger");
var ReactMultiChildUpdateTypes = require("./ReactMultiChildUpdateTypes");

var getTextContentAccessor = require("./getTextContentAccessor");

/**
 * The DOM property to use when setting text content.
 *
 * @type {string}
 * @private
 */
var textContentAccessor = getTextContentAccessor() || 'NA';

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
function insertChildAt(parentNode, childNode, index) {
  var childNodes = parentNode.childNodes;
  if (childNodes[index] === childNode) {
    return;
  }
  // If `childNode` is already a child of `parentNode`, remove it so that
  // computing `childNodes[index]` takes into account the removal.
  if (childNode.parentNode === parentNode) {
    parentNode.removeChild(childNode);
  }
  if (index >= childNodes.length) {
    parentNode.appendChild(childNode);
  } else {
    parentNode.insertBefore(childNode, childNodes[index]);
  }
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {

  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @param {array<string>} markupList List of markup strings.
   * @internal
   */
  processUpdates: function(updates, markupList) {
    var update;
    // Mapping from parent IDs to initial child orderings.
    var initialChildren = null;
    // List of children that will be moved or removed.
    var updatedChildren = null;

    for (var i = 0; update = updates[i]; i++) {
      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||
          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
        var updatedIndex = update.fromIndex;
        var updatedChild = update.parentNode.childNodes[updatedIndex];
        var parentID = update.parentID;

        initialChildren = initialChildren || {};
        initialChildren[parentID] = initialChildren[parentID] || [];
        initialChildren[parentID][updatedIndex] = updatedChild;

        updatedChildren = updatedChildren || [];
        updatedChildren.push(updatedChild);
      }
    }

    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);

    // Remove updated children first so that `toIndex` is consistent.
    if (updatedChildren) {
      for (var j = 0; j < updatedChildren.length; j++) {
        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
      }
    }

    for (var k = 0; update = updates[k]; k++) {
      switch (update.type) {
        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
          insertChildAt(
            update.parentNode,
            renderedMarkup[update.markupIndex],
            update.toIndex
          );
          break;
        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
          insertChildAt(
            update.parentNode,
            initialChildren[update.parentID][update.fromIndex],
            update.toIndex
          );
          break;
        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
          update.parentNode[textContentAccessor] = update.textContent;
          break;
        case ReactMultiChildUpdateTypes.REMOVE_NODE:
          // Already removed by the for-loop above.
          break;
      }
    }
  }

};

module.exports = DOMChildrenOperations;

},{"./Danger":10,"./ReactMultiChildUpdateTypes":53,"./getTextContentAccessor":95}],8:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule DOMProperty
 * @typechecks static-only
 */

/*jslint bitwise: true */

"use strict";

var invariant = require("./invariant");

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_ATTRIBUTE: 0x1,
  MUST_USE_PROPERTY: 0x2,
  HAS_SIDE_EFFECTS: 0x4,
  HAS_BOOLEAN_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function(domPropertyConfig) {
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(
        domPropertyConfig.isCustomAttribute
      );
    }

    for (var propName in Properties) {
      ("production" !== "development" ? invariant(
        !DOMProperty.isStandardName[propName],
        'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' +
        '\'%s\' which has already been injected. You may be accidentally ' +
        'injecting the same DOM property config twice, or you may be ' +
        'injecting two configs that have conflicting property names.',
        propName
      ) : invariant(!DOMProperty.isStandardName[propName]));

      DOMProperty.isStandardName[propName] = true;

      var lowerCased = propName.toLowerCase();
      DOMProperty.getPossibleStandardName[lowerCased] = propName;

      var attributeName = DOMAttributeNames[propName];
      if (attributeName) {
        DOMProperty.getPossibleStandardName[attributeName] = propName;
      }

      DOMProperty.getAttributeName[propName] = attributeName || lowerCased;

      DOMProperty.getPropertyName[propName] =
        DOMPropertyNames[propName] || propName;

      var mutationMethod = DOMMutationMethods[propName];
      if (mutationMethod) {
        DOMProperty.getMutationMethod[propName] = mutationMethod;
      }

      var propConfig = Properties[propName];
      DOMProperty.mustUseAttribute[propName] =
        propConfig & DOMPropertyInjection.MUST_USE_ATTRIBUTE;
      DOMProperty.mustUseProperty[propName] =
        propConfig & DOMPropertyInjection.MUST_USE_PROPERTY;
      DOMProperty.hasSideEffects[propName] =
        propConfig & DOMPropertyInjection.HAS_SIDE_EFFECTS;
      DOMProperty.hasBooleanValue[propName] =
        propConfig & DOMPropertyInjection.HAS_BOOLEAN_VALUE;
      DOMProperty.hasPositiveNumericValue[propName] =
        propConfig & DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE;

      ("production" !== "development" ? invariant(
        !DOMProperty.mustUseAttribute[propName] ||
          !DOMProperty.mustUseProperty[propName],
        'DOMProperty: Cannot require using both attribute and property: %s',
        propName
      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||
        !DOMProperty.mustUseProperty[propName]));
      ("production" !== "development" ? invariant(
        DOMProperty.mustUseProperty[propName] ||
          !DOMProperty.hasSideEffects[propName],
        'DOMProperty: Properties that have side effects must use property: %s',
        propName
      ) : invariant(DOMProperty.mustUseProperty[propName] ||
        !DOMProperty.hasSideEffects[propName]));
      ("production" !== "development" ? invariant(
        !DOMProperty.hasBooleanValue[propName] ||
          !DOMProperty.hasPositiveNumericValue[propName],
        'DOMProperty: Cannot have both boolean and positive numeric value: %s',
        propName
      ) : invariant(!DOMProperty.hasBooleanValue[propName] ||
        !DOMProperty.hasPositiveNumericValue[propName]));
    }
  }
};
var defaultValueCache = {};

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {

  /**
   * Checks whether a property name is a standard property.
   * @type {Object}
   */
  isStandardName: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties.
   * @type {Object}
   */
  getPossibleStandardName: {},

  /**
   * Mapping from normalized names to attribute names that differ. Attribute
   * names are used when rendering markup or with `*Attribute()`.
   * @type {Object}
   */
  getAttributeName: {},

  /**
   * Mapping from normalized names to properties on DOM node instances.
   * (This includes properties that mutate due to external factors.)
   * @type {Object}
   */
  getPropertyName: {},

  /**
   * Mapping from normalized names to mutation methods. This will only exist if
   * mutation cannot be set simply by the property or `setAttribute()`.
   * @type {Object}
   */
  getMutationMethod: {},

  /**
   * Whether the property must be accessed and mutated as an object property.
   * @type {Object}
   */
  mustUseAttribute: {},

  /**
   * Whether the property must be accessed and mutated using `*Attribute()`.
   * (This includes anything that fails `<propName> in <element>`.)
   * @type {Object}
   */
  mustUseProperty: {},

  /**
   * Whether or not setting a value causes side effects such as triggering
   * resources to be loaded or text selection changes. We must ensure that
   * the value is only set if it has changed.
   * @type {Object}
   */
  hasSideEffects: {},

  /**
   * Whether the property should be removed when set to a falsey value.
   * @type {Object}
   */
  hasBooleanValue: {},

  /**
   * Whether the property must be positive numeric or parse as a positive
   * numeric and should be removed when set to a falsey value.
   * @type {Object}
   */
  hasPositiveNumericValue: {},

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function(attributeName) {
    return DOMProperty._isCustomAttributeFunctions.some(
      function(isCustomAttributeFn) {
        return isCustomAttributeFn.call(null, attributeName);
      }
    );
  },

  /**
   * Returns the default property value for a DOM property (i.e., not an
   * attribute). Most default values are '' or false, but not all. Worse yet,
   * some (in particular, `type`) vary depending on the type of element.
   *
   * TODO: Is it better to grab all the possible properties when creating an
   * element to avoid having to create the same element twice?
   */
  getDefaultValueForProperty: function(nodeName, prop) {
    var nodeDefaults = defaultValueCache[nodeName];
    var testElement;
    if (!nodeDefaults) {
      defaultValueCache[nodeName] = nodeDefaults = {};
    }
    if (!(prop in nodeDefaults)) {
      testElement = document.createElement(nodeName);
      nodeDefaults[prop] = testElement[prop];
    }
    return nodeDefaults[prop];
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;

},{"./invariant":98}],9:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule DOMPropertyOperations
 * @typechecks static-only
 */

"use strict";

var DOMProperty = require("./DOMProperty");

var escapeTextForBrowser = require("./escapeTextForBrowser");
var memoizeStringOnly = require("./memoizeStringOnly");

function shouldIgnoreValue(name, value) {
  return value == null ||
    DOMProperty.hasBooleanValue[name] && !value ||
    DOMProperty.hasPositiveNumericValue[name] && (isNaN(value) || value < 1);
}

var processAttributeNameAndPrefix = memoizeStringOnly(function(name) {
  return escapeTextForBrowser(name) + '="';
});

if ("production" !== "development") {
  var reactProps = {
    __owner__: true,
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true
  };
  var warnedProperties = {};

  var warnUnknownProperty = function(name) {
    if (reactProps[name] || warnedProperties[name]) {
      return;
    }

    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ?
      lowerCasedName : DOMProperty.getPossibleStandardName[lowerCasedName];

    // For now, only warn when we have a suggested correction. This prevents
    // logging too much when using transferPropsTo.
    if (standardName != null) {
      console.warn(
        'Unknown DOM property ' + name + '. Did you mean ' + standardName + '?'
      );
    }

  };
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function(name, value) {
    if (DOMProperty.isStandardName[name]) {
      if (shouldIgnoreValue(name, value)) {
        return '';
      }
      var attributeName = DOMProperty.getAttributeName[name];
      return processAttributeNameAndPrefix(attributeName) +
        escapeTextForBrowser(value) + '"';
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return processAttributeNameAndPrefix(name) +
        escapeTextForBrowser(value) + '"';
    } else if ("production" !== "development") {
      warnUnknownProperty(name);
    }
    return null;
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function(node, name, value) {
    if (DOMProperty.isStandardName[name]) {
      var mutationMethod = DOMProperty.getMutationMethod[name];
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(name, value)) {
        this.deleteValueForProperty(node, name);
      } else if (DOMProperty.mustUseAttribute[name]) {
        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);
      } else {
        var propName = DOMProperty.getPropertyName[name];
        if (!DOMProperty.hasSideEffects[name] || node[propName] !== value) {
          node[propName] = value;
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        node.removeAttribute(DOMProperty.getAttributeName[name]);
      } else {
        node.setAttribute(name, '' + value);
      }
    } else if ("production" !== "development") {
      warnUnknownProperty(name);
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function(node, name) {
    if (DOMProperty.isStandardName[name]) {
      var mutationMethod = DOMProperty.getMutationMethod[name];
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (DOMProperty.mustUseAttribute[name]) {
        node.removeAttribute(DOMProperty.getAttributeName[name]);
      } else {
        var propName = DOMProperty.getPropertyName[name];
        var defaultValue = DOMProperty.getDefaultValueForProperty(
          node.nodeName,
          name
        );
        if (!DOMProperty.hasSideEffects[name] ||
            node[propName] !== defaultValue) {
          node[propName] = defaultValue;
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    } else if ("production" !== "development") {
      warnUnknownProperty(name);
    }
  }

};

module.exports = DOMPropertyOperations;

},{"./DOMProperty":8,"./escapeTextForBrowser":84,"./memoizeStringOnly":106}],10:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule Danger
 * @typechecks static-only
 */

/*jslint evil: true, sub: true */

"use strict";

var ExecutionEnvironment = require("./ExecutionEnvironment");

var createNodesFromMarkup = require("./createNodesFromMarkup");
var emptyFunction = require("./emptyFunction");
var getMarkupWrap = require("./getMarkupWrap");
var invariant = require("./invariant");
var mutateHTMLNodeWithMarkup = require("./mutateHTMLNodeWithMarkup");

var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
var RESULT_INDEX_ATTR = 'data-danger-index';

/**
 * Extracts the `nodeName` from a string of markup.
 *
 * NOTE: Extracting the `nodeName` does not require a regular expression match
 * because we make assumptions about React-generated markup (i.e. there are no
 * spaces surrounding the opening tag and there is at least one attribute).
 *
 * @param {string} markup String of markup.
 * @return {string} Node name of the supplied markup.
 * @see http://jsperf.com/extract-nodename
 */
function getNodeName(markup) {
  return markup.substring(1, markup.indexOf(' '));
}

var Danger = {

  /**
   * Renders markup into an array of nodes. The markup is expected to render
   * into a list of root nodes. Also, the length of `resultList` and
   * `markupList` should be the same.
   *
   * @param {array<string>} markupList List of markup strings to render.
   * @return {array<DOMElement>} List of rendered nodes.
   * @internal
   */
  dangerouslyRenderMarkup: function(markupList) {
    ("production" !== "development" ? invariant(
      ExecutionEnvironment.canUseDOM,
      'dangerouslyRenderMarkup(...): Cannot render markup in a Worker ' +
      'thread. This is likely a bug in the framework. Please report ' +
      'immediately.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    var nodeName;
    var markupByNodeName = {};
    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
    for (var i = 0; i < markupList.length; i++) {
      ("production" !== "development" ? invariant(
        markupList[i],
        'dangerouslyRenderMarkup(...): Missing markup.'
      ) : invariant(markupList[i]));
      nodeName = getNodeName(markupList[i]);
      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
      markupByNodeName[nodeName][i] = markupList[i];
    }
    var resultList = [];
    var resultListAssignmentCount = 0;
    for (nodeName in markupByNodeName) {
      if (!markupByNodeName.hasOwnProperty(nodeName)) {
        continue;
      }
      var markupListByNodeName = markupByNodeName[nodeName];

      // This for-in loop skips the holes of the sparse array. The order of
      // iteration should follow the order of assignment, which happens to match
      // numerical index order, but we don't rely on that.
      for (var resultIndex in markupListByNodeName) {
        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
          var markup = markupListByNodeName[resultIndex];

          // Push the requested markup with an additional RESULT_INDEX_ATTR
          // attribute.  If the markup does not start with a < character, it
          // will be discarded below (with an appropriate console.error).
          markupListByNodeName[resultIndex] = markup.replace(
            OPEN_TAG_NAME_EXP,
            // This index will be parsed back out below.
            '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" '
          );
        }
      }

      // Render each group of markup with similar wrapping `nodeName`.
      var renderNodes = createNodesFromMarkup(
        markupListByNodeName.join(''),
        emptyFunction // Do nothing special with <script> tags.
      );

      for (i = 0; i < renderNodes.length; ++i) {
        var renderNode = renderNodes[i];
        if (renderNode.hasAttribute &&
            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
          renderNode.removeAttribute(RESULT_INDEX_ATTR);

          ("production" !== "development" ? invariant(
            !resultList.hasOwnProperty(resultIndex),
            'Danger: Assigning to an already-occupied result index.'
          ) : invariant(!resultList.hasOwnProperty(resultIndex)));

          resultList[resultIndex] = renderNode;

          // This should match resultList.length and markupList.length when
          // we're done.
          resultListAssignmentCount += 1;

        } else if ("production" !== "development") {
          console.error(
            "Danger: Discarding unexpected node:",
            renderNode
          );
        }
      }
    }

    // Although resultList was populated out of order, it should now be a dense
    // array.
    ("production" !== "development" ? invariant(
      resultListAssignmentCount === resultList.length,
      'Danger: Did not assign to every index of resultList.'
    ) : invariant(resultListAssignmentCount === resultList.length));

    ("production" !== "development" ? invariant(
      resultList.length === markupList.length,
      'Danger: Expected markup to render %s nodes, but rendered %s.',
      markupList.length,
      resultList.length
    ) : invariant(resultList.length === markupList.length));

    return resultList;
  },

  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {
    ("production" !== "development" ? invariant(
      ExecutionEnvironment.canUseDOM,
      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +
      'worker thread. This is likely a bug in the framework. Please report ' +
      'immediately.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    ("production" !== "development" ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));
    // createNodesFromMarkup() won't work if the markup is rooted by <html>
    // since it has special semantic meaning. So we use an alternatie strategy.
    if (oldChild.tagName.toLowerCase() === 'html') {
      mutateHTMLNodeWithMarkup(oldChild, markup);
      return;
    }
    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
    oldChild.parentNode.replaceChild(newChild, oldChild);
  }

};

module.exports = Danger;

},{"./ExecutionEnvironment":20,"./createNodesFromMarkup":80,"./emptyFunction":83,"./getMarkupWrap":92,"./invariant":98,"./mutateHTMLNodeWithMarkup":111}],11:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule DefaultDOMPropertyConfig
 */

/*jslint bitwise: true*/

"use strict";

var DOMProperty = require("./DOMProperty");

var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
var HAS_POSITIVE_NUMERIC_VALUE =
  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;

var DefaultDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(
    /^(data|aria)-[a-z_][a-z\d_.\-]*$/
  ),
  Properties: {
    /**
     * Standard Properties
     */
    accept: null,
    accessKey: null,
    action: null,
    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    allowTransparency: MUST_USE_ATTRIBUTE,
    alt: null,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: null,
    autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    cellPadding: null,
    cellSpacing: null,
    charSet: MUST_USE_ATTRIBUTE,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    className: MUST_USE_PROPERTY,
    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: null,
    content: null,
    contentEditable: null,
    contextMenu: MUST_USE_ATTRIBUTE,
    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    data: null, // For `<object />` acts as `src`.
    dateTime: MUST_USE_ATTRIBUTE,
    defer: HAS_BOOLEAN_VALUE,
    dir: null,
    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    draggable: null,
    encType: null,
    form: MUST_USE_ATTRIBUTE,
    frameBorder: MUST_USE_ATTRIBUTE,
    height: MUST_USE_ATTRIBUTE,
    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    href: null,
    htmlFor: null,
    httpEquiv: null,
    icon: null,
    id: MUST_USE_PROPERTY,
    label: null,
    lang: null,
    list: null,
    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    max: null,
    maxLength: MUST_USE_ATTRIBUTE,
    method: null,
    min: null,
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: null,
    pattern: null,
    placeholder: null,
    poster: null,
    preload: null,
    radioGroup: null,
    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    rel: null,
    required: HAS_BOOLEAN_VALUE,
    role: MUST_USE_ATTRIBUTE,
    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: null,
    scrollLeft: MUST_USE_PROPERTY,
    scrollTop: MUST_USE_PROPERTY,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: null,
    src: null,
    step: null,
    style: null,
    tabIndex: null,
    target: null,
    title: null,
    type: null,
    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
    width: MUST_USE_ATTRIBUTE,
    wmode: MUST_USE_ATTRIBUTE,

    /**
     * Non-standard Properties
     */
    autoCapitalize: null, // Supported in Mobile Safari for keyboard hints
    autoCorrect: null, // Supported in Mobile Safari for keyboard hints

    /**
     * SVG Properties
     */
    cx: MUST_USE_ATTRIBUTE,
    cy: MUST_USE_ATTRIBUTE,
    d: MUST_USE_ATTRIBUTE,
    fill: MUST_USE_ATTRIBUTE,
    fx: MUST_USE_ATTRIBUTE,
    fy: MUST_USE_ATTRIBUTE,
    gradientTransform: MUST_USE_ATTRIBUTE,
    gradientUnits: MUST_USE_ATTRIBUTE,
    offset: MUST_USE_ATTRIBUTE,
    points: MUST_USE_ATTRIBUTE,
    r: MUST_USE_ATTRIBUTE,
    rx: MUST_USE_ATTRIBUTE,
    ry: MUST_USE_ATTRIBUTE,
    spreadMethod: MUST_USE_ATTRIBUTE,
    stopColor: MUST_USE_ATTRIBUTE,
    stopOpacity: MUST_USE_ATTRIBUTE,
    stroke: MUST_USE_ATTRIBUTE,
    strokeLinecap: MUST_USE_ATTRIBUTE,
    strokeWidth: MUST_USE_ATTRIBUTE,
    transform: MUST_USE_ATTRIBUTE,
    version: MUST_USE_ATTRIBUTE,
    viewBox: MUST_USE_ATTRIBUTE,
    x1: MUST_USE_ATTRIBUTE,
    x2: MUST_USE_ATTRIBUTE,
    x: MUST_USE_ATTRIBUTE,
    y1: MUST_USE_ATTRIBUTE,
    y2: MUST_USE_ATTRIBUTE,
    y: MUST_USE_ATTRIBUTE
  },
  DOMAttributeNames: {
    className: 'class',
    gradientTransform: 'gradientTransform',
    gradientUnits: 'gradientUnits',
    htmlFor: 'for',
    spreadMethod: 'spreadMethod',
    stopColor: 'stop-color',
    stopOpacity: 'stop-opacity',
    strokeLinecap: 'stroke-linecap',
    strokeWidth: 'stroke-width',
    viewBox: 'viewBox'
  },
  DOMPropertyNames: {
    autoCapitalize: 'autocapitalize',
    autoComplete: 'autocomplete',
    autoCorrect: 'autocorrect',
    autoFocus: 'autofocus',
    autoPlay: 'autoplay',
    encType: 'enctype',
    radioGroup: 'radiogroup',
    spellCheck: 'spellcheck'
  },
  DOMMutationMethods: {
    /**
     * Setting `className` to null may cause it to be set to the string "null".
     *
     * @param {DOMElement} node
     * @param {*} value
     */
    className: function(node, value) {
      node.className = value || '';
    }
  }
};

module.exports = DefaultDOMPropertyConfig;

},{"./DOMProperty":8}],12:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule DefaultEventPluginOrder
 */

"use strict";

 var keyOf = require("./keyOf");

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DefaultEventPluginOrder = [
  keyOf({ResponderEventPlugin: null}),
  keyOf({SimpleEventPlugin: null}),
  keyOf({TapEventPlugin: null}),
  keyOf({EnterLeaveEventPlugin: null}),
  keyOf({ChangeEventPlugin: null}),
  keyOf({SelectEventPlugin: null}),
  keyOf({CompositionEventPlugin: null}),
  keyOf({AnalyticsEventPlugin: null}),
  keyOf({MobileSafariClickEventPlugin: null})
];

module.exports = DefaultEventPluginOrder;

},{"./keyOf":105}],13:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EnterLeaveEventPlugin
 * @typechecks static-only
 */

"use strict";

var EventConstants = require("./EventConstants");
var EventPropagators = require("./EventPropagators");
var SyntheticMouseEvent = require("./SyntheticMouseEvent");

var ReactMount = require("./ReactMount");
var keyOf = require("./keyOf");

var topLevelTypes = EventConstants.topLevelTypes;
var getFirstReactDOM = ReactMount.getFirstReactDOM;

var eventTypes = {
  mouseEnter: {registrationName: keyOf({onMouseEnter: null})},
  mouseLeave: {registrationName: keyOf({onMouseLeave: null})}
};

var extractedEvents = [null, null];

var EnterLeaveEventPlugin = {

  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    if (topLevelType === topLevelTypes.topMouseOver &&
        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== topLevelTypes.topMouseOut &&
        topLevelType !== topLevelTypes.topMouseOver) {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var from, to;
    if (topLevelType === topLevelTypes.topMouseOut) {
      from = topLevelTarget;
      to =
        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||
        window;
    } else {
      from = window;
      to = topLevelTarget;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromID = from ? ReactMount.getID(from) : '';
    var toID = to ? ReactMount.getID(to) : '';

    var leave = SyntheticMouseEvent.getPooled(
      eventTypes.mouseLeave,
      fromID,
      nativeEvent
    );
    var enter = SyntheticMouseEvent.getPooled(
      eventTypes.mouseEnter,
      toID,
      nativeEvent
    );

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

    extractedEvents[0] = leave;
    extractedEvents[1] = enter;

    return extractedEvents;
  }

};

module.exports = EnterLeaveEventPlugin;

},{"./EventConstants":14,"./EventPropagators":19,"./ReactMount":50,"./SyntheticMouseEvent":69,"./keyOf":105}],14:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EventConstants
 */

"use strict";

var keyMirror = require("./keyMirror");

var PropagationPhases = keyMirror({bubbled: null, captured: null});

/**
 * Types of raw signals from the browser caught at the top level.
 */
var topLevelTypes = keyMirror({
  topBlur: null,
  topChange: null,
  topClick: null,
  topCompositionEnd: null,
  topCompositionStart: null,
  topCompositionUpdate: null,
  topContextMenu: null,
  topCopy: null,
  topCut: null,
  topDoubleClick: null,
  topDrag: null,
  topDragEnd: null,
  topDragEnter: null,
  topDragExit: null,
  topDragLeave: null,
  topDragOver: null,
  topDragStart: null,
  topDrop: null,
  topFocus: null,
  topInput: null,
  topKeyDown: null,
  topKeyPress: null,
  topKeyUp: null,
  topMouseDown: null,
  topMouseMove: null,
  topMouseOut: null,
  topMouseOver: null,
  topMouseUp: null,
  topPaste: null,
  topScroll: null,
  topSelectionChange: null,
  topSubmit: null,
  topTouchCancel: null,
  topTouchEnd: null,
  topTouchMove: null,
  topTouchStart: null,
  topWheel: null
});

var EventConstants = {
  topLevelTypes: topLevelTypes,
  PropagationPhases: PropagationPhases
};

module.exports = EventConstants;

},{"./keyMirror":104}],15:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EventListener
 */

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listens to bubbled events on a DOM node.
   *
   * @param {Element} el DOM element to register listener on.
   * @param {string} handlerBaseName 'click'/'mouseover'
   * @param {Function!} cb Callback function
   */
  listen: function(el, handlerBaseName, cb) {
    if (el.addEventListener) {
      el.addEventListener(handlerBaseName, cb, false);
    } else if (el.attachEvent) {
      el.attachEvent('on' + handlerBaseName, cb);
    }
  },

  /**
   * Listens to captured events on a DOM node.
   *
   * @see `EventListener.listen` for params.
   * @throws Exception if addEventListener is not supported.
   */
  capture: function(el, handlerBaseName, cb) {
    if (!el.addEventListener) {
      if ("production" !== "development") {
        console.error(
          'You are attempting to use addEventListener ' +
          'in a browser that does not support it.' +
          'This likely means that you will not receive events that ' +
          'your application relies on (such as scroll).');
      }
      return;
    } else {
      el.addEventListener(handlerBaseName, cb, true);
    }
  }
};

module.exports = EventListener;

},{}],16:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EventPluginHub
 */

"use strict";

var CallbackRegistry = require("./CallbackRegistry");
var EventPluginRegistry = require("./EventPluginRegistry");
var EventPluginUtils = require("./EventPluginUtils");
var EventPropagators = require("./EventPropagators");
var ExecutionEnvironment = require("./ExecutionEnvironment");

var accumulate = require("./accumulate");
var forEachAccumulated = require("./forEachAccumulated");
var invariant = require("./invariant");

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @private
 */
var executeDispatchesAndRelease = function(event) {
  if (event) {
    var executeDispatch = EventPluginUtils.executeDispatch;
    // Plugins can provide custom behavior when dispatching events.
    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);
    if (PluginModule && PluginModule.executeDispatch) {
      executeDispatch = PluginModule.executeDispatch;
    }
    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {

  /**
   * Methods for injecting dependencies.
   */
  injection: {

    /**
     * @param {object} InjectedInstanceHandle
     * @public
     */
    injectInstanceHandle: EventPropagators.injection.injectInstanceHandle,

    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  registrationNames: EventPluginRegistry.registrationNames,

  putListener: CallbackRegistry.putListener,

  getListener: CallbackRegistry.getListener,

  deleteListener: CallbackRegistry.deleteListener,

  deleteAllListeners: CallbackRegistry.deleteAllListeners,

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0, l = plugins.length; i < l; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(
          topLevelType,
          topLevelTarget,
          topLevelTargetID,
          nativeEvent
        );
        if (extractedEvents) {
          events = accumulate(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function(events) {
    if (events) {
      eventQueue = accumulate(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function() {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);
    ("production" !== "development" ? invariant(
      !eventQueue,
      'processEventQueue(): Additional events were enqueued while processing ' +
      'an event queue. Support for this has not yet been implemented.'
    ) : invariant(!eventQueue));
  }

};

if (ExecutionEnvironment.canUseDOM) {
  window.EventPluginHub = EventPluginHub;
}

module.exports = EventPluginHub;

},{"./CallbackRegistry":4,"./EventPluginRegistry":17,"./EventPluginUtils":18,"./EventPropagators":19,"./ExecutionEnvironment":20,"./accumulate":75,"./forEachAccumulated":88,"./invariant":98}],17:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EventPluginRegistry
 * @typechecks static-only
 */

"use strict";

var invariant = require("./invariant");

/**
 * Injectable ordering of event plugins.
 */
var EventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!EventPluginOrder) {
    // Wait until an `EventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var PluginModule = namesToPlugins[pluginName];
    var pluginIndex = EventPluginOrder.indexOf(pluginName);
    ("production" !== "development" ? invariant(
      pluginIndex > -1,
      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +
      'the plugin ordering, `%s`.',
      pluginName
    ) : invariant(pluginIndex > -1));
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    ("production" !== "development" ? invariant(
      PluginModule.extractEvents,
      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +
      'method, but `%s` does not.',
      pluginName
    ) : invariant(PluginModule.extractEvents));
    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
    var publishedEvents = PluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      ("production" !== "development" ? invariant(
        publishEventForPlugin(publishedEvents[eventName], PluginModule),
        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
        eventName,
        pluginName
      ) : invariant(publishEventForPlugin(publishedEvents[eventName], PluginModule)));
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, PluginModule) {
  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, PluginModule);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, PluginModule);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, PluginModule) {
  ("production" !== "development" ? invariant(
    !EventPluginRegistry.registrationNames[registrationName],
    'EventPluginHub: More than one plugin attempted to publish the same ' +
    'registration name, `%s`.',
    registrationName
  ) : invariant(!EventPluginRegistry.registrationNames[registrationName]));
  EventPluginRegistry.registrationNames[registrationName] = PluginModule;
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {

  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from registration names to plugin modules.
   */
  registrationNames: {},

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function(InjectedEventPluginOrder) {
    ("production" !== "development" ? invariant(
      !EventPluginOrder,
      'EventPluginRegistry: Cannot inject event plugin ordering more than once.'
    ) : invariant(!EventPluginOrder));
    // Clone the ordering so it cannot be dynamically mutated.
    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function(injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var PluginModule = injectedNamesToPlugins[pluginName];
      if (namesToPlugins[pluginName] !== PluginModule) {
        ("production" !== "development" ? invariant(
          !namesToPlugins[pluginName],
          'EventPluginRegistry: Cannot inject two different event plugins ' +
          'using the same name, `%s`.',
          pluginName
        ) : invariant(!namesToPlugins[pluginName]));
        namesToPlugins[pluginName] = PluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function(event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNames[
        dispatchConfig.registrationName
      ] || null;
    }
    for (var phase in dispatchConfig.phasedRegistrationNames) {
      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
        continue;
      }
      var PluginModule = EventPluginRegistry.registrationNames[
        dispatchConfig.phasedRegistrationNames[phase]
      ];
      if (PluginModule) {
        return PluginModule;
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function() {
    EventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;
    var registrationNames = EventPluginRegistry.registrationNames;
    for (var registrationName in registrationNames) {
      if (registrationNames.hasOwnProperty(registrationName)) {
        delete registrationNames[registrationName];
      }
    }
  }

};

module.exports = EventPluginRegistry;

},{"./invariant":98}],18:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EventPluginUtils
 */

"use strict";

var EventConstants = require("./EventConstants");

var invariant = require("./invariant");

var topLevelTypes = EventConstants.topLevelTypes;

function isEndish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseUp ||
         topLevelType === topLevelTypes.topTouchEnd ||
         topLevelType === topLevelTypes.topTouchCancel;
}

function isMoveish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseMove ||
         topLevelType === topLevelTypes.topTouchMove;
}
function isStartish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseDown ||
         topLevelType === topLevelTypes.topTouchStart;
}

var validateEventDispatches;
if ("production" !== "development") {
  validateEventDispatches = function(event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchIDs = event._dispatchIDs;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var idsIsArr = Array.isArray(dispatchIDs);
    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
    var listenersLen = listenersIsArr ?
      dispatchListeners.length :
      dispatchListeners ? 1 : 0;

    ("production" !== "development" ? invariant(
      idsIsArr === listenersIsArr && IDsLen === listenersLen,
      'EventPluginUtils: Invalid `event`.'
    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));
  };
}

/**
 * Invokes `cb(event, listener, id)`. Avoids using call if no scope is
 * provided. The `(listener,id)` pair effectively forms the "dispatch" but are
 * kept separate to conserve memory.
 */
function forEachEventDispatch(event, cb) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchIDs = event._dispatchIDs;
  if ("production" !== "development") {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and IDs are two parallel arrays that are always in sync.
      cb(event, dispatchListeners[i], dispatchIDs[i]);
    }
  } else if (dispatchListeners) {
    cb(event, dispatchListeners, dispatchIDs);
  }
}

/**
 * Default implementation of PluginModule.executeDispatch().
 * @param {SyntheticEvent} SyntheticEvent to handle
 * @param {function} Application-level callback
 * @param {string} domID DOM id to pass to the callback.
 */
function executeDispatch(event, listener, domID) {
  listener(event, domID);
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, executeDispatch) {
  forEachEventDispatch(event, executeDispatch);
  event._dispatchListeners = null;
  event._dispatchIDs = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return id of the first dispatch execution who's listener returns true, or
 * null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchIDs = event._dispatchIDs;
  if ("production" !== "development") {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and IDs are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchIDs[i])) {
        return dispatchIDs[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchIDs)) {
      return dispatchIDs;
    }
  }
  return null;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if ("production" !== "development") {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchID = event._dispatchIDs;
  ("production" !== "development" ? invariant(
    !Array.isArray(dispatchListener),
    'executeDirectDispatch(...): Invalid `event`.'
  ) : invariant(!Array.isArray(dispatchListener)));
  var res = dispatchListener ?
    dispatchListener(event, dispatchID) :
    null;
  event._dispatchListeners = null;
  event._dispatchIDs = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {bool} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  executeDirectDispatch: executeDirectDispatch,
  hasDispatches: hasDispatches,
  executeDispatch: executeDispatch
};

module.exports = EventPluginUtils;

},{"./EventConstants":14,"./invariant":98}],19:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EventPropagators
 */

"use strict";

var CallbackRegistry = require("./CallbackRegistry");
var EventConstants = require("./EventConstants");

var accumulate = require("./accumulate");
var forEachAccumulated = require("./forEachAccumulated");
var getListener = CallbackRegistry.getListener;
var PropagationPhases = EventConstants.PropagationPhases;

/**
 * Injected dependencies:
 */

/**
 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
 *   hierarchy given ids of the logical DOM elements involved.
 */
var injection = {
  InstanceHandle: null,
  injectInstanceHandle: function(InjectedInstanceHandle) {
    injection.InstanceHandle = InjectedInstanceHandle;
    if ("production" !== "development") {
      injection.validate();
    }
  },
  validate: function() {
    var invalid = !injection.InstanceHandle||
      !injection.InstanceHandle.traverseTwoPhase ||
      !injection.InstanceHandle.traverseEnterLeave;
    if (invalid) {
      throw new Error('InstanceHandle not injected before use!');
    }
  }
};

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(id, event, propagationPhase) {
  var registrationName =
    event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(id, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(domID, upwards, event) {
  if ("production" !== "development") {
    if (!domID) {
      throw new Error('Dispatching id must not be null');
    }
    injection.validate();
  }
  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
  var listener = listenerAtPhase(domID, event, phase);
  if (listener) {
    event._dispatchListeners = accumulate(event._dispatchListeners, listener);
    event._dispatchIDs = accumulate(event._dispatchIDs, domID);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We can not perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    injection.InstanceHandle.traverseTwoPhase(
      event.dispatchMarker,
      accumulateDirectionalDispatches,
      event
    );
  }
}


/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(id, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(id, registrationName);
    if (listener) {
      event._dispatchListeners = accumulate(event._dispatchListeners, listener);
      event._dispatchIDs = accumulate(event._dispatchIDs, id);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event.dispatchMarker, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  if ("production" !== "development") {
    injection.validate();
  }
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
  if ("production" !== "development") {
    injection.validate();
  }
  injection.InstanceHandle.traverseEnterLeave(
    fromID,
    toID,
    accumulateDispatches,
    leave,
    enter
  );
}


function accumulateDirectDispatches(events) {
  if ("production" !== "development") {
    injection.validate();
  }
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}



/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches,
  injection: injection
};

module.exports = EventPropagators;

},{"./CallbackRegistry":4,"./EventConstants":14,"./accumulate":75,"./forEachAccumulated":88}],20:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ExecutionEnvironment
 */

/*jslint evil: true */

"use strict";

var canUseDOM = typeof window !== 'undefined';

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

},{}],21:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule LinkedValueMixin
 * @typechecks static-only
 */

"use strict";

var invariant = require("./invariant");

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueMixin = {
  _assertLink: function() {
    ("production" !== "development" ? invariant(
      this.props.value == null && this.props.onChange == null,
      'Cannot provide a valueLink and a value or onChange event. If you ' +
        'want to use value or onChange, you probably don\'t want to use ' +
        'valueLink'
    ) : invariant(this.props.value == null && this.props.onChange == null));
  },

  /**
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function() {
    if (this.props.valueLink) {
      this._assertLink();
      return this.props.valueLink.value;
    }
    return this.props.value;
  },

  /**
   * @return {function} change callback either from onChange prop or link.
   */
  getOnChange: function() {
    if (this.props.valueLink) {
      this._assertLink();
      return this._handleLinkedValueChange;
    }
    return this.props.onChange;
  },

  /**
   * @param {SyntheticEvent} e change event to handle
   */
  _handleLinkedValueChange: function(e) {
    this.props.valueLink.requestChange(e.target.value);
  }
};

module.exports = LinkedValueMixin;

},{"./invariant":98}],22:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule MobileSafariClickEventPlugin
 * @typechecks static-only
 */

"use strict";

var EventConstants = require("./EventConstants");

var emptyFunction = require("./emptyFunction");

var topLevelTypes = EventConstants.topLevelTypes;

/**
 * Mobile Safari does not fire properly bubble click events on non-interactive
 * elements, which means delegated click listeners do not fire. The workaround
 * for this bug involves attaching an empty click listener on the target node.
 *
 * This particular plugin works around the bug by attaching an empty click
 * listener on `touchstart` (which does fire on every element).
 */
var MobileSafariClickEventPlugin = {

  eventTypes: null,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    if (topLevelType === topLevelTypes.topTouchStart) {
      var target = nativeEvent.target;
      if (target && !target.onclick) {
        target.onclick = emptyFunction;
      }
    }
  }

};

module.exports = MobileSafariClickEventPlugin;

},{"./EventConstants":14,"./emptyFunction":83}],23:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule PooledClass
 */

"use strict";

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function(copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function(a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function(a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fiveArgumentPooler = function(a1, a2, a3, a4, a5) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4, a5);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4, a5);
  }
};

var standardReleaser = function(instance) {
  var Klass = this;
  if (instance.destructor) {
    instance.destructor();
  }
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances (optional).
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function(CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fiveArgumentPooler: fiveArgumentPooler
};

module.exports = PooledClass;

},{}],24:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule React
 */

"use strict";

var ReactComponent = require("./ReactComponent");
var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactCurrentOwner = require("./ReactCurrentOwner");
var ReactDOM = require("./ReactDOM");
var ReactDOMComponent = require("./ReactDOMComponent");
var ReactDefaultInjection = require("./ReactDefaultInjection");
var ReactInstanceHandles = require("./ReactInstanceHandles");
var ReactMount = require("./ReactMount");
var ReactMultiChild = require("./ReactMultiChild");
var ReactPerf = require("./ReactPerf");
var ReactPropTypes = require("./ReactPropTypes");
var ReactServerRendering = require("./ReactServerRendering");
var ReactTextComponent = require("./ReactTextComponent");

ReactDefaultInjection.inject();

var React = {
  DOM: ReactDOM,
  PropTypes: ReactPropTypes,
  initializeTouchEvents: function(shouldUseTouch) {
    ReactMount.useTouchEvents = shouldUseTouch;
  },
  createClass: ReactCompositeComponent.createClass,
  constructAndRenderComponent: ReactMount.constructAndRenderComponent,
  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,
  renderComponent: ReactPerf.measure(
    'React',
    'renderComponent',
    ReactMount.renderComponent
  ),
  renderComponentToString: ReactServerRendering.renderComponentToString,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  unmountAndReleaseReactRootNode: ReactMount.unmountAndReleaseReactRootNode,
  isValidClass: ReactCompositeComponent.isValidClass,
  isValidComponent: ReactComponent.isValidComponent,
  __internals: {
    Component: ReactComponent,
    CurrentOwner: ReactCurrentOwner,
    DOMComponent: ReactDOMComponent,
    InstanceHandles: ReactInstanceHandles,
    Mount: ReactMount,
    MultiChild: ReactMultiChild,
    TextComponent: ReactTextComponent
  }
};

// Version exists only in the open-source version of React, not in Facebook's
// internal version.
React.version = '0.8.0';

module.exports = React;

},{"./ReactComponent":25,"./ReactCompositeComponent":28,"./ReactCurrentOwner":29,"./ReactDOM":30,"./ReactDOMComponent":32,"./ReactDefaultInjection":41,"./ReactInstanceHandles":48,"./ReactMount":50,"./ReactMultiChild":52,"./ReactPerf":55,"./ReactPropTypes":57,"./ReactServerRendering":59,"./ReactTextComponent":60}],25:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactComponent
 */

"use strict";

var ReactComponentEnvironment = require("./ReactComponentEnvironment");
var ReactCurrentOwner = require("./ReactCurrentOwner");
var ReactOwner = require("./ReactOwner");
var ReactUpdates = require("./ReactUpdates");

var invariant = require("./invariant");
var keyMirror = require("./keyMirror");
var merge = require("./merge");

/**
 * Every React component is in one of these life cycles.
 */
var ComponentLifeCycle = keyMirror({
  /**
   * Mounted components have a DOM node representation and are capable of
   * receiving new props.
   */
  MOUNTED: null,
  /**
   * Unmounted components are inactive and cannot receive new props.
   */
  UNMOUNTED: null
});

/**
 * Warn if there's no key explicitly set on dynamic arrays of children.
 * This allows us to keep track of children between updates.
 */

var ownerHasWarned = {};

/**
 * Warn if the component doesn't have an explicit key assigned to it.
 * This component is in an array. The array could grow and shrink or be
 * reordered. All children, that hasn't already been validated, are required to
 * have a "key" property assigned to it.
 *
 * @internal
 * @param {ReactComponent} component Component that requires a key.
 */
function validateExplicitKey(component) {
  if (component.__keyValidated__ || component.props.key != null) {
    return;
  }
  component.__keyValidated__ = true;

  // We can't provide friendly warnings for top level components.
  if (!ReactCurrentOwner.current) {
    return;
  }

  // Name of the component whose render method tried to pass children.
  var currentName = ReactCurrentOwner.current.constructor.displayName;
  if (ownerHasWarned.hasOwnProperty(currentName)) {
    return;
  }
  ownerHasWarned[currentName] = true;

  var message = 'Each child in an array should have a unique "key" prop. ' +
                'Check the render method of ' + currentName + '.';
  if (!component.isOwnedBy(ReactCurrentOwner.current)) {
    // Name of the component that originally created this child.
    var childOwnerName =
      component.props.__owner__ &&
      component.props.__owner__.constructor.displayName;

    // Usually the current owner is the offender, but if it accepts
    // children as a property, it may be the creator of the child that's
    // responsible for assigning it a key.
    message += ' It was passed a child from ' + childOwnerName + '.';
  }

  console.warn(message);
}

/**
 * Ensure that every component either is passed in a static location or, if
 * if it's passed in an array, has an explicit key property defined.
 *
 * @internal
 * @param {*} component Statically passed child of any type.
 * @return {boolean}
 */
function validateChildKeys(component) {
  if (Array.isArray(component)) {
    for (var i = 0; i < component.length; i++) {
      var child = component[i];
      if (ReactComponent.isValidComponent(child)) {
        validateExplicitKey(child);
      }
    }
  } else if (ReactComponent.isValidComponent(component)) {
    // This component was passed in a valid location.
    component.__keyValidated__ = true;
  }
}

/**
 * Components are the basic units of composition in React.
 *
 * Every component accepts a set of keyed input parameters known as "props" that
 * are initialized by the constructor. Once a component is mounted, the props
 * can be mutated using `setProps` or `replaceProps`.
 *
 * Every component is capable of the following operations:
 *
 *   `mountComponent`
 *     Initializes the component, renders markup, and registers event listeners.
 *
 *   `receiveComponent`
 *     Updates the rendered DOM nodes to match the given component.
 *
 *   `unmountComponent`
 *     Releases any resources allocated by this component.
 *
 * Components can also be "owned" by other components. Being owned by another
 * component means being constructed by that component. This is different from
 * being the child of a component, which means having a DOM representation that
 * is a child of the DOM representation of that component.
 *
 * @class ReactComponent
 */
var ReactComponent = {

  /**
   * @param {?object} object
   * @return {boolean} True if `object` is a valid component.
   * @final
   */
  isValidComponent: function(object) {
    return !!(
      object &&
      typeof object.mountComponentIntoNode === 'function' &&
      typeof object.receiveComponent === 'function'
    );
  },

  /**
   * Generate a key string that identifies a component within a set.
   *
   * @param {*} component A component that could contain a manual key.
   * @param {number} index Index that is used if a manual key is not provided.
   * @return {string}
   * @internal
   */
  getKey: function(component, index) {
    if (component && component.props && component.props.key != null) {
      // Explicit key
      return '{' + component.props.key + '}';
    }
    // Implicit key determined by the index in the set
    return '[' + index + ']';
  },

  /**
   * @internal
   */
  LifeCycle: ComponentLifeCycle,

  /**
   * Injected module that provides ability to mutate individual properties.
   * Injected into the base class because many different subclasses need access
   * to this.
   *
   * @internal
   */
  DOMIDOperations: ReactComponentEnvironment.DOMIDOperations,

  /**
   * Optionally injectable environment dependent cleanup hook. (server vs.
   * browser etc). Example: A browser system caches DOM nodes based on component
   * ID and must remove that cache entry when this instance is unmounted.
   *
   * @private
   */
  unmountIDFromEnvironment: ReactComponentEnvironment.unmountIDFromEnvironment,

  /**
   * The "image" of a component tree, is the platform specific (typically
   * serialized) data that represents a tree of lower level UI building blocks.
   * On the web, this "image" is HTML markup which describes a construction of
   * low level `div` and `span` nodes. Other platforms may have different
   * encoding of this "image". This must be injected.
   *
   * @private
   */
  mountImageIntoNode: ReactComponentEnvironment.mountImageIntoNode,

  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction:
    ReactComponentEnvironment.ReactReconcileTransaction,

  /**
   * Base functionality for every ReactComponent constructor. Mixed into the
   * `ReactComponent` prototype, but exposed statically for easy access.
   *
   * @lends {ReactComponent.prototype}
   */
  Mixin: merge(ReactComponentEnvironment.Mixin, {

    /**
     * Checks whether or not this component is mounted.
     *
     * @return {boolean} True if mounted, false otherwise.
     * @final
     * @protected
     */
    isMounted: function() {
      return this._lifeCycleState === ComponentLifeCycle.MOUNTED;
    },

    /**
     * Sets a subset of the props.
     *
     * @param {object} partialProps Subset of the next props.
     * @param {?function} callback Called after props are updated.
     * @final
     * @public
     */
    setProps: function(partialProps, callback) {
      // Merge with `_pendingProps` if it exists, otherwise with existing props.
      this.replaceProps(
        merge(this._pendingProps || this.props, partialProps),
        callback
      );
    },

    /**
     * Replaces all of the props.
     *
     * @param {object} props New props.
     * @param {?function} callback Called after props are updated.
     * @final
     * @public
     */
    replaceProps: function(props, callback) {
      ("production" !== "development" ? invariant(
        !this.props.__owner__,
        'replaceProps(...): You called `setProps` or `replaceProps` on a ' +
        'component with an owner. This is an anti-pattern since props will ' +
        'get reactively updated when rendered. Instead, change the owner\'s ' +
        '`render` method to pass the correct value as props to the component ' +
        'where it is created.'
      ) : invariant(!this.props.__owner__));
      ("production" !== "development" ? invariant(
        this.isMounted(),
        'replaceProps(...): Can only update a mounted component.'
      ) : invariant(this.isMounted()));
      this._pendingProps = props;
      ReactUpdates.enqueueUpdate(this, callback);
    },

    /**
     * Base constructor for all React component.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.construct.call(this, ...)`.
     *
     * @param {?object} initialProps
     * @param {*} children
     * @internal
     */
    construct: function(initialProps, children) {
      this.props = initialProps || {};
      // Record the component responsible for creating this component.
      this.props.__owner__ = ReactCurrentOwner.current;
      // All components start unmounted.
      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;

      this._pendingProps = null;
      this._pendingCallbacks = null;

      // Children can be more than one argument
      var childrenLength = arguments.length - 1;
      if (childrenLength === 1) {
        if ("production" !== "development") {
          validateChildKeys(children);
        }
        this.props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);
        for (var i = 0; i < childrenLength; i++) {
          if ("production" !== "development") {
            validateChildKeys(arguments[i + 1]);
          }
          childArray[i] = arguments[i + 1];
        }
        this.props.children = childArray;
      }
    },

    /**
     * Initializes the component, renders markup, and registers event listeners.
     *
     * NOTE: This does not insert any nodes into the DOM.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.mountComponent.call(this, ...)`.
     *
     * @param {string} rootID DOM ID of the root node.
     * @param {ReactReconcileTransaction} transaction
     * @param {number} mountDepth number of components in the owner hierarchy.
     * @return {?string} Rendered markup to be inserted into the DOM.
     * @internal
     */
    mountComponent: function(rootID, transaction, mountDepth) {
      ("production" !== "development" ? invariant(
        !this.isMounted(),
        'mountComponent(%s, ...): Can only mount an unmounted component.',
        rootID
      ) : invariant(!this.isMounted()));
      var props = this.props;
      if (props.ref != null) {
        ReactOwner.addComponentAsRefTo(this, props.ref, props.__owner__);
      }
      this._rootNodeID = rootID;
      this._lifeCycleState = ComponentLifeCycle.MOUNTED;
      this._mountDepth = mountDepth;
      // Effectively: return '';
    },

    /**
     * Releases any resources allocated by `mountComponent`.
     *
     * NOTE: This does not remove any nodes from the DOM.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.unmountComponent.call(this)`.
     *
     * @internal
     */
    unmountComponent: function() {
      ("production" !== "development" ? invariant(
        this.isMounted(),
        'unmountComponent(): Can only unmount a mounted component.'
      ) : invariant(this.isMounted()));
      var props = this.props;
      if (props.ref != null) {
        ReactOwner.removeComponentAsRefFrom(this, props.ref, props.__owner__);
      }
      ReactComponent.unmountIDFromEnvironment(this._rootNodeID);
      this._rootNodeID = null;
      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;
    },

    /**
     * Given a new instance of this component, updates the rendered DOM nodes
     * as if that instance was rendered instead.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.receiveComponent.call(this, ...)`.
     *
     * @param {object} nextComponent Next set of properties.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    receiveComponent: function(nextComponent, transaction) {
      ("production" !== "development" ? invariant(
        this.isMounted(),
        'receiveComponent(...): Can only update a mounted component.'
      ) : invariant(this.isMounted()));
      this._pendingProps = nextComponent.props;
      this._performUpdateIfNecessary(transaction);
    },

    /**
     * Call `_performUpdateIfNecessary` within a new transaction.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    performUpdateIfNecessary: function() {
      var transaction = ReactComponent.ReactReconcileTransaction.getPooled();
      transaction.perform(this._performUpdateIfNecessary, this, transaction);
      ReactComponent.ReactReconcileTransaction.release(transaction);
    },

    /**
     * If `_pendingProps` is set, update the component.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    _performUpdateIfNecessary: function(transaction) {
      if (this._pendingProps == null) {
        return;
      }
      var prevProps = this.props;
      this.props = this._pendingProps;
      this._pendingProps = null;
      this.updateComponent(transaction, prevProps);
    },

    /**
     * Updates the component's currently mounted representation.
     *
     * @param {ReactReconcileTransaction} transaction
     * @param {object} prevProps
     * @internal
     */
    updateComponent: function(transaction, prevProps) {
      var props = this.props;
      // If either the owner or a `ref` has changed, make sure the newest owner
      // has stored a reference to `this`, and the previous owner (if different)
      // has forgotten the reference to `this`.
      if (props.__owner__ !== prevProps.__owner__ ||
          props.ref !== prevProps.ref) {
        if (prevProps.ref != null) {
          ReactOwner.removeComponentAsRefFrom(
            this, prevProps.ref, prevProps.__owner__
          );
        }
        // Correct, even if the owner is the same, and only the ref has changed.
        if (props.ref != null) {
          ReactOwner.addComponentAsRefTo(this, props.ref, props.__owner__);
        }
      }
    },

    /**
     * Mounts this component and inserts it into the DOM.
     *
     * @param {string} rootID DOM ID of the root node.
     * @param {DOMElement} container DOM element to mount into.
     * @param {boolean} shouldReuseMarkup If true, do not insert markup
     * @final
     * @internal
     * @see {ReactMount.renderComponent}
     */
    mountComponentIntoNode: function(rootID, container, shouldReuseMarkup) {
      var transaction = ReactComponent.ReactReconcileTransaction.getPooled();
      transaction.perform(
        this._mountComponentIntoNode,
        this,
        rootID,
        container,
        transaction,
        shouldReuseMarkup
      );
      ReactComponent.ReactReconcileTransaction.release(transaction);
    },

    /**
     * @param {string} rootID DOM ID of the root node.
     * @param {DOMElement} container DOM element to mount into.
     * @param {ReactReconcileTransaction} transaction
     * @param {boolean} shouldReuseMarkup If true, do not insert markup
     * @final
     * @private
     */
    _mountComponentIntoNode: function(
        rootID,
        container,
        transaction,
        shouldReuseMarkup) {
      var markup = this.mountComponent(rootID, transaction, 0);
      ReactComponent.mountImageIntoNode(markup, container, shouldReuseMarkup);
    },

    /**
     * Checks if this component is owned by the supplied `owner` component.
     *
     * @param {ReactComponent} owner Component to check.
     * @return {boolean} True if `owners` owns this component.
     * @final
     * @internal
     */
    isOwnedBy: function(owner) {
      return this.props.__owner__ === owner;
    },

    /**
     * Gets another component, that shares the same owner as this one, by ref.
     *
     * @param {string} ref of a sibling Component.
     * @return {?ReactComponent} the actual sibling Component.
     * @final
     * @internal
     */
    getSiblingByRef: function(ref) {
      var owner = this.props.__owner__;
      if (!owner || !owner.refs) {
        return null;
      }
      return owner.refs[ref];
    }
  })
};

module.exports = ReactComponent;

},{"./ReactComponentEnvironment":27,"./ReactCurrentOwner":29,"./ReactOwner":54,"./ReactUpdates":61,"./invariant":98,"./keyMirror":104,"./merge":107}],26:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactComponentBrowserEnvironment
 */

/*jslint evil: true */

"use strict";

var ReactDOMIDOperations = require("./ReactDOMIDOperations");
var ReactMarkupChecksum = require("./ReactMarkupChecksum");
var ReactMount = require("./ReactMount");
var ReactReconcileTransaction = require("./ReactReconcileTransaction");

var getReactRootElementInContainer = require("./getReactRootElementInContainer");
var invariant = require("./invariant");
var mutateHTMLNodeWithMarkup = require("./mutateHTMLNodeWithMarkup");


var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;


/**
 * Abstracts away all functionality of `ReactComponent` requires knowledge of
 * the browser context.
 */
var ReactComponentBrowserEnvironment = {
  /**
   * Mixed into every component instance.
   */
  Mixin: {
    /**
     * Returns the DOM node rendered by this component.
     *
     * @return {DOMElement} The root node of this component.
     * @final
     * @protected
     */
    getDOMNode: function() {
      ("production" !== "development" ? invariant(
        this.isMounted(),
        'getDOMNode(): A component must be mounted to have a DOM node.'
      ) : invariant(this.isMounted()));
      return ReactMount.getNode(this._rootNodeID);
    }
  },

  ReactReconcileTransaction: ReactReconcileTransaction,

  DOMIDOperations: ReactDOMIDOperations,

  /**
   * If a particular environment requires that some resources be cleaned up,
   * specify this in the injected Mixin. In the DOM, we would likely want to
   * purge any cached node ID lookups.
   *
   * @private
   */
  unmountIDFromEnvironment: function(rootNodeID) {
    ReactMount.purgeID(rootNodeID);
  },

  /**
   * @param {string} markup Markup string to place into the DOM Element.
   * @param {DOMElement} container DOM Element to insert markup into.
   * @param {boolean} shouldReuseMarkup Should reuse the existing markup in the
   * container if possible.
   */
  mountImageIntoNode: function(markup, container, shouldReuseMarkup) {
    ("production" !== "development" ? invariant(
      container && (
        container.nodeType === ELEMENT_NODE_TYPE ||
        container.nodeType === DOC_NODE_TYPE && ReactMount.allowFullPageRender
      ),
      'mountComponentIntoNode(...): Target container is not valid.'
    ) : invariant(container && (
      container.nodeType === ELEMENT_NODE_TYPE ||
      container.nodeType === DOC_NODE_TYPE && ReactMount.allowFullPageRender
    )));
    if (shouldReuseMarkup) {
      if (ReactMarkupChecksum.canReuseMarkup(
            markup,
            getReactRootElementInContainer(container))) {
        return;
      } else {
        if ("production" !== "development") {
          console.warn(
            'React attempted to use reuse markup in a container but the ' +
            'checksum was invalid. This generally means that you are using ' +
            'server rendering and the markup generated on the server was ' +
            'not what the client was expecting. React injected new markup ' +
            'to compensate which works but you have lost many of the ' +
            'benefits of server rendering. Instead, figure out why the ' +
            'markup being generated is different on the client or server.'
          );
        }
      }
    }

    // You can't naively set the innerHTML of the entire document. You need
    // to mutate documentElement which requires doing some crazy tricks. See
    // mutateHTMLNodeWithMarkup()
    if (container.nodeType === DOC_NODE_TYPE) {
      mutateHTMLNodeWithMarkup(container.documentElement, markup);
      return;
    }

    // Asynchronously inject markup by ensuring that the container is not in
    // the document when settings its `innerHTML`.
    var parent = container.parentNode;
    if (parent) {
      var next = container.nextSibling;
      parent.removeChild(container);
      container.innerHTML = markup;
      if (next) {
        parent.insertBefore(container, next);
      } else {
        parent.appendChild(container);
      }
    } else {
      container.innerHTML = markup;
    }
  }
};

module.exports = ReactComponentBrowserEnvironment;

},{"./ReactDOMIDOperations":34,"./ReactMarkupChecksum":49,"./ReactMount":50,"./ReactReconcileTransaction":58,"./getReactRootElementInContainer":94,"./invariant":98,"./mutateHTMLNodeWithMarkup":111}],27:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactComponentEnvironment
 */

var ReactComponentBrowserEnvironment =
  require("./ReactComponentBrowserEnvironment");

var ReactComponentEnvironment = ReactComponentBrowserEnvironment;

module.exports = ReactComponentEnvironment;

},{"./ReactComponentBrowserEnvironment":26}],28:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactCompositeComponent
 */

"use strict";

var ReactComponent = require("./ReactComponent");
var ReactCurrentOwner = require("./ReactCurrentOwner");
var ReactErrorUtils = require("./ReactErrorUtils");
var ReactOwner = require("./ReactOwner");
var ReactPerf = require("./ReactPerf");
var ReactPropTransferer = require("./ReactPropTransferer");
var ReactUpdates = require("./ReactUpdates");

var invariant = require("./invariant");
var keyMirror = require("./keyMirror");
var merge = require("./merge");
var mixInto = require("./mixInto");
var objMap = require("./objMap");

/**
 * Policies that describe methods in `ReactCompositeComponentInterface`.
 */
var SpecPolicy = keyMirror({
  /**
   * These methods may be defined only once by the class specification or mixin.
   */
  DEFINE_ONCE: null,
  /**
   * These methods may be defined by both the class specification and mixins.
   * Subsequent definitions will be chained. These methods must return void.
   */
  DEFINE_MANY: null,
  /**
   * These methods are overriding the base ReactCompositeComponent class.
   */
  OVERRIDE_BASE: null,
  /**
   * These methods are similar to DEFINE_MANY, except we assume they return
   * objects. We try to merge the keys of the return values of all the mixed in
   * functions. If there is a key conflict we throw.
   */
  DEFINE_MANY_MERGED: null
});

/**
 * Composite components are higher-level components that compose other composite
 * or native components.
 *
 * To create a new type of `ReactCompositeComponent`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactCompositeComponentInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will available on the prototype.
 *
 * @interface ReactCompositeComponentInterface
 * @internal
 */
var ReactCompositeComponentInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: SpecPolicy.DEFINE_ONCE,



  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @nosideeffects
   * @required
   */
  render: SpecPolicy.DEFINE_ONCE,



  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props and state.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props and state will not require a component update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState) {
   *     return !equal(nextProps, this.props) || !equal(nextState, this.state);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props` and `this.state` to `nextProps` and `nextState`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: SpecPolicy.DEFINE_MANY,



  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: SpecPolicy.OVERRIDE_BASE

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared in the specification when defining classes
 * using `React.createClass`, they will not be on the component's prototype.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function(Constructor, displayName) {
    Constructor.displayName = displayName;
  },
  mixins: function(Constructor, mixins) {
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        mixSpecIntoComponent(Constructor, mixins[i]);
      }
    }
  },
  propTypes: function(Constructor, propTypes) {
    Constructor.propTypes = propTypes;
  }
};

function validateMethodOverride(proto, name) {
  var specPolicy = ReactCompositeComponentInterface[name];

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactCompositeComponentMixin.hasOwnProperty(name)) {
    ("production" !== "development" ? invariant(
      specPolicy === SpecPolicy.OVERRIDE_BASE,
      'ReactCompositeComponentInterface: You are attempting to override ' +
      '`%s` from your class specification. Ensure that your method names ' +
      'do not overlap with React methods.',
      name
    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (proto.hasOwnProperty(name)) {
    ("production" !== "development" ? invariant(
      specPolicy === SpecPolicy.DEFINE_MANY ||
      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
      'ReactCompositeComponentInterface: You are attempting to define ' +
      '`%s` on your component more than once. This conflict may be due ' +
      'to a mixin.',
      name
    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||
    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));
  }
}


function validateLifeCycleOnReplaceState(instance) {
  var compositeLifeCycleState = instance._compositeLifeCycleState;
  ("production" !== "development" ? invariant(
    instance.isMounted() ||
      compositeLifeCycleState === CompositeLifeCycle.MOUNTING,
    'replaceState(...): Can only update a mounted or mounting component.'
  ) : invariant(instance.isMounted() ||
    compositeLifeCycleState === CompositeLifeCycle.MOUNTING));
  ("production" !== "development" ? invariant(compositeLifeCycleState !== CompositeLifeCycle.RECEIVING_STATE,
    'replaceState(...): Cannot update during an existing state transition ' +
    '(such as within `render`). This could potentially cause an infinite ' +
    'loop so it is forbidden.'
  ) : invariant(compositeLifeCycleState !== CompositeLifeCycle.RECEIVING_STATE));
  ("production" !== "development" ? invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING,
    'replaceState(...): Cannot update while unmounting component. This ' +
    'usually means you called setState() on an unmounted component.'
  ) : invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING));
}

/**
 * Custom version of `mixInto` which handles policy validation and reserved
 * specification keys when building `ReactCompositeComponent` classses.
 */
function mixSpecIntoComponent(Constructor, spec) {
  var proto = Constructor.prototype;
  for (var name in spec) {
    var property = spec[name];
    if (!spec.hasOwnProperty(name) || !property) {
      continue;
    }
    validateMethodOverride(proto, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactCompositeComponent methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isCompositeComponentMethod = name in ReactCompositeComponentInterface;
      var isInherited = name in proto;
      var markedDontBind = property.__reactDontBind;
      var isFunction = typeof property === 'function';
      var shouldAutoBind =
        isFunction &&
        !isCompositeComponentMethod &&
        !isInherited &&
        !markedDontBind;

      if (shouldAutoBind) {
        if (!proto.__reactAutoBindMap) {
          proto.__reactAutoBindMap = {};
        }
        proto.__reactAutoBindMap[name] = property;
        proto[name] = property;
      } else {
        if (isInherited) {
          // For methods which are defined more than once, call the existing
          // methods before calling the new property.
          if (ReactCompositeComponentInterface[name] ===
              SpecPolicy.DEFINE_MANY_MERGED) {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
        }
      }
    }
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeObjectsWithNoDuplicateKeys(one, two) {
  ("production" !== "development" ? invariant(
    one && two && typeof one === 'object' && typeof two === 'object',
    'mergeObjectsWithNoDuplicateKeys(): Cannot merge non-objects'
  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));

  objMap(two, function(value, key) {
    ("production" !== "development" ? invariant(
      one[key] === undefined,
      'mergeObjectsWithNoDuplicateKeys(): ' +
      'Tried to merge two objects with the same key: %s',
      key
    ) : invariant(one[key] === undefined));
    one[key] = value;
  });
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    return mergeObjectsWithNoDuplicateKeys(
      one.apply(this, arguments),
      two.apply(this, arguments)
    );
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

/**
 * `ReactCompositeComponent` maintains an auxiliary life cycle state in
 * `this._compositeLifeCycleState` (which can be null).
 *
 * This is different from the life cycle state maintained by `ReactComponent` in
 * `this._lifeCycleState`. The following diagram shows how the states overlap in
 * time. There are times when the CompositeLifeCycle is null - at those times it
 * is only meaningful to look at ComponentLifeCycle alone.
 *
 * Top Row: ReactComponent.ComponentLifeCycle
 * Low Row: ReactComponent.CompositeLifeCycle
 *
 * +-------+------------------------------------------------------+--------+
 * |  UN   |                    MOUNTED                           |   UN   |
 * |MOUNTED|                                                      | MOUNTED|
 * +-------+------------------------------------------------------+--------+
 * |       ^--------+   +------+   +------+   +------+   +--------^        |
 * |       |        |   |      |   |      |   |      |   |        |        |
 * |    0--|MOUNTING|-0-|RECEIV|-0-|RECEIV|-0-|RECEIV|-0-|   UN   |--->0   |
 * |       |        |   |PROPS |   | PROPS|   | STATE|   |MOUNTING|        |
 * |       |        |   |      |   |      |   |      |   |        |        |
 * |       |        |   |      |   |      |   |      |   |        |        |
 * |       +--------+   +------+   +------+   +------+   +--------+        |
 * |       |                                                      |        |
 * +-------+------------------------------------------------------+--------+
 */
var CompositeLifeCycle = keyMirror({
  /**
   * Components in the process of being mounted respond to state changes
   * differently.
   */
  MOUNTING: null,
  /**
   * Components in the process of being unmounted are guarded against state
   * changes.
   */
  UNMOUNTING: null,
  /**
   * Components that are mounted and receiving new props respond to state
   * changes differently.
   */
  RECEIVING_PROPS: null,
  /**
   * Components that are mounted and receiving new state are guarded against
   * additional state changes.
   */
  RECEIVING_STATE: null
});

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponentMixin = {

  /**
   * Base constructor for all composite component.
   *
   * @param {?object} initialProps
   * @param {*} children
   * @final
   * @internal
   */
  construct: function(initialProps, children) {
    // Children can be either an array or more than one argument
    ReactComponent.Mixin.construct.apply(this, arguments);
    this.state = null;
    this._pendingState = null;
    this._compositeLifeCycleState = null;
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function() {
    return ReactComponent.Mixin.isMounted.call(this) &&
      this._compositeLifeCycleState !== CompositeLifeCycle.MOUNTING;
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {string} rootID DOM ID of the root node.
   * @param {ReactReconcileTransaction} transaction
   * @param {number} mountDepth number of components in the owner hierarchy
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: ReactPerf.measure(
    'ReactCompositeComponent',
    'mountComponent',
    function(rootID, transaction, mountDepth) {
      ReactComponent.Mixin.mountComponent.call(
        this,
        rootID,
        transaction,
        mountDepth
      );
      this._compositeLifeCycleState = CompositeLifeCycle.MOUNTING;

      this._defaultProps = this.getDefaultProps ? this.getDefaultProps() : null;
      this._processProps(this.props);

      if (this.__reactAutoBindMap) {
        this._bindAutoBindMethods();
      }

      this.state = this.getInitialState ? this.getInitialState() : null;
      this._pendingState = null;
      this._pendingForceUpdate = false;

      if (this.componentWillMount) {
        this.componentWillMount();
        // When mounting, calls to `setState` by `componentWillMount` will set
        // `this._pendingState` without triggering a re-render.
        if (this._pendingState) {
          this.state = this._pendingState;
          this._pendingState = null;
        }
      }

      this._renderedComponent = this._renderValidatedComponent();

      // Done with mounting, `setState` will now trigger UI changes.
      this._compositeLifeCycleState = null;
      var markup = this._renderedComponent.mountComponent(
        rootID,
        transaction,
        mountDepth + 1
      );
      if (this.componentDidMount) {
        transaction.getReactMountReady().enqueue(this, this.componentDidMount);
      }
      return markup;
    }
  ),

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function() {
    this._compositeLifeCycleState = CompositeLifeCycle.UNMOUNTING;
    if (this.componentWillUnmount) {
      this.componentWillUnmount();
    }
    this._compositeLifeCycleState = null;

    this._defaultProps = null;

    ReactComponent.Mixin.unmountComponent.call(this);
    this._renderedComponent.unmountComponent();
    this._renderedComponent = null;

    if (this.refs) {
      this.refs = null;
    }

    // Some existing components rely on this.props even after they've been
    // destroyed (in event handlers).
    // TODO: this.props = null;
    // TODO: this.state = null;
  },

  /**
   * Sets a subset of the state. Always use this or `replaceState` to mutate
   * state. You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * There is no guarantee that calls to `setState` will run synchronously,
   * as they may eventually be batched together.  You can provide an optional
   * callback that will be executed when the call to setState is actually
   * completed.
   *
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after state is updated.
   * @final
   * @protected
   */
  setState: function(partialState, callback) {
    // Merge with `_pendingState` if it exists, otherwise with existing state.
    this.replaceState(
      merge(this._pendingState || this.state, partialState),
      callback
    );
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {object} completeState Next state.
   * @param {?function} callback Called after state is updated.
   * @final
   * @protected
   */
  replaceState: function(completeState, callback) {
    validateLifeCycleOnReplaceState(this);
    this._pendingState = completeState;
    ReactUpdates.enqueueUpdate(this, callback);
  },

  /**
   * Processes props by setting default values for unspecified props and
   * asserting that the props are valid.
   *
   * @param {object} props
   * @private
   */
  _processProps: function(props) {
    var propName;
    var defaultProps = this._defaultProps;
    for (propName in defaultProps) {
      if (!(propName in props)) {
        props[propName] = defaultProps[propName];
      }
    }
    var propTypes = this.constructor.propTypes;
    if (propTypes) {
      var componentName = this.constructor.displayName;
      for (propName in propTypes) {
        var checkProp = propTypes[propName];
        if (checkProp) {
          checkProp(props, propName, componentName);
        }
      }
    }
  },

  performUpdateIfNecessary: function() {
    var compositeLifeCycleState = this._compositeLifeCycleState;
    // Do not trigger a state transition if we are in the middle of mounting or
    // receiving props because both of those will already be doing this.
    if (compositeLifeCycleState === CompositeLifeCycle.MOUNTING ||
        compositeLifeCycleState === CompositeLifeCycle.RECEIVING_PROPS) {
      return;
    }
    ReactComponent.Mixin.performUpdateIfNecessary.call(this);
  },

  /**
   * If any of `_pendingProps`, `_pendingState`, or `_pendingForceUpdate` is
   * set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _performUpdateIfNecessary: function(transaction) {
    if (this._pendingProps == null &&
        this._pendingState == null &&
        !this._pendingForceUpdate) {
      return;
    }

    var nextProps = this.props;
    if (this._pendingProps != null) {
      nextProps = this._pendingProps;
      this._processProps(nextProps);
      this._pendingProps = null;

      this._compositeLifeCycleState = CompositeLifeCycle.RECEIVING_PROPS;
      if (this.componentWillReceiveProps) {
        this.componentWillReceiveProps(nextProps, transaction);
      }
    }

    this._compositeLifeCycleState = CompositeLifeCycle.RECEIVING_STATE;

    var nextState = this._pendingState || this.state;
    this._pendingState = null;

    if (this._pendingForceUpdate ||
        !this.shouldComponentUpdate ||
        this.shouldComponentUpdate(nextProps, nextState)) {
      this._pendingForceUpdate = false;
      // Will set `this.props` and `this.state`.
      this._performComponentUpdate(nextProps, nextState, transaction);
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state.
      this.props = nextProps;
      this.state = nextState;
    }

    this._compositeLifeCycleState = null;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {object} nextProps Next object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {ReactReconcileTransaction} transaction
   * @private
   */
  _performComponentUpdate: function(nextProps, nextState, transaction) {
    var prevProps = this.props;
    var prevState = this.state;

    if (this.componentWillUpdate) {
      this.componentWillUpdate(nextProps, nextState, transaction);
    }

    this.props = nextProps;
    this.state = nextState;

    this.updateComponent(transaction, prevProps, prevState);

    if (this.componentDidUpdate) {
      transaction.getReactMountReady().enqueue(
        this,
        this.componentDidUpdate.bind(this, prevProps, prevState)
      );
    }
  },

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {object} prevProps
   * @param {?object} prevState
   * @internal
   * @overridable
   */
  updateComponent: ReactPerf.measure(
    'ReactCompositeComponent',
    'updateComponent',
    function(transaction, prevProps, prevState) {
      ReactComponent.Mixin.updateComponent.call(this, transaction, prevProps);
      var currentComponent = this._renderedComponent;
      var nextComponent = this._renderValidatedComponent();
      if (currentComponent.constructor === nextComponent.constructor) {
        currentComponent.receiveComponent(nextComponent, transaction);
      } else {
        // These two IDs are actually the same! But nothing should rely on that.
        var thisID = this._rootNodeID;
        var currentComponentID = currentComponent._rootNodeID;
        currentComponent.unmountComponent();
        this._renderedComponent = nextComponent;
        var nextMarkup = nextComponent.mountComponent(
          thisID,
          transaction,
          this._mountDepth + 1
        );
        ReactComponent.DOMIDOperations.dangerouslyReplaceNodeWithMarkupByID(
          currentComponentID,
          nextMarkup
        );
      }
    }
  ),

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldUpdateComponent`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {?function} callback Called after update is complete.
   * @final
   * @protected
   */
  forceUpdate: function(callback) {
    var compositeLifeCycleState = this._compositeLifeCycleState;
    ("production" !== "development" ? invariant(
      this.isMounted() ||
        compositeLifeCycleState === CompositeLifeCycle.MOUNTING,
      'forceUpdate(...): Can only force an update on mounted or mounting ' +
        'components.'
    ) : invariant(this.isMounted() ||
      compositeLifeCycleState === CompositeLifeCycle.MOUNTING));
    ("production" !== "development" ? invariant(
      compositeLifeCycleState !== CompositeLifeCycle.RECEIVING_STATE &&
      compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING,
      'forceUpdate(...): Cannot force an update while unmounting component ' +
      'or during an existing state transition (such as within `render`).'
    ) : invariant(compositeLifeCycleState !== CompositeLifeCycle.RECEIVING_STATE &&
    compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING));
    this._pendingForceUpdate = true;
    ReactUpdates.enqueueUpdate(this, callback);
  },

  /**
   * @private
   */
  _renderValidatedComponent: function() {
    var renderedComponent;
    ReactCurrentOwner.current = this;
    try {
      renderedComponent = this.render();
    } catch (error) {
      // IE8 requires `catch` in order to use `finally`.
      throw error;
    } finally {
      ReactCurrentOwner.current = null;
    }
    ("production" !== "development" ? invariant(
      ReactComponent.isValidComponent(renderedComponent),
      '%s.render(): A valid ReactComponent must be returned. You may have ' +
      'returned null, undefined, an array, or some other invalid object.',
      this.constructor.displayName || 'ReactCompositeComponent'
    ) : invariant(ReactComponent.isValidComponent(renderedComponent)));
    return renderedComponent;
  },

  /**
   * @private
   */
  _bindAutoBindMethods: function() {
    for (var autoBindKey in this.__reactAutoBindMap) {
      if (!this.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
        continue;
      }
      var method = this.__reactAutoBindMap[autoBindKey];
      this[autoBindKey] = this._bindAutoBindMethod(ReactErrorUtils.guard(
        method,
        this.constructor.displayName + '.' + autoBindKey
      ));
    }
  },

  /**
   * Binds a method to the component.
   *
   * @param {function} method Method to be bound.
   * @private
   */
  _bindAutoBindMethod: function(method) {
    var component = this;
    var boundMethod = function() {
      return method.apply(component, arguments);
    };
    if ("production" !== "development") {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function(newThis) {
        // User is trying to bind() an autobound method; we effectively will
        // ignore the value of "this" that the user is trying to use, so
        // let's warn.
        if (newThis !== component && newThis !== null) {
          console.warn(
            'bind(): React component methods may only be bound to the ' +
            'component instance. See ' + componentName
          );
        } else if (arguments.length === 1) {
          console.warn(
            'bind(): You are binding a component method to the component. ' +
            'React does this for you automatically in a high-performance ' +
            'way, so you can safely remove this call. See ' + componentName
          );
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments =
          Array.prototype.slice.call(arguments, 1);
        return reboundMethod;
      };
    }
    return boundMethod;
  }
};

var ReactCompositeComponentBase = function() {};
mixInto(ReactCompositeComponentBase, ReactComponent.Mixin);
mixInto(ReactCompositeComponentBase, ReactOwner.Mixin);
mixInto(ReactCompositeComponentBase, ReactPropTransferer.Mixin);
mixInto(ReactCompositeComponentBase, ReactCompositeComponentMixin);

/**
 * Module for creating composite components.
 *
 * @class ReactCompositeComponent
 * @extends ReactComponent
 * @extends ReactOwner
 * @extends ReactPropTransferer
 */
var ReactCompositeComponent = {

  LifeCycle: CompositeLifeCycle,

  Base: ReactCompositeComponentBase,

  /**
   * Creates a composite component class given a class specification.
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function(spec) {
    var Constructor = function() {};
    Constructor.prototype = new ReactCompositeComponentBase();
    Constructor.prototype.constructor = Constructor;
    mixSpecIntoComponent(Constructor, spec);

    ("production" !== "development" ? invariant(
      Constructor.prototype.render,
      'createClass(...): Class specification must implement a `render` method.'
    ) : invariant(Constructor.prototype.render));

    if ("production" !== "development") {
      if (Constructor.prototype.componentShouldUpdate) {
        console.warn(
          (spec.displayName || 'A component') + ' has a method called ' +
          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
          'The name is phrased as a question because the function is ' +
          'expected to return a value.'
         );
      }
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactCompositeComponentInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    var ConvenienceConstructor = function(props, children) {
      var instance = new Constructor();
      instance.construct.apply(instance, arguments);
      return instance;
    };
    ConvenienceConstructor.componentConstructor = Constructor;
    ConvenienceConstructor.originalSpec = spec;
    return ConvenienceConstructor;
  },

  /**
   * Checks if a value is a valid component constructor.
   *
   * @param {*}
   * @return {boolean}
   * @public
   */
  isValidClass: function(componentClass) {
    return componentClass instanceof Function &&
           'componentConstructor' in componentClass &&
           componentClass.componentConstructor instanceof Function;
  }
};

module.exports = ReactCompositeComponent;

},{"./ReactComponent":25,"./ReactCurrentOwner":29,"./ReactErrorUtils":43,"./ReactOwner":54,"./ReactPerf":55,"./ReactPropTransferer":56,"./ReactUpdates":61,"./invariant":98,"./keyMirror":104,"./merge":107,"./mixInto":110,"./objMap":112}],29:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactCurrentOwner
 */

"use strict";

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 *
 * The depth indicate how many composite components are above this render level.
 */
var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;

},{}],30:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOM
 * @typechecks static-only
 */

"use strict";

var ReactDOMComponent = require("./ReactDOMComponent");

var mergeInto = require("./mergeInto");
var objMapKeyVal = require("./objMapKeyVal");

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @param {string} tag Tag name (e.g. `div`).
 * @param {boolean} omitClose True if the close tag should be omitted.
 * @private
 */
function createDOMComponentClass(tag, omitClose) {
  var Constructor = function() {};
  Constructor.prototype = new ReactDOMComponent(tag, omitClose);
  Constructor.prototype.constructor = Constructor;
  Constructor.displayName = tag;

  var ConvenienceConstructor = function(props, children) {
    var instance = new Constructor();
    instance.construct.apply(instance, arguments);
    return instance;
  };
  ConvenienceConstructor.componentConstructor = Constructor;
  return ConvenienceConstructor;
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOM = objMapKeyVal({
  a: false,
  abbr: false,
  address: false,
  area: false,
  article: false,
  aside: false,
  audio: false,
  b: false,
  base: false,
  bdi: false,
  bdo: false,
  big: false,
  blockquote: false,
  body: false,
  br: true,
  button: false,
  canvas: false,
  caption: false,
  cite: false,
  code: false,
  col: true,
  colgroup: false,
  data: false,
  datalist: false,
  dd: false,
  del: false,
  details: false,
  dfn: false,
  div: false,
  dl: false,
  dt: false,
  em: false,
  embed: true,
  fieldset: false,
  figcaption: false,
  figure: false,
  footer: false,
  form: false, // NOTE: Injected, see `ReactDOMForm`.
  h1: false,
  h2: false,
  h3: false,
  h4: false,
  h5: false,
  h6: false,
  head: false,
  header: false,
  hr: true,
  html: false,
  i: false,
  iframe: false,
  img: true,
  input: true,
  ins: false,
  kbd: false,
  keygen: true,
  label: false,
  legend: false,
  li: false,
  link: false,
  main: false,
  map: false,
  mark: false,
  menu: false,
  menuitem: false, // NOTE: Close tag should be omitted, but causes problems.
  meta: true,
  meter: false,
  nav: false,
  noscript: false,
  object: false,
  ol: false,
  optgroup: false,
  option: false,
  output: false,
  p: false,
  param: true,
  pre: false,
  progress: false,
  q: false,
  rp: false,
  rt: false,
  ruby: false,
  s: false,
  samp: false,
  script: false,
  section: false,
  select: false,
  small: false,
  source: false,
  span: false,
  strong: false,
  style: false,
  sub: false,
  summary: false,
  sup: false,
  table: false,
  tbody: false,
  td: false,
  textarea: false, // NOTE: Injected, see `ReactDOMTextarea`.
  tfoot: false,
  th: false,
  thead: false,
  time: false,
  title: false,
  tr: false,
  track: true,
  u: false,
  ul: false,
  'var': false,
  video: false,
  wbr: false,

  // SVG
  circle: false,
  g: false,
  line: false,
  path: false,
  polyline: false,
  rect: false,
  svg: false,
  text: false
}, createDOMComponentClass);

var injection = {
  injectComponentClasses: function(componentClasses) {
    mergeInto(ReactDOM, componentClasses);
  }
};

ReactDOM.injection = injection;

module.exports = ReactDOM;

},{"./ReactDOMComponent":32,"./mergeInto":109,"./objMapKeyVal":113}],31:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMButton
 */

"use strict";

var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactDOM = require("./ReactDOM");

var keyMirror = require("./keyMirror");

// Store a reference to the <button> `ReactDOMComponent`.
var button = ReactDOM.button;

var mouseListenerNames = keyMirror({
  onClick: true,
  onDoubleClick: true,
  onMouseDown: true,
  onMouseMove: true,
  onMouseUp: true,
  onClickCapture: true,
  onDoubleClickCapture: true,
  onMouseDownCapture: true,
  onMouseMoveCapture: true,
  onMouseUpCapture: true
});

/**
 * Implements a <button> native component that does not receive mouse events
 * when `disabled` is set.
 */
var ReactDOMButton = ReactCompositeComponent.createClass({

  render: function() {
    var props = {};

    // Copy the props; except the mouse listeners if we're disabled
    for (var key in this.props) {
      if (this.props.hasOwnProperty(key) &&
          (!this.props.disabled || !mouseListenerNames[key])) {
        props[key] = this.props[key];
      }
    }

    return button(props, this.props.children);
  }

});

module.exports = ReactDOMButton;

},{"./ReactCompositeComponent":28,"./ReactDOM":30,"./keyMirror":104}],32:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMComponent
 * @typechecks static-only
 */

"use strict";

var CSSPropertyOperations = require("./CSSPropertyOperations");
var DOMProperty = require("./DOMProperty");
var DOMPropertyOperations = require("./DOMPropertyOperations");
var ReactComponent = require("./ReactComponent");
var ReactEventEmitter = require("./ReactEventEmitter");
var ReactMultiChild = require("./ReactMultiChild");
var ReactMount = require("./ReactMount");
var ReactPerf = require("./ReactPerf");

var escapeTextForBrowser = require("./escapeTextForBrowser");
var invariant = require("./invariant");
var keyOf = require("./keyOf");
var merge = require("./merge");
var mixInto = require("./mixInto");

var putListener = ReactEventEmitter.putListener;
var deleteListener = ReactEventEmitter.deleteListener;
var registrationNames = ReactEventEmitter.registrationNames;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = {'string': true, 'number': true};

var STYLE = keyOf({style: null});

/**
 * @param {?object} props
 */
function assertValidProps(props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  ("production" !== "development" ? invariant(
    props.children == null || props.dangerouslySetInnerHTML == null,
    'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
  ) : invariant(props.children == null || props.dangerouslySetInnerHTML == null));
  ("production" !== "development" ? invariant(
    props.style == null || typeof props.style === 'object',
    'The `style` prop expects a mapping from style properties to values, ' +
    'not a string.'
  ) : invariant(props.style == null || typeof props.style === 'object'));
}

/**
 * @constructor ReactDOMComponent
 * @extends ReactComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(tag, omitClose) {
  this._tagOpen = '<' + tag;
  this._tagClose = omitClose ? '' : '</' + tag + '>';
  this.tagName = tag.toUpperCase();
}

ReactDOMComponent.Mixin = {

  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {string} rootID The root DOM ID for this node.
   * @param {ReactReconcileTransaction} transaction
   * @param {number} mountDepth number of components in the owner hierarchy
   * @return {string} The computed markup.
   */
  mountComponent: ReactPerf.measure(
    'ReactDOMComponent',
    'mountComponent',
    function(rootID, transaction, mountDepth) {
      ReactComponent.Mixin.mountComponent.call(
        this,
        rootID,
        transaction,
        mountDepth
      );
      assertValidProps(this.props);
      return (
        this._createOpenTagMarkup() +
        this._createContentMarkup(transaction) +
        this._tagClose
      );
    }
  ),

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkup: function() {
    var props = this.props;
    var ret = this._tagOpen;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNames[propKey]) {
        putListener(this._rootNodeID, propKey, propValue);
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            propValue = props.style = merge(props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
        }
        var markup =
          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    var escapedID = escapeTextForBrowser(this._rootNodeID);
    return ret + ' ' + ReactMount.ATTR_NAME + '="' + escapedID + '">';
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction} transaction
   * @return {string} Content markup.
   */
  _createContentMarkup: function(transaction) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = this.props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        return innerHTML.__html;
      }
    } else {
      var contentToUse =
        CONTENT_TYPES[typeof this.props.children] ? this.props.children : null;
      var childrenToUse = contentToUse != null ? null : this.props.children;
      if (contentToUse != null) {
        return escapeTextForBrowser(contentToUse);
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(
          childrenToUse,
          transaction
        );
        return mountImages.join('');
      }
    }
    return '';
  },

  receiveComponent: function(nextComponent, transaction) {
    assertValidProps(nextComponent.props);
    ReactComponent.Mixin.receiveComponent.call(
      this,
      nextComponent,
      transaction
    );
  },

  /**
   * Updates a native DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {object} prevProps
   * @internal
   * @overridable
   */
  updateComponent: ReactPerf.measure(
    'ReactDOMComponent',
    'updateComponent',
    function(transaction, prevProps) {
      ReactComponent.Mixin.updateComponent.call(this, transaction, prevProps);
      this._updateDOMProperties(prevProps);
      this._updateDOMChildren(prevProps, transaction);
    }
  ),

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   */
  _updateDOMProperties: function(lastProps) {
    var nextProps = this.props;
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) ||
         !lastProps.hasOwnProperty(propKey)) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = lastProps[propKey];
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
      } else if (registrationNames[propKey]) {
        deleteListener(this._rootNodeID, propKey);
      } else if (
          DOMProperty.isStandardName[propKey] ||
          DOMProperty.isCustomAttribute(propKey)) {
        ReactComponent.DOMIDOperations.deletePropertyByID(
          this._rootNodeID,
          propKey
        );
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = lastProps[propKey];
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          nextProp = nextProps.style = merge(nextProp);
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) &&
                !nextProp.hasOwnProperty(styleName)) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) &&
                lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNames[propKey]) {
        putListener(this._rootNodeID, propKey, nextProp);
      } else if (
          DOMProperty.isStandardName[propKey] ||
          DOMProperty.isCustomAttribute(propKey)) {
        ReactComponent.DOMIDOperations.updatePropertyByID(
          this._rootNodeID,
          propKey,
          nextProp
        );
      }
    }
    if (styleUpdates) {
      ReactComponent.DOMIDOperations.updateStylesByID(
        this._rootNodeID,
        styleUpdates
      );
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {ReactReconcileTransaction} transaction
   */
  _updateDOMChildren: function(lastProps, transaction) {
    var nextProps = this.props;

    var lastContent =
      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent =
      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml =
      lastProps.dangerouslySetInnerHTML &&
      lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml =
      nextProps.dangerouslySetInnerHTML &&
      nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        ReactComponent.DOMIDOperations.updateInnerHTMLByID(
          this._rootNodeID,
          nextHtml
        );
      }
    } else if (nextChildren != null) {
      this.updateChildren(nextChildren, transaction);
    }
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function() {
    ReactEventEmitter.deleteAllListeners(this._rootNodeID);
    ReactComponent.Mixin.unmountComponent.call(this);
    this.unmountChildren();
  }

};

mixInto(ReactDOMComponent, ReactComponent.Mixin);
mixInto(ReactDOMComponent, ReactDOMComponent.Mixin);
mixInto(ReactDOMComponent, ReactMultiChild.Mixin);

module.exports = ReactDOMComponent;

},{"./CSSPropertyOperations":3,"./DOMProperty":8,"./DOMPropertyOperations":9,"./ReactComponent":25,"./ReactEventEmitter":44,"./ReactMount":50,"./ReactMultiChild":52,"./ReactPerf":55,"./escapeTextForBrowser":84,"./invariant":98,"./keyOf":105,"./merge":107,"./mixInto":110}],33:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMForm
 */

"use strict";

var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactDOM = require("./ReactDOM");
var ReactEventEmitter = require("./ReactEventEmitter");
var EventConstants = require("./EventConstants");

// Store a reference to the <form> `ReactDOMComponent`.
var form = ReactDOM.form;

/**
 * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need
 * to capture it on the <form> element itself. There are lots of hacks we could
 * do to accomplish this, but the most reliable is to make <form> a
 * composite component and use `componentDidMount` to attach the event handlers.
 */
var ReactDOMForm = ReactCompositeComponent.createClass({
  render: function() {
    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,
    // `jshint` fails to parse JSX so in order for linting to work in the open
    // source repo, we need to just use `ReactDOM.form`.
    return this.transferPropsTo(form(null, this.props.children));
  },

  componentDidMount: function(node) {
    ReactEventEmitter.trapBubbledEvent(
      EventConstants.topLevelTypes.topSubmit,
      'submit',
      node
    );
  }
});

module.exports = ReactDOMForm;

},{"./EventConstants":14,"./ReactCompositeComponent":28,"./ReactDOM":30,"./ReactEventEmitter":44}],34:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMIDOperations
 * @typechecks static-only
 */

/*jslint evil: true */

"use strict";

var CSSPropertyOperations = require("./CSSPropertyOperations");
var DOMChildrenOperations = require("./DOMChildrenOperations");
var DOMPropertyOperations = require("./DOMPropertyOperations");
var ReactMount = require("./ReactMount");

var getTextContentAccessor = require("./getTextContentAccessor");
var invariant = require("./invariant");

/**
 * Errors for properties that should not be updated with `updatePropertyById()`.
 *
 * @type {object}
 * @private
 */
var INVALID_PROPERTY_ERRORS = {
  dangerouslySetInnerHTML:
    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
  style: '`style` must be set using `updateStylesByID()`.'
};

/**
 * The DOM property to use when setting text content.
 *
 * @type {string}
 * @private
 */
var textContentAccessor = getTextContentAccessor() || 'NA';

var LEADING_SPACE = /^ /;

/**
 * Operations used to process updates to DOM nodes. This is made injectable via
 * `ReactComponent.DOMIDOperations`.
 */
var ReactDOMIDOperations = {

  /**
   * Updates a DOM node with new property values. This should only be used to
   * update DOM properties in `DOMProperty`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} name A valid property name, see `DOMProperty`.
   * @param {*} value New value of the property.
   * @internal
   */
  updatePropertyByID: function(id, name, value) {
    var node = ReactMount.getNode(id);
    ("production" !== "development" ? invariant(
      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
      'updatePropertyByID(...): %s',
      INVALID_PROPERTY_ERRORS[name]
    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));

    // If we're updating to null or undefined, we should remove the property
    // from the DOM node instead of inadvertantly setting to a string. This
    // brings us in line with the same behavior we have on initial render.
    if (value != null) {
      DOMPropertyOperations.setValueForProperty(node, name, value);
    } else {
      DOMPropertyOperations.deleteValueForProperty(node, name);
    }
  },

  /**
   * Updates a DOM node to remove a property. This should only be used to remove
   * DOM properties in `DOMProperty`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} name A property name to remove, see `DOMProperty`.
   * @internal
   */
  deletePropertyByID: function(id, name, value) {
    var node = ReactMount.getNode(id);
    ("production" !== "development" ? invariant(
      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
      'updatePropertyByID(...): %s',
      INVALID_PROPERTY_ERRORS[name]
    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));
    DOMPropertyOperations.deleteValueForProperty(node, name, value);
  },

  /**
   * Updates a DOM node with new style values. If a value is specified as '',
   * the corresponding style property will be unset.
   *
   * @param {string} id ID of the node to update.
   * @param {object} styles Mapping from styles to values.
   * @internal
   */
  updateStylesByID: function(id, styles) {
    var node = ReactMount.getNode(id);
    CSSPropertyOperations.setValueForStyles(node, styles);
  },

  /**
   * Updates a DOM node's innerHTML.
   *
   * @param {string} id ID of the node to update.
   * @param {string} html An HTML string.
   * @internal
   */
  updateInnerHTMLByID: function(id, html) {
    var node = ReactMount.getNode(id);
    // HACK: IE8- normalize whitespace in innerHTML, removing leading spaces.
    // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
    node.innerHTML = html.replace(LEADING_SPACE, '&nbsp;');
  },

  /**
   * Updates a DOM node's text content set by `props.content`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} content Text content.
   * @internal
   */
  updateTextContentByID: function(id, content) {
    var node = ReactMount.getNode(id);
    node[textContentAccessor] = content;
  },

  /**
   * Replaces a DOM node that exists in the document with markup.
   *
   * @param {string} id ID of child to be replaced.
   * @param {string} markup Dangerous markup to inject in place of child.
   * @internal
   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
   */
  dangerouslyReplaceNodeWithMarkupByID: function(id, markup) {
    var node = ReactMount.getNode(id);
    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
  },

  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @param {array<string>} markup List of markup strings.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function(updates, markup) {
    for (var i = 0; i < updates.length; i++) {
      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
    }
    DOMChildrenOperations.processUpdates(updates, markup);
  }

};

module.exports = ReactDOMIDOperations;

},{"./CSSPropertyOperations":3,"./DOMChildrenOperations":7,"./DOMPropertyOperations":9,"./ReactMount":50,"./getTextContentAccessor":95,"./invariant":98}],35:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMInput
 */

"use strict";

var DOMPropertyOperations = require("./DOMPropertyOperations");
var LinkedValueMixin = require("./LinkedValueMixin");
var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactDOM = require("./ReactDOM");
var ReactMount = require("./ReactMount");

var invariant = require("./invariant");
var merge = require("./merge");

// Store a reference to the <input> `ReactDOMComponent`.
var input = ReactDOM.input;

var instancesByReactID = {};

/**
 * Implements an <input> native component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = ReactCompositeComponent.createClass({
  mixins: [LinkedValueMixin],

  getInitialState: function() {
    var defaultValue = this.props.defaultValue;
    return {
      checked: this.props.defaultChecked || false,
      value: defaultValue != null ? defaultValue : null
    };
  },

  shouldComponentUpdate: function() {
    // Defer any updates to this component during the `onChange` handler.
    return !this._isChanging;
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = merge(this.props);

    props.defaultChecked = null;
    props.defaultValue = null;
    props.checked =
      this.props.checked != null ? this.props.checked : this.state.checked;

    var value = this.getValue();
    props.value = value != null ? value : this.state.value;

    props.onChange = this._handleChange;

    return input(props, this.props.children);
  },

  componentDidMount: function(rootNode) {
    var id = ReactMount.getID(rootNode);
    instancesByReactID[id] = this;
  },

  componentWillUnmount: function() {
    var rootNode = this.getDOMNode();
    var id = ReactMount.getID(rootNode);
    delete instancesByReactID[id];
  },

  componentDidUpdate: function(prevProps, prevState, rootNode) {
    if (this.props.checked != null) {
      DOMPropertyOperations.setValueForProperty(
        rootNode,
        'checked',
        this.props.checked || false
      );
    }

    var value = this.getValue();
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = this.getOnChange();
    if (onChange) {
      this._isChanging = true;
      returnValue = onChange(event);
      this._isChanging = false;
    }
    this.setState({
      checked: event.target.checked,
      value: event.target.value
    });

    var name = this.props.name;
    if (this.props.type === 'radio' && name != null) {
      var rootNode = this.getDOMNode();
      // If `rootNode.form` was non-null, then we could try `form.elements`,
      // but that sometimes behaves strangely in IE8. We could also try using
      // `form.getElementsByName`, but that will only return direct children
      // and won't include inputs that use the HTML5 `form=` attribute. Since
      // the input might not even be in a form, let's just use the global
      // `getElementsByName` to ensure we don't miss anything.
      var group = document.getElementsByName(name);
      for (var i = 0, groupLen = group.length; i < groupLen; i++) {
        var otherNode = group[i];
        if (otherNode === rootNode ||
            otherNode.nodeName !== 'INPUT' || otherNode.type !== 'radio' ||
            otherNode.form !== rootNode.form) {
          continue;
        }
        var otherID = ReactMount.getID(otherNode);
        ("production" !== "development" ? invariant(
          otherID,
          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +
          'same `name` is not supported.'
        ) : invariant(otherID));
        var otherInstance = instancesByReactID[otherID];
        ("production" !== "development" ? invariant(
          otherInstance,
          'ReactDOMInput: Unknown radio button ID %s.',
          otherID
        ) : invariant(otherInstance));
        // In some cases, this will actually change the `checked` state value.
        // In other cases, there's no change but this forces a reconcile upon
        // which componentDidUpdate will reset the DOM property to whatever it
        // should be.
        otherInstance.setState({
          checked: false
        });
      }
    }

    return returnValue;
  }

});

module.exports = ReactDOMInput;

},{"./DOMPropertyOperations":9,"./LinkedValueMixin":21,"./ReactCompositeComponent":28,"./ReactDOM":30,"./ReactMount":50,"./invariant":98,"./merge":107}],36:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMOption
 */

"use strict";

var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactDOM = require("./ReactDOM");

// Store a reference to the <option> `ReactDOMComponent`.
var option = ReactDOM.option;

/**
 * Implements an <option> native component that warns when `selected` is set.
 */
var ReactDOMOption = ReactCompositeComponent.createClass({

  componentWillMount: function() {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if (this.props.selected != null) {
      if ("production" !== "development") {
        console.warn(
          'Use the `defaultValue` or `value` props on <select> instead of ' +
          'setting `selected` on <option>.'
        );
      }
    }
  },

  render: function() {
    return option(this.props, this.props.children);
  }

});

module.exports = ReactDOMOption;

},{"./ReactCompositeComponent":28,"./ReactDOM":30}],37:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMSelect
 */

"use strict";

var LinkedValueMixin = require("./LinkedValueMixin");
var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactDOM = require("./ReactDOM");

var invariant = require("./invariant");
var merge = require("./merge");

// Store a reference to the <select> `ReactDOMComponent`.
var select = ReactDOM.select;

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function selectValueType(props, propName, componentName) {
  if (props[propName] == null) {
    return;
  }
  if (props.multiple) {
    ("production" !== "development" ? invariant(
      Array.isArray(props[propName]),
      'The `%s` prop supplied to <select> must be an array if `multiple` is ' +
      'true.',
      propName
    ) : invariant(Array.isArray(props[propName])));
  } else {
    ("production" !== "development" ? invariant(
      !Array.isArray(props[propName]),
      'The `%s` prop supplied to <select> must be a scalar value if ' +
      '`multiple` is false.',
      propName
    ) : invariant(!Array.isArray(props[propName])));
  }
}

/**
 * If `value` is supplied, updates <option> elements on mount and update.
 * @private
 */
function updateOptions() {
  /*jshint validthis:true */
  var propValue = this.getValue();
  var value = propValue != null ? propValue : this.state.value;
  var options = this.getDOMNode().options;
  var selectedValue = '' + value;

  for (var i = 0, l = options.length; i < l; i++) {
    var selected = this.props.multiple ?
      selectedValue.indexOf(options[i].value) >= 0 :
      selected = options[i].value === selectedValue;

    if (selected !== options[i].selected) {
      options[i].selected = selected;
    }
  }
}

/**
 * Implements a <select> native component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * string. If `multiple` is true, the prop must be an array of strings.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = ReactCompositeComponent.createClass({
  mixins: [LinkedValueMixin],

  propTypes: {
    defaultValue: selectValueType,
    value: selectValueType
  },

  getInitialState: function() {
    return {value: this.props.defaultValue || (this.props.multiple ? [] : '')};
  },

  componentWillReceiveProps: function(nextProps) {
    if (!this.props.multiple && nextProps.multiple) {
      this.setState({value: [this.state.value]});
    } else if (this.props.multiple && !nextProps.multiple) {
      this.setState({value: this.state.value[0]});
    }
  },

  shouldComponentUpdate: function() {
    // Defer any updates to this component during the `onChange` handler.
    return !this._isChanging;
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = merge(this.props);

    props.onChange = this._handleChange;
    props.value = null;

    return select(props, this.props.children);
  },

  componentDidMount: updateOptions,

  componentDidUpdate: updateOptions,

  _handleChange: function(event) {
    var returnValue;
    var onChange = this.getOnChange();
    if (onChange) {
      this._isChanging = true;
      returnValue = onChange(event);
      this._isChanging = false;
    }

    var selectedValue;
    if (this.props.multiple) {
      selectedValue = [];
      var options = event.target.options;
      for (var i = 0, l = options.length; i < l; i++) {
        if (options[i].selected) {
          selectedValue.push(options[i].value);
        }
      }
    } else {
      selectedValue = event.target.value;
    }

    this.setState({value: selectedValue});
    return returnValue;
  }

});

module.exports = ReactDOMSelect;

},{"./LinkedValueMixin":21,"./ReactCompositeComponent":28,"./ReactDOM":30,"./invariant":98,"./merge":107}],38:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMSelection
 */

"use strict";

var getNodeForCharacterOffset = require("./getNodeForCharacterOffset");
var getTextContentAccessor = require("./getTextContentAccessor");

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection();

  if (selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);
  var rangeLength = currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var start = tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;
  detectionRange.detach();

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (typeof offsets.end === 'undefined') {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  var selection = window.getSelection();

  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = typeof offsets.end === 'undefined' ?
            start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }

    range.detach();
  }
}

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: function(node) {
    var getOffsets = document.selection ? getIEOffsets : getModernOffsets;
    return getOffsets(node);
  },

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: function(node, offsets) {
    var setOffsets = document.selection ? setIEOffsets : setModernOffsets;
    setOffsets(node, offsets);
  }
};

module.exports = ReactDOMSelection;

},{"./getNodeForCharacterOffset":93,"./getTextContentAccessor":95}],39:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDOMTextarea
 */

"use strict";

var DOMPropertyOperations = require("./DOMPropertyOperations");
var LinkedValueMixin = require("./LinkedValueMixin");
var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactDOM = require("./ReactDOM");

var invariant = require("./invariant");
var merge = require("./merge");

// Store a reference to the <textarea> `ReactDOMComponent`.
var textarea = ReactDOM.textarea;

/**
 * Implements a <textarea> native component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = ReactCompositeComponent.createClass({
  mixins: [LinkedValueMixin],

  getInitialState: function() {
    var defaultValue = this.props.defaultValue;
    // TODO (yungsters): Remove support for children content in <textarea>.
    var children = this.props.children;
    if (children != null) {
      if ("production" !== "development") {
        console.warn(
          'Use the `defaultValue` or `value` props instead of setting ' +
          'children on <textarea>.'
        );
      }
      ("production" !== "development" ? invariant(
        defaultValue == null,
        'If you supply `defaultValue` on a <textarea>, do not pass children.'
      ) : invariant(defaultValue == null));
      if (Array.isArray(children)) {
        ("production" !== "development" ? invariant(
          children.length <= 1,
          '<textarea> can only have at most one child.'
        ) : invariant(children.length <= 1));
        children = children[0];
      }

      defaultValue = '' + children;
    }
    if (defaultValue == null) {
      defaultValue = '';
    }
    var value = this.getValue();
    return {
      // We save the initial value so that `ReactDOMComponent` doesn't update
      // `textContent` (unnecessary since we update value).
      // The initial value can be a boolean or object so that's why it's
      // forced to be a string.
      initialValue: '' + (value != null ? value : defaultValue),
      value: defaultValue
    };
  },

  shouldComponentUpdate: function() {
    // Defer any updates to this component during the `onChange` handler.
    return !this._isChanging;
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = merge(this.props);
    var value = this.getValue();

    ("production" !== "development" ? invariant(
      props.dangerouslySetInnerHTML == null,
      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
    ) : invariant(props.dangerouslySetInnerHTML == null));

    props.defaultValue = null;
    props.value = value != null ? value : this.state.value;
    props.onChange = this._handleChange;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.
    return textarea(props, this.state.initialValue);
  },

  componentDidUpdate: function(prevProps, prevState, rootNode) {
    var value = this.getValue();
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = this.getOnChange();
    if (onChange) {
      this._isChanging = true;
      returnValue = onChange(event);
      this._isChanging = false;
    }
    this.setState({value: event.target.value});
    return returnValue;
  }

});

module.exports = ReactDOMTextarea;

},{"./DOMPropertyOperations":9,"./LinkedValueMixin":21,"./ReactCompositeComponent":28,"./ReactDOM":30,"./invariant":98,"./merge":107}],40:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDefaultBatchingStrategy
 */

"use strict";

var ReactUpdates = require("./ReactUpdates");
var Transaction = require("./Transaction");

var emptyFunction = require("./emptyFunction");
var mixInto = require("./mixInto");

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function() {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

mixInto(ReactDefaultBatchingStrategyTransaction, Transaction.Mixin);
mixInto(ReactDefaultBatchingStrategyTransaction, {
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function(callback, param) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      callback(param);
    } else {
      transaction.perform(callback, null, param);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;

},{"./ReactUpdates":61,"./Transaction":73,"./emptyFunction":83,"./mixInto":110}],41:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDefaultInjection
 */

"use strict";

var ReactDOM = require("./ReactDOM");
var ReactDOMButton = require("./ReactDOMButton");
var ReactDOMForm = require("./ReactDOMForm");
var ReactDOMInput = require("./ReactDOMInput");
var ReactDOMOption = require("./ReactDOMOption");
var ReactDOMSelect = require("./ReactDOMSelect");
var ReactDOMTextarea = require("./ReactDOMTextarea");
var ReactEventEmitter = require("./ReactEventEmitter");
var ReactEventTopLevelCallback = require("./ReactEventTopLevelCallback");
var ReactPerf = require("./ReactPerf");

var DefaultDOMPropertyConfig = require("./DefaultDOMPropertyConfig");
var DOMProperty = require("./DOMProperty");

var ChangeEventPlugin = require("./ChangeEventPlugin");
var CompositionEventPlugin = require("./CompositionEventPlugin");
var DefaultEventPluginOrder = require("./DefaultEventPluginOrder");
var EnterLeaveEventPlugin = require("./EnterLeaveEventPlugin");
var EventPluginHub = require("./EventPluginHub");
var MobileSafariClickEventPlugin = require("./MobileSafariClickEventPlugin");
var ReactInstanceHandles = require("./ReactInstanceHandles");
var SelectEventPlugin = require("./SelectEventPlugin");
var SimpleEventPlugin = require("./SimpleEventPlugin");

var ReactDefaultBatchingStrategy = require("./ReactDefaultBatchingStrategy");
var ReactUpdates = require("./ReactUpdates");

function inject() {
  ReactEventEmitter.TopLevelCallbackCreator = ReactEventTopLevelCallback;
  /**
   * Inject module for resolving DOM hierarchy and plugin ordering.
   */
  EventPluginHub.injection.injectEventPluginOrder(DefaultEventPluginOrder);
  EventPluginHub.injection.injectInstanceHandle(ReactInstanceHandles);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  EventPluginHub.injection.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    CompositionEventPlugin: CompositionEventPlugin,
    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,
    SelectEventPlugin: SelectEventPlugin
  });

  ReactDOM.injection.injectComponentClasses({
    button: ReactDOMButton,
    form: ReactDOMForm,
    input: ReactDOMInput,
    option: ReactDOMOption,
    select: ReactDOMSelect,
    textarea: ReactDOMTextarea
  });

  DOMProperty.injection.injectDOMPropertyConfig(DefaultDOMPropertyConfig);

  if ("production" !== "development") {
    ReactPerf.injection.injectMeasure(require("./ReactDefaultPerf").measure);
  }

  ReactUpdates.injection.injectBatchingStrategy(
    ReactDefaultBatchingStrategy
  );
}

module.exports = {
  inject: inject
};

},{"./ChangeEventPlugin":5,"./CompositionEventPlugin":6,"./DOMProperty":8,"./DefaultDOMPropertyConfig":11,"./DefaultEventPluginOrder":12,"./EnterLeaveEventPlugin":13,"./EventPluginHub":16,"./MobileSafariClickEventPlugin":22,"./ReactDOM":30,"./ReactDOMButton":31,"./ReactDOMForm":33,"./ReactDOMInput":35,"./ReactDOMOption":36,"./ReactDOMSelect":37,"./ReactDOMTextarea":39,"./ReactDefaultBatchingStrategy":40,"./ReactDefaultPerf":42,"./ReactEventEmitter":44,"./ReactEventTopLevelCallback":46,"./ReactInstanceHandles":48,"./ReactPerf":55,"./ReactUpdates":61,"./SelectEventPlugin":62,"./SimpleEventPlugin":63}],42:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactDefaultPerf
 * @typechecks static-only
 */

"use strict";

var performanceNow = require("./performanceNow");

var ReactDefaultPerf = {};

if ("production" !== "development") {
  ReactDefaultPerf = {
    /**
     * Gets the stored information for a given object's function.
     *
     * @param {string} objName
     * @param {string} fnName
     * @return {?object}
     */
    getInfo: function(objName, fnName) {
      if (!this.info[objName] || !this.info[objName][fnName]) {
        return null;
      }
      return this.info[objName][fnName];
    },

    /**
     * Gets the logs pertaining to a given object's function.
     *
     * @param {string} objName
     * @param {string} fnName
     * @return {?array<object>}
     */
    getLogs: function(objName, fnName) {
      if (!this.getInfo(objName, fnName)) {
        return null;
      }
      return this.logs.filter(function(log) {
        return log.objName === objName && log.fnName === fnName;
      });
    },

    /**
     * Runs through the logs and builds an array of arrays, where each array
     * walks through the mounting/updating of each component underneath.
     *
     * @param {string} rootID The reactID of the root node, e.g. '.r[2cpyq]'
     * @return {array<array>}
     */
    getRawRenderHistory: function(rootID) {
      var history = [];
      /**
       * Since logs are added after the method returns, the logs are in a sense
       * upside-down: the inner-most elements from mounting/updating are logged
       * first, and the last addition to the log is the top renderComponent.
       * Therefore, we flip the logs upside down for ease of processing, and
       * reverse the history array at the end so the earliest event has index 0.
       */
      var logs = this.logs.filter(function(log) {
        return log.reactID.indexOf(rootID) === 0;
      }).reverse();

      var subHistory = [];
      logs.forEach(function(log, i) {
        if (i && log.reactID === rootID && logs[i - 1].reactID !== rootID) {
          subHistory.length && history.push(subHistory);
          subHistory = [];
        }
        subHistory.push(log);
      });
      if (subHistory.length) {
        history.push(subHistory);
      }
      return history.reverse();
    },

    /**
     * Runs through the logs and builds an array of strings, where each string
     * is a multiline formatted way of walking through the mounting/updating
     * underneath.
     *
     * @param {string} rootID The reactID of the root node, e.g. '.r[2cpyq]'
     * @return {array<string>}
     */
    getRenderHistory: function(rootID) {
      var history = this.getRawRenderHistory(rootID);

      return history.map(function(subHistory) {
        var headerString = (
          'log# Component (execution time) [bloat from logging]\n' +
          '================================================================\n'
        );
        return headerString + subHistory.map(function(log) {
          // Add two spaces for every layer in the reactID.
          var indents = '\t' + Array(log.reactID.split('.[').length).join('  ');
          var delta = _microTime(log.timing.delta);
          var bloat = _microTime(log.timing.timeToLog);

          return log.index + indents + log.name + ' (' + delta + 'ms)' +
            ' [' + bloat + 'ms]';
        }).join('\n');
      });
    },

    /**
     * Print the render history from `getRenderHistory` using console.log.
     * This is currently the best way to display perf data from
     * any React component; working on that.
     *
     * @param {string} rootID The reactID of the root node, e.g. '.r[2cpyq]'
     * @param {number} index
     */
    printRenderHistory: function(rootID, index) {
      var history = this.getRenderHistory(rootID);
      if (!history[index]) {
        console.warn(
          'Index', index, 'isn\'t available! ' +
          'The render history is', history.length, 'long.'
        );
        return;
      }
      console.log(
        'Loading render history #' + (index + 1) +
        ' of ' + history.length + ':\n' + history[index]
      );
    },

    /**
     * Prints the heatmap legend to console, showing how the colors correspond
     * with render times. This relies on console.log styles.
     */
    printHeatmapLegend: function() {
      if (!this.options.heatmap.enabled) {
        return;
      }
      var max = this.info.React
        && this.info.React.renderComponent
        && this.info.React.renderComponent.max;
      if (max) {
        var logStr = 'Heatmap: ';
        for (var ii = 0; ii <= 10 * max; ii += max) {
          logStr += '%c ' + (Math.round(ii) / 10) + 'ms ';
        }
        console.log(
          logStr,
          'background-color: hsla(100, 100%, 50%, 0.6);',
          'background-color: hsla( 90, 100%, 50%, 0.6);',
          'background-color: hsla( 80, 100%, 50%, 0.6);',
          'background-color: hsla( 70, 100%, 50%, 0.6);',
          'background-color: hsla( 60, 100%, 50%, 0.6);',
          'background-color: hsla( 50, 100%, 50%, 0.6);',
          'background-color: hsla( 40, 100%, 50%, 0.6);',
          'background-color: hsla( 30, 100%, 50%, 0.6);',
          'background-color: hsla( 20, 100%, 50%, 0.6);',
          'background-color: hsla( 10, 100%, 50%, 0.6);',
          'background-color: hsla(  0, 100%, 50%, 0.6);'
        );
      }
    },

    /**
     * Measure a given function with logging information, and calls a callback
     * if there is one.
     *
     * @param {string} objName
     * @param {string} fnName
     * @param {function} func
     * @return {function}
     */
    measure: function(objName, fnName, func) {
      var info = _getNewInfo(objName, fnName);

      var fnArgs = _getFnArguments(func);

      return function() {
        var timeBeforeFn = performanceNow();
        var fnReturn = func.apply(this, arguments);
        var timeAfterFn = performanceNow();

        /**
         * Hold onto arguments in a readable way: args[1] -> args.component.
         * args is also passed to the callback, so if you want to save an
         * argument in the log, do so in the callback.
         */
        var args = {};
        for (var i = 0; i < arguments.length; i++) {
          args[fnArgs[i]] = arguments[i];
        }

        var log = {
          index: ReactDefaultPerf.logs.length,
          fnName: fnName,
          objName: objName,
          timing: {
            before: timeBeforeFn,
            after: timeAfterFn,
            delta: timeAfterFn - timeBeforeFn
          }
        };

        ReactDefaultPerf.logs.push(log);

        /**
         * The callback gets:
         * - this (the component)
         * - the original method's arguments
         * - what the method returned
         * - the log object, and
         * - the wrapped method's info object.
         */
        var callback = _getCallback(objName, fnName);
        callback && callback(this, args, fnReturn, log, info);

        log.timing.timeToLog = performanceNow() - timeAfterFn;

        return fnReturn;
      };
    },

    /**
     * Holds information on wrapped objects/methods.
     * For instance, ReactDefaultPerf.info.React.renderComponent
     */
    info: {},

    /**
     * Holds all of the logs. Filter this to pull desired information.
     */
    logs: [],

    /**
     * Toggle settings for ReactDefaultPerf
     */
    options: {
      /**
       * The heatmap sets the background color of the React containers
       * according to how much total time has been spent rendering them.
       * The most temporally expensive component is set as pure red,
       * and the others are colored from green to red as a fraction
       * of that max component time.
       */
      heatmap: {
        enabled: true
      }
    }
  };

  /**
   * Gets a info area for a given object's function, adding a new one if
   * necessary.
   *
   * @param {string} objName
   * @param {string} fnName
   * @return {object}
   */
  var _getNewInfo = function(objName, fnName) {
    var info = ReactDefaultPerf.getInfo(objName, fnName);
    if (info) {
      return info;
    }
    ReactDefaultPerf.info[objName] = ReactDefaultPerf.info[objName] || {};

    return ReactDefaultPerf.info[objName][fnName] = {
      getLogs: function() {
        return ReactDefaultPerf.getLogs(objName, fnName);
      }
    };
  };

  /**
   * Gets a list of the argument names from a function's definition.
   * This is useful for storing arguments by their names within wrapFn().
   *
   * @param {function} fn
   * @return {array<string>}
   */
  var _getFnArguments = function(fn) {
    var STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;
    var fnStr = fn.toString().replace(STRIP_COMMENTS, '');
    fnStr = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')'));
    return fnStr.match(/([^\s,]+)/g);
  };

  /**
   * Store common callbacks within ReactDefaultPerf.
   *
   * @param {string} objName
   * @param {string} fnName
   * @return {?function}
   */
  var _getCallback = function(objName, fnName) {
    switch (objName + '.' + fnName) {
      case 'React.renderComponent':
        return _renderComponentCallback;
      case 'ReactDOMComponent.mountComponent':
      case 'ReactDOMComponent.updateComponent':
        return _nativeComponentCallback;
      case 'ReactCompositeComponent.mountComponent':
      case 'ReactCompositeComponent.updateComponent':
        return _compositeComponentCallback;
      default:
        return null;
    }
  };

  /**
   * Callback function for React.renderComponent
   *
   * @param {object} component
   * @param {object} args
   * @param {?object} fnReturn
   * @param {object} log
   * @param {object} info
   */
  var _renderComponentCallback =
    function(component, args, fnReturn, log, info) {
    log.name = args.nextComponent.constructor.displayName || '[unknown]';
    log.reactID = fnReturn._rootNodeID || null;

    if (ReactDefaultPerf.options.heatmap.enabled) {
      var container = args.container;
      if (!container.loggedByReactDefaultPerf) {
        container.loggedByReactDefaultPerf = true;
        info.components = info.components || [];
        info.components.push(container);
      }

      container.count = container.count || 0;
      container.count += log.timing.delta;
      info.max = info.max || 0;
      if (container.count > info.max) {
        info.max = container.count;
        info.components.forEach(function(component) {
          _setHue(component, 100 - 100 * component.count / info.max);
        });
      } else {
        _setHue(container, 100 - 100 * container.count / info.max);
      }
    }
  };

  /**
   * Callback function for ReactDOMComponent
   *
   * @param {object} component
   * @param {object} args
   * @param {?object} fnReturn
   * @param {object} log
   * @param {object} info
   */
  var _nativeComponentCallback =
    function(component, args, fnReturn, log, info) {
    log.name = component.tagName || '[unknown]';
    log.reactID = component._rootNodeID;
  };

  /**
   * Callback function for ReactCompositeComponent
   *
   * @param {object} component
   * @param {object} args
   * @param {?object} fnReturn
   * @param {object} log
   * @param {object} info
   */
  var _compositeComponentCallback =
    function(component, args, fnReturn, log, info) {
    log.name = component.constructor.displayName || '[unknown]';
    log.reactID = component._rootNodeID;
  };

  /**
   * Using the hsl() background-color attribute, colors an element.
   *
   * @param {DOMElement} el
   * @param {number} hue [0 for red, 120 for green, 240 for blue]
   */
  var _setHue = function(el, hue) {
    el.style.backgroundColor = 'hsla(' + hue + ', 100%, 50%, 0.6)';
  };

  /**
   * Round to the thousandth place.
   * @param {number} time
   * @return {number}
   */
  var _microTime = function(time) {
    return Math.round(time * 1000) / 1000;
  };
}

module.exports = ReactDefaultPerf;

},{"./performanceNow":114}],43:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactErrorUtils
 * @typechecks
 */

var ReactErrorUtils = {
  /**
   * Creates a guarded version of a function. This is supposed to make debugging
   * of event handlers easier. This implementation provides only basic error
   * logging and re-throws the error.
   *
   * @param {function} func Function to be executed
   * @param {string} name The name of the guard
   * @return {function}
   */
  guard: function(func, name) {
    if ("production" !== "development") {
      return function guarded() {
        try {
          return func.apply(this, arguments);
        } catch(ex) {
          console.error(name + ': ' + ex.message);
          throw ex;
        }
      };
    } else {
      return func;
    }
  }
};

module.exports = ReactErrorUtils;

},{}],44:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactEventEmitter
 * @typechecks static-only
 */

"use strict";

var EventConstants = require("./EventConstants");
var EventListener = require("./EventListener");
var EventPluginHub = require("./EventPluginHub");
var ExecutionEnvironment = require("./ExecutionEnvironment");
var ReactEventEmitterMixin = require("./ReactEventEmitterMixin");
var ViewportMetrics = require("./ViewportMetrics");

var invariant = require("./invariant");
var isEventSupported = require("./isEventSupported");
var merge = require("./merge");

/**
 * Summary of `ReactEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap native browser events. We normalize
 *    and de-duplicate events to account for browser quirks.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 *                   .
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .                         +-----------+
 *       +           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.---------+         |                    +------------+
 * |     |      |    .    +----|---------+
 * +-----|------+    .         |      ^        +-----------+
 *       |           .         |      |        |Enter/Leave|
 *       +           .         |      +-------+|Plugin     |
 * +-------------+   .         v               +-----------+
 * | application |   .    +----------+
 * |-------------|   .    | callback |
 * |             |   .    | registry |
 * |             |   .    +----------+
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

/**
 * Traps top-level events by using event bubbling.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {string} handlerBaseName Event name (e.g. "click").
 * @param {DOMEventTarget} element Element on which to attach listener.
 * @internal
 */
function trapBubbledEvent(topLevelType, handlerBaseName, element) {
  EventListener.listen(
    element,
    handlerBaseName,
    ReactEventEmitter.TopLevelCallbackCreator.createTopLevelCallback(
      topLevelType
    )
  );
}

/**
 * Traps a top-level event by using event capturing.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {string} handlerBaseName Event name (e.g. "click").
 * @param {DOMEventTarget} element Element on which to attach listener.
 * @internal
 */
function trapCapturedEvent(topLevelType, handlerBaseName, element) {
  EventListener.capture(
    element,
    handlerBaseName,
    ReactEventEmitter.TopLevelCallbackCreator.createTopLevelCallback(
      topLevelType
    )
  );
}

/**
 * Listens to window scroll and resize events. We cache scroll values so that
 * application code can access them without triggering reflows.
 *
 * NOTE: Scroll events do not bubble.
 *
 * @private
 * @see http://www.quirksmode.org/dom/events/scroll.html
 */
function registerScrollValueMonitoring() {
  var refresh = ViewportMetrics.refreshScrollValues;
  EventListener.listen(window, 'scroll', refresh);
  EventListener.listen(window, 'resize', refresh);
}

/**
 * `ReactEventEmitter` is used to attach top-level event listeners. For example:
 *
 *   ReactEventEmitter.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactEventEmitter = merge(ReactEventEmitterMixin, {

  /**
   * React references `ReactEventTopLevelCallback` using this property in order
   * to allow dependency injection.
   */
  TopLevelCallbackCreator: null,

  /**
   * Ensures that top-level event delegation listeners are installed.
   *
   * There are issues with listening to both touch events and mouse events on
   * the top-level, so we make the caller choose which one to listen to. (If
   * there's a touch top-level listeners, anchors don't receive clicks for some
   * reason, and only in some cases).
   *
   * @param {boolean} touchNotMouse Listen to touch events instead of mouse.
   * @param {DOMDocument} contentDocument DOM document to listen on
   */
  ensureListening: function(touchNotMouse, contentDocument) {
    ("production" !== "development" ? invariant(
      ExecutionEnvironment.canUseDOM,
      'ensureListening(...): Cannot toggle event listening in a Worker ' +
      'thread. This is likely a bug in the framework. Please report ' +
      'immediately.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    ("production" !== "development" ? invariant(
      ReactEventEmitter.TopLevelCallbackCreator,
      'ensureListening(...): Cannot be called without a top level callback ' +
      'creator being injected.'
    ) : invariant(ReactEventEmitter.TopLevelCallbackCreator));
    // Call out to base implementation.
    ReactEventEmitterMixin.ensureListening.call(
      ReactEventEmitter,
      {
        touchNotMouse: touchNotMouse,
        contentDocument: contentDocument
      }
    );
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function(enabled) {
    ("production" !== "development" ? invariant(
      ExecutionEnvironment.canUseDOM,
      'setEnabled(...): Cannot toggle event listening in a Worker thread. ' +
      'This is likely a bug in the framework. Please report immediately.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    if (ReactEventEmitter.TopLevelCallbackCreator) {
      ReactEventEmitter.TopLevelCallbackCreator.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function() {
    return !!(
      ReactEventEmitter.TopLevelCallbackCreator &&
      ReactEventEmitter.TopLevelCallbackCreator.isEnabled()
    );
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {boolean} touchNotMouse Listen to touch events instead of mouse.
   * @param {DOMDocument} contentDocument Document which owns the container
   * @private
   * @see http://www.quirksmode.org/dom/events/keys.html.
   */
  listenAtTopLevel: function(touchNotMouse, contentDocument) {
    ("production" !== "development" ? invariant(
      !contentDocument._isListening,
      'listenAtTopLevel(...): Cannot setup top-level listener more than once.'
    ) : invariant(!contentDocument._isListening));
    var topLevelTypes = EventConstants.topLevelTypes;
    var mountAt = contentDocument;

    registerScrollValueMonitoring();
    trapBubbledEvent(topLevelTypes.topMouseOver, 'mouseover', mountAt);
    trapBubbledEvent(topLevelTypes.topMouseDown, 'mousedown', mountAt);
    trapBubbledEvent(topLevelTypes.topMouseUp, 'mouseup', mountAt);
    trapBubbledEvent(topLevelTypes.topMouseMove, 'mousemove', mountAt);
    trapBubbledEvent(topLevelTypes.topMouseOut, 'mouseout', mountAt);
    trapBubbledEvent(topLevelTypes.topClick, 'click', mountAt);
    trapBubbledEvent(topLevelTypes.topDoubleClick, 'dblclick', mountAt);
    trapBubbledEvent(topLevelTypes.topContextMenu, 'contextmenu', mountAt);
    if (touchNotMouse) {
      trapBubbledEvent(topLevelTypes.topTouchStart, 'touchstart', mountAt);
      trapBubbledEvent(topLevelTypes.topTouchEnd, 'touchend', mountAt);
      trapBubbledEvent(topLevelTypes.topTouchMove, 'touchmove', mountAt);
      trapBubbledEvent(topLevelTypes.topTouchCancel, 'touchcancel', mountAt);
    }
    trapBubbledEvent(topLevelTypes.topKeyUp, 'keyup', mountAt);
    trapBubbledEvent(topLevelTypes.topKeyPress, 'keypress', mountAt);
    trapBubbledEvent(topLevelTypes.topKeyDown, 'keydown', mountAt);
    trapBubbledEvent(topLevelTypes.topInput, 'input', mountAt);
    trapBubbledEvent(topLevelTypes.topChange, 'change', mountAt);
    trapBubbledEvent(
      topLevelTypes.topSelectionChange,
      'selectionchange',
      mountAt
    );

    trapBubbledEvent(
      topLevelTypes.topCompositionEnd,
      'compositionend',
      mountAt
    );
    trapBubbledEvent(
      topLevelTypes.topCompositionStart,
      'compositionstart',
      mountAt
    );
    trapBubbledEvent(
      topLevelTypes.topCompositionUpdate,
      'compositionupdate',
      mountAt
    );

    if (isEventSupported('drag')) {
      trapBubbledEvent(topLevelTypes.topDrag, 'drag', mountAt);
      trapBubbledEvent(topLevelTypes.topDragEnd, 'dragend', mountAt);
      trapBubbledEvent(topLevelTypes.topDragEnter, 'dragenter', mountAt);
      trapBubbledEvent(topLevelTypes.topDragExit, 'dragexit', mountAt);
      trapBubbledEvent(topLevelTypes.topDragLeave, 'dragleave', mountAt);
      trapBubbledEvent(topLevelTypes.topDragOver, 'dragover', mountAt);
      trapBubbledEvent(topLevelTypes.topDragStart, 'dragstart', mountAt);
      trapBubbledEvent(topLevelTypes.topDrop, 'drop', mountAt);
    }

    if (isEventSupported('wheel')) {
      trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
    } else if (isEventSupported('mousewheel')) {
      trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
    } else {
      // Firefox needs to capture a different mouse scroll event.
      // @see http://www.quirksmode.org/dom/events/tests/scroll.html
      trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
    }

    // IE<9 does not support capturing so just trap the bubbled event there.
    if (isEventSupported('scroll', true)) {
      trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
    } else {
      trapBubbledEvent(topLevelTypes.topScroll, 'scroll', window);
    }

    if (isEventSupported('focus', true)) {
      trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
      trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
    } else if (isEventSupported('focusin')) {
      // IE has `focusin` and `focusout` events which bubble.
      // @see
      // http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
      trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
      trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
    }

    if (isEventSupported('copy')) {
      trapBubbledEvent(topLevelTypes.topCopy, 'copy', mountAt);
      trapBubbledEvent(topLevelTypes.topCut, 'cut', mountAt);
      trapBubbledEvent(topLevelTypes.topPaste, 'paste', mountAt);
    }
  },

  registrationNames: EventPluginHub.registrationNames,

  putListener: EventPluginHub.putListener,

  getListener: EventPluginHub.getListener,

  deleteListener: EventPluginHub.deleteListener,

  deleteAllListeners: EventPluginHub.deleteAllListeners,

  trapBubbledEvent: trapBubbledEvent,

  trapCapturedEvent: trapCapturedEvent

});


module.exports = ReactEventEmitter;

},{"./EventConstants":14,"./EventListener":15,"./EventPluginHub":16,"./ExecutionEnvironment":20,"./ReactEventEmitterMixin":45,"./ViewportMetrics":74,"./invariant":98,"./isEventSupported":99,"./merge":107}],45:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactEventEmitterMixin
 */

"use strict";

var EventPluginHub = require("./EventPluginHub");
var ReactUpdates = require("./ReactUpdates");

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue();
}

var ReactEventEmitterMixin = {
  /**
   * Whether or not `ensureListening` has been invoked.
   * @type {boolean}
   * @private
   */
  _isListening: false,

  /**
   * Function, must be implemented. Listens to events on the top level of the
   * application.
   *
   * @abstract
   *
   * listenAtTopLevel: null,
   */

  /**
   * Ensures that top-level event delegation listeners are installed.
   *
   * There are issues with listening to both touch events and mouse events on
   * the top-level, so we make the caller choose which one to listen to. (If
   * there's a touch top-level listeners, anchors don't receive clicks for some
   * reason, and only in some cases).
   *
   * @param {*} config Configuration passed through to `listenAtTopLevel`.
   */
  ensureListening: function(config) {
    if (!config.contentDocument._reactIsListening) {
      this.listenAtTopLevel(config.touchNotMouse, config.contentDocument);
      config.contentDocument._reactIsListening = true;
    }
  },

  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {object} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native environment event.
   */
  handleTopLevel: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var events = EventPluginHub.extractEvents(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent
    );

    // Event queue being processed in the same cycle allows `preventDefault`.
    ReactUpdates.batchedUpdates(runEventQueueInBatch, events);
  }
};

module.exports = ReactEventEmitterMixin;

},{"./EventPluginHub":16,"./ReactUpdates":61}],46:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactEventTopLevelCallback
 * @typechecks static-only
 */

"use strict";

var ReactEventEmitter = require("./ReactEventEmitter");
var ReactMount = require("./ReactMount");

var getEventTarget = require("./getEventTarget");

/**
 * @type {boolean}
 * @private
 */
var _topLevelListenersEnabled = true;

/**
 * Top-level callback creator used to implement event handling using delegation.
 * This is used via dependency injection.
 */
var ReactEventTopLevelCallback = {

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function(enabled) {
    _topLevelListenersEnabled = !!enabled;
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function() {
    return _topLevelListenersEnabled;
  },

  /**
   * Creates a callback for the supplied `topLevelType` that could be added as
   * a listener to the document. The callback computes a `topLevelTarget` which
   * should be the root node of a mounted React component where the listener
   * is attached.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @return {function} Callback for handling top-level events.
   */
  createTopLevelCallback: function(topLevelType) {
    return function(nativeEvent) {
      if (!_topLevelListenersEnabled) {
        return;
      }
      // TODO: Remove when synthetic events are ready, this is for IE<9.
      if (nativeEvent.srcElement &&
          nativeEvent.srcElement !== nativeEvent.target) {
        nativeEvent.target = nativeEvent.srcElement;
      }
      var topLevelTarget = ReactMount.getFirstReactDOM(
        getEventTarget(nativeEvent)
      ) || window;
      var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
      ReactEventEmitter.handleTopLevel(
        topLevelType,
        topLevelTarget,
        topLevelTargetID,
        nativeEvent
      );
    };
  }

};

module.exports = ReactEventTopLevelCallback;

},{"./ReactEventEmitter":44,"./ReactMount":50,"./getEventTarget":91}],47:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactInputSelection
 */

"use strict";

var ReactDOMSelection = require("./ReactDOMSelection");

var containsNode = require("./containsNode");
var getActiveElement = require("./getActiveElement");

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {

  hasSelectionCapabilities: function(elem) {
    return elem && (
      (elem.nodeName === 'INPUT' && elem.type === 'text') ||
      elem.nodeName === 'TEXTAREA' ||
      elem.contentEditable === 'true'
    );
  },

  getSelectionInformation: function() {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange:
          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?
          ReactInputSelection.getSelection(focusedElem) :
          null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function(priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem &&
        isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(
          priorFocusedElem,
          priorSelectionRange
        );
      }
      priorFocusedElem.focus();
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function(input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName === 'INPUT') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || {start: 0, end: 0};
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function(input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (typeof end === 'undefined') {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName === 'INPUT') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;

},{"./ReactDOMSelection":38,"./containsNode":77,"./getActiveElement":90}],48:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactInstanceHandles
 * @typechecks static-only
 */

"use strict";

var invariant = require("./invariant");

var SEPARATOR = '.';
var SEPARATOR_LENGTH = SEPARATOR.length;

/**
 * Maximum depth of traversals before we consider the possibility of a bad ID.
 */
var MAX_TREE_DEPTH = 100;

/**
 * Size of the reactRoot ID space. We generate random numbers for React root
 * IDs and if there's a collision the events and DOM update system will
 * get confused. If we assume 100 React components per page, and a user
 * loads 1 page per minute 24/7 for 50 years, with a mount point space of
 * 9,999,999 the likelihood of never having a collision is 99.997%.
 */
var GLOBAL_MOUNT_POINT_MAX = 9999999;

/**
 * Creates a DOM ID prefix to use when mounting React components.
 *
 * @param {number} index A unique integer
 * @return {string} React root ID.
 * @internal
 */
function getReactRootIDString(index) {
  return SEPARATOR + 'r[' + index.toString(36) + ']';
}

/**
 * Checks if a character in the supplied ID is a separator or the end.
 *
 * @param {string} id A React DOM ID.
 * @param {number} index Index of the character to check.
 * @return {boolean} True if the character is a separator or end of the ID.
 * @private
 */
function isBoundary(id, index) {
  return id.charAt(index) === SEPARATOR || index === id.length;
}

/**
 * Checks if the supplied string is a valid React DOM ID.
 *
 * @param {string} id A React DOM ID, maybe.
 * @return {boolean} True if the string is a valid React DOM ID.
 * @private
 */
function isValidID(id) {
  return id === '' || (
    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR
  );
}

/**
 * Checks if the first ID is an ancestor of or equal to the second ID.
 *
 * @param {string} ancestorID
 * @param {string} descendantID
 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
 * @internal
 */
function isAncestorIDOf(ancestorID, descendantID) {
  return (
    descendantID.indexOf(ancestorID) === 0 &&
    isBoundary(descendantID, ancestorID.length)
  );
}

/**
 * Gets the parent ID of the supplied React DOM ID, `id`.
 *
 * @param {string} id ID of a component.
 * @return {string} ID of the parent, or an empty string.
 * @private
 */
function getParentID(id) {
  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
}

/**
 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
 * supplied `destinationID`. If they are equal, the ID is returned.
 *
 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
 * @param {string} destinationID ID of the destination node.
 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
 * @private
 */
function getNextDescendantID(ancestorID, destinationID) {
  ("production" !== "development" ? invariant(
    isValidID(ancestorID) && isValidID(destinationID),
    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
    ancestorID,
    destinationID
  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));
  ("production" !== "development" ? invariant(
    isAncestorIDOf(ancestorID, destinationID),
    'getNextDescendantID(...): React has made an invalid assumption about ' +
    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
    ancestorID,
    destinationID
  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));
  if (ancestorID === destinationID) {
    return ancestorID;
  }
  // Skip over the ancestor and the immediate separator. Traverse until we hit
  // another separator or we reach the end of `destinationID`.
  var start = ancestorID.length + SEPARATOR_LENGTH;
  for (var i = start; i < destinationID.length; i++) {
    if (isBoundary(destinationID, i)) {
      break;
    }
  }
  return destinationID.substr(0, i);
}

/**
 * Gets the nearest common ancestor ID of two IDs.
 *
 * Using this ID scheme, the nearest common ancestor ID is the longest common
 * prefix of the two IDs that immediately preceded a "marker" in both strings.
 *
 * @param {string} oneID
 * @param {string} twoID
 * @return {string} Nearest common ancestor ID, or the empty string if none.
 * @private
 */
function getFirstCommonAncestorID(oneID, twoID) {
  var minLength = Math.min(oneID.length, twoID.length);
  if (minLength === 0) {
    return '';
  }
  var lastCommonMarkerIndex = 0;
  // Use `<=` to traverse until the "EOL" of the shorter string.
  for (var i = 0; i <= minLength; i++) {
    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
      lastCommonMarkerIndex = i;
    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
      break;
    }
  }
  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
  ("production" !== "development" ? invariant(
    isValidID(longestCommonID),
    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
    oneID,
    twoID,
    longestCommonID
  ) : invariant(isValidID(longestCommonID)));
  return longestCommonID;
}

/**
 * Traverses the parent path between two IDs (either up or down). The IDs must
 * not be the same, and there must exist a parent path between them.
 *
 * @param {?string} start ID at which to start traversal.
 * @param {?string} stop ID at which to end traversal.
 * @param {function} cb Callback to invoke each ID with.
 * @param {?boolean} skipFirst Whether or not to skip the first node.
 * @param {?boolean} skipLast Whether or not to skip the last node.
 * @private
 */
function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
  start = start || '';
  stop = stop || '';
  ("production" !== "development" ? invariant(
    start !== stop,
    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
    start
  ) : invariant(start !== stop));
  var traverseUp = isAncestorIDOf(stop, start);
  ("production" !== "development" ? invariant(
    traverseUp || isAncestorIDOf(start, stop),
    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +
    'not have a parent path.',
    start,
    stop
  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));
  // Traverse from `start` to `stop` one depth at a time.
  var depth = 0;
  var traverse = traverseUp ? getParentID : getNextDescendantID;
  for (var id = start; /* until break */; id = traverse(id, stop)) {
    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
      cb(id, traverseUp, arg);
    }
    if (id === stop) {
      // Only break //after// visiting `stop`.
      break;
    }
    ("production" !== "development" ? invariant(
      depth++ < MAX_TREE_DEPTH,
      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +
      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
      start, stop
    ) : invariant(depth++ < MAX_TREE_DEPTH));
  }
}

/**
 * Manages the IDs assigned to DOM representations of React components. This
 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
 * order to simulate events).
 *
 * @internal
 */
var ReactInstanceHandles = {

  createReactRootID: function() {
    return getReactRootIDString(
      Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX)
    );
  },

  /**
   * Constructs a React ID by joining a root ID with a name.
   *
   * @param {string} rootID Root ID of a parent component.
   * @param {string} name A component's name (as flattened children).
   * @return {string} A React ID.
   * @internal
   */
  createReactID: function(rootID, name) {
    return rootID + SEPARATOR + name;
  },

  /**
   * Gets the DOM ID of the React component that is the root of the tree that
   * contains the React component with the supplied DOM ID.
   *
   * @param {string} id DOM ID of a React component.
   * @return {?string} DOM ID of the React component that is the root.
   * @internal
   */
  getReactRootIDFromNodeID: function(id) {
    var regexResult = /\.r\[[^\]]+\]/.exec(id);
    return regexResult && regexResult[0];
  },

  /**
   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
   * should would receive a `mouseEnter` or `mouseLeave` event.
   *
   * NOTE: Does not invoke the callback on the nearest common ancestor because
   * nothing "entered" or "left" that element.
   *
   * @param {string} leaveID ID being left.
   * @param {string} enterID ID being entered.
   * @param {function} cb Callback to invoke on each entered/left ID.
   * @param {*} upArg Argument to invoke the callback with on left IDs.
   * @param {*} downArg Argument to invoke the callback with on entered IDs.
   * @internal
   */
  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {
    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
    if (ancestorID !== leaveID) {
      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
    }
    if (ancestorID !== enterID) {
      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
    }
  },

  /**
   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
   *
   * NOTE: This traversal happens on IDs without touching the DOM.
   *
   * @param {string} targetID ID of the target node.
   * @param {function} cb Callback to invoke.
   * @param {*} arg Argument to invoke the callback with.
   * @internal
   */
  traverseTwoPhase: function(targetID, cb, arg) {
    if (targetID) {
      traverseParentPath('', targetID, cb, arg, true, false);
      traverseParentPath(targetID, '', cb, arg, false, true);
    }
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _getFirstCommonAncestorID: getFirstCommonAncestorID,

  /**
   * Exposed for unit testing.
   * @private
   */
  _getNextDescendantID: getNextDescendantID,

  isAncestorIDOf: isAncestorIDOf,

  SEPARATOR: SEPARATOR

};

module.exports = ReactInstanceHandles;

},{"./invariant":98}],49:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactMarkupChecksum
 */

"use strict";

var adler32 = require("./adler32");

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function(markup) {
    var checksum = adler32(markup);
    return markup.replace(
      '>',
      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">'
    );
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function(markup, element) {
    var existingChecksum = element.getAttribute(
      ReactMarkupChecksum.CHECKSUM_ATTR_NAME
    );
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;

},{"./adler32":76}],50:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactMount
 */

"use strict";

var ReactEventEmitter = require("./ReactEventEmitter");
var ReactInstanceHandles = require("./ReactInstanceHandles");

var $ = require("./$");
var containsNode = require("./containsNode");
var getReactRootElementInContainer = require("./getReactRootElementInContainer");
var invariant = require("./invariant");

var SEPARATOR = ReactInstanceHandles.SEPARATOR;

var ATTR_NAME = 'data-reactid';
var nodeCache = {};

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;

/** Mapping from reactRootID to React component instance. */
var instancesByReactRootID = {};

/** Mapping from reactRootID to `container` nodes. */
var containersByReactRootID = {};

if ("production" !== "development") {
  /** __DEV__-only mapping from reactRootID to root elements. */
  var rootElementsByReactRootID = {};
}

/**
 * @param {DOMElement} container DOM element that may contain a React component.
 * @return {?string} A "reactRoot" ID, if a React component is rendered.
 */
function getReactRootID(container) {
  var rootElement = getReactRootElementInContainer(container);
  return rootElement && ReactMount.getID(rootElement);
}

/**
 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
 * element can return its control whose name or ID equals ATTR_NAME. All
 * DOM nodes support `getAttributeNode` but this can also get called on
 * other objects so just return '' if we're given something other than a
 * DOM node (such as window).
 *
 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
 * @return {string} ID of the supplied `domNode`.
 */
function getID(node) {
  var id = internalGetID(node);
  if (id) {
    if (nodeCache.hasOwnProperty(id)) {
      var cached = nodeCache[id];
      if (cached !== node) {
        ("production" !== "development" ? invariant(
          !isValid(cached, id),
          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
          ATTR_NAME, id
        ) : invariant(!isValid(cached, id)));

        nodeCache[id] = node;
      }
    } else {
      nodeCache[id] = node;
    }
  }

  return id;
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Sets the React-specific ID of the given node.
 *
 * @param {DOMElement} node The DOM node whose ID will be set.
 * @param {string} id The value of the ID attribute.
 */
function setID(node, id) {
  var oldID = internalGetID(node);
  if (oldID !== id) {
    delete nodeCache[oldID];
  }
  node.setAttribute(ATTR_NAME, id);
  nodeCache[id] = node;
}

/**
 * Finds the node with the supplied React-generated DOM ID.
 *
 * @param {string} id A React-generated DOM ID.
 * @return {DOMElement} DOM node with the suppled `id`.
 * @internal
 */
function getNode(id) {
  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
    nodeCache[id] = ReactMount.findReactNodeByID(id);
  }
  return nodeCache[id];
}

/**
 * A node is "valid" if it is contained by a currently mounted container.
 *
 * This means that the node does not have to be contained by a document in
 * order to be considered valid.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @param {string} id The expected ID of the node.
 * @return {boolean} Whether the node is contained by a mounted container.
 */
function isValid(node, id) {
  if (node) {
    ("production" !== "development" ? invariant(
      internalGetID(node) === id,
      'ReactMount: Unexpected modification of `%s`',
      ATTR_NAME
    ) : invariant(internalGetID(node) === id));

    var container = ReactMount.findReactContainerForID(id);
    if (container && containsNode(container, node)) {
      return true;
    }
  }

  return false;
}

/**
 * Causes the cache to forget about one React-specific ID.
 *
 * @param {string} id The ID to forget.
 */
function purgeID(id) {
  delete nodeCache[id];
}

/**
 * Mounting is the process of initializing a React component by creatings its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.renderComponent(component, $('container'));
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".r[3]">           <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {
  /**
   * Safety guard to prevent accidentally rendering over the entire HTML tree.
   */
  allowFullPageRender: false,

  /** Time spent generating markup. */
  totalInstantiationTime: 0,

  /** Time spent inserting markup into the DOM. */
  totalInjectionTime: 0,

  /** Whether support for touch events should be initialized. */
  useTouchEvents: false,

  /** Exposed for debugging purposes **/
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function(container, renderCallback) {
    renderCallback();
  },

  /**
   * Ensures that the top-level event delegation listener is set up. This will
   * be invoked some time before the first time any React component is rendered.
   * @param {DOMElement} container container we're rendering into
   *
   * @private
   */
  prepareEnvironmentForDOM: function(container) {
    ("production" !== "development" ? invariant(
      container && (
        container.nodeType === ELEMENT_NODE_TYPE ||
        container.nodeType === DOC_NODE_TYPE
      ),
      'prepareEnvironmentForDOM(...): Target container is not a DOM element.'
    ) : invariant(container && (
      container.nodeType === ELEMENT_NODE_TYPE ||
      container.nodeType === DOC_NODE_TYPE
    )));
    var doc = container.nodeType === ELEMENT_NODE_TYPE ?
      container.ownerDocument :
      container;
    ReactEventEmitter.ensureListening(ReactMount.useTouchEvents, doc);
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactComponent} nextComponent component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function(
      prevComponent,
      nextComponent,
      container,
      callback) {
    var nextProps = nextComponent.props;
    ReactMount.scrollMonitor(container, function() {
      prevComponent.replaceProps(nextProps, callback);
    });

    if ("production" !== "development") {
      // Record the root element in case it later gets transplanted.
      rootElementsByReactRootID[getReactRootID(container)] =
        getReactRootElementInContainer(container);
    }

    return prevComponent;
  },

  /**
   * Register a component into the instance map and start the events system.
   * @param {ReactComponent} nextComponent component instance to render
   * @param {DOMElement} container container to render into
   * @return {string} reactRoot ID prefix
   */
  _registerComponent: function(nextComponent, container) {
    ReactMount.prepareEnvironmentForDOM(container);

    var reactRootID = ReactMount.registerContainer(container);
    instancesByReactRootID[reactRootID] = nextComponent;
    return reactRootID;
  },

  /**
   * Render a new component into the DOM.
   * @param {ReactComponent} nextComponent component instance to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function(
      nextComponent,
      container,
      shouldReuseMarkup) {
    var reactRootID = ReactMount._registerComponent(nextComponent, container);
    nextComponent.mountComponentIntoNode(
      reactRootID,
      container,
      shouldReuseMarkup
    );

    if ("production" !== "development") {
      // Record the root element in case it later gets transplanted.
      rootElementsByReactRootID[reactRootID] =
        getReactRootElementInContainer(container);
    }

    return nextComponent;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} nextComponent Component instance to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderComponent: function(nextComponent, container, callback) {
    var registeredComponent = instancesByReactRootID[getReactRootID(container)];

    if (registeredComponent) {
      if (registeredComponent.constructor === nextComponent.constructor) {
        return ReactMount._updateRootComponent(
          registeredComponent,
          nextComponent,
          container,
          callback
        );
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup =
      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

    var shouldReuseMarkup = containerHasReactMarkup && !registeredComponent;

    var component = ReactMount._renderNewRootComponent(
      nextComponent,
      container,
      shouldReuseMarkup
    );
    callback && callback();
    return component;
  },

  /**
   * Constructs a component instance of `constructor` with `initialProps` and
   * renders it into the supplied `container`.
   *
   * @param {function} constructor React component constructor.
   * @param {?object} props Initial props of the component instance.
   * @param {DOMElement} container DOM element to render into.
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  constructAndRenderComponent: function(constructor, props, container) {
    return ReactMount.renderComponent(constructor(props), container);
  },

  /**
   * Constructs a component instance of `constructor` with `initialProps` and
   * renders it into a container node identified by supplied `id`.
   *
   * @param {function} componentConstructor React component constructor
   * @param {?object} props Initial props of the component instance.
   * @param {string} id ID of the DOM element to render into.
   * @return {ReactComponent} Component instance rendered in the container node.
   */
  constructAndRenderComponentByID: function(constructor, props, id) {
    return ReactMount.constructAndRenderComponent(constructor, props, $(id));
  },

  /**
   * Registers a container node into which React components will be rendered.
   * This also creates the "reatRoot" ID that will be assigned to the element
   * rendered within.
   *
   * @param {DOMElement} container DOM element to register as a container.
   * @return {string} The "reactRoot" ID of elements rendered within.
   */
  registerContainer: function(container) {
    var reactRootID = getReactRootID(container);
    if (reactRootID) {
      // If one exists, make sure it is a valid "reactRoot" ID.
      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
    }
    if (!reactRootID) {
      // No valid "reactRoot" ID found, create one.
      reactRootID = ReactInstanceHandles.createReactRootID();
    }
    containersByReactRootID[reactRootID] = container;
    return reactRootID;
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function(container) {
    var reactRootID = getReactRootID(container);
    var component = instancesByReactRootID[reactRootID];
    if (!component) {
      return false;
    }
    ReactMount.unmountComponentFromNode(component, container);
    delete instancesByReactRootID[reactRootID];
    delete containersByReactRootID[reactRootID];
    if ("production" !== "development") {
      delete rootElementsByReactRootID[reactRootID];
    }
    return true;
  },

  /**
   * @deprecated
   */
  unmountAndReleaseReactRootNode: function() {
    if ("production" !== "development") {
      console.warn(
        'unmountAndReleaseReactRootNode() has been renamed to ' +
        'unmountComponentAtNode() and will be removed in the next ' +
        'version of React.'
      );
    }
    return ReactMount.unmountComponentAtNode.apply(this, arguments);
  },

  /**
   * Unmounts a component and removes it from the DOM.
   *
   * @param {ReactComponent} instance React component instance.
   * @param {DOMElement} container DOM element to unmount from.
   * @final
   * @internal
   * @see {ReactMount.unmountComponentAtNode}
   */
  unmountComponentFromNode: function(instance, container) {
    instance.unmountComponent();

    if (container.nodeType === DOC_NODE_TYPE) {
      container = container.documentElement;
    }

    // http://jsperf.com/emptying-a-node
    while (container.lastChild) {
      container.removeChild(container.lastChild);
    }
  },

  /**
   * Finds the container DOM element that contains React component to which the
   * supplied DOM `id` belongs.
   *
   * @param {string} id The ID of an element rendered by a React component.
   * @return {?DOMElement} DOM element that contains the `id`.
   */
  findReactContainerForID: function(id) {
    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
    var container = containersByReactRootID[reactRootID];

    if ("production" !== "development") {
      var rootElement = rootElementsByReactRootID[reactRootID];
      if (rootElement && rootElement.parentNode !== container) {
        ("production" !== "development" ? invariant(
          // Call internalGetID here because getID calls isValid which calls
          // findReactContainerForID (this function).
          internalGetID(rootElement) === reactRootID,
          'ReactMount: Root element ID differed from reactRootID.'
        ) : invariant(// Call internalGetID here because getID calls isValid which calls
        // findReactContainerForID (this function).
        internalGetID(rootElement) === reactRootID));

        var containerChild = container.firstChild;
        if (containerChild &&
            reactRootID === internalGetID(containerChild)) {
          // If the container has a new child with the same ID as the old
          // root element, then rootElementsByReactRootID[reactRootID] is
          // just stale and needs to be updated. The case that deserves a
          // warning is when the container is empty.
          rootElementsByReactRootID[reactRootID] = containerChild;
        } else {
          console.warn(
            'ReactMount: Root element has been removed from its original ' +
            'container. New container:', rootElement.parentNode
          );
        }
      }
    }

    return container;
  },

  /**
   * Finds an element rendered by React with the supplied ID.
   *
   * @param {string} id ID of a DOM node in the React component.
   * @return {DOMElement} Root DOM node of the React component.
   */
  findReactNodeByID: function(id) {
    var reactRoot = ReactMount.findReactContainerForID(id);
    return ReactMount.findComponentRoot(reactRoot, id);
  },

  /**
   * True if the supplied `node` is rendered by React.
   *
   * @param {*} node DOM Element to check.
   * @return {boolean} True if the DOM Element appears to be rendered by React.
   * @internal
   */
  isRenderedByReact: function(node) {
    if (node.nodeType !== 1) {
      // Not a DOMElement, therefore not a React component
      return false;
    }
    var id = ReactMount.getID(node);
    return id ? id.charAt(0) === SEPARATOR : false;
  },

  /**
   * Traverses up the ancestors of the supplied node to find a node that is a
   * DOM representation of a React component.
   *
   * @param {*} node
   * @return {?DOMEventTarget}
   * @internal
   */
  getFirstReactDOM: function(node) {
    var current = node;
    while (current && current.parentNode !== current) {
      if (ReactMount.isRenderedByReact(current)) {
        return current;
      }
      current = current.parentNode;
    }
    return null;
  },

  /**
   * Finds a node with the supplied `id` inside of the supplied `ancestorNode`.
   * Exploits the ID naming scheme to perform the search quickly.
   *
   * @param {DOMEventTarget} ancestorNode Search from this root.
   * @pararm {string} id ID of the DOM representation of the component.
   * @return {DOMEventTarget} DOM node with the supplied `id`.
   * @internal
   */
  findComponentRoot: function(ancestorNode, id) {
    var firstChildren = [ancestorNode.firstChild];
    var childIndex = 0;

    while (childIndex < firstChildren.length) {
      var child = firstChildren[childIndex++];
      while (child) {
        var childID = ReactMount.getID(child);
        if (childID) {
          if (id === childID) {
            return child;
          } else if (ReactInstanceHandles.isAncestorIDOf(childID, id)) {
            // If we find a child whose ID is an ancestor of the given ID,
            // then we can be sure that we only want to search the subtree
            // rooted at this child, so we can throw out the rest of the
            // search state.
            firstChildren.length = childIndex = 0;
            firstChildren.push(child.firstChild);
            break;
          } else {
            // TODO This should not be necessary if the ID hierarchy is
            // correct, but is occasionally necessary if the DOM has been
            // modified in unexpected ways.
            firstChildren.push(child.firstChild);
          }
        } else {
          // If this child had no ID, then there's a chance that it was
          // injected automatically by the browser, as when a `<table>`
          // element sprouts an extra `<tbody>` child as a side effect of
          // `.innerHTML` parsing. Optimistically continue down this
          // branch, but not before examining the other siblings.
          firstChildren.push(child.firstChild);
        }
        child = child.nextSibling;
      }
    }

    if ("production" !== "development") {
      console.error(
        'Error while invoking `findComponentRoot` with the following ' +
        'ancestor node:',
        ancestorNode
      );
    }
    ("production" !== "development" ? invariant(
      false,
      'findComponentRoot(..., %s): Unable to find element. This probably ' +
      'means the DOM was unexpectedly mutated (e.g. by the browser).',
      id,
      ReactMount.getID(ancestorNode)
    ) : invariant(false));
  },


  /**
   * React ID utilities.
   */

  ATTR_NAME: ATTR_NAME,

  getReactRootID: getReactRootID,

  getID: getID,

  setID: setID,

  getNode: getNode,

  purgeID: purgeID,

  injection: {}
};

module.exports = ReactMount;

},{"./$":1,"./ReactEventEmitter":44,"./ReactInstanceHandles":48,"./containsNode":77,"./getReactRootElementInContainer":94,"./invariant":98}],51:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactMountReady
 */

"use strict";

var PooledClass = require("./PooledClass");

var mixInto = require("./mixInto");

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `ReactMountReady.getPooled()`.
 *
 * @param {?array<function>} initialCollection
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */
function ReactMountReady(initialCollection) {
  this._queue = initialCollection || null;
}

mixInto(ReactMountReady, {

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked. This is used
   * to enqueue calls to `componentDidMount` and `componentDidUpdate`.
   *
   * @param {ReactComponent} component Component being rendered.
   * @param {function(DOMElement)} callback Invoked when `notifyAll` is invoked.
   * @internal
   */
  enqueue: function(component, callback) {
    this._queue = this._queue || [];
    this._queue.push({component: component, callback: callback});
  },

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */
  notifyAll: function() {
    var queue = this._queue;
    if (queue) {
      this._queue = null;
      for (var i = 0, l = queue.length; i < l; i++) {
        var component = queue[i].component;
        var callback = queue[i].callback;
        callback.call(component, component.getDOMNode());
      }
      queue.length = 0;
    }
  },

  /**
   * Resets the internal queue.
   *
   * @internal
   */
  reset: function() {
    this._queue = null;
  },

  /**
   * `PooledClass` looks for this.
   */
  destructor: function() {
    this.reset();
  }

});

PooledClass.addPoolingTo(ReactMountReady);

module.exports = ReactMountReady;

},{"./PooledClass":23,"./mixInto":110}],52:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactMultiChild
 * @typechecks static-only
 */

"use strict";

var ReactComponent = require("./ReactComponent");
var ReactMultiChildUpdateTypes = require("./ReactMultiChildUpdateTypes");

var flattenChildren = require("./flattenChildren");

/**
 * Given a `curChild` and `newChild`, determines if `curChild` should be
 * updated as opposed to being destroyed or replaced.
 *
 * @param {?ReactComponent} curChild
 * @param {?ReactComponent} newChild
 * @return {boolean} True if `curChild` should be updated with `newChild`.
 * @protected
 */
function shouldUpdateChild(curChild, newChild) {
  return curChild && newChild && curChild.constructor === newChild.constructor;
}

/**
 * Updating children of a component may trigger recursive updates. The depth is
 * used to batch recursive updates to render markup more efficiently.
 *
 * @type {number}
 * @private
 */
var updateDepth = 0;

/**
 * Queue of update configuration objects.
 *
 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
 *
 * @type {array<object>}
 * @private
 */
var updateQueue = [];

/**
 * Queue of markup to be rendered.
 *
 * @type {array<string>}
 * @private
 */
var markupQueue = [];

/**
 * Enqueues markup to be rendered and inserted at a supplied index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function enqueueMarkup(parentID, markup, toIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
    markupIndex: markupQueue.push(markup) - 1,
    textContent: null,
    fromIndex: null,
    toIndex: toIndex
  });
}

/**
 * Enqueues moving an existing element to another index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function enqueueMove(parentID, fromIndex, toIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
    markupIndex: null,
    textContent: null,
    fromIndex: fromIndex,
    toIndex: toIndex
  });
}

/**
 * Enqueues removing an element at an index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function enqueueRemove(parentID, fromIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
    markupIndex: null,
    textContent: null,
    fromIndex: fromIndex,
    toIndex: null
  });
}

/**
 * Enqueues setting the text content.
 *
 * @param {string} parentID ID of the parent component.
 * @param {string} textContent Text content to set.
 * @private
 */
function enqueueTextContent(parentID, textContent) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
    markupIndex: null,
    textContent: textContent,
    fromIndex: null,
    toIndex: null
  });
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue() {
  if (updateQueue.length) {
    ReactComponent.DOMIDOperations.dangerouslyProcessChildrenUpdates(
      updateQueue,
      markupQueue
    );
    clearQueue();
  }
}

/**
 * Clears any enqueued updates.
 *
 * @private
 */
function clearQueue() {
  updateQueue.length = 0;
  markupQueue.length = 0;
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {

  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function(nestedChildren, transaction) {
      var children = flattenChildren(nestedChildren);
      var mountImages = [];
      var index = 0;
      this._renderedChildren = children;
      for (var name in children) {
        var child = children[name];
        if (children.hasOwnProperty(name) && child) {
          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
          var rootID = this._rootNodeID + '.' + name;
          var mountImage = child.mountComponent(
            rootID,
            transaction,
            this._mountDepth + 1
          );
          child._mountImage = mountImage;
          child._mountIndex = index;
          mountImages.push(mountImage);
          index++;
        }
      }
      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function(nextContent) {
      updateDepth++;
      try {
        var prevChildren = this._renderedChildren;
        // Remove any rendered children.
        for (var name in prevChildren) {
          if (prevChildren.hasOwnProperty(name) &&
              prevChildren[name]) {
            this._unmountChildByName(prevChildren[name], name);
          }
        }
        // Set new text content.
        this.setTextContent(nextContent);
      } catch (error) {
        updateDepth--;
        updateDepth || clearQueue();
        throw error;
      }
      updateDepth--;
      updateDepth || processQueue();
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildren Nested child maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function(nextNestedChildren, transaction) {
      updateDepth++;
      try {
        this._updateChildren(nextNestedChildren, transaction);
      } catch (error) {
        updateDepth--;
        updateDepth || clearQueue();
        throw error;
      }
      updateDepth--;
      updateDepth || processQueue();
    },

    /**
     * Improve performance by isolating this hot code path from the try/catch
     * block in `updateChildren`.
     *
     * @param {?object} nextNestedChildren Nested child maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function(nextNestedChildren, transaction) {
      var nextChildren = flattenChildren(nextNestedChildren);
      var prevChildren = this._renderedChildren;
      if (!nextChildren && !prevChildren) {
        return;
      }
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var lastIndex = 0;
      var nextIndex = 0;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (shouldUpdateChild(prevChild, nextChild)) {
          this.moveChild(prevChild, nextIndex, lastIndex);
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild.receiveComponent(nextChild, transaction);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            this._unmountChildByName(prevChild, name);
          }
          if (nextChild) {
            this._mountChildByNameAtIndex(
              nextChild, name, nextIndex, transaction
            );
          }
        }
        if (nextChild) {
          nextIndex++;
        }
      }
      // Remove children that are no longer present.
      for (name in prevChildren) {
        if (prevChildren.hasOwnProperty(name) &&
            prevChildren[name] &&
            !(nextChildren && nextChildren[name])) {
          this._unmountChildByName(prevChildren[name], name);
        }
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted.
     *
     * @internal
     */
    unmountChildren: function() {
      var renderedChildren = this._renderedChildren;
      for (var name in renderedChildren) {
        var renderedChild = renderedChildren[name];
        if (renderedChild && renderedChild.unmountComponent) {
          renderedChild.unmountComponent();
        }
      }
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function(child, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @protected
     */
    createChild: function(child) {
      enqueueMarkup(this._rootNodeID, child._mountImage, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function(child) {
      enqueueRemove(this._rootNodeID, child._mountIndex);
    },

    /**
     * Sets this text content string.
     *
     * @param {string} textContent Text content to set.
     * @protected
     */
    setTextContent: function(textContent) {
      enqueueTextContent(this._rootNodeID, textContent);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildByNameAtIndex: function(child, name, index, transaction) {
      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
      var rootID = this._rootNodeID + '.' + name;
      var mountImage = child.mountComponent(
        rootID,
        transaction,
        this._mountDepth + 1
      );
      child._mountImage = mountImage;
      child._mountIndex = index;
      this.createChild(child);
      this._renderedChildren = this._renderedChildren || {};
      this._renderedChildren[name] = child;
    },

    /**
     * Unmounts a rendered child by name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @param {string} name Name of the child in `this._renderedChildren`.
     * @private
     */
    _unmountChildByName: function(child, name) {
      if (ReactComponent.isValidComponent(child)) {
        this.removeChild(child);
        child._mountImage = null;
        child._mountIndex = null;
        child.unmountComponent();
        delete this._renderedChildren[name];
      }
    }

  }

};

module.exports = ReactMultiChild;

},{"./ReactComponent":25,"./ReactMultiChildUpdateTypes":53,"./flattenChildren":87}],53:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactMultiChildUpdateTypes
 */

var keyMirror = require("./keyMirror");

/**
 * When a component's children are updated, a series of update configuration
 * objects are created in order to batch and serialize the required changes.
 *
 * Enumerates all the possible types of update configurations.
 *
 * @internal
 */
var ReactMultiChildUpdateTypes = keyMirror({
  INSERT_MARKUP: null,
  MOVE_EXISTING: null,
  REMOVE_NODE: null,
  TEXT_CONTENT: null
});

module.exports = ReactMultiChildUpdateTypes;

},{"./keyMirror":104}],54:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactOwner
 */

"use strict";

var invariant = require("./invariant");

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {

  /**
   * @param {?object} object
   * @return {boolean} True if `object` is a valid owner.
   * @final
   */
  isValidOwner: function(object) {
    return !!(
      object &&
      typeof object.attachRef === 'function' &&
      typeof object.detachRef === 'function'
    );
  },

  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function(component, ref, owner) {
    ("production" !== "development" ? invariant(
      ReactOwner.isValidOwner(owner),
      'addComponentAsRefTo(...): Only a ReactOwner can have refs.'
    ) : invariant(ReactOwner.isValidOwner(owner)));
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function(component, ref, owner) {
    ("production" !== "development" ? invariant(
      ReactOwner.isValidOwner(owner),
      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs.'
    ) : invariant(ReactOwner.isValidOwner(owner)));
    // Check that `component` is still the current ref because we do not want to
    // detach the ref if another component stole it.
    if (owner.refs[ref] === component) {
      owner.detachRef(ref);
    }
  },

  /**
   * A ReactComponent must mix this in to have refs.
   *
   * @lends {ReactOwner.prototype}
   */
  Mixin: {

    /**
     * Lazily allocates the refs object and stores `component` as `ref`.
     *
     * @param {string} ref Reference name.
     * @param {component} component Component to store as `ref`.
     * @final
     * @private
     */
    attachRef: function(ref, component) {
      ("production" !== "development" ? invariant(
        component.isOwnedBy(this),
        'attachRef(%s, ...): Only a component\'s owner can store a ref to it.',
        ref
      ) : invariant(component.isOwnedBy(this)));
      var refs = this.refs || (this.refs = {});
      refs[ref] = component;
    },

    /**
     * Detaches a reference name.
     *
     * @param {string} ref Name to dereference.
     * @final
     * @private
     */
    detachRef: function(ref) {
      delete this.refs[ref];
    }

  }

};

module.exports = ReactOwner;

},{"./invariant":98}],55:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactPerf
 * @typechecks static-only
 */

"use strict";

var ReactPerf = {
  /**
   * Boolean to enable/disable measurement. Set to false by default to prevent
   * accidental logging and perf loss.
   */
  enableMeasure: false,

  /**
   * Holds onto the measure function in use. By default, don't measure
   * anything, but we'll override this if we inject a measure function.
   */
  storedMeasure: _noMeasure,

  /**
   * Use this to wrap methods you want to measure.
   *
   * @param {string} objName
   * @param {string} fnName
   * @param {function} func
   * @return {function}
   */
  measure: function(objName, fnName, func) {
    if ("production" !== "development") {
      var measuredFunc = null;
      return function() {
        if (ReactPerf.enableMeasure) {
          if (!measuredFunc) {
            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
          }
          return measuredFunc.apply(this, arguments);
        }
        return func.apply(this, arguments);
      };
    }
    return func;
  },

  injection: {
    /**
     * @param {function} measure
     */
    injectMeasure: function(measure) {
      ReactPerf.storedMeasure = measure;
    }
  }
};

if ("production" !== "development") {
  var ExecutionEnvironment = require("./ExecutionEnvironment");
  var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';
  ReactPerf.enableMeasure = ReactPerf.enableMeasure ||
    (/[?&]react_perf\b/).test(url);
}

/**
 * Simply passes through the measured function, without measuring it.
 *
 * @param {string} objName
 * @param {string} fnName
 * @param {function} func
 * @return {function}
 */
function _noMeasure(objName, fnName, func) {
  return func;
}

module.exports = ReactPerf;

},{"./ExecutionEnvironment":20}],56:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactPropTransferer
 */

"use strict";

var emptyFunction = require("./emptyFunction");
var invariant = require("./invariant");
var joinClasses = require("./joinClasses");
var merge = require("./merge");

/**
 * Creates a transfer strategy that will merge prop values using the supplied
 * `mergeStrategy`. If a prop was previously unset, this just sets it.
 *
 * @param {function} mergeStrategy
 * @return {function}
 */
function createTransferStrategy(mergeStrategy) {
  return function(props, key, value) {
    if (!props.hasOwnProperty(key)) {
      props[key] = value;
    } else {
      props[key] = mergeStrategy(props[key], value);
    }
  };
}

/**
 * Transfer strategies dictate how props are transferred by `transferPropsTo`.
 */
var TransferStrategies = {
  /**
   * Never transfer `children`.
   */
  children: emptyFunction,
  /**
   * Transfer the `className` prop by merging them.
   */
  className: createTransferStrategy(joinClasses),
  /**
   * Never transfer the `ref` prop.
   */
  ref: emptyFunction,
  /**
   * Transfer the `style` prop (which is an object) by merging them.
   */
  style: createTransferStrategy(merge)
};

/**
 * ReactPropTransferer are capable of transferring props to another component
 * using a `transferPropsTo` method.
 *
 * @class ReactPropTransferer
 */
var ReactPropTransferer = {

  TransferStrategies: TransferStrategies,

  /**
   * @lends {ReactPropTransferer.prototype}
   */
  Mixin: {

    /**
     * Transfer props from this component to a target component.
     *
     * Props that do not have an explicit transfer strategy will be transferred
     * only if the target component does not already have the prop set.
     *
     * This is usually used to pass down props to a returned root component.
     *
     * @param {ReactComponent} component Component receiving the properties.
     * @return {ReactComponent} The supplied `component`.
     * @final
     * @protected
     */
    transferPropsTo: function(component) {
      ("production" !== "development" ? invariant(
        component.props.__owner__ === this,
        '%s: You can\'t call transferPropsTo() on a component that you ' +
        'don\'t own, %s. This usually means you are calling ' +
        'transferPropsTo() on a component passed in as props or children.',
        this.constructor.displayName,
        component.constructor.displayName
      ) : invariant(component.props.__owner__ === this));

      var props = {};
      for (var thatKey in component.props) {
        if (component.props.hasOwnProperty(thatKey)) {
          props[thatKey] = component.props[thatKey];
        }
      }
      for (var thisKey in this.props) {
        if (!this.props.hasOwnProperty(thisKey)) {
          continue;
        }
        var transferStrategy = TransferStrategies[thisKey];
        if (transferStrategy) {
          transferStrategy(props, thisKey, this.props[thisKey]);
        } else if (!props.hasOwnProperty(thisKey)) {
          props[thisKey] = this.props[thisKey];
        }
      }
      component.props = props;
      return component;
    }

  }

};

module.exports = ReactPropTransferer;

},{"./emptyFunction":83,"./invariant":98,"./joinClasses":103,"./merge":107}],57:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactPropTypes
 */

"use strict";

var createObjectFrom = require("./createObjectFrom");
var invariant = require("./invariant");

/**
 * Collection of methods that allow declaration and validation of props that are
 * supplied to React components. Example usage:
 *
 *   var Props = require('ReactPropTypes');
 *   var MyArticle = React.createClass({
 *     propTypes: {
 *       // An optional string prop named "description".
 *       description: Props.string,
 *
 *       // A required enum prop named "category".
 *       category: Props.oneOf(['News','Photos']).isRequired,
 *
 *       // A prop named "dialog" that requires an instance of Dialog.
 *       dialog: Props.instanceOf(Dialog).isRequired
 *     },
 *     render: function() { ... }
 *   });
 *
 * A more formal specification of how these methods are used:
 *
 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
 *   decl := ReactPropTypes.{type}(.isRequired)?
 *
 * Each and every declaration produces a function with the same signature. This
 * allows the creation of custom validation functions. For example:
 *
 *   var Props = require('ReactPropTypes');
 *   var MyLink = React.createClass({
 *     propTypes: {
 *       // An optional string or URI prop named "href".
 *       href: function(props, propName, componentName) {
 *         var propValue = props[propName];
 *         invariant(
 *           propValue == null ||
 *           typeof propValue === 'string' ||
 *           propValue instanceof URI,
 *           'Invalid `%s` supplied to `%s`, expected string or URI.',
 *           propName,
 *           componentName
 *         );
 *       }
 *     },
 *     render: function() { ... }
 *   });
 *
 * @internal
 */
var Props = {

  array: createPrimitiveTypeChecker('array'),
  bool: createPrimitiveTypeChecker('boolean'),
  func: createPrimitiveTypeChecker('function'),
  number: createPrimitiveTypeChecker('number'),
  object: createPrimitiveTypeChecker('object'),
  string: createPrimitiveTypeChecker('string'),

  oneOf: createEnumTypeChecker,

  instanceOf: createInstanceTypeChecker

};

var ANONYMOUS = '<<anonymous>>';

function createPrimitiveTypeChecker(expectedType) {
  function validatePrimitiveType(propValue, propName, componentName) {
    var propType = typeof propValue;
    if (propType === 'object' && Array.isArray(propValue)) {
      propType = 'array';
    }
    ("production" !== "development" ? invariant(
      propType === expectedType,
      'Invalid prop `%s` of type `%s` supplied to `%s`, expected `%s`.',
      propName,
      propType,
      componentName,
      expectedType
    ) : invariant(propType === expectedType));
  }
  return createChainableTypeChecker(validatePrimitiveType);
}

function createEnumTypeChecker(expectedValues) {
  var expectedEnum = createObjectFrom(expectedValues);
  function validateEnumType(propValue, propName, componentName) {
    ("production" !== "development" ? invariant(
      expectedEnum[propValue],
      'Invalid prop `%s` supplied to `%s`, expected one of %s.',
      propName,
      componentName,
      JSON.stringify(Object.keys(expectedEnum))
    ) : invariant(expectedEnum[propValue]));
  }
  return createChainableTypeChecker(validateEnumType);
}

function createInstanceTypeChecker(expectedClass) {
  function validateInstanceType(propValue, propName, componentName) {
    ("production" !== "development" ? invariant(
      propValue instanceof expectedClass,
      'Invalid prop `%s` supplied to `%s`, expected instance of `%s`.',
      propName,
      componentName,
      expectedClass.name || ANONYMOUS
    ) : invariant(propValue instanceof expectedClass));
  }
  return createChainableTypeChecker(validateInstanceType);
}

function createChainableTypeChecker(validate) {
  function createTypeChecker(isRequired) {
    function checkType(props, propName, componentName) {
      var propValue = props[propName];
      if (propValue != null) {
        // Only validate if there is a value to check.
        validate(propValue, propName, componentName || ANONYMOUS);
      } else {
        ("production" !== "development" ? invariant(
          !isRequired,
          'Required prop `%s` was not specified in `%s`.',
          propName,
          componentName || ANONYMOUS
        ) : invariant(!isRequired));
      }
    }
    if (!isRequired) {
      checkType.isRequired = createTypeChecker(true);
    }
    return checkType;
  }
  return createTypeChecker(false);
}

module.exports = Props;

},{"./createObjectFrom":81,"./invariant":98}],58:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactReconcileTransaction
 * @typechecks static-only
 */

"use strict";

var ExecutionEnvironment = require("./ExecutionEnvironment");
var PooledClass = require("./PooledClass");
var ReactEventEmitter = require("./ReactEventEmitter");
var ReactInputSelection = require("./ReactInputSelection");
var ReactMountReady = require("./ReactMountReady");
var Transaction = require("./Transaction");

var mixInto = require("./mixInto");

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactEventEmitter` before the
   * reconciliation.
   */
  initialize: function() {
    var currentlyEnabled = ReactEventEmitter.isEnabled();
    ReactEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of `ReactEventEmitter`
   *   before the reconciliation occured. `close` restores the previous value.
   */
  close: function(previouslyEnabled) {
    ReactEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a `ReactMountReady` queue for collecting `onDOMReady` callbacks
 * during the performing of the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function() {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function() {
    this.reactMountReady.notifyAll();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [
  SELECTION_RESTORATION,
  EVENT_SUPPRESSION,
  ON_DOM_READY_QUEUEING
];

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction() {
  this.reinitializeTransaction();
  this.reactMountReady = ReactMountReady.getPooled(null);
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap proceedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function() {
    if (ExecutionEnvironment.canUseDOM) {
      return TRANSACTION_WRAPPERS;
    } else {
      return [];
    }
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   *   TODO: convert to ReactMountReady
   */
  getReactMountReady: function() {
    return this.reactMountReady;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be resused.
   */
  destructor: function() {
    ReactMountReady.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};


mixInto(ReactReconcileTransaction, Transaction.Mixin);
mixInto(ReactReconcileTransaction, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;

},{"./ExecutionEnvironment":20,"./PooledClass":23,"./ReactEventEmitter":44,"./ReactInputSelection":47,"./ReactMountReady":51,"./Transaction":73,"./mixInto":110}],59:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @typechecks static-only
 * @providesModule ReactServerRendering
 */
"use strict";

var ReactComponent = require("./ReactComponent");
var ReactInstanceHandles = require("./ReactInstanceHandles");
var ReactMarkupChecksum = require("./ReactMarkupChecksum");
var ReactReconcileTransaction = require("./ReactReconcileTransaction");

var invariant = require("./invariant");

/**
 * @param {ReactComponent} component
 * @param {function} callback
 */
function renderComponentToString(component, callback) {
  // We use a callback API to keep the API async in case in the future we ever
  // need it, but in reality this is a synchronous operation.

  ("production" !== "development" ? invariant(
    ReactComponent.isValidComponent(component),
    'renderComponentToString(): You must pass a valid ReactComponent.'
  ) : invariant(ReactComponent.isValidComponent(component)));

  ("production" !== "development" ? invariant(
    typeof callback === 'function',
    'renderComponentToString(): You must pass a function as a callback.'
  ) : invariant(typeof callback === 'function'));

  var id = ReactInstanceHandles.createReactRootID();
  var transaction = ReactReconcileTransaction.getPooled();
  transaction.reinitializeTransaction();
  try {
    transaction.perform(function() {
      var markup = component.mountComponent(id, transaction, 0);
      markup = ReactMarkupChecksum.addChecksumToMarkup(markup);
      callback(markup);
    }, null);
  } finally {
    ReactReconcileTransaction.release(transaction);
  }
}

module.exports = {
  renderComponentToString: renderComponentToString
};

},{"./ReactComponent":25,"./ReactInstanceHandles":48,"./ReactMarkupChecksum":49,"./ReactReconcileTransaction":58,"./invariant":98}],60:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactTextComponent
 * @typechecks static-only
 */

"use strict";

var ReactComponent = require("./ReactComponent");
var ReactMount = require("./ReactMount");

var escapeTextForBrowser = require("./escapeTextForBrowser");
var mixInto = require("./mixInto");

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings in elements so that they can undergo
 * the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactTextComponent = function(initialText) {
  this.construct({text: initialText});
};

mixInto(ReactTextComponent, ReactComponent.Mixin);
mixInto(ReactTextComponent, {

  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {string} rootID DOM ID of the root node.
   * @param {ReactReconcileTransaction} transaction
   * @param {number} mountDepth number of components in the owner hierarchy
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function(rootID, transaction, mountDepth) {
    ReactComponent.Mixin.mountComponent.call(
      this,
      rootID,
      transaction,
      mountDepth
    );
    return (
      '<span ' + ReactMount.ATTR_NAME + '="' + escapeTextForBrowser(rootID) + '">' +
        escapeTextForBrowser(this.props.text) +
      '</span>'
    );
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {object} nextComponent Contains the next text content.
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function(nextComponent, transaction) {
    var nextProps = nextComponent.props;
    if (nextProps.text !== this.props.text) {
      this.props.text = nextProps.text;
      ReactComponent.DOMIDOperations.updateTextContentByID(
        this._rootNodeID,
        nextProps.text
      );
    }
  }

});

module.exports = ReactTextComponent;

},{"./ReactComponent":25,"./ReactMount":50,"./escapeTextForBrowser":84,"./mixInto":110}],61:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ReactUpdates
 */

"use strict";

var invariant = require("./invariant");

var dirtyComponents = [];

var batchingStrategy = null;

function ensureBatchingStrategy() {
  ("production" !== "development" ? invariant(batchingStrategy, 'ReactUpdates: must inject a batching strategy') : invariant(batchingStrategy));
}

function batchedUpdates(callback, param) {
  ensureBatchingStrategy();
  batchingStrategy.batchedUpdates(callback, param);
}

/**
 * Array comparator for ReactComponents by owner depth
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountDepthComparator(c1, c2) {
  return c1._mountDepth - c2._mountDepth;
}

function runBatchedUpdates() {
  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.

  dirtyComponents.sort(mountDepthComparator);

  for (var i = 0; i < dirtyComponents.length; i++) {
    // If a component is unmounted before pending changes apply, ignore them
    // TODO: Queue unmounts in the same list to avoid this happening at all
    var component = dirtyComponents[i];
    if (component.isMounted()) {
      // If performUpdateIfNecessary happens to enqueue any new updates, we
      // shouldn't execute the callbacks until the next render happens, so
      // stash the callbacks first
      var callbacks = component._pendingCallbacks;
      component._pendingCallbacks = null;
      component.performUpdateIfNecessary();
      if (callbacks) {
        for (var j = 0; j < callbacks.length; j++) {
          callbacks[j].call(component);
        }
      }
    }
  }
}

function clearDirtyComponents() {
  dirtyComponents.length = 0;
}

function flushBatchedUpdates() {
  // Run these in separate functions so the JIT can optimize
  try {
    runBatchedUpdates();
  } catch (e) {
    // IE 8 requires catch to use finally.
    throw e;
  } finally {
    clearDirtyComponents();
  }
}

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component, callback) {
  ("production" !== "development" ? invariant(
    !callback || typeof callback === "function",
    'enqueueUpdate(...): You called `setProps`, `replaceProps`, ' +
    '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
    'isn\'t callable.'
  ) : invariant(!callback || typeof callback === "function"));
  ensureBatchingStrategy();

  if (!batchingStrategy.isBatchingUpdates) {
    component.performUpdateIfNecessary();
    callback && callback();
    return;
  }

  dirtyComponents.push(component);

  if (callback) {
    if (component._pendingCallbacks) {
      component._pendingCallbacks.push(callback);
    } else {
      component._pendingCallbacks = [callback];
    }
  }
}

var ReactUpdatesInjection = {
  injectBatchingStrategy: function(_batchingStrategy) {
    ("production" !== "development" ? invariant(
      _batchingStrategy,
      'ReactUpdates: must provide a batching strategy'
    ) : invariant(_batchingStrategy));
    ("production" !== "development" ? invariant(
      typeof _batchingStrategy.batchedUpdates === 'function',
      'ReactUpdates: must provide a batchedUpdates() function'
    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));
    ("production" !== "development" ? invariant(
      typeof _batchingStrategy.isBatchingUpdates === 'boolean',
      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'
    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection
};

module.exports = ReactUpdates;

},{"./invariant":98}],62:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SelectEventPlugin
 */

"use strict";

var EventConstants = require("./EventConstants");
var EventPluginHub = require("./EventPluginHub");
var EventPropagators = require("./EventPropagators");
var ExecutionEnvironment = require("./ExecutionEnvironment");
var ReactInputSelection = require("./ReactInputSelection");
var SyntheticEvent = require("./SyntheticEvent");

var getActiveElement = require("./getActiveElement");
var isTextInputElement = require("./isTextInputElement");
var keyOf = require("./keyOf");
var shallowEqual = require("./shallowEqual");

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: keyOf({onSelect: null}),
      captured: keyOf({onSelectCapture: null})
    }
  }
};

var useSelectionChange = false;

if (ExecutionEnvironment.canUseDOM) {
  useSelectionChange = 'onselectionchange' in document;
}

var activeElement = null;
var activeElementID = null;
var activeNativeEvent = null;
var lastSelection = null;
var mouseDown = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @param {object}
 */
function getSelection(node) {
  if ('selectionStart' in node &&
      ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  } else {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior).
  if (mouseDown || activeElement != getActiveElement()) {
    return;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(
      eventTypes.select,
      activeElementID,
      nativeEvent
    );

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }
}

/**
 * Handle deferred event. And manually dispatch synthetic events.
 */
function dispatchDeferredSelectEvent() {
  if (!activeNativeEvent) {
    return;
  }

  var syntheticEvent = constructSelectEvent(activeNativeEvent);
  activeNativeEvent = null;

  // Enqueue and process the abstract event manually.
  if (syntheticEvent) {
    EventPluginHub.enqueueEvents(syntheticEvent);
    EventPluginHub.processEventQueue();
  }
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    switch (topLevelType) {
      // Track the input node that has focus.
      case topLevelTypes.topFocus:
        if (isTextInputElement(topLevelTarget) ||
            topLevelTarget.contentEditable === 'true') {
          activeElement = topLevelTarget;
          activeElementID = topLevelTargetID;
          lastSelection = null;
        }
        break;
      case topLevelTypes.topBlur:
        activeElement = null;
        activeElementID = null;
        lastSelection = null;
        break;

      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case topLevelTypes.topMouseDown:
        mouseDown = true;
        break;
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topMouseUp:
        mouseDown = false;
        return constructSelectEvent(nativeEvent);

      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't).
      case topLevelTypes.topSelectionChange:
        return constructSelectEvent(nativeEvent);

      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry.
      case topLevelTypes.topKeyDown:
        if (!useSelectionChange) {
          activeNativeEvent = nativeEvent;
          setTimeout(dispatchDeferredSelectEvent, 0);
        }
        break;
    }
  }
};

module.exports = SelectEventPlugin;

},{"./EventConstants":14,"./EventPluginHub":16,"./EventPropagators":19,"./ExecutionEnvironment":20,"./ReactInputSelection":47,"./SyntheticEvent":66,"./getActiveElement":90,"./isTextInputElement":101,"./keyOf":105,"./shallowEqual":115}],63:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SimpleEventPlugin
 */

"use strict";

var EventConstants = require("./EventConstants");
var EventPropagators = require("./EventPropagators");
var SyntheticClipboardEvent = require("./SyntheticClipboardEvent");
var SyntheticEvent = require("./SyntheticEvent");
var SyntheticFocusEvent = require("./SyntheticFocusEvent");
var SyntheticKeyboardEvent = require("./SyntheticKeyboardEvent");
var SyntheticMouseEvent = require("./SyntheticMouseEvent");
var SyntheticTouchEvent = require("./SyntheticTouchEvent");
var SyntheticUIEvent = require("./SyntheticUIEvent");
var SyntheticWheelEvent = require("./SyntheticWheelEvent");

var invariant = require("./invariant");
var keyOf = require("./keyOf");

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  blur: {
    phasedRegistrationNames: {
      bubbled: keyOf({onBlur: true}),
      captured: keyOf({onBlurCapture: true})
    }
  },
  click: {
    phasedRegistrationNames: {
      bubbled: keyOf({onClick: true}),
      captured: keyOf({onClickCapture: true})
    }
  },
  contextMenu: {
    phasedRegistrationNames: {
      bubbled: keyOf({onContextMenu: true}),
      captured: keyOf({onContextMenuCapture: true})
    }
  },
  copy: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCopy: true}),
      captured: keyOf({onCopyCapture: true})
    }
  },
  cut: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCut: true}),
      captured: keyOf({onCutCapture: true})
    }
  },
  doubleClick: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDoubleClick: true}),
      captured: keyOf({onDoubleClickCapture: true})
    }
  },
  drag: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDrag: true}),
      captured: keyOf({onDragCapture: true})
    }
  },
  dragEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragEnd: true}),
      captured: keyOf({onDragEndCapture: true})
    }
  },
  dragEnter: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragEnter: true}),
      captured: keyOf({onDragEnterCapture: true})
    }
  },
  dragExit: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragExit: true}),
      captured: keyOf({onDragExitCapture: true})
    }
  },
  dragLeave: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragLeave: true}),
      captured: keyOf({onDragLeaveCapture: true})
    }
  },
  dragOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragOver: true}),
      captured: keyOf({onDragOverCapture: true})
    }
  },
  dragStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragStart: true}),
      captured: keyOf({onDragStartCapture: true})
    }
  },
  drop: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDrop: true}),
      captured: keyOf({onDropCapture: true})
    }
  },
  focus: {
    phasedRegistrationNames: {
      bubbled: keyOf({onFocus: true}),
      captured: keyOf({onFocusCapture: true})
    }
  },
  input: {
    phasedRegistrationNames: {
      bubbled: keyOf({onInput: true}),
      captured: keyOf({onInputCapture: true})
    }
  },
  keyDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyDown: true}),
      captured: keyOf({onKeyDownCapture: true})
    }
  },
  keyPress: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyPress: true}),
      captured: keyOf({onKeyPressCapture: true})
    }
  },
  keyUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyUp: true}),
      captured: keyOf({onKeyUpCapture: true})
    }
  },
  // Note: We do not allow listening to mouseOver events. Instead, use the
  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
  mouseDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseDown: true}),
      captured: keyOf({onMouseDownCapture: true})
    }
  },
  mouseMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseMove: true}),
      captured: keyOf({onMouseMoveCapture: true})
    }
  },
  mouseUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseUp: true}),
      captured: keyOf({onMouseUpCapture: true})
    }
  },
  paste: {
    phasedRegistrationNames: {
      bubbled: keyOf({onPaste: true}),
      captured: keyOf({onPasteCapture: true})
    }
  },
  scroll: {
    phasedRegistrationNames: {
      bubbled: keyOf({onScroll: true}),
      captured: keyOf({onScrollCapture: true})
    }
  },
  submit: {
    phasedRegistrationNames: {
      bubbled: keyOf({onSubmit: true}),
      captured: keyOf({onSubmitCapture: true})
    }
  },
  touchCancel: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchCancel: true}),
      captured: keyOf({onTouchCancelCapture: true})
    }
  },
  touchEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchEnd: true}),
      captured: keyOf({onTouchEndCapture: true})
    }
  },
  touchMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchMove: true}),
      captured: keyOf({onTouchMoveCapture: true})
    }
  },
  touchStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchStart: true}),
      captured: keyOf({onTouchStartCapture: true})
    }
  },
  wheel: {
    phasedRegistrationNames: {
      bubbled: keyOf({onWheel: true}),
      captured: keyOf({onWheelCapture: true})
    }
  }
};

var topLevelEventsToDispatchConfig = {
  topBlur:        eventTypes.blur,
  topClick:       eventTypes.click,
  topContextMenu: eventTypes.contextMenu,
  topCopy:        eventTypes.copy,
  topCut:         eventTypes.cut,
  topDoubleClick: eventTypes.doubleClick,
  topDrag:        eventTypes.drag,
  topDragEnd:     eventTypes.dragEnd,
  topDragEnter:   eventTypes.dragEnter,
  topDragExit:    eventTypes.dragExit,
  topDragLeave:   eventTypes.dragLeave,
  topDragOver:    eventTypes.dragOver,
  topDragStart:   eventTypes.dragStart,
  topDrop:        eventTypes.drop,
  topFocus:       eventTypes.focus,
  topInput:       eventTypes.input,
  topKeyDown:     eventTypes.keyDown,
  topKeyPress:    eventTypes.keyPress,
  topKeyUp:       eventTypes.keyUp,
  topMouseDown:   eventTypes.mouseDown,
  topMouseMove:   eventTypes.mouseMove,
  topMouseUp:     eventTypes.mouseUp,
  topPaste:       eventTypes.paste,
  topScroll:      eventTypes.scroll,
  topSubmit:      eventTypes.submit,
  topTouchCancel: eventTypes.touchCancel,
  topTouchEnd:    eventTypes.touchEnd,
  topTouchMove:   eventTypes.touchMove,
  topTouchStart:  eventTypes.touchStart,
  topWheel:       eventTypes.wheel
};

var SimpleEventPlugin = {

  eventTypes: eventTypes,

  /**
   * Same as the default implementation, except cancels the event when return
   * value is false.
   *
   * @param {object} Event to be dispatched.
   * @param {function} Application-level callback.
   * @param {string} domID DOM ID to pass to the callback.
   */
  executeDispatch: function(event, listener, domID) {
    var returnValue = listener(event, domID);
    if (returnValue === false) {
      event.stopPropagation();
      event.preventDefault();
    }
  },

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch(topLevelType) {
      case topLevelTypes.topInput:
      case topLevelTypes.topSubmit:
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyPress:
      case topLevelTypes.topKeyUp:
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case topLevelTypes.topBlur:
      case topLevelTypes.topFocus:
        EventConstructor = SyntheticFocusEvent;
        break;
      case topLevelTypes.topClick:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
        /* falls through */
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topDoubleClick:
      case topLevelTypes.topDrag:
      case topLevelTypes.topDragEnd:
      case topLevelTypes.topDragEnter:
      case topLevelTypes.topDragExit:
      case topLevelTypes.topDragLeave:
      case topLevelTypes.topDragOver:
      case topLevelTypes.topDragStart:
      case topLevelTypes.topDrop:
      case topLevelTypes.topMouseDown:
      case topLevelTypes.topMouseMove:
      case topLevelTypes.topMouseUp:
        EventConstructor = SyntheticMouseEvent;
        break;
      case topLevelTypes.topTouchCancel:
      case topLevelTypes.topTouchEnd:
      case topLevelTypes.topTouchMove:
      case topLevelTypes.topTouchStart:
        EventConstructor = SyntheticTouchEvent;
        break;
      case topLevelTypes.topScroll:
        EventConstructor = SyntheticUIEvent;
        break;
      case topLevelTypes.topWheel:
        EventConstructor = SyntheticWheelEvent;
        break;
      case topLevelTypes.topCopy:
      case topLevelTypes.topCut:
      case topLevelTypes.topPaste:
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    ("production" !== "development" ? invariant(
      EventConstructor,
      'SimpleEventPlugin: Unhandled event type, `%s`.',
      topLevelType
    ) : invariant(EventConstructor));
    var event = EventConstructor.getPooled(
      dispatchConfig,
      topLevelTargetID,
      nativeEvent
    );
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }

};

module.exports = SimpleEventPlugin;

},{"./EventConstants":14,"./EventPropagators":19,"./SyntheticClipboardEvent":64,"./SyntheticEvent":66,"./SyntheticFocusEvent":67,"./SyntheticKeyboardEvent":68,"./SyntheticMouseEvent":69,"./SyntheticTouchEvent":70,"./SyntheticUIEvent":71,"./SyntheticWheelEvent":72,"./invariant":98,"./keyOf":105}],64:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticClipboardEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticEvent = require("./SyntheticEvent");

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;


},{"./SyntheticEvent":66}],65:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticCompositionEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticEvent = require("./SyntheticEvent");

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(
  dispatchConfig,
  dispatchMarker,
  nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(
  SyntheticCompositionEvent,
  CompositionEventInterface
);

module.exports = SyntheticCompositionEvent;


},{"./SyntheticEvent":66}],66:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticEvent
 * @typechecks static-only
 */

"use strict";

var PooledClass = require("./PooledClass");

var emptyFunction = require("./emptyFunction");
var getEventTarget = require("./getEventTarget");
var merge = require("./merge");
var mergeInto = require("./mergeInto");

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: getEventTarget,
  currentTarget: null,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function(event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 */
function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  this.dispatchConfig = dispatchConfig;
  this.dispatchMarker = dispatchMarker;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      this[propName] = nativeEvent[propName];
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ?
    nativeEvent.defaultPrevented :
    nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
}

mergeInto(SyntheticEvent.prototype, {

  preventDefault: function() {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    event.preventDefault ? event.preventDefault() : event.returnValue = false;
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function() {
    var event = this.nativeEvent;
    event.stopPropagation ? event.stopPropagation() : event.cancelBubble = true;
    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function() {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function() {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      this[propName] = null;
    }
    this.dispatchConfig = null;
    this.dispatchMarker = null;
    this.nativeEvent = null;
  }

});

SyntheticEvent.Interface = EventInterface;

/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function(Class, Interface) {
  var Super = this;

  var prototype = Object.create(Super.prototype);
  mergeInto(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = merge(Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);

module.exports = SyntheticEvent;

},{"./PooledClass":23,"./emptyFunction":83,"./getEventTarget":91,"./merge":107,"./mergeInto":109}],67:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticFocusEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = require("./SyntheticUIEvent");

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;

},{"./SyntheticUIEvent":71}],68:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticKeyboardEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = require("./SyntheticUIEvent");

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  'char': null,
  key: null,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  // Legacy Interface
  charCode: null,
  keyCode: null,
  which: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;

},{"./SyntheticUIEvent":71}],69:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticMouseEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = require("./SyntheticUIEvent");
var ViewportMetrics = require("./ViewportMetrics");

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  button: function(event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function(event) {
    return event.relatedTarget || (
      event.fromElement === event.srcElement ?
        event.toElement :
        event.fromElement
    );
  },
  // "Proprietary" Interface.
  pageX: function(event) {
    return 'pageX' in event ?
      event.pageX :
      event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function(event) {
    return 'pageY' in event ?
      event.pageY :
      event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;

},{"./SyntheticUIEvent":71,"./ViewportMetrics":74}],70:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticTouchEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = require("./SyntheticUIEvent");

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;

},{"./SyntheticUIEvent":71}],71:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticUIEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticEvent = require("./SyntheticEvent");

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: null,
  detail: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;

},{"./SyntheticEvent":66}],72:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule SyntheticWheelEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticMouseEvent = require("./SyntheticMouseEvent");

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function(event) {
    // NOTE: IE<9 does not support x-axis delta.
    return (
      'deltaX' in event ? event.deltaX :
      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
      'wheelDeltaX' in event ? -event.wheelDeltaX : 0
    );
  },
  deltaY: function(event) {
    return (
      // Normalize (up is positive).
      'deltaY' in event ? -event.deltaY :
      // Fallback to `wheelDeltaY` for Webkit.
      'wheelDeltaY' in event ? event.wheelDeltaY :
      // Fallback to `wheelDelta` for IE<9.
      'wheelDelta' in event ? event.wheelDelta : 0
    );
  },
  deltaZ: null,
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;

},{"./SyntheticMouseEvent":69}],73:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule Transaction
 */

"use strict";

var invariant = require("./invariant");

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be ran while it is already being ran. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Bonus:
 * - Reports timing metrics by method name and wrapper index.
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidRender` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM upates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var Mixin = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function() {
    this.transactionWrappers = this.getTransactionWrappers();
    if (!this.wrapperInitData) {
      this.wrapperInitData = [];
    } else {
      this.wrapperInitData.length = 0;
    }
    if (!this.timingMetrics) {
      this.timingMetrics = {};
    }
    this.timingMetrics.methodInvocationTime = 0;
    if (!this.timingMetrics.wrapperInitTimes) {
      this.timingMetrics.wrapperInitTimes = [];
    } else {
      this.timingMetrics.wrapperInitTimes.length = 0;
    }
    if (!this.timingMetrics.wrapperCloseTimes) {
      this.timingMetrics.wrapperCloseTimes = [];
    } else {
      this.timingMetrics.wrapperCloseTimes.length = 0;
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function() {
    return !!this._isInTransaction;
  },

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} args... Arguments to pass to the method (optional).
   *                           Helps prevent need to bind in many cases.
   * @return Return value from `method`.
   */
  perform: function(method, scope, a, b, c, d, e, f) {
    ("production" !== "development" ? invariant(
      !this.isInTransaction(),
      'Transaction.perform(...): Cannot initialize a transaction when there ' +
      'is already an outstanding transaction.'
    ) : invariant(!this.isInTransaction()));
    var memberStart = Date.now();
    var errorToThrow = null;
    var ret;
    try {
      this.initializeAll();
      ret = method.call(scope, a, b, c, d, e, f);
    } catch (error) {
      // IE8 requires `catch` in order to use `finally`.
      errorToThrow = error;
    } finally {
      var memberEnd = Date.now();
      this.methodInvocationTime += (memberEnd - memberStart);
      try {
        this.closeAll();
      } catch (closeError) {
        // If `method` throws, prefer to show that stack trace over any thrown
        // by invoking `closeAll`.
        errorToThrow = errorToThrow || closeError;
      }
    }
    if (errorToThrow) {
      throw errorToThrow;
    }
    return ret;
  },

  initializeAll: function() {
    this._isInTransaction = true;
    var transactionWrappers = this.transactionWrappers;
    var wrapperInitTimes = this.timingMetrics.wrapperInitTimes;
    var errorToThrow = null;
    for (var i = 0; i < transactionWrappers.length; i++) {
      var initStart = Date.now();
      var wrapper = transactionWrappers[i];
      try {
        this.wrapperInitData[i] = wrapper.initialize ?
          wrapper.initialize.call(this) :
          null;
      } catch (initError) {
        // Prefer to show the stack trace of the first error.
        errorToThrow = errorToThrow || initError;
        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
      } finally {
        var curInitTime = wrapperInitTimes[i];
        var initEnd = Date.now();
        wrapperInitTimes[i] = (curInitTime || 0) + (initEnd - initStart);
      }
    }
    if (errorToThrow) {
      throw errorToThrow;
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function() {
    ("production" !== "development" ? invariant(
      this.isInTransaction(),
      'Transaction.closeAll(): Cannot close transaction when none are open.'
    ) : invariant(this.isInTransaction()));
    var transactionWrappers = this.transactionWrappers;
    var wrapperCloseTimes = this.timingMetrics.wrapperCloseTimes;
    var errorToThrow = null;
    for (var i = 0; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var closeStart = Date.now();
      var initData = this.wrapperInitData[i];
      try {
        if (initData !== Transaction.OBSERVED_ERROR) {
          wrapper.close && wrapper.close.call(this, initData);
        }
      } catch (closeError) {
        // Prefer to show the stack trace of the first error.
        errorToThrow = errorToThrow || closeError;
      } finally {
        var closeEnd = Date.now();
        var curCloseTime = wrapperCloseTimes[i];
        wrapperCloseTimes[i] = (curCloseTime || 0) + (closeEnd - closeStart);
      }
    }
    this.wrapperInitData.length = 0;
    this._isInTransaction = false;
    if (errorToThrow) {
      throw errorToThrow;
    }
  }
};

var Transaction = {

  Mixin: Mixin,

  /**
   * Token to look for to determine if an error occured.
   */
  OBSERVED_ERROR: {}

};

module.exports = Transaction;

},{"./invariant":98}],74:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ViewportMetrics
 */

"use strict";

var getUnboundedScrollPosition = require("./getUnboundedScrollPosition");

var ViewportMetrics = {

  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function() {
    var scrollPosition = getUnboundedScrollPosition(window);
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }

};

module.exports = ViewportMetrics;

},{"./getUnboundedScrollPosition":96}],75:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule accumulate
 */

"use strict";

var invariant = require("./invariant");

/**
 * Accumulates items that must not be null or undefined.
 *
 * This is used to conserve memory by avoiding array allocations.
 *
 * @return {*|array<*>} An accumulation of items.
 */
function accumulate(current, next) {
  ("production" !== "development" ? invariant(
    next != null,
    'accumulate(...): Accumulated items must be not be null or undefined.'
  ) : invariant(next != null));
  if (current == null) {
    return next;
  } else {
    // Both are not empty. Warning: Never call x.concat(y) when you are not
    // certain that x is an Array (x could be a string with concat method).
    var currentIsArray = Array.isArray(current);
    var nextIsArray = Array.isArray(next);
    if (currentIsArray) {
      return current.concat(next);
    } else {
      if (nextIsArray) {
        return [current].concat(next);
      } else {
        return [current, next];
      }
    }
  }
}

module.exports = accumulate;

},{"./invariant":98}],76:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule adler32
 */

/* jslint bitwise:true */

"use strict";

var MOD = 65521;

// This is a clean-room implementation of adler32 designed for detecting
// if markup is not what we expect it to be. It does not need to be
// cryptographically strong, only reasonable good at detecting if markup
// generated on the server is different than that on the client.
function adler32(data) {
  var a = 1;
  var b = 0;
  for (var i = 0; i < data.length; i++) {
    a = (a + data.charCodeAt(i)) % MOD;
    b = (b + a) % MOD;
  }
  return a | (b << 16);
}

module.exports = adler32;

},{}],77:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule containsNode
 * @typechecks
 */

var isTextNode = require("./isTextNode");

/*jslint bitwise:true */

/**
 * Checks if a given DOM node contains or is another DOM node.
 *
 * @param {?DOMNode} outerNode Outer DOM node.
 * @param {?DOMNode} innerNode Inner DOM node.
 * @return {boolean} True if `outerNode` contains or is `innerNode`.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if (outerNode.contains) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

},{"./isTextNode":102}],78:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule copyProperties
 */

/**
 * Copy properties from one or more objects (up to 5) into the first object.
 * This is a shallow copy. It mutates the first object and also returns it.
 *
 * NOTE: `arguments` has a very significant performance penalty, which is why
 * we don't support unlimited arguments.
 */
function copyProperties(obj, a, b, c, d, e, f) {
  obj = obj || {};

  if ("production" !== "development") {
    if (f) {
      throw new Error('Too many arguments passed to copyProperties');
    }
  }

  var args = [a, b, c, d, e];
  var ii = 0, v;
  while (args[ii]) {
    v = args[ii++];
    for (var k in v) {
      obj[k] = v[k];
    }

    // IE ignores toString in object iteration.. See:
    // webreflection.blogspot.com/2007/07/quick-fix-internet-explorer-and.html
    if (v.hasOwnProperty && v.hasOwnProperty('toString') &&
        (typeof v.toString != 'undefined') && (obj.toString !== v.toString)) {
      obj.toString = v.toString;
    }
  }

  return obj;
}

module.exports = copyProperties;

},{}],79:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule createArrayFrom
 * @typechecks
 */

/**
 * NOTE: if you are a previous user of this function, it has been considered
 * unsafe because it's inconsistent across browsers for some inputs.
 * Instead use `Array.isArray()`.
 *
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj &&
    // arrays are objects, NodeLists are functions in Safari
    (typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    ('length' in obj) &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    (typeof obj.nodeType != 'number') &&
    (
      // a real array
      (// HTMLCollection/NodeList
      (Array.isArray(obj) ||
      // arguments
      ('callee' in obj) || 'item' in obj))
    )
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFrom = require('createArrayFrom');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFrom(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * This is also good for converting certain pseudo-arrays, like `arguments` or
 * HTMLCollections, into arrays.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFrom(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  }
  if (obj.item) {
    // IE does not support Array#slice on HTMLCollections
    var l = obj.length, ret = new Array(l);
    while (l--) { ret[l] = obj[l]; }
    return ret;
  }
  return Array.prototype.slice.call(obj);
}

module.exports = createArrayFrom;

},{}],80:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule createNodesFromMarkup
 * @typechecks
 */

/*jslint evil: true, sub: true */

var ExecutionEnvironment = require("./ExecutionEnvironment");

var createArrayFrom = require("./createArrayFrom");
var getMarkupWrap = require("./getMarkupWrap");
var invariant = require("./invariant");

/**
 * Dummy container used to render all markup.
 */
var dummyNode =
  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  ("production" !== "development" ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    ("production" !== "development" ? invariant(
      handleScript,
      'createNodesFromMarkup(...): Unexpected <script> element rendered.'
    ) : invariant(handleScript));
    createArrayFrom(scripts).forEach(handleScript);
  }

  var nodes = createArrayFrom(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;

},{"./ExecutionEnvironment":20,"./createArrayFrom":79,"./getMarkupWrap":92,"./invariant":98}],81:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule createObjectFrom
 */

/**
 * Construct an object from an array of keys
 * and optionally specified value or list of values.
 *
 *  >>> createObjectFrom(['a','b','c']);
 *  {a: true, b: true, c: true}
 *
 *  >>> createObjectFrom(['a','b','c'], false);
 *  {a: false, b: false, c: false}
 *
 *  >>> createObjectFrom(['a','b','c'], 'monkey');
 *  {c:'monkey', b:'monkey' c:'monkey'}
 *
 *  >>> createObjectFrom(['a','b','c'], [1,2,3]);
 *  {a: 1, b: 2, c: 3}
 *
 *  >>> createObjectFrom(['women', 'men'], [true, false]);
 *  {women: true, men: false}
 *
 * @param   Array   list of keys
 * @param   mixed   optional value or value array.  defaults true.
 * @returns object
 */
function createObjectFrom(keys, values /* = true */) {
  if ("production" !== "development") {
    if (!Array.isArray(keys)) {
      throw new TypeError('Must pass an array of keys.');
    }
  }

  var object = {};
  var isArray = Array.isArray(values);
  if (typeof values == 'undefined') {
    values = true;
  }

  for (var ii = keys.length; ii--;) {
    object[keys[ii]] = isArray ? values[ii] : values;
  }
  return object;
}

module.exports = createObjectFrom;

},{}],82:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule dangerousStyleValue
 * @typechecks static-only
 */

"use strict";

var CSSProperty = require("./CSSProperty");

/**
 * Convert a value into the proper css writable value. The `styleName` name
 * name should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} styleName CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(styleName, value) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isNonNumeric || value === 0 || CSSProperty.isUnitlessNumber[styleName]) {
    return '' + value; // cast to string
  }

  return value + 'px';
}

module.exports = dangerousStyleValue;

},{"./CSSProperty":2}],83:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule emptyFunction
 */

var copyProperties = require("./copyProperties");

function makeEmptyFunction(arg) {
  return function() {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
function emptyFunction() {}

copyProperties(emptyFunction, {
  thatReturns: makeEmptyFunction,
  thatReturnsFalse: makeEmptyFunction(false),
  thatReturnsTrue: makeEmptyFunction(true),
  thatReturnsNull: makeEmptyFunction(null),
  thatReturnsThis: function() { return this; },
  thatReturnsArgument: function(arg) { return arg; }
});

module.exports = emptyFunction;

},{"./copyProperties":78}],84:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule escapeTextForBrowser
 * @typechecks static-only
 */

"use strict";

var ESCAPE_LOOKUP = {
  "&": "&amp;",
  ">": "&gt;",
  "<": "&lt;",
  "\"": "&quot;",
  "'": "&#x27;",
  "/": "&#x2f;"
};

var ESCAPE_REGEX = /[&><"'\/]/g;

function escaper(match) {
  return ESCAPE_LOOKUP[match];
}

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextForBrowser(text) {
  return ('' + text).replace(ESCAPE_REGEX, escaper);
}

module.exports = escapeTextForBrowser;

},{}],85:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ex
 * @typechecks
 * @nostacktrace
 */

/**
 * This function transforms error message with arguments into plain text error
 * message, so that it can be passed to window.onerror without losing anything.
 * It can then be transformed back by `erx()` function.
 *
 * Usage:
 *   throw new Error(ex('Error %s from %s', errorCode, userID));
 *
 * @param {string} errorMessage
 */

var ex = function(errorMessage/*, arg1, arg2, ...*/) {
  var args = Array.prototype.slice.call(arguments).map(function(arg) {
    return String(arg);
  });
  var expectedLength = errorMessage.split('%s').length - 1;

  if (expectedLength !== args.length - 1) {
    // something wrong with the formatting string
    return ex('ex args number mismatch: %s', JSON.stringify(args));
  }

  return ex._prefix + JSON.stringify(args) + ex._suffix;
};

ex._prefix = '<![EX[';
ex._suffix = ']]>';

module.exports = ex;

},{}],86:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule filterAttributes
 * @typechecks static-only
 */

/*jslint evil: true */

'use strict';

/**
 * Like filter(), but for a DOM nodes attributes. Returns an array of
 * the filter DOMAttribute objects. Does some perf related this like
 * caching attributes.length.
 *
 * @param {DOMElement} node Node whose attributes you want to filter
 * @return {array} array of DOM attribute objects.
 */
function filterAttributes(node, func, context) {
  var attributes = node.attributes;
  var numAttributes = attributes.length;
  var accumulator = [];
  for (var i = 0; i < numAttributes; i++) {
    var attr = attributes.item(i);
    if (func.call(context, attr)) {
      accumulator.push(attr);
    }
  }
  return accumulator;
}

module.exports = filterAttributes;

},{}],87:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule flattenChildren
 */

"use strict";

var invariant = require("./invariant");
var traverseAllChildren = require("./traverseAllChildren");

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 */
function flattenSingleChildIntoContext(traverseContext, child, name) {
  // We found a component instance.
  var result = traverseContext;
  ("production" !== "development" ? invariant(
    !result.hasOwnProperty(name),
    'flattenChildren(...): Encountered two children with the same key, `%s`. ' +
    'Children keys must be unique.',
    name
  ) : invariant(!result.hasOwnProperty(name)));
  result[name] = child;
}

/**
 * Flattens children that are typically specified as `props.children`.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children) {
  if (children == null) {
    return children;
  }
  var result = {};
  traverseAllChildren(children, flattenSingleChildIntoContext, result);
  return result;
}

module.exports = flattenChildren;

},{"./invariant":98,"./traverseAllChildren":116}],88:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule forEachAccumulated
 */

"use strict";

/**
 * @param {array} an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */
var forEachAccumulated = function(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
};

module.exports = forEachAccumulated;

},{}],89:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule ge
 */

/**
 * Find a node by ID.  Optionally search a sub-tree outside of the document
 *
 * Use ge if you're not sure whether or not the element exists. You can test
 * for existence yourself in your application code.
 *
 * If your application code depends on the existence of the element, use $
 * instead, which will throw in DEV if the element doesn't exist.
 */
function ge(arg, root, tag) {
  return typeof arg != 'string' ? arg :
    !root ? document.getElementById(arg) :
    _geFromSubtree(arg, root, tag);
}

function _geFromSubtree(id, root, tag) {
  var elem, children, ii;

  if (_getNodeID(root) == id) {
    return root;
  } else if (root.getElementsByTagName) {
    // All Elements implement this, which does an iterative DFS, which is
    // faster than recursion and doesn't run into stack depth issues.
    children = root.getElementsByTagName(tag || '*');
    for (ii = 0; ii < children.length; ii++) {
      if (_getNodeID(children[ii]) == id) {
        return children[ii];
      }
    }
  } else {
    // DocumentFragment does not implement getElementsByTagName, so
    // recurse over its children. Its children must be Elements, so
    // each child will use the getElementsByTagName case instead.
    children = root.childNodes;
    for (ii = 0; ii < children.length; ii++) {
      elem = _geFromSubtree(id, children[ii]);
      if (elem) {
        return elem;
      }
    }
  }

  return null;
}

/**
 * Return the ID value for a given node. This allows us to avoid issues
 * with forms that contain inputs with name="id".
 *
 * @return string (null if attribute not set)
 */
function _getNodeID(node) {
  // #document and #document-fragment do not have getAttributeNode.
  var id = node.getAttributeNode && node.getAttributeNode('id');
  return id ? id.value : null;
}

module.exports = ge;

},{}],90:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule getActiveElement
 * @typechecks
 */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 */
function getActiveElement() /*?DOMElement*/ {
  try {
    return document.activeElement;
  } catch (e) {
    return null;
  }
}

module.exports = getActiveElement;


},{}],91:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule getEventTarget
 * @typechecks static-only
 */

"use strict";

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */
function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;
  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;

},{}],92:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule getMarkupWrap
 */

var ExecutionEnvironment = require("./ExecutionEnvironment");

var invariant = require("./invariant");

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode =
  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */
var shouldWrap = {
  // Force wrapping for SVG elements because if they get created inside a <div>,
  // they will be initialized in the wrong namespace (and will not display).
  'circle': true,
  'g': true,
  'line': true,
  'path': true,
  'polyline': true,
  'rect': true,
  'text': true
};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg>', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap,

  'circle': svgWrap,
  'g': svgWrap,
  'line': svgWrap,
  'path': svgWrap,
  'polyline': svgWrap,
  'rect': svgWrap,
  'text': svgWrap
};

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  ("production" !== "development" ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}


module.exports = getMarkupWrap;

},{"./ExecutionEnvironment":20,"./invariant":98}],93:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule getNodeForCharacterOffset
 */

"use strict";

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */
function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType == 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;

},{}],94:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule getReactRootElementInContainer
 */

"use strict";

var DOC_NODE_TYPE = 9;

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 *                                           a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

module.exports = getReactRootElementInContainer;

},{}],95:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule getTextContentAccessor
 */

"use strict";

var ExecutionEnvironment = require("./ExecutionEnvironment");

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    contentKey = 'innerText' in document.createElement('div') ?
      'innerText' :
      'textContent';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;

},{"./ExecutionEnvironment":20}],96:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule getUnboundedScrollPosition
 * @typechecks
 */

"use strict";

/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */
function getUnboundedScrollPosition(scrollable) {
  if (scrollable === window) {
    return {
      x: document.documentElement.scrollLeft || document.body.scrollLeft,
      y: document.documentElement.scrollTop  || document.body.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;

},{}],97:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule hyphenate
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

},{}],98:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule invariant
 */

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf style format and arguments to provide information about
 * what broke and what you were expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

function invariant(condition) {
  if (!condition) {
    throw new Error('Invariant Violation');
  }
}

module.exports = invariant;

if ("production" !== "development") {
  var invariantDev = function(condition, format, a, b, c, d, e, f) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }

    if (!condition) {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      throw new Error(
        'Invariant Violation: ' +
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
    }
  };

  module.exports = invariantDev;
}

},{}],99:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule isEventSupported
 */

"use strict";

var ExecutionEnvironment = require("./ExecutionEnvironment");

var testNode, useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  testNode = document.createElement('div');
  useHasFeature =
    document.implementation &&
    document.implementation.hasFeature &&
    // `hasFeature` always returns true in Firefox 19+.
    document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!testNode || (capture && !testNode.addEventListener)) {
    return false;
  }
  var element = document.createElement('div');

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in element;

  if (!isSupported) {
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
    if (typeof element[eventName] !== 'undefined') {
      element[eventName] = undefined;
    }
    element.removeAttribute(eventName);
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  element = null;
  return isSupported;
}

module.exports = isEventSupported;

},{"./ExecutionEnvironment":20}],100:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule isNode
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  return !!(object && (
    typeof Node !== 'undefined' ? object instanceof Node :
      typeof object === 'object' &&
      typeof object.nodeType === 'number' &&
      typeof object.nodeName === 'string'
  ));
}

module.exports = isNode;

},{}],101:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule isTextInputElement
 */

"use strict";

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  'color': true,
  'date': true,
  'datetime': true,
  'datetime-local': true,
  'email': true,
  'month': true,
  'number': true,
  'password': true,
  'range': true,
  'search': true,
  'tel': true,
  'text': true,
  'time': true,
  'url': true,
  'week': true
};

function isTextInputElement(elem) {
  return elem && (
    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type]) ||
    elem.nodeName === 'TEXTAREA'
  );
}

module.exports = isTextInputElement;

},{}],102:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule isTextNode
 * @typechecks
 */

var isNode = require("./isNode");

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

},{"./isNode":100}],103:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule joinClasses
 * @typechecks static-only
 */

"use strict";

/**
 * Combines multiple className strings into one.
 * http://jsperf.com/joinclasses-args-vs-array
 *
 * @param {...?string} classes
 * @return {string}
 */
function joinClasses(className/*, ... */) {
  if (!className) {
    className = '';
  }
  var nextClass;
  var argLength = arguments.length;
  if (argLength > 1) {
    for (var ii = 1; ii < argLength; ii++) {
      nextClass = arguments[ii];
      nextClass && (className += ' ' + nextClass);
    }
  }
  return className;
}

module.exports = joinClasses;

},{}],104:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule keyMirror
 * @typechecks static-only
 */

"use strict";

var invariant = require("./invariant");

/**
 * Constructs an enumeration with keys equal to their value.
 *
 * For example:
 *
 *   var COLORS = keyMirror({blue: null, red: null});
 *   var myColor = COLORS.blue;
 *   var isColorValid = !!COLORS[myColor];
 *
 * The last line could not be performed if the values of the generated enum were
 * not equal to their keys.
 *
 *   Input:  {key1: val1, key2: val2}
 *   Output: {key1: key1, key2: key2}
 *
 * @param {object} obj
 * @return {object}
 */
var keyMirror = function(obj) {
  var ret = {};
  var key;
  ("production" !== "development" ? invariant(
    obj instanceof Object && !Array.isArray(obj),
    'keyMirror(...): Argument must be an object.'
  ) : invariant(obj instanceof Object && !Array.isArray(obj)));
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;

},{"./invariant":98}],105:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule keyOf
 */

/**
 * Allows extraction of a minified key. Let's the build system minify keys
 * without loosing the ability to dynamically use key strings as values
 * themselves. Pass in an object with a single key/val pair and it will return
 * you the string key of that single record. Suppose you want to grab the
 * value for a key 'className' inside of an object. Key/val minification may
 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
 * reuse those resolutions.
 */
var keyOf = function(oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};


module.exports = keyOf;

},{}],106:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule memoizeStringOnly
 * @typechecks static-only
 */

"use strict";

/**
 * Memoizes the return value of a function that accepts one string argument.
 *
 * @param {function} callback
 * @return {function}
 */
function memoizeStringOnly(callback) {
  var cache = {};
  return function(string) {
    if (cache.hasOwnProperty(string)) {
      return cache[string];
    } else {
      return cache[string] = callback.call(this, string);
    }
  };
}

module.exports = memoizeStringOnly;

},{}],107:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule merge
 */

"use strict";

var mergeInto = require("./mergeInto");

/**
 * Shallow merges two structures into a return value, without mutating either.
 *
 * @param {?object} one Optional object with properties to merge from.
 * @param {?object} two Optional object with properties to merge from.
 * @return {object} The shallow extension of one by two.
 */
var merge = function(one, two) {
  var result = {};
  mergeInto(result, one);
  mergeInto(result, two);
  return result;
};

module.exports = merge;

},{"./mergeInto":109}],108:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule mergeHelpers
 *
 * requiresPolyfills: Array.isArray
 */

"use strict";

var invariant = require("./invariant");
var keyMirror = require("./keyMirror");

/**
 * Maximum number of levels to traverse. Will catch circular structures.
 * @const
 */
var MAX_MERGE_DEPTH = 36;

/**
 * We won't worry about edge cases like new String('x') or new Boolean(true).
 * Functions are considered terminals, and arrays are not.
 * @param {*} o The item/object/value to test.
 * @return {boolean} true iff the argument is a terminal.
 */
var isTerminal = function(o) {
  return typeof o !== 'object' || o === null;
};

var mergeHelpers = {

  MAX_MERGE_DEPTH: MAX_MERGE_DEPTH,

  isTerminal: isTerminal,

  /**
   * Converts null/undefined values into empty object.
   *
   * @param {?Object=} arg Argument to be normalized (nullable optional)
   * @return {!Object}
   */
  normalizeMergeArg: function(arg) {
    return arg === undefined || arg === null ? {} : arg;
  },

  /**
   * If merging Arrays, a merge strategy *must* be supplied. If not, it is
   * likely the caller's fault. If this function is ever called with anything
   * but `one` and `two` being `Array`s, it is the fault of the merge utilities.
   *
   * @param {*} one Array to merge into.
   * @param {*} two Array to merge from.
   */
  checkMergeArrayArgs: function(one, two) {
    ("production" !== "development" ? invariant(
      Array.isArray(one) && Array.isArray(two),
      'Critical assumptions about the merge functions have been violated. ' +
      'This is the fault of the merge functions themselves, not necessarily ' +
      'the callers.'
    ) : invariant(Array.isArray(one) && Array.isArray(two)));
  },

  /**
   * @param {*} one Object to merge into.
   * @param {*} two Object to merge from.
   */
  checkMergeObjectArgs: function(one, two) {
    mergeHelpers.checkMergeObjectArg(one);
    mergeHelpers.checkMergeObjectArg(two);
  },

  /**
   * @param {*} arg
   */
  checkMergeObjectArg: function(arg) {
    ("production" !== "development" ? invariant(
      !isTerminal(arg) && !Array.isArray(arg),
      'Critical assumptions about the merge functions have been violated. ' +
      'This is the fault of the merge functions themselves, not necessarily ' +
      'the callers.'
    ) : invariant(!isTerminal(arg) && !Array.isArray(arg)));
  },

  /**
   * Checks that a merge was not given a circular object or an object that had
   * too great of depth.
   *
   * @param {number} Level of recursion to validate against maximum.
   */
  checkMergeLevel: function(level) {
    ("production" !== "development" ? invariant(
      level < MAX_MERGE_DEPTH,
      'Maximum deep merge depth exceeded. You may be attempting to merge ' +
      'circular structures in an unsupported way.'
    ) : invariant(level < MAX_MERGE_DEPTH));
  },

  /**
   * Checks that the supplied merge strategy is valid.
   *
   * @param {string} Array merge strategy.
   */
  checkArrayStrategy: function(strategy) {
    ("production" !== "development" ? invariant(
      strategy === undefined || strategy in mergeHelpers.ArrayStrategies,
      'You must provide an array strategy to deep merge functions to ' +
      'instruct the deep merge how to resolve merging two arrays.'
    ) : invariant(strategy === undefined || strategy in mergeHelpers.ArrayStrategies));
  },

  /**
   * Set of possible behaviors of merge algorithms when encountering two Arrays
   * that must be merged together.
   * - `clobber`: The left `Array` is ignored.
   * - `indexByIndex`: The result is achieved by recursively deep merging at
   *   each index. (not yet supported.)
   */
  ArrayStrategies: keyMirror({
    Clobber: true,
    IndexByIndex: true
  })

};

module.exports = mergeHelpers;

},{"./invariant":98,"./keyMirror":104}],109:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule mergeInto
 * @typechecks static-only
 */

"use strict";

var mergeHelpers = require("./mergeHelpers");

var checkMergeObjectArg = mergeHelpers.checkMergeObjectArg;

/**
 * Shallow merges two structures by mutating the first parameter.
 *
 * @param {object} one Object to be merged into.
 * @param {?object} two Optional object with properties to merge from.
 */
function mergeInto(one, two) {
  checkMergeObjectArg(one);
  if (two != null) {
    checkMergeObjectArg(two);
    for (var key in two) {
      if (!two.hasOwnProperty(key)) {
        continue;
      }
      one[key] = two[key];
    }
  }
}

module.exports = mergeInto;

},{"./mergeHelpers":108}],110:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule mixInto
 */

"use strict";

/**
 * Simply copies properties to the prototype.
 */
var mixInto = function(constructor, methodBag) {
  var methodName;
  for (methodName in methodBag) {
    if (!methodBag.hasOwnProperty(methodName)) {
      continue;
    }
    constructor.prototype[methodName] = methodBag[methodName];
  }
};

module.exports = mixInto;

},{}],111:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule mutateHTMLNodeWithMarkup
 * @typechecks static-only
 */

/*jslint evil: true */

'use strict';

var createNodesFromMarkup = require("./createNodesFromMarkup");
var filterAttributes = require("./filterAttributes");
var invariant = require("./invariant");

/**
 * You can't set the innerHTML of a document. Unless you have
 * this function.
 *
 * @param {DOMElement} node with tagName == 'html'
 * @param {string} markup markup string including <html>.
 */
function mutateHTMLNodeWithMarkup(node, markup) {
  ("production" !== "development" ? invariant(
    node.tagName.toLowerCase() === 'html',
    'mutateHTMLNodeWithMarkup(): node must have tagName of "html", got %s',
    node.tagName
  ) : invariant(node.tagName.toLowerCase() === 'html'));

  markup = markup.trim();
  ("production" !== "development" ? invariant(
    markup.toLowerCase().indexOf('<html') === 0,
    'mutateHTMLNodeWithMarkup(): markup must start with <html'
  ) : invariant(markup.toLowerCase().indexOf('<html') === 0));

  // First let's extract the various pieces of markup.
  var htmlOpenTagEnd = markup.indexOf('>') + 1;
  var htmlCloseTagStart = markup.lastIndexOf('<');
  var htmlOpenTag = markup.substring(0, htmlOpenTagEnd);
  var innerHTML = markup.substring(htmlOpenTagEnd, htmlCloseTagStart);

  // Now for the fun stuff. Pass through both sets of attributes and
  // bring them up-to-date. We get the new set by creating a markup
  // fragment.
  var shouldExtractAttributes = htmlOpenTag.indexOf(' ') > -1;
  var attributeHolder = null;

  if (shouldExtractAttributes) {
    // We extract the attributes by creating a <span> and evaluating
    // the node.
    attributeHolder = createNodesFromMarkup(
      htmlOpenTag.replace('html ', 'span ') + '</span>'
    )[0];

    // Add all attributes present in attributeHolder
    var attributesToSet = filterAttributes(
      attributeHolder,
      function(attr) {
        return node.getAttributeNS(attr.namespaceURI, attr.name) !== attr.value;
      }
    );
    attributesToSet.forEach(function(attr) {
      node.setAttributeNS(attr.namespaceURI, attr.name, attr.value);
    });
  }

  // Remove all attributes not present in attributeHolder
  var attributesToRemove = filterAttributes(
    node,
    function(attr) {
      // Remove all attributes if attributeHolder is null or if it does not have
      // the desired attribute.
      return !(
        attributeHolder &&
          attributeHolder.hasAttributeNS(attr.namespaceURI, attr.name)
      );
    }
  );
  attributesToRemove.forEach(function(attr) {
    node.removeAttributeNS(attr.namespaceURI, attr.name);
  });

  // Finally, set the inner HTML. No tricks needed. Do this last to
  // minimize likelihood of triggering reflows.
  node.innerHTML = innerHTML;
}

module.exports = mutateHTMLNodeWithMarkup;

},{"./createNodesFromMarkup":80,"./filterAttributes":86,"./invariant":98}],112:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule objMap
 */

"use strict";

/**
 * For each key/value pair, invokes callback func and constructs a resulting
 * object which contains, for every key in obj, values that are the result of
 * of invoking the function:
 *
 *   func(value, key, iteration)
 *
 * @param {?object} obj Object to map keys over
 * @param {function} func Invoked for each key/val pair.
 * @param {?*} context
 * @return {?object} Result of mapping or null if obj is falsey
 */
function objMap(obj, func, context) {
  if (!obj) {
    return null;
  }
  var i = 0;
  var ret = {};
  for (var key in obj) {
    if (obj.hasOwnProperty(key)) {
      ret[key] = func.call(context, obj[key], key, i++);
    }
  }
  return ret;
}

module.exports = objMap;

},{}],113:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule objMapKeyVal
 */

"use strict";

/**
 * Behaves the same as `objMap` but invokes func with the key first, and value
 * second. Use `objMap` unless you need this special case.
 * Invokes func as:
 *
 *   func(key, value, iteration)
 *
 * @param {?object} obj Object to map keys over
 * @param {!function} func Invoked for each key/val pair.
 * @param {?*} context
 * @return {?object} Result of mapping or null if obj is falsey
 */
function objMapKeyVal(obj, func, context) {
  if (!obj) {
    return null;
  }
  var i = 0;
  var ret = {};
  for (var key in obj) {
    if (obj.hasOwnProperty(key)) {
      ret[key] = func.call(context, key, obj[key], i++);
    }
  }
  return ret;
}

module.exports = objMapKeyVal;

},{}],114:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule performanceNow
 * @typechecks static-only
 */

"use strict";

var ExecutionEnvironment = require("./ExecutionEnvironment");

/**
 * Detect if we can use window.performance.now() and gracefully
 * fallback to Date.now() if it doesn't exist.
 * We need to support Firefox < 15 for now due to Facebook's webdriver
 * infrastructure.
 */
var performance = null;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.webkitPerformance;
}

if (!performance || !performance.now) {
  performance = Date;
}

var performanceNow = performance.now.bind(performance);

module.exports = performanceNow;

},{"./ExecutionEnvironment":20}],115:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule shallowEqual
 */

"use strict";

/**
 * Performs equality by iterating through keys on an object and returning
 * false when any key has values which are not strictly equal between
 * objA and objB. Returns true when the values of all keys are strictly equal.
 *
 * @return {boolean}
 */
function shallowEqual(objA, objB) {
  if (objA === objB) {
    return true;
  }
  var key;
  // Test for A's keys different from B.
  for (key in objA) {
    if (objA.hasOwnProperty(key) &&
        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {
      return false;
    }
  }
  // Test for B'a keys missing from A.
  for (key in objB) {
    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {
      return false;
    }
  }
  return true;
}

module.exports = shallowEqual;

},{}],116:[function(require,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule traverseAllChildren
 */

"use strict";

var ReactComponent = require("./ReactComponent");
var ReactTextComponent = require("./ReactTextComponent");

var invariant = require("./invariant");

/**
 * TODO: Test that:
 * 1. `mapChildren` transforms strings and numbers into `ReactTextComponent`.
 * 2. it('should fail when supplied duplicate key', function() {
 * 3. That a single child and an array with one item have the same key pattern.
 * });
 */

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!number} indexSoFar Number of children encountered until this point.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
var traverseAllChildrenImpl =
  function(children, nameSoFar, indexSoFar, callback, traverseContext) {
    var subtreeCount = 0;  // Count of children found in the current subtree.
    if (Array.isArray(children)) {
      for (var i = 0; i < children.length; i++) {
        var child = children[i];
        var nextName = nameSoFar + ReactComponent.getKey(child, i);
        var nextIndex = indexSoFar + subtreeCount;
        subtreeCount += traverseAllChildrenImpl(
          child,
          nextName,
          nextIndex,
          callback,
          traverseContext
        );
      }
    } else {
      var type = typeof children;
      var isOnlyChild = nameSoFar === '';
      // If it's the only child, treat the name as if it was wrapped in an array
      // so that it's consistent if the number of children grows
      var storageName = isOnlyChild ?
        ReactComponent.getKey(children, 0):
        nameSoFar;
      if (children === null || children === undefined || type === 'boolean') {
        // All of the above are perceived as null.
        callback(traverseContext, null, storageName, indexSoFar);
        subtreeCount = 1;
      } else if (children.mountComponentIntoNode) {
        callback(traverseContext, children, storageName, indexSoFar);
        subtreeCount = 1;
      } else {
        if (type === 'object') {
          ("production" !== "development" ? invariant(
            !children || children.nodeType !== 1,
            'traverseAllChildren(...): Encountered an invalid child; DOM ' +
            'elements are not valid children of React components.'
          ) : invariant(!children || children.nodeType !== 1));
          for (var key in children) {
            if (children.hasOwnProperty(key)) {
              subtreeCount += traverseAllChildrenImpl(
                children[key],
                nameSoFar + '{' + key + '}',
                indexSoFar + subtreeCount,
                callback,
                traverseContext
              );
            }
          }
        } else if (type === 'string') {
          var normalizedText = new ReactTextComponent(children);
          callback(traverseContext, normalizedText, storageName, indexSoFar);
          subtreeCount += 1;
        } else if (type === 'number') {
          var normalizedNumber = new ReactTextComponent('' + children);
          callback(traverseContext, normalizedNumber, storageName, indexSoFar);
          subtreeCount += 1;
        }
      }
    }
    return subtreeCount;
  };

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children !== null && children !== undefined) {
    traverseAllChildrenImpl(children, '', 0, callback, traverseContext);
  }
}

module.exports = traverseAllChildren;

},{"./ReactComponent":25,"./ReactTextComponent":60,"./invariant":98}]},{},[24])
(24)
});
;
var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name);
  };
  goog.implicitNamespaces_ = {};
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
if (!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && (typeof value.splice != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")))) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && (typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call"))) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isDef = function(val) {
  return val !== undefined;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for (var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value);
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.subs = function(str, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement);
  }
  return str;
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && (ch >= " " && ch <= "~") || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;");
  } else {
    if (!goog.string.allRe_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;");
    }
    return str;
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1;
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && (index < s.length && stringLength > 0)) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || (goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]));
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    this.stack = (new Error).stack || "";
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return(value);
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if (arr.reduce) {
    if (opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduce(f, val);
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if (arr.reduceRight) {
    if (opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val);
    } else {
      return arr.reduceRight(f, val);
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || (!goog.isArrayLike(arr2) || arr1.length != arr2.length)) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn);
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2173";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  3960797560), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__24040__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__24040 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__24040__delegate.call(this, args);
    };
    G__24040.cljs$lang$maxFixedArity = 0;
    G__24040.cljs$lang$applyTo = function(arglist__24041) {
      var args = cljs.core.seq(arglist__24041);
      return G__24040__delegate(args);
    };
    G__24040.cljs$core$IFn$_invoke$arity$variadic = G__24040__delegate;
    return G__24040;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false;
      } else {
        return null;
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3431__auto__ = ty;
    if (cljs.core.truth_(and__3431__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3431__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4291__auto___24042 = len;
  var i_24043 = 0;
  while (true) {
    if (i_24043 < n__4291__auto___24042) {
      new_arr[i_24043] = arr[i_24043];
      var G__24044 = i_24043 + 1;
      i_24043 = G__24044;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__24045__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__24045 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24045__delegate.call(this, array, i, idxs);
    };
    G__24045.cljs$lang$maxFixedArity = 2;
    G__24045.cljs$lang$applyTo = function(arglist__24046) {
      var array = cljs.core.first(arglist__24046);
      arglist__24046 = cljs.core.next(arglist__24046);
      var i = cljs.core.first(arglist__24046);
      var idxs = cljs.core.rest(arglist__24046);
      return G__24045__delegate(array, i, idxs);
    };
    G__24045.cljs$core$IFn$_invoke$arity$variadic = G__24045__delegate;
    return G__24045;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__24047__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__24047 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__24047__delegate.call(this, array, idx, idx2, idxv);
    };
    G__24047.cljs$lang$maxFixedArity = 3;
    G__24047.cljs$lang$applyTo = function(arglist__24048) {
      var array = cljs.core.first(arglist__24048);
      arglist__24048 = cljs.core.next(arglist__24048);
      var idx = cljs.core.first(arglist__24048);
      arglist__24048 = cljs.core.next(arglist__24048);
      var idx2 = cljs.core.first(arglist__24048);
      var idxv = cljs.core.rest(arglist__24048);
      return G__24047__delegate(array, idx, idx2, idxv);
    };
    G__24047.cljs$core$IFn$_invoke$arity$variadic = G__24047__delegate;
    return G__24047;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj24050 = {};
  return obj24050;
}();
cljs.core.IFn = function() {
  var obj24052 = {};
  return obj24052;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = cljs.core._invoke[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._invoke["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj24054 = {};
  return obj24054;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3431__auto__ = value;
    if (and__3431__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4070__auto__ = value == null ? null : value;
    return function() {
      var or__3443__auto__ = cljs.core._clone[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._clone["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj24056 = {};
  return obj24056;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._count[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._count["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj24058 = {};
  return obj24058;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._empty[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._empty["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj24060 = {};
  return obj24060;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._conj[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._conj["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj24062 = {};
  return obj24062;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3431__auto__ = coll;
      if (and__3431__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4070__auto__ = coll == null ? null : coll;
      return function() {
        var or__3443__auto__ = cljs.core._nth[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._nth["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3431__auto__ = coll;
      if (and__3431__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4070__auto__ = coll == null ? null : coll;
      return function() {
        var or__3443__auto__ = cljs.core._nth[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._nth["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj24064 = {};
  return obj24064;
}();
cljs.core.ISeq = function() {
  var obj24066 = {};
  return obj24066;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._first[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._first["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._rest[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._rest["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj24068 = {};
  return obj24068;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._next[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._next["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj24070 = {};
  return obj24070;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._lookup[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._lookup["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._lookup[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._lookup["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj24072 = {};
  return obj24072;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._assoc[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._assoc["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj24074 = {};
  return obj24074;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._dissoc[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._dissoc["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj24076 = {};
  return obj24076;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._key[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._key["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._val[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._val["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj24078 = {};
  return obj24078;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._disjoin[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._disjoin["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj24080 = {};
  return obj24080;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._peek[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._peek["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._pop[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._pop["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj24082 = {};
  return obj24082;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._assoc_n[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj24084 = {};
  return obj24084;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._deref[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._deref["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj24086 = {};
  return obj24086;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj24088 = {};
  return obj24088;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._meta[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._meta["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj24090 = {};
  return obj24090;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._with_meta[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._with_meta["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj24092 = {};
  return obj24092;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3431__auto__ = coll;
      if (and__3431__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4070__auto__ = coll == null ? null : coll;
      return function() {
        var or__3443__auto__ = cljs.core._reduce[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._reduce["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3431__auto__ = coll;
      if (and__3431__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4070__auto__ = coll == null ? null : coll;
      return function() {
        var or__3443__auto__ = cljs.core._reduce[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._reduce["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj24094 = {};
  return obj24094;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj24096 = {};
  return obj24096;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._equiv[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._equiv["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj24098 = {};
  return obj24098;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._hash[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._hash["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj24100 = {};
  return obj24100;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._seq[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._seq["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj24102 = {};
  return obj24102;
}();
cljs.core.IList = function() {
  var obj24104 = {};
  return obj24104;
}();
cljs.core.IRecord = function() {
  var obj24106 = {};
  return obj24106;
}();
cljs.core.IReversible = function() {
  var obj24108 = {};
  return obj24108;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._rseq[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._rseq["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj24110 = {};
  return obj24110;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._entry_key[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._entry_key["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._comparator[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._comparator["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj24112 = {};
  return obj24112;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3431__auto__ = writer;
    if (and__3431__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4070__auto__ = writer == null ? null : writer;
    return function() {
      var or__3443__auto__ = cljs.core._write[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._write["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3431__auto__ = writer;
    if (and__3431__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4070__auto__ = writer == null ? null : writer;
    return function() {
      var or__3443__auto__ = cljs.core._flush[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._flush["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj24114 = {};
  return obj24114;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._pr_writer[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj24116 = {};
  return obj24116;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3431__auto__ = d;
    if (and__3431__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4070__auto__ = d == null ? null : d;
    return function() {
      var or__3443__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj24118 = {};
  return obj24118;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = cljs.core._notify_watches[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = cljs.core._add_watch[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._add_watch["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = cljs.core._remove_watch[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj24120 = {};
  return obj24120;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._as_transient[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._as_transient["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj24122 = {};
  return obj24122;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj24124 = {};
  return obj24124;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj24126 = {};
  return obj24126;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj24128 = {};
  return obj24128;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj24130 = {};
  return obj24130;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3431__auto__ = tcoll;
    if (and__3431__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4070__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3443__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj24132 = {};
  return obj24132;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._compare[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._compare["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj24134 = {};
  return obj24134;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._drop_first[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._drop_first["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj24136 = {};
  return obj24136;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._chunked_first[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj24138 = {};
  return obj24138;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3431__auto__ = coll;
    if (and__3431__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4070__auto__ = coll == null ? null : coll;
    return function() {
      var or__3443__auto__ = cljs.core._chunked_next[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj24140 = {};
  return obj24140;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._name[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._name["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._namespace[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._namespace["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("");
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3431__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3431__auto__) {
        return b.ns;
      } else {
        return and__3431__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return cljs.core.compare.call(null, a.name, b.name);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3854__auto__ = self__._hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__24142 = null;
  var G__24142__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__24142__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__24142 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24142__2.call(this, self__, coll);
      case 3:
        return G__24142__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__24142;
}();
cljs.core.Symbol.prototype.apply = function(self__, args24141) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24141)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__24144 = value;
  if (G__24144) {
    var bit__4093__auto__ = G__24144.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4093__auto__ || G__24144.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__24144.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__24144);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__24144);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__24146 = coll;
      if (G__24146) {
        var bit__4086__auto__ = G__24146.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4086__auto__ || G__24146.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__24148 = coll;
      if (G__24148) {
        var bit__4086__auto__ = G__24148.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4086__auto__ || G__24148.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__24150 = coll;
      if (G__24150) {
        var bit__4086__auto__ = G__24150.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4086__auto__ || G__24150.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__24152 = coll;
      if (G__24152) {
        var bit__4086__auto__ = G__24152.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4086__auto__ || G__24152.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__24153__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__24154 = y;
            var G__24155 = cljs.core.first.call(null, more);
            var G__24156 = cljs.core.next.call(null, more);
            x = G__24154;
            y = G__24155;
            more = G__24156;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__24153 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24153__delegate.call(this, x, y, more);
    };
    G__24153.cljs$lang$maxFixedArity = 2;
    G__24153.cljs$lang$applyTo = function(arglist__24157) {
      var x = cljs.core.first(arglist__24157);
      arglist__24157 = cljs.core.next(arglist__24157);
      var y = cljs.core.first(arglist__24157);
      var more = cljs.core.rest(arglist__24157);
      return G__24153__delegate(x, y, more);
    };
    G__24153.cljs$core$IFn$_invoke$arity$variadic = G__24153__delegate;
    return G__24153;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__24158 = nval;
            var G__24159 = n + 1;
            val = G__24158;
            n = G__24159;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__24160 = nval;
          var G__24161 = n + 1;
          val__$1 = G__24160;
          n = G__24161;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__24162 = nval;
          var G__24163 = n + 1;
          val__$1 = G__24162;
          n = G__24163;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__24164 = nval;
            var G__24165 = n + 1;
            val = G__24164;
            n = G__24165;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__24166 = nval;
          var G__24167 = n + 1;
          val__$1 = G__24166;
          n = G__24167;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__24168 = nval;
          var G__24169 = n + 1;
          val__$1 = G__24168;
          n = G__24169;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__24171 = x;
  if (G__24171) {
    var bit__4093__auto__ = G__24171.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4093__auto__ || G__24171.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__24171.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__24171);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__24171);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__24173 = x;
  if (G__24173) {
    var bit__4093__auto__ = G__24173.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4093__auto__ || G__24173.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__24173.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__24173);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__24173);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__24174 = sn;
      s = G__24174;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__24175__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__24176 = conj.call(null, coll, x);
          var G__24177 = cljs.core.first.call(null, xs);
          var G__24178 = cljs.core.next.call(null, xs);
          coll = G__24176;
          x = G__24177;
          xs = G__24178;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__24175 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24175__delegate.call(this, coll, x, xs);
    };
    G__24175.cljs$lang$maxFixedArity = 2;
    G__24175.cljs$lang$applyTo = function(arglist__24179) {
      var coll = cljs.core.first(arglist__24179);
      arglist__24179 = cljs.core.next(arglist__24179);
      var x = cljs.core.first(arglist__24179);
      var xs = cljs.core.rest(arglist__24179);
      return G__24175__delegate(coll, x, xs);
    };
    G__24175.cljs$core$IFn$_invoke$arity$variadic = G__24175__delegate;
    return G__24175;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__24180 = cljs.core.next.call(null, s);
      var G__24181 = acc + 1;
      s = G__24180;
      acc = G__24181;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__24183 = coll;
      if (G__24183) {
        var bit__4086__auto__ = G__24183.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4086__auto__ || G__24183.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__24184 = cljs.core.next.call(null, coll);
              var G__24185 = n - 1;
              coll = G__24184;
              n = G__24185;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__24186 = cljs.core.next.call(null, coll);
              var G__24187 = n - 1;
              var G__24188 = not_found;
              coll = G__24186;
              n = G__24187;
              not_found = G__24188;
              continue;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (coll == null) {
      return null;
    } else {
      if (function() {
        var G__24193 = coll;
        if (G__24193) {
          var bit__4086__auto__ = G__24193.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4086__auto__ || G__24193.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__24194 = coll;
                  if (G__24194) {
                    var bit__4093__auto__ = G__24194.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4093__auto__ || G__24194.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__24194.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__24194);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__24194);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(coll == null)) {
      if (function() {
        var G__24195 = coll;
        if (G__24195) {
          var bit__4086__auto__ = G__24195.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4086__auto__ || G__24195.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._nth.call(null, coll, n, not_found);
      } else {
        if (coll instanceof Array) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if (function() {
                  var G__24196 = coll;
                  if (G__24196) {
                    var bit__4093__auto__ = G__24196.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4093__auto__ || G__24196.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__24196.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__24196);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__24196);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__24199 = o;
        if (G__24199) {
          var bit__4086__auto__ = G__24199.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4086__auto__ || G__24199.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__24200 = o;
        if (G__24200) {
          var bit__4086__auto__ = G__24200.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4086__auto__ || G__24200.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found;
              } else {
                return null;
              }
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays.call(null, [k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__24201__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__24202 = ret;
          var G__24203 = cljs.core.first.call(null, kvs);
          var G__24204 = cljs.core.second.call(null, kvs);
          var G__24205 = cljs.core.nnext.call(null, kvs);
          coll = G__24202;
          k = G__24203;
          v = G__24204;
          kvs = G__24205;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__24201 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__24201__delegate.call(this, coll, k, v, kvs);
    };
    G__24201.cljs$lang$maxFixedArity = 3;
    G__24201.cljs$lang$applyTo = function(arglist__24206) {
      var coll = cljs.core.first(arglist__24206);
      arglist__24206 = cljs.core.next(arglist__24206);
      var k = cljs.core.first(arglist__24206);
      arglist__24206 = cljs.core.next(arglist__24206);
      var v = cljs.core.first(arglist__24206);
      var kvs = cljs.core.rest(arglist__24206);
      return G__24201__delegate(coll, k, v, kvs);
    };
    G__24201.cljs$core$IFn$_invoke$arity$variadic = G__24201__delegate;
    return G__24201;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__24207__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__24208 = ret;
            var G__24209 = cljs.core.first.call(null, ks);
            var G__24210 = cljs.core.next.call(null, ks);
            coll = G__24208;
            k = G__24209;
            ks = G__24210;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__24207 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24207__delegate.call(this, coll, k, ks);
    };
    G__24207.cljs$lang$maxFixedArity = 2;
    G__24207.cljs$lang$applyTo = function(arglist__24211) {
      var coll = cljs.core.first(arglist__24211);
      arglist__24211 = cljs.core.next(arglist__24211);
      var k = cljs.core.first(arglist__24211);
      var ks = cljs.core.rest(arglist__24211);
      return G__24207__delegate(coll, k, ks);
    };
    G__24207.cljs$core$IFn$_invoke$arity$variadic = G__24207__delegate;
    return G__24207;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3443__auto__ = goog.isFunction(f);
  if (or__3443__auto__) {
    return or__3443__auto__;
  } else {
    var G__24215 = f;
    if (G__24215) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto____$1 = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto____$1)) {
          return or__3443__auto____$1;
        } else {
          return G__24215.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__24215.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__24215);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__24215);
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__24223 = o;
    if (G__24223) {
      var bit__4093__auto__ = G__24223.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4093__auto__ || G__24223.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__24223.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__24223);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__24223);
    }
  }()) {
    return with_meta.call(null, function() {
      if (typeof cljs.core.t24224 !== "undefined") {
      } else {
        cljs.core.t24224 = function(meta, o, with_meta, meta24225) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta24225 = meta24225;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217;
        };
        cljs.core.t24224.cljs$lang$type = true;
        cljs.core.t24224.cljs$lang$ctorStr = "cljs.core/t24224";
        cljs.core.t24224.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
          return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/t24224");
        };
        cljs.core.t24224.prototype.call = function() {
          var G__24228__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__24228 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
            }
            return G__24228__delegate.call(this, self__, args);
          };
          G__24228.cljs$lang$maxFixedArity = 1;
          G__24228.cljs$lang$applyTo = function(arglist__24229) {
            var self__ = cljs.core.first(arglist__24229);
            var args = cljs.core.rest(arglist__24229);
            return G__24228__delegate(self__, args);
          };
          G__24228.cljs$core$IFn$_invoke$arity$variadic = G__24228__delegate;
          return G__24228;
        }();
        cljs.core.t24224.prototype.apply = function(self__, args24227) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24227)));
        };
        cljs.core.t24224.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__24230__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args);
          };
          var G__24230 = function(var_args) {
            var self__ = this;
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__24230__delegate.call(this, args);
          };
          G__24230.cljs$lang$maxFixedArity = 0;
          G__24230.cljs$lang$applyTo = function(arglist__24231) {
            var args = cljs.core.seq(arglist__24231);
            return G__24230__delegate(args);
          };
          G__24230.cljs$core$IFn$_invoke$arity$variadic = G__24230__delegate;
          return G__24230;
        }();
        cljs.core.t24224.prototype.cljs$core$Fn$ = true;
        cljs.core.t24224.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24226) {
          var self__ = this;
          var _24226__$1 = this;
          return self__.meta24225;
        };
        cljs.core.t24224.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24226, meta24225__$1) {
          var self__ = this;
          var _24226__$1 = this;
          return new cljs.core.t24224(self__.meta, self__.o, self__.with_meta, meta24225__$1);
        };
        cljs.core.__GT_t24224 = function __GT_t24224(meta__$1, o__$1, with_meta__$1, meta24225) {
          return new cljs.core.t24224(meta__$1, o__$1, with_meta__$1, meta24225);
        };
      }
      return new cljs.core.t24224(meta, o, with_meta, null);
    }(), meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3431__auto__ = !(o == null);
    if (and__3431__auto__) {
      var G__24235 = o;
      if (G__24235) {
        var bit__4093__auto__ = G__24235.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4093__auto__ || G__24235.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__24235.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__24235);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__24235);
      }
    } else {
      return and__3431__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__24236__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__24237 = ret;
            var G__24238 = cljs.core.first.call(null, ks);
            var G__24239 = cljs.core.next.call(null, ks);
            coll = G__24237;
            k = G__24238;
            ks = G__24239;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__24236 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24236__delegate.call(this, coll, k, ks);
    };
    G__24236.cljs$lang$maxFixedArity = 2;
    G__24236.cljs$lang$applyTo = function(arglist__24240) {
      var coll = cljs.core.first(arglist__24240);
      arglist__24240 = cljs.core.next(arglist__24240);
      var k = cljs.core.first(arglist__24240);
      var ks = cljs.core.rest(arglist__24240);
      return G__24236__delegate(coll, k, ks);
    };
    G__24236.cljs$core$IFn$_invoke$arity$variadic = G__24236__delegate;
    return G__24236;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.string_hash_cache = function() {
  var obj24242 = {};
  return obj24242;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj24246 = {};
      return obj24246;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__24248 = o;
    if (G__24248) {
      var bit__4086__auto__ = G__24248.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4086__auto__ || G__24248.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o);
          } else {
            if (o == null) {
              return 0;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return cljs.core._hash.call(null, o);
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__24250 = x;
    if (G__24250) {
      var bit__4093__auto__ = G__24250.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4093__auto__ || G__24250.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__24250.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__24250);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__24250);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__24252 = x;
    if (G__24252) {
      var bit__4093__auto__ = G__24252.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4093__auto__ || G__24252.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__24252.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__24252);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__24252);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__24254 = x;
  if (G__24254) {
    var bit__4093__auto__ = G__24254.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4093__auto__ || G__24254.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__24254.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__24254);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__24254);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__24256 = x;
  if (G__24256) {
    var bit__4093__auto__ = G__24256.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4093__auto__ || G__24256.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__24256.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__24256);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__24256);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__24258 = x;
  if (G__24258) {
    var bit__4093__auto__ = G__24258.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4093__auto__ || G__24258.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__24258.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__24258);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__24258);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__24260 = x;
  if (G__24260) {
    var bit__4093__auto__ = G__24260.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4093__auto__ || G__24260.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__24260.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__24260);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__24260);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__24262 = x;
    if (G__24262) {
      var bit__4093__auto__ = G__24262.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4093__auto__ || G__24262.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__24262.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__24262);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__24262);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__24264 = x;
  if (G__24264) {
    var bit__4093__auto__ = G__24264.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4093__auto__ || G__24264.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__24264.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__24264);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__24264);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__24266 = x;
  if (G__24266) {
    var bit__4086__auto__ = G__24266.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4086__auto__ || G__24266.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj24270 = {};
    return obj24270;
  };
  var js_obj__1 = function() {
    var G__24271__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__24271 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__24271__delegate.call(this, keyvals);
    };
    G__24271.cljs$lang$maxFixedArity = 0;
    G__24271.cljs$lang$applyTo = function(arglist__24272) {
      var keyvals = cljs.core.seq(arglist__24272);
      return G__24271__delegate(keyvals);
    };
    G__24271.cljs$core$IFn$_invoke$arity$variadic = G__24271__delegate;
    return G__24271;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key);
  });
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__24273 = i__$1 + 1;
      var G__24274 = j__$1 + 1;
      var G__24275 = len__$1 - 1;
      i__$1 = G__24273;
      j__$1 = G__24274;
      len__$1 = G__24275;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__24276 = i__$1 - 1;
      var G__24277 = j__$1 - 1;
      var G__24278 = len__$1 - 1;
      i__$1 = G__24276;
      j__$1 = G__24277;
      len__$1 = G__24278;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj24280 = {};
  return obj24280;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__24282 = s;
    if (G__24282) {
      var bit__4093__auto__ = G__24282.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4093__auto__ || G__24282.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__24282.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__24282);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__24282);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__24284 = s;
  if (G__24284) {
    var bit__4093__auto__ = G__24284.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4093__auto__ || G__24284.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__24284.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__24284);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__24284);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3443__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3443__auto__) {
    return or__3443__auto__;
  } else {
    var G__24288 = f;
    if (G__24288) {
      var bit__4093__auto__ = G__24288.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4093__auto__ || G__24288.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__24288.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__24288);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__24288);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && (!isNaN(n) && (!(n === Infinity) && parseFloat(n) === parseInt(n, 10)));
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && (cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__24289__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, x], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__24290 = cljs.core.conj.call(null, s, x__$1);
              var G__24291 = etc;
              s = G__24290;
              xs = G__24291;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__24289 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24289__delegate.call(this, x, y, more);
    };
    G__24289.cljs$lang$maxFixedArity = 2;
    G__24289.cljs$lang$applyTo = function(arglist__24292) {
      var x = cljs.core.first(arglist__24292);
      arglist__24292 = cljs.core.next(arglist__24292);
      var y = cljs.core.first(arglist__24292);
      var more = cljs.core.rest(arglist__24292);
      return G__24289__delegate(x, y, more);
    };
    G__24289.cljs$core$IFn$_invoke$arity$variadic = G__24289__delegate;
    return G__24289;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3443__auto__ = cljs.core.seq.call(null, coll);
    if (or__3443__auto__) {
      return or__3443__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__24294 = x;
            if (G__24294) {
              var bit__4086__auto__ = G__24294.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4086__auto__ || G__24294.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0);
        } else {
          return null;
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__24295 = xs;
        var G__24296 = ys;
        var G__24297 = len;
        var G__24298 = n + 1;
        xs = G__24295;
        ys = G__24296;
        len = G__24297;
        n = G__24298;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__24299 = nval;
          var G__24300 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__24299;
          coll__$1 = G__24300;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__24303 = coll;
      if (G__24303) {
        var bit__4086__auto__ = G__24303.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4086__auto__ || G__24303.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__24304 = coll;
      if (G__24304) {
        var bit__4086__auto__ = G__24304.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4086__auto__ || G__24304.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__24305__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__24305 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24305__delegate.call(this, x, y, more);
    };
    G__24305.cljs$lang$maxFixedArity = 2;
    G__24305.cljs$lang$applyTo = function(arglist__24306) {
      var x = cljs.core.first(arglist__24306);
      arglist__24306 = cljs.core.next(arglist__24306);
      var y = cljs.core.first(arglist__24306);
      var more = cljs.core.rest(arglist__24306);
      return G__24305__delegate(x, y, more);
    };
    G__24305.cljs$core$IFn$_invoke$arity$variadic = G__24305__delegate;
    return G__24305;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__24307__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__24307 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24307__delegate.call(this, x, y, more);
    };
    G__24307.cljs$lang$maxFixedArity = 2;
    G__24307.cljs$lang$applyTo = function(arglist__24308) {
      var x = cljs.core.first(arglist__24308);
      arglist__24308 = cljs.core.next(arglist__24308);
      var y = cljs.core.first(arglist__24308);
      var more = cljs.core.rest(arglist__24308);
      return G__24307__delegate(x, y, more);
    };
    G__24307.cljs$core$IFn$_invoke$arity$variadic = G__24307__delegate;
    return G__24307;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__24309__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__24309 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24309__delegate.call(this, x, y, more);
    };
    G__24309.cljs$lang$maxFixedArity = 2;
    G__24309.cljs$lang$applyTo = function(arglist__24310) {
      var x = cljs.core.first(arglist__24310);
      arglist__24310 = cljs.core.next(arglist__24310);
      var y = cljs.core.first(arglist__24310);
      var more = cljs.core.rest(arglist__24310);
      return G__24309__delegate(x, y, more);
    };
    G__24309.cljs$core$IFn$_invoke$arity$variadic = G__24309__delegate;
    return G__24309;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__24311__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__24311 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24311__delegate.call(this, x, y, more);
    };
    G__24311.cljs$lang$maxFixedArity = 2;
    G__24311.cljs$lang$applyTo = function(arglist__24312) {
      var x = cljs.core.first(arglist__24312);
      arglist__24312 = cljs.core.next(arglist__24312);
      var y = cljs.core.first(arglist__24312);
      var more = cljs.core.rest(arglist__24312);
      return G__24311__delegate(x, y, more);
    };
    G__24311.cljs$core$IFn$_invoke$arity$variadic = G__24311__delegate;
    return G__24311;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__24313__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__24314 = y;
            var G__24315 = cljs.core.first.call(null, more);
            var G__24316 = cljs.core.next.call(null, more);
            x = G__24314;
            y = G__24315;
            more = G__24316;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__24313 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24313__delegate.call(this, x, y, more);
    };
    G__24313.cljs$lang$maxFixedArity = 2;
    G__24313.cljs$lang$applyTo = function(arglist__24317) {
      var x = cljs.core.first(arglist__24317);
      arglist__24317 = cljs.core.next(arglist__24317);
      var y = cljs.core.first(arglist__24317);
      var more = cljs.core.rest(arglist__24317);
      return G__24313__delegate(x, y, more);
    };
    G__24313.cljs$core$IFn$_invoke$arity$variadic = G__24313__delegate;
    return G__24313;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__24318__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__24319 = y;
            var G__24320 = cljs.core.first.call(null, more);
            var G__24321 = cljs.core.next.call(null, more);
            x = G__24319;
            y = G__24320;
            more = G__24321;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__24318 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24318__delegate.call(this, x, y, more);
    };
    G__24318.cljs$lang$maxFixedArity = 2;
    G__24318.cljs$lang$applyTo = function(arglist__24322) {
      var x = cljs.core.first(arglist__24322);
      arglist__24322 = cljs.core.next(arglist__24322);
      var y = cljs.core.first(arglist__24322);
      var more = cljs.core.rest(arglist__24322);
      return G__24318__delegate(x, y, more);
    };
    G__24318.cljs$core$IFn$_invoke$arity$variadic = G__24318__delegate;
    return G__24318;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__24323__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__24324 = y;
            var G__24325 = cljs.core.first.call(null, more);
            var G__24326 = cljs.core.next.call(null, more);
            x = G__24324;
            y = G__24325;
            more = G__24326;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__24323 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24323__delegate.call(this, x, y, more);
    };
    G__24323.cljs$lang$maxFixedArity = 2;
    G__24323.cljs$lang$applyTo = function(arglist__24327) {
      var x = cljs.core.first(arglist__24327);
      arglist__24327 = cljs.core.next(arglist__24327);
      var y = cljs.core.first(arglist__24327);
      var more = cljs.core.rest(arglist__24327);
      return G__24323__delegate(x, y, more);
    };
    G__24323.cljs$core$IFn$_invoke$arity$variadic = G__24323__delegate;
    return G__24323;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__24328__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__24329 = y;
            var G__24330 = cljs.core.first.call(null, more);
            var G__24331 = cljs.core.next.call(null, more);
            x = G__24329;
            y = G__24330;
            more = G__24331;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__24328 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24328__delegate.call(this, x, y, more);
    };
    G__24328.cljs$lang$maxFixedArity = 2;
    G__24328.cljs$lang$applyTo = function(arglist__24332) {
      var x = cljs.core.first(arglist__24332);
      arglist__24332 = cljs.core.next(arglist__24332);
      var y = cljs.core.first(arglist__24332);
      var more = cljs.core.rest(arglist__24332);
      return G__24328__delegate(x, y, more);
    };
    G__24328.cljs$core$IFn$_invoke$arity$variadic = G__24328__delegate;
    return G__24328;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3750__auto__ = x;
    var y__3751__auto__ = y;
    return x__3750__auto__ > y__3751__auto__ ? x__3750__auto__ : y__3751__auto__;
  };
  var max__3 = function() {
    var G__24333__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3750__auto__ = x;
        var y__3751__auto__ = y;
        return x__3750__auto__ > y__3751__auto__ ? x__3750__auto__ : y__3751__auto__;
      }(), more);
    };
    var G__24333 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24333__delegate.call(this, x, y, more);
    };
    G__24333.cljs$lang$maxFixedArity = 2;
    G__24333.cljs$lang$applyTo = function(arglist__24334) {
      var x = cljs.core.first(arglist__24334);
      arglist__24334 = cljs.core.next(arglist__24334);
      var y = cljs.core.first(arglist__24334);
      var more = cljs.core.rest(arglist__24334);
      return G__24333__delegate(x, y, more);
    };
    G__24333.cljs$core$IFn$_invoke$arity$variadic = G__24333__delegate;
    return G__24333;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3757__auto__ = x;
    var y__3758__auto__ = y;
    return x__3757__auto__ < y__3758__auto__ ? x__3757__auto__ : y__3758__auto__;
  };
  var min__3 = function() {
    var G__24335__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3757__auto__ = x;
        var y__3758__auto__ = y;
        return x__3757__auto__ < y__3758__auto__ ? x__3757__auto__ : y__3758__auto__;
      }(), more);
    };
    var G__24335 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24335__delegate.call(this, x, y, more);
    };
    G__24335.cljs$lang$maxFixedArity = 2;
    G__24335.cljs$lang$applyTo = function(arglist__24336) {
      var x = cljs.core.first(arglist__24336);
      arglist__24336 = cljs.core.next(arglist__24336);
      var y = cljs.core.first(arglist__24336);
      var more = cljs.core.rest(arglist__24336);
      return G__24335__delegate(x, y, more);
    };
    G__24335.cljs$core$IFn$_invoke$arity$variadic = G__24335__delegate;
    return G__24335;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      } else {
        return null;
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__24337__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__24337 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24337__delegate.call(this, x, y, more);
    };
    G__24337.cljs$lang$maxFixedArity = 2;
    G__24337.cljs$lang$applyTo = function(arglist__24338) {
      var x = cljs.core.first(arglist__24338);
      arglist__24338 = cljs.core.next(arglist__24338);
      var y = cljs.core.first(arglist__24338);
      var more = cljs.core.rest(arglist__24338);
      return G__24337__delegate(x, y, more);
    };
    G__24337.cljs$core$IFn$_invoke$arity$variadic = G__24337__delegate;
    return G__24337;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__24339__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__24339 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24339__delegate.call(this, x, y, more);
    };
    G__24339.cljs$lang$maxFixedArity = 2;
    G__24339.cljs$lang$applyTo = function(arglist__24340) {
      var x = cljs.core.first(arglist__24340);
      arglist__24340 = cljs.core.next(arglist__24340);
      var y = cljs.core.first(arglist__24340);
      var more = cljs.core.rest(arglist__24340);
      return G__24339__delegate(x, y, more);
    };
    G__24339.cljs$core$IFn$_invoke$arity$variadic = G__24339__delegate;
    return G__24339;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__24341__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__24341 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24341__delegate.call(this, x, y, more);
    };
    G__24341.cljs$lang$maxFixedArity = 2;
    G__24341.cljs$lang$applyTo = function(arglist__24342) {
      var x = cljs.core.first(arglist__24342);
      arglist__24342 = cljs.core.next(arglist__24342);
      var y = cljs.core.first(arglist__24342);
      var more = cljs.core.rest(arglist__24342);
      return G__24341__delegate(x, y, more);
    };
    G__24341.cljs$core$IFn$_invoke$arity$variadic = G__24341__delegate;
    return G__24341;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__24343__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__24343 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24343__delegate.call(this, x, y, more);
    };
    G__24343.cljs$lang$maxFixedArity = 2;
    G__24343.cljs$lang$applyTo = function(arglist__24344) {
      var x = cljs.core.first(arglist__24344);
      arglist__24344 = cljs.core.next(arglist__24344);
      var y = cljs.core.first(arglist__24344);
      var more = cljs.core.rest(arglist__24344);
      return G__24343__delegate(x, y, more);
    };
    G__24343.cljs$core$IFn$_invoke$arity$variadic = G__24343__delegate;
    return G__24343;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__24345__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__24345 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24345__delegate.call(this, x, y, more);
    };
    G__24345.cljs$lang$maxFixedArity = 2;
    G__24345.cljs$lang$applyTo = function(arglist__24346) {
      var x = cljs.core.first(arglist__24346);
      arglist__24346 = cljs.core.next(arglist__24346);
      var y = cljs.core.first(arglist__24346);
      var more = cljs.core.rest(arglist__24346);
      return G__24345__delegate(x, y, more);
    };
    G__24345.cljs$core$IFn$_invoke$arity$variadic = G__24345__delegate;
    return G__24345;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x;
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract__3 = function() {
    var G__24347__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more);
    };
    var G__24347 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24347__delegate.call(this, x, y, more);
    };
    G__24347.cljs$lang$maxFixedArity = 2;
    G__24347.cljs$lang$applyTo = function(arglist__24348) {
      var x = cljs.core.first(arglist__24348);
      arglist__24348 = cljs.core.next(arglist__24348);
      var y = cljs.core.first(arglist__24348);
      var more = cljs.core.rest(arglist__24348);
      return G__24347__delegate(x, y, more);
    };
    G__24347.cljs$core$IFn$_invoke$arity$variadic = G__24347__delegate;
    return G__24347;
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract;
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x;
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_substract_int__3 = function() {
    var G__24349__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more);
    };
    var G__24349 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24349__delegate.call(this, x, y, more);
    };
    G__24349.cljs$lang$maxFixedArity = 2;
    G__24349.cljs$lang$applyTo = function(arglist__24350) {
      var x = cljs.core.first(arglist__24350);
      arglist__24350 = cljs.core.next(arglist__24350);
      var y = cljs.core.first(arglist__24350);
      var more = cljs.core.rest(arglist__24350);
      return G__24349__delegate(x, y, more);
    };
    G__24349.cljs$core$IFn$_invoke$arity$variadic = G__24349__delegate;
    return G__24349;
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__24351__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__24352 = y;
            var G__24353 = cljs.core.first.call(null, more);
            var G__24354 = cljs.core.next.call(null, more);
            x = G__24352;
            y = G__24353;
            more = G__24354;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__24351 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24351__delegate.call(this, x, y, more);
    };
    G__24351.cljs$lang$maxFixedArity = 2;
    G__24351.cljs$lang$applyTo = function(arglist__24355) {
      var x = cljs.core.first(arglist__24355);
      arglist__24355 = cljs.core.next(arglist__24355);
      var y = cljs.core.first(arglist__24355);
      var more = cljs.core.rest(arglist__24355);
      return G__24351__delegate(x, y, more);
    };
    G__24351.cljs$core$IFn$_invoke$arity$variadic = G__24351__delegate;
    return G__24351;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__24356 = n__$1 - 1;
      var G__24357 = cljs.core.next.call(null, xs);
      n__$1 = G__24356;
      xs = G__24357;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return x.toString();
    }
  };
  var str__2 = function() {
    var G__24358__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__24359 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__24360 = cljs.core.next.call(null, more);
          sb = G__24359;
          more = G__24360;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__24358 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__24358__delegate.call(this, x, ys);
    };
    G__24358.cljs$lang$maxFixedArity = 1;
    G__24358.cljs$lang$applyTo = function(arglist__24361) {
      var x = cljs.core.first(arglist__24361);
      var ys = cljs.core.rest(arglist__24361);
      return G__24358__delegate(x, ys);
    };
    G__24358.cljs$core$IFn$_invoke$arity$variadic = G__24358__delegate;
    return G__24358;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__24362 = cljs.core.next.call(null, xs);
            var G__24363 = cljs.core.next.call(null, ys);
            xs = G__24362;
            ys = G__24363;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__24364 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__24365 = cljs.core.next.call(null, s);
        res = G__24364;
        s = G__24365;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__24366 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__24367 = cljs.core.next.call(null, s);
      h = G__24366;
      s = G__24367;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__24368 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__24369 = cljs.core.next.call(null, s__$1);
      h = G__24368;
      s__$1 = G__24369;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__24376_24382 = cljs.core.seq.call(null, fn_map);
  var chunk__24377_24383 = null;
  var count__24378_24384 = 0;
  var i__24379_24385 = 0;
  while (true) {
    if (i__24379_24385 < count__24378_24384) {
      var vec__24380_24386 = cljs.core._nth.call(null, chunk__24377_24383, i__24379_24385);
      var key_name_24387 = cljs.core.nth.call(null, vec__24380_24386, 0, null);
      var f_24388 = cljs.core.nth.call(null, vec__24380_24386, 1, null);
      var str_name_24389 = cljs.core.name.call(null, key_name_24387);
      obj[str_name_24389] = f_24388;
      var G__24390 = seq__24376_24382;
      var G__24391 = chunk__24377_24383;
      var G__24392 = count__24378_24384;
      var G__24393 = i__24379_24385 + 1;
      seq__24376_24382 = G__24390;
      chunk__24377_24383 = G__24391;
      count__24378_24384 = G__24392;
      i__24379_24385 = G__24393;
      continue;
    } else {
      var temp__4092__auto___24394 = cljs.core.seq.call(null, seq__24376_24382);
      if (temp__4092__auto___24394) {
        var seq__24376_24395__$1 = temp__4092__auto___24394;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24376_24395__$1)) {
          var c__4191__auto___24396 = cljs.core.chunk_first.call(null, seq__24376_24395__$1);
          var G__24397 = cljs.core.chunk_rest.call(null, seq__24376_24395__$1);
          var G__24398 = c__4191__auto___24396;
          var G__24399 = cljs.core.count.call(null, c__4191__auto___24396);
          var G__24400 = 0;
          seq__24376_24382 = G__24397;
          chunk__24377_24383 = G__24398;
          count__24378_24384 = G__24399;
          i__24379_24385 = G__24400;
          continue;
        } else {
          var vec__24381_24401 = cljs.core.first.call(null, seq__24376_24395__$1);
          var key_name_24402 = cljs.core.nth.call(null, vec__24381_24401, 0, null);
          var f_24403 = cljs.core.nth.call(null, vec__24381_24401, 1, null);
          var str_name_24404 = cljs.core.name.call(null, key_name_24402);
          obj[str_name_24404] = f_24403;
          var G__24405 = cljs.core.next.call(null, seq__24376_24395__$1);
          var G__24406 = null;
          var G__24407 = 0;
          var G__24408 = 0;
          seq__24376_24382 = G__24405;
          chunk__24377_24383 = G__24406;
          count__24378_24384 = G__24407;
          i__24379_24385 = G__24408;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/List");
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__24410 = coll;
  if (G__24410) {
    var bit__4093__auto__ = G__24410.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4093__auto__ || G__24410.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__24410.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__24410);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__24410);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__24411 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__24411;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__24412 = i - 1;
        var G__24413 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__24412;
        r = G__24413;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__24414) {
    var xs = cljs.core.seq(arglist__24414);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3443__auto__ = coll == null;
    if (or__3443__auto__) {
      return or__3443__auto__;
    } else {
      var G__24418 = coll;
      if (G__24418) {
        var bit__4086__auto__ = G__24418.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4086__auto__ || G__24418.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__24420 = x;
  if (G__24420) {
    var bit__4093__auto__ = G__24420.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4093__auto__ || G__24420.cljs$core$IList$) {
      return true;
    } else {
      if (!G__24420.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__24420);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__24420);
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash;
  } else {
    return self__._hash;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__24422 = null;
  var G__24422__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__24422__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__24422 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24422__2.call(this, self__, coll);
      case 3:
        return G__24422__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__24422;
}();
cljs.core.Keyword.prototype.apply = function(self__, args24421) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24421)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__24424 = x;
    if (G__24424) {
      var bit__4086__auto__ = G__24424.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4086__auto__ || G__24424.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__24425 = ls.sval();
        ls = G__24425;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__24427 = s;
    if (G__24427) {
      var bit__4086__auto__ = G__24427.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4086__auto__ || G__24427.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__24428 = cljs.core.next.call(null, s__$1);
      s__$1 = G__24428;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_24429 = 0;
  var xs_24430 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_24430) {
      ret[i_24429] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_24430));
      var G__24431 = i_24429 + 1;
      var G__24432 = cljs.core.next.call(null, xs_24430);
      i_24429 = G__24431;
      xs_24430 = G__24432;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__24433 = i + 1;
          var G__24434 = cljs.core.next.call(null, s__$1);
          i = G__24433;
          s__$1 = G__24434;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4291__auto___24435 = size;
      var i_24436 = 0;
      while (true) {
        if (i_24436 < n__4291__auto___24435) {
          a[i_24436] = init_val_or_seq;
          var G__24437 = i_24436 + 1;
          i_24436 = G__24437;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__24438 = i + 1;
          var G__24439 = cljs.core.next.call(null, s__$1);
          i = G__24438;
          s__$1 = G__24439;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4291__auto___24440 = size;
      var i_24441 = 0;
      while (true) {
        if (i_24441 < n__4291__auto___24440) {
          a[i_24441] = init_val_or_seq;
          var G__24442 = i_24441 + 1;
          i_24441 = G__24442;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__24443 = i + 1;
          var G__24444 = cljs.core.next.call(null, s__$1);
          i = G__24443;
          s__$1 = G__24444;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4291__auto___24445 = size;
      var i_24446 = 0;
      while (true) {
        if (i_24446 < n__4291__auto___24445) {
          a[i_24446] = init_val_or_seq;
          var G__24447 = i_24446 + 1;
          i_24446 = G__24447;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__24448 = i + 1;
          var G__24449 = cljs.core.next.call(null, s__$1);
          i = G__24448;
          s__$1 = G__24449;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4291__auto___24450 = size;
      var i_24451 = 0;
      while (true) {
        if (i_24451 < n__4291__auto___24450) {
          a[i_24451] = init_val_or_seq;
          var G__24452 = i_24451 + 1;
          i_24451 = G__24452;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__24453 = cljs.core.next.call(null, s__$1);
        var G__24454 = i - 1;
        var G__24455 = sum + 1;
        s__$1 = G__24453;
        i = G__24454;
        sum = G__24455;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__24456__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__24456 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24456__delegate.call(this, x, y, zs);
    };
    G__24456.cljs$lang$maxFixedArity = 2;
    G__24456.cljs$lang$applyTo = function(arglist__24457) {
      var x = cljs.core.first(arglist__24457);
      arglist__24457 = cljs.core.next(arglist__24457);
      var y = cljs.core.first(arglist__24457);
      var zs = cljs.core.rest(arglist__24457);
      return G__24456__delegate(x, y, zs);
    };
    G__24456.cljs$core$IFn$_invoke$arity$variadic = G__24456__delegate;
    return G__24456;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__24458__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__24458 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__24458__delegate.call(this, a, b, c, d, more);
    };
    G__24458.cljs$lang$maxFixedArity = 4;
    G__24458.cljs$lang$applyTo = function(arglist__24459) {
      var a = cljs.core.first(arglist__24459);
      arglist__24459 = cljs.core.next(arglist__24459);
      var b = cljs.core.first(arglist__24459);
      arglist__24459 = cljs.core.next(arglist__24459);
      var c = cljs.core.first(arglist__24459);
      arglist__24459 = cljs.core.next(arglist__24459);
      var d = cljs.core.first(arglist__24459);
      var more = cljs.core.rest(arglist__24459);
      return G__24458__delegate(a, b, c, d, more);
    };
    G__24458.cljs$core$IFn$_invoke$arity$variadic = G__24458__delegate;
    return G__24458;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__24460__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__24461 = ntcoll;
          var G__24462 = cljs.core.first.call(null, vals);
          var G__24463 = cljs.core.next.call(null, vals);
          tcoll = G__24461;
          val = G__24462;
          vals = G__24463;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__24460 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24460__delegate.call(this, tcoll, val, vals);
    };
    G__24460.cljs$lang$maxFixedArity = 2;
    G__24460.cljs$lang$applyTo = function(arglist__24464) {
      var tcoll = cljs.core.first(arglist__24464);
      arglist__24464 = cljs.core.next(arglist__24464);
      var val = cljs.core.first(arglist__24464);
      var vals = cljs.core.rest(arglist__24464);
      return G__24460__delegate(tcoll, val, vals);
    };
    G__24460.cljs$core$IFn$_invoke$arity$variadic = G__24460__delegate;
    return G__24460;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__24465__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__24466 = ntcoll;
          var G__24467 = cljs.core.first.call(null, kvs);
          var G__24468 = cljs.core.second.call(null, kvs);
          var G__24469 = cljs.core.nnext.call(null, kvs);
          tcoll = G__24466;
          key = G__24467;
          val = G__24468;
          kvs = G__24469;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__24465 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__24465__delegate.call(this, tcoll, key, val, kvs);
    };
    G__24465.cljs$lang$maxFixedArity = 3;
    G__24465.cljs$lang$applyTo = function(arglist__24470) {
      var tcoll = cljs.core.first(arglist__24470);
      arglist__24470 = cljs.core.next(arglist__24470);
      var key = cljs.core.first(arglist__24470);
      arglist__24470 = cljs.core.next(arglist__24470);
      var val = cljs.core.first(arglist__24470);
      var kvs = cljs.core.rest(arglist__24470);
      return G__24465__delegate(tcoll, key, val, kvs);
    };
    G__24465.cljs$core$IFn$_invoke$arity$variadic = G__24465__delegate;
    return G__24465;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__24471__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__24472 = ntcoll;
          var G__24473 = cljs.core.first.call(null, ks);
          var G__24474 = cljs.core.next.call(null, ks);
          tcoll = G__24472;
          key = G__24473;
          ks = G__24474;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__24471 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24471__delegate.call(this, tcoll, key, ks);
    };
    G__24471.cljs$lang$maxFixedArity = 2;
    G__24471.cljs$lang$applyTo = function(arglist__24475) {
      var tcoll = cljs.core.first(arglist__24475);
      arglist__24475 = cljs.core.next(arglist__24475);
      var key = cljs.core.first(arglist__24475);
      var ks = cljs.core.rest(arglist__24475);
      return G__24471__delegate(tcoll, key, ks);
    };
    G__24471.cljs$core$IFn$_invoke$arity$variadic = G__24471__delegate;
    return G__24471;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__24476__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__24477 = ntcoll;
          var G__24478 = cljs.core.first.call(null, vals);
          var G__24479 = cljs.core.next.call(null, vals);
          tcoll = G__24477;
          val = G__24478;
          vals = G__24479;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__24476 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24476__delegate.call(this, tcoll, val, vals);
    };
    G__24476.cljs$lang$maxFixedArity = 2;
    G__24476.cljs$lang$applyTo = function(arglist__24480) {
      var tcoll = cljs.core.first(arglist__24480);
      arglist__24480 = cljs.core.next(arglist__24480);
      var val = cljs.core.first(arglist__24480);
      var vals = cljs.core.rest(arglist__24480);
      return G__24476__delegate(tcoll, val, vals);
    };
    G__24476.cljs$core$IFn$_invoke$arity$variadic = G__24476__delegate;
    return G__24476;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a);
      } else {
        return f.call(null, a);
      }
    } else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b);
        } else {
          return f.call(null, a, b);
        }
      } else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c);
          } else {
            return f.call(null, a, b, c);
          }
        } else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d);
            } else {
              return f.call(null, a, b, c, d);
            }
          } else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e);
              } else {
                return f.call(null, a, b, c, d, e);
              }
            } else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1);
                } else {
                  return f__$1.call(null, a, b, c, d, e, f__$1);
                }
              } else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g);
                  } else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g);
                  }
                } else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h);
                    } else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h);
                    }
                  } else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i);
                      } else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i);
                      }
                    } else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j);
                        } else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j);
                        }
                      } else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k);
                          } else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k);
                          }
                        } else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            } else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l);
                            }
                          } else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              } else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m);
                              }
                            } else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                } else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n);
                                }
                              } else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  } else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o);
                                  }
                                } else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    } else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p);
                                    }
                                  } else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      } else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q);
                                      }
                                    } else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        } else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r);
                                        }
                                      } else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          } else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s);
                                          }
                                        } else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            } else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__24481__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__24481 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__24481__delegate.call(this, f, a, b, c, d, args);
    };
    G__24481.cljs$lang$maxFixedArity = 5;
    G__24481.cljs$lang$applyTo = function(arglist__24482) {
      var f = cljs.core.first(arglist__24482);
      arglist__24482 = cljs.core.next(arglist__24482);
      var a = cljs.core.first(arglist__24482);
      arglist__24482 = cljs.core.next(arglist__24482);
      var b = cljs.core.first(arglist__24482);
      arglist__24482 = cljs.core.next(arglist__24482);
      var c = cljs.core.first(arglist__24482);
      arglist__24482 = cljs.core.next(arglist__24482);
      var d = cljs.core.first(arglist__24482);
      var args = cljs.core.rest(arglist__24482);
      return G__24481__delegate(f, a, b, c, d, args);
    };
    G__24481.cljs$core$IFn$_invoke$arity$variadic = G__24481__delegate;
    return G__24481;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__24483__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__24483 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__24483__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__24483.cljs$lang$maxFixedArity = 6;
    G__24483.cljs$lang$applyTo = function(arglist__24484) {
      var obj = cljs.core.first(arglist__24484);
      arglist__24484 = cljs.core.next(arglist__24484);
      var f = cljs.core.first(arglist__24484);
      arglist__24484 = cljs.core.next(arglist__24484);
      var a = cljs.core.first(arglist__24484);
      arglist__24484 = cljs.core.next(arglist__24484);
      var b = cljs.core.first(arglist__24484);
      arglist__24484 = cljs.core.next(arglist__24484);
      var c = cljs.core.first(arglist__24484);
      arglist__24484 = cljs.core.next(arglist__24484);
      var d = cljs.core.first(arglist__24484);
      var args = cljs.core.rest(arglist__24484);
      return G__24483__delegate(obj, f, a, b, c, d, args);
    };
    G__24483.cljs$core$IFn$_invoke$arity$variadic = G__24483__delegate;
    return G__24483;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__24485__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__24485 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24485__delegate.call(this, x, y, more);
    };
    G__24485.cljs$lang$maxFixedArity = 2;
    G__24485.cljs$lang$applyTo = function(arglist__24486) {
      var x = cljs.core.first(arglist__24486);
      arglist__24486 = cljs.core.next(arglist__24486);
      var y = cljs.core.first(arglist__24486);
      var more = cljs.core.rest(arglist__24486);
      return G__24485__delegate(x, y, more);
    };
    G__24485.cljs$core$IFn$_invoke$arity$variadic = G__24485__delegate;
    return G__24485;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__24487 = pred;
        var G__24488 = cljs.core.next.call(null, coll);
        pred = G__24487;
        coll = G__24488;
        continue;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3443__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        var G__24489 = pred;
        var G__24490 = cljs.core.next.call(null, coll);
        pred = G__24489;
        coll = G__24490;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__24491 = null;
    var G__24491__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__24491__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__24491__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__24491__3 = function() {
      var G__24492__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__24492 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__24492__delegate.call(this, x, y, zs);
      };
      G__24492.cljs$lang$maxFixedArity = 2;
      G__24492.cljs$lang$applyTo = function(arglist__24493) {
        var x = cljs.core.first(arglist__24493);
        arglist__24493 = cljs.core.next(arglist__24493);
        var y = cljs.core.first(arglist__24493);
        var zs = cljs.core.rest(arglist__24493);
        return G__24492__delegate(x, y, zs);
      };
      G__24492.cljs$core$IFn$_invoke$arity$variadic = G__24492__delegate;
      return G__24492;
    }();
    G__24491 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__24491__0.call(this);
        case 1:
          return G__24491__1.call(this, x);
        case 2:
          return G__24491__2.call(this, x, y);
        default:
          return G__24491__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__24491.cljs$lang$maxFixedArity = 2;
    G__24491.cljs$lang$applyTo = G__24491__3.cljs$lang$applyTo;
    return G__24491;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__24494__delegate = function(args) {
      return x;
    };
    var G__24494 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__24494__delegate.call(this, args);
    };
    G__24494.cljs$lang$maxFixedArity = 0;
    G__24494.cljs$lang$applyTo = function(arglist__24495) {
      var args = cljs.core.seq(arglist__24495);
      return G__24494__delegate(args);
    };
    G__24494.cljs$core$IFn$_invoke$arity$variadic = G__24494__delegate;
    return G__24494;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__24496 = null;
      var G__24496__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__24496__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__24496__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__24496__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__24496__4 = function() {
        var G__24497__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__24497 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__24497__delegate.call(this, x, y, z, args);
        };
        G__24497.cljs$lang$maxFixedArity = 3;
        G__24497.cljs$lang$applyTo = function(arglist__24498) {
          var x = cljs.core.first(arglist__24498);
          arglist__24498 = cljs.core.next(arglist__24498);
          var y = cljs.core.first(arglist__24498);
          arglist__24498 = cljs.core.next(arglist__24498);
          var z = cljs.core.first(arglist__24498);
          var args = cljs.core.rest(arglist__24498);
          return G__24497__delegate(x, y, z, args);
        };
        G__24497.cljs$core$IFn$_invoke$arity$variadic = G__24497__delegate;
        return G__24497;
      }();
      G__24496 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__24496__0.call(this);
          case 1:
            return G__24496__1.call(this, x);
          case 2:
            return G__24496__2.call(this, x, y);
          case 3:
            return G__24496__3.call(this, x, y, z);
          default:
            return G__24496__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__24496.cljs$lang$maxFixedArity = 3;
      G__24496.cljs$lang$applyTo = G__24496__4.cljs$lang$applyTo;
      return G__24496;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__24499 = null;
      var G__24499__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__24499__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__24499__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__24499__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__24499__4 = function() {
        var G__24500__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__24500 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__24500__delegate.call(this, x, y, z, args);
        };
        G__24500.cljs$lang$maxFixedArity = 3;
        G__24500.cljs$lang$applyTo = function(arglist__24501) {
          var x = cljs.core.first(arglist__24501);
          arglist__24501 = cljs.core.next(arglist__24501);
          var y = cljs.core.first(arglist__24501);
          arglist__24501 = cljs.core.next(arglist__24501);
          var z = cljs.core.first(arglist__24501);
          var args = cljs.core.rest(arglist__24501);
          return G__24500__delegate(x, y, z, args);
        };
        G__24500.cljs$core$IFn$_invoke$arity$variadic = G__24500__delegate;
        return G__24500;
      }();
      G__24499 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__24499__0.call(this);
          case 1:
            return G__24499__1.call(this, x);
          case 2:
            return G__24499__2.call(this, x, y);
          case 3:
            return G__24499__3.call(this, x, y, z);
          default:
            return G__24499__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__24499.cljs$lang$maxFixedArity = 3;
      G__24499.cljs$lang$applyTo = G__24499__4.cljs$lang$applyTo;
      return G__24499;
    }();
  };
  var comp__4 = function() {
    var G__24502__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__24503__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while (true) {
            if (fs__$2) {
              var G__24504 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__24505 = cljs.core.next.call(null, fs__$2);
              ret = G__24504;
              fs__$2 = G__24505;
              continue;
            } else {
              return ret;
            }
            break;
          }
        };
        var G__24503 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__24503__delegate.call(this, args);
        };
        G__24503.cljs$lang$maxFixedArity = 0;
        G__24503.cljs$lang$applyTo = function(arglist__24506) {
          var args = cljs.core.seq(arglist__24506);
          return G__24503__delegate(args);
        };
        G__24503.cljs$core$IFn$_invoke$arity$variadic = G__24503__delegate;
        return G__24503;
      }();
    };
    var G__24502 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__24502__delegate.call(this, f1, f2, f3, fs);
    };
    G__24502.cljs$lang$maxFixedArity = 3;
    G__24502.cljs$lang$applyTo = function(arglist__24507) {
      var f1 = cljs.core.first(arglist__24507);
      arglist__24507 = cljs.core.next(arglist__24507);
      var f2 = cljs.core.first(arglist__24507);
      arglist__24507 = cljs.core.next(arglist__24507);
      var f3 = cljs.core.first(arglist__24507);
      var fs = cljs.core.rest(arglist__24507);
      return G__24502__delegate(f1, f2, f3, fs);
    };
    G__24502.cljs$core$IFn$_invoke$arity$variadic = G__24502__delegate;
    return G__24502;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__24508__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__24508 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__24508__delegate.call(this, args);
      };
      G__24508.cljs$lang$maxFixedArity = 0;
      G__24508.cljs$lang$applyTo = function(arglist__24509) {
        var args = cljs.core.seq(arglist__24509);
        return G__24508__delegate(args);
      };
      G__24508.cljs$core$IFn$_invoke$arity$variadic = G__24508__delegate;
      return G__24508;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__24510__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__24510 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__24510__delegate.call(this, args);
      };
      G__24510.cljs$lang$maxFixedArity = 0;
      G__24510.cljs$lang$applyTo = function(arglist__24511) {
        var args = cljs.core.seq(arglist__24511);
        return G__24510__delegate(args);
      };
      G__24510.cljs$core$IFn$_invoke$arity$variadic = G__24510__delegate;
      return G__24510;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__24512__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__24512 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__24512__delegate.call(this, args);
      };
      G__24512.cljs$lang$maxFixedArity = 0;
      G__24512.cljs$lang$applyTo = function(arglist__24513) {
        var args = cljs.core.seq(arglist__24513);
        return G__24512__delegate(args);
      };
      G__24512.cljs$core$IFn$_invoke$arity$variadic = G__24512__delegate;
      return G__24512;
    }();
  };
  var partial__5 = function() {
    var G__24514__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__24515__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__24515 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__24515__delegate.call(this, args);
        };
        G__24515.cljs$lang$maxFixedArity = 0;
        G__24515.cljs$lang$applyTo = function(arglist__24516) {
          var args = cljs.core.seq(arglist__24516);
          return G__24515__delegate(args);
        };
        G__24515.cljs$core$IFn$_invoke$arity$variadic = G__24515__delegate;
        return G__24515;
      }();
    };
    var G__24514 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__24514__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__24514.cljs$lang$maxFixedArity = 4;
    G__24514.cljs$lang$applyTo = function(arglist__24517) {
      var f = cljs.core.first(arglist__24517);
      arglist__24517 = cljs.core.next(arglist__24517);
      var arg1 = cljs.core.first(arglist__24517);
      arglist__24517 = cljs.core.next(arglist__24517);
      var arg2 = cljs.core.first(arglist__24517);
      arglist__24517 = cljs.core.next(arglist__24517);
      var arg3 = cljs.core.first(arglist__24517);
      var more = cljs.core.rest(arglist__24517);
      return G__24514__delegate(f, arg1, arg2, arg3, more);
    };
    G__24514.cljs$core$IFn$_invoke$arity$variadic = G__24514__delegate;
    return G__24514;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__24518 = null;
      var G__24518__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__24518__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__24518__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__24518__4 = function() {
        var G__24519__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__24519 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__24519__delegate.call(this, a, b, c, ds);
        };
        G__24519.cljs$lang$maxFixedArity = 3;
        G__24519.cljs$lang$applyTo = function(arglist__24520) {
          var a = cljs.core.first(arglist__24520);
          arglist__24520 = cljs.core.next(arglist__24520);
          var b = cljs.core.first(arglist__24520);
          arglist__24520 = cljs.core.next(arglist__24520);
          var c = cljs.core.first(arglist__24520);
          var ds = cljs.core.rest(arglist__24520);
          return G__24519__delegate(a, b, c, ds);
        };
        G__24519.cljs$core$IFn$_invoke$arity$variadic = G__24519__delegate;
        return G__24519;
      }();
      G__24518 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__24518__1.call(this, a);
          case 2:
            return G__24518__2.call(this, a, b);
          case 3:
            return G__24518__3.call(this, a, b, c);
          default:
            return G__24518__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__24518.cljs$lang$maxFixedArity = 3;
      G__24518.cljs$lang$applyTo = G__24518__4.cljs$lang$applyTo;
      return G__24518;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__24521 = null;
      var G__24521__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__24521__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__24521__4 = function() {
        var G__24522__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__24522 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__24522__delegate.call(this, a, b, c, ds);
        };
        G__24522.cljs$lang$maxFixedArity = 3;
        G__24522.cljs$lang$applyTo = function(arglist__24523) {
          var a = cljs.core.first(arglist__24523);
          arglist__24523 = cljs.core.next(arglist__24523);
          var b = cljs.core.first(arglist__24523);
          arglist__24523 = cljs.core.next(arglist__24523);
          var c = cljs.core.first(arglist__24523);
          var ds = cljs.core.rest(arglist__24523);
          return G__24522__delegate(a, b, c, ds);
        };
        G__24522.cljs$core$IFn$_invoke$arity$variadic = G__24522__delegate;
        return G__24522;
      }();
      G__24521 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__24521__2.call(this, a, b);
          case 3:
            return G__24521__3.call(this, a, b, c);
          default:
            return G__24521__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__24521.cljs$lang$maxFixedArity = 3;
      G__24521.cljs$lang$applyTo = G__24521__4.cljs$lang$applyTo;
      return G__24521;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__24524 = null;
      var G__24524__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__24524__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__24524__4 = function() {
        var G__24525__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__24525 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__24525__delegate.call(this, a, b, c, ds);
        };
        G__24525.cljs$lang$maxFixedArity = 3;
        G__24525.cljs$lang$applyTo = function(arglist__24526) {
          var a = cljs.core.first(arglist__24526);
          arglist__24526 = cljs.core.next(arglist__24526);
          var b = cljs.core.first(arglist__24526);
          arglist__24526 = cljs.core.next(arglist__24526);
          var c = cljs.core.first(arglist__24526);
          var ds = cljs.core.rest(arglist__24526);
          return G__24525__delegate(a, b, c, ds);
        };
        G__24525.cljs$core$IFn$_invoke$arity$variadic = G__24525__delegate;
        return G__24525;
      }();
      G__24524 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__24524__2.call(this, a, b);
          case 3:
            return G__24524__3.call(this, a, b, c);
          default:
            return G__24524__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__24524.cljs$lang$maxFixedArity = 3;
      G__24524.cljs$lang$applyTo = G__24524__4.cljs$lang$applyTo;
      return G__24524;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4291__auto___24527 = size;
          var i_24528 = 0;
          while (true) {
            if (i_24528 < n__4291__auto___24527) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_24528, cljs.core._nth.call(null, c, i_24528)));
              var G__24529 = i_24528 + 1;
              i_24528 = G__24529;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4291__auto___24530 = size;
        var i_24531 = 0;
        while (true) {
          if (i_24531 < n__4291__auto___24530) {
            var x_24532 = f.call(null, cljs.core._nth.call(null, c, i_24531));
            if (x_24532 == null) {
            } else {
              cljs.core.chunk_append.call(null, b, x_24532);
            }
            var G__24533 = i_24531 + 1;
            i_24531 = G__24533;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
      } else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if (x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s));
        } else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4291__auto___24534 = size;
          var i_24535 = 0;
          while (true) {
            if (i_24535 < n__4291__auto___24534) {
              var x_24536 = f.call(null, idx + i_24535, cljs.core._nth.call(null, c, i_24535));
              if (x_24536 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_24536);
              }
              var G__24537 = i_24535 + 1;
              i_24535 = G__24537;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if (x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi.call(null, 0, coll);
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            return p.call(null, y);
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__24544__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__24544 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__24544__delegate.call(this, x, y, z, args);
        };
        G__24544.cljs$lang$maxFixedArity = 3;
        G__24544.cljs$lang$applyTo = function(arglist__24545) {
          var x = cljs.core.first(arglist__24545);
          arglist__24545 = cljs.core.next(arglist__24545);
          var y = cljs.core.first(arglist__24545);
          arglist__24545 = cljs.core.next(arglist__24545);
          var z = cljs.core.first(arglist__24545);
          var args = cljs.core.rest(arglist__24545);
          return G__24544__delegate(x, y, z, args);
        };
        G__24544.cljs$core$IFn$_invoke$arity$variadic = G__24544__delegate;
        return G__24544;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              var and__3431__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3431__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3431__auto____$2;
              }
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              var and__3431__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3431__auto____$2)) {
                var and__3431__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3431__auto____$3)) {
                  var and__3431__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3431__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3431__auto____$4;
                  }
                } else {
                  return and__3431__auto____$3;
                }
              } else {
                return and__3431__auto____$2;
              }
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__24546__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__24538_SHARP_) {
            var and__3431__auto__ = p1.call(null, p1__24538_SHARP_);
            if (cljs.core.truth_(and__3431__auto__)) {
              return p2.call(null, p1__24538_SHARP_);
            } else {
              return and__3431__auto__;
            }
          }, args));
        };
        var G__24546 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__24546__delegate.call(this, x, y, z, args);
        };
        G__24546.cljs$lang$maxFixedArity = 3;
        G__24546.cljs$lang$applyTo = function(arglist__24547) {
          var x = cljs.core.first(arglist__24547);
          arglist__24547 = cljs.core.next(arglist__24547);
          var y = cljs.core.first(arglist__24547);
          arglist__24547 = cljs.core.next(arglist__24547);
          var z = cljs.core.first(arglist__24547);
          var args = cljs.core.rest(arglist__24547);
          return G__24546__delegate(x, y, z, args);
        };
        G__24546.cljs$core$IFn$_invoke$arity$variadic = G__24546__delegate;
        return G__24546;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              var and__3431__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3431__auto____$2)) {
                var and__3431__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3431__auto____$3)) {
                  var and__3431__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3431__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3431__auto____$4;
                  }
                } else {
                  return and__3431__auto____$3;
                }
              } else {
                return and__3431__auto____$2;
              }
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3431__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3431__auto____$1)) {
              var and__3431__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3431__auto____$2)) {
                var and__3431__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3431__auto____$3)) {
                  var and__3431__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3431__auto____$4)) {
                    var and__3431__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3431__auto____$5)) {
                      var and__3431__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3431__auto____$6)) {
                        var and__3431__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3431__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3431__auto____$7;
                        }
                      } else {
                        return and__3431__auto____$6;
                      }
                    } else {
                      return and__3431__auto____$5;
                    }
                  } else {
                    return and__3431__auto____$4;
                  }
                } else {
                  return and__3431__auto____$3;
                }
              } else {
                return and__3431__auto____$2;
              }
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__24548__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__24539_SHARP_) {
            var and__3431__auto__ = p1.call(null, p1__24539_SHARP_);
            if (cljs.core.truth_(and__3431__auto__)) {
              var and__3431__auto____$1 = p2.call(null, p1__24539_SHARP_);
              if (cljs.core.truth_(and__3431__auto____$1)) {
                return p3.call(null, p1__24539_SHARP_);
              } else {
                return and__3431__auto____$1;
              }
            } else {
              return and__3431__auto__;
            }
          }, args));
        };
        var G__24548 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__24548__delegate.call(this, x, y, z, args);
        };
        G__24548.cljs$lang$maxFixedArity = 3;
        G__24548.cljs$lang$applyTo = function(arglist__24549) {
          var x = cljs.core.first(arglist__24549);
          arglist__24549 = cljs.core.next(arglist__24549);
          var y = cljs.core.first(arglist__24549);
          arglist__24549 = cljs.core.next(arglist__24549);
          var z = cljs.core.first(arglist__24549);
          var args = cljs.core.rest(arglist__24549);
          return G__24548__delegate(x, y, z, args);
        };
        G__24548.cljs$core$IFn$_invoke$arity$variadic = G__24548__delegate;
        return G__24548;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__24550__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true;
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__24540_SHARP_) {
            return p1__24540_SHARP_.call(null, x);
          }, ps__$1);
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__24541_SHARP_) {
            var and__3431__auto__ = p1__24541_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3431__auto__)) {
              return p1__24541_SHARP_.call(null, y);
            } else {
              return and__3431__auto__;
            }
          }, ps__$1);
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__24542_SHARP_) {
            var and__3431__auto__ = p1__24542_SHARP_.call(null, x);
            if (cljs.core.truth_(and__3431__auto__)) {
              var and__3431__auto____$1 = p1__24542_SHARP_.call(null, y);
              if (cljs.core.truth_(and__3431__auto____$1)) {
                return p1__24542_SHARP_.call(null, z);
              } else {
                return and__3431__auto____$1;
              }
            } else {
              return and__3431__auto__;
            }
          }, ps__$1);
        };
        var epn__4 = function() {
          var G__24551__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__24543_SHARP_) {
              return cljs.core.every_QMARK_.call(null, p1__24543_SHARP_, args);
            }, ps__$1));
          };
          var G__24551 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__24551__delegate.call(this, x, y, z, args);
          };
          G__24551.cljs$lang$maxFixedArity = 3;
          G__24551.cljs$lang$applyTo = function(arglist__24552) {
            var x = cljs.core.first(arglist__24552);
            arglist__24552 = cljs.core.next(arglist__24552);
            var y = cljs.core.first(arglist__24552);
            arglist__24552 = cljs.core.next(arglist__24552);
            var z = cljs.core.first(arglist__24552);
            var args = cljs.core.rest(arglist__24552);
            return G__24551__delegate(x, y, z, args);
          };
          G__24551.cljs$core$IFn$_invoke$arity$variadic = G__24551__delegate;
          return G__24551;
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn;
      }();
    };
    var G__24550 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__24550__delegate.call(this, p1, p2, p3, ps);
    };
    G__24550.cljs$lang$maxFixedArity = 3;
    G__24550.cljs$lang$applyTo = function(arglist__24553) {
      var p1 = cljs.core.first(arglist__24553);
      arglist__24553 = cljs.core.next(arglist__24553);
      var p2 = cljs.core.first(arglist__24553);
      arglist__24553 = cljs.core.next(arglist__24553);
      var p3 = cljs.core.first(arglist__24553);
      var ps = cljs.core.rest(arglist__24553);
      return G__24550__delegate(p1, p2, p3, ps);
    };
    G__24550.cljs$core$IFn$_invoke$arity$variadic = G__24550__delegate;
    return G__24550;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3443__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3443__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__24560__delegate = function(x, y, z, args) {
          var or__3443__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__24560 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__24560__delegate.call(this, x, y, z, args);
        };
        G__24560.cljs$lang$maxFixedArity = 3;
        G__24560.cljs$lang$applyTo = function(arglist__24561) {
          var x = cljs.core.first(arglist__24561);
          arglist__24561 = cljs.core.next(arglist__24561);
          var y = cljs.core.first(arglist__24561);
          arglist__24561 = cljs.core.next(arglist__24561);
          var z = cljs.core.first(arglist__24561);
          var args = cljs.core.rest(arglist__24561);
          return G__24560__delegate(x, y, z, args);
        };
        G__24560.cljs$core$IFn$_invoke$arity$variadic = G__24560__delegate;
        return G__24560;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            var or__3443__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3443__auto____$2)) {
              return or__3443__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            var or__3443__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3443__auto____$2)) {
              return or__3443__auto____$2;
            } else {
              var or__3443__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3443__auto____$3)) {
                return or__3443__auto____$3;
              } else {
                var or__3443__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3443__auto____$4)) {
                  return or__3443__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__24562__delegate = function(x, y, z, args) {
          var or__3443__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__24554_SHARP_) {
              var or__3443__auto____$1 = p1.call(null, p1__24554_SHARP_);
              if (cljs.core.truth_(or__3443__auto____$1)) {
                return or__3443__auto____$1;
              } else {
                return p2.call(null, p1__24554_SHARP_);
              }
            }, args);
          }
        };
        var G__24562 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__24562__delegate.call(this, x, y, z, args);
        };
        G__24562.cljs$lang$maxFixedArity = 3;
        G__24562.cljs$lang$applyTo = function(arglist__24563) {
          var x = cljs.core.first(arglist__24563);
          arglist__24563 = cljs.core.next(arglist__24563);
          var y = cljs.core.first(arglist__24563);
          arglist__24563 = cljs.core.next(arglist__24563);
          var z = cljs.core.first(arglist__24563);
          var args = cljs.core.rest(arglist__24563);
          return G__24562__delegate(x, y, z, args);
        };
        G__24562.cljs$core$IFn$_invoke$arity$variadic = G__24562__delegate;
        return G__24562;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            var or__3443__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3443__auto____$2)) {
              return or__3443__auto____$2;
            } else {
              var or__3443__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3443__auto____$3)) {
                return or__3443__auto____$3;
              } else {
                var or__3443__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3443__auto____$4)) {
                  return or__3443__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3443__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3443__auto____$1)) {
            return or__3443__auto____$1;
          } else {
            var or__3443__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3443__auto____$2)) {
              return or__3443__auto____$2;
            } else {
              var or__3443__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3443__auto____$3)) {
                return or__3443__auto____$3;
              } else {
                var or__3443__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3443__auto____$4)) {
                  return or__3443__auto____$4;
                } else {
                  var or__3443__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3443__auto____$5)) {
                    return or__3443__auto____$5;
                  } else {
                    var or__3443__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3443__auto____$6)) {
                      return or__3443__auto____$6;
                    } else {
                      var or__3443__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3443__auto____$7)) {
                        return or__3443__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__24564__delegate = function(x, y, z, args) {
          var or__3443__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return cljs.core.some.call(null, function(p1__24555_SHARP_) {
              var or__3443__auto____$1 = p1.call(null, p1__24555_SHARP_);
              if (cljs.core.truth_(or__3443__auto____$1)) {
                return or__3443__auto____$1;
              } else {
                var or__3443__auto____$2 = p2.call(null, p1__24555_SHARP_);
                if (cljs.core.truth_(or__3443__auto____$2)) {
                  return or__3443__auto____$2;
                } else {
                  return p3.call(null, p1__24555_SHARP_);
                }
              }
            }, args);
          }
        };
        var G__24564 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__24564__delegate.call(this, x, y, z, args);
        };
        G__24564.cljs$lang$maxFixedArity = 3;
        G__24564.cljs$lang$applyTo = function(arglist__24565) {
          var x = cljs.core.first(arglist__24565);
          arglist__24565 = cljs.core.next(arglist__24565);
          var y = cljs.core.first(arglist__24565);
          arglist__24565 = cljs.core.next(arglist__24565);
          var z = cljs.core.first(arglist__24565);
          var args = cljs.core.rest(arglist__24565);
          return G__24564__delegate(x, y, z, args);
        };
        G__24564.cljs$core$IFn$_invoke$arity$variadic = G__24564__delegate;
        return G__24564;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__24566__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null;
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__24556_SHARP_) {
            return p1__24556_SHARP_.call(null, x);
          }, ps__$1);
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__24557_SHARP_) {
            var or__3443__auto__ = p1__24557_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return p1__24557_SHARP_.call(null, y);
            }
          }, ps__$1);
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__24558_SHARP_) {
            var or__3443__auto__ = p1__24558_SHARP_.call(null, x);
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              var or__3443__auto____$1 = p1__24558_SHARP_.call(null, y);
              if (cljs.core.truth_(or__3443__auto____$1)) {
                return or__3443__auto____$1;
              } else {
                return p1__24558_SHARP_.call(null, z);
              }
            }
          }, ps__$1);
        };
        var spn__4 = function() {
          var G__24567__delegate = function(x, y, z, args) {
            var or__3443__auto__ = spn.call(null, x, y, z);
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return cljs.core.some.call(null, function(p1__24559_SHARP_) {
                return cljs.core.some.call(null, p1__24559_SHARP_, args);
              }, ps__$1);
            }
          };
          var G__24567 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__24567__delegate.call(this, x, y, z, args);
          };
          G__24567.cljs$lang$maxFixedArity = 3;
          G__24567.cljs$lang$applyTo = function(arglist__24568) {
            var x = cljs.core.first(arglist__24568);
            arglist__24568 = cljs.core.next(arglist__24568);
            var y = cljs.core.first(arglist__24568);
            arglist__24568 = cljs.core.next(arglist__24568);
            var z = cljs.core.first(arglist__24568);
            var args = cljs.core.rest(arglist__24568);
            return G__24567__delegate(x, y, z, args);
          };
          G__24567.cljs$core$IFn$_invoke$arity$variadic = G__24567__delegate;
          return G__24567;
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn;
      }();
    };
    var G__24566 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__24566__delegate.call(this, p1, p2, p3, ps);
    };
    G__24566.cljs$lang$maxFixedArity = 3;
    G__24566.cljs$lang$applyTo = function(arglist__24569) {
      var p1 = cljs.core.first(arglist__24569);
      arglist__24569 = cljs.core.next(arglist__24569);
      var p2 = cljs.core.first(arglist__24569);
      arglist__24569 = cljs.core.next(arglist__24569);
      var p3 = cljs.core.first(arglist__24569);
      var ps = cljs.core.rest(arglist__24569);
      return G__24566__delegate(p1, p2, p3, ps);
    };
    G__24566.cljs$core$IFn$_invoke$arity$variadic = G__24566__delegate;
    return G__24566;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4291__auto___24571 = size;
          var i_24572 = 0;
          while (true) {
            if (i_24572 < n__4291__auto___24571) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_24572)));
              var G__24573 = i_24572 + 1;
              i_24572 = G__24573;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && (s2 && s3)) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__24574__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(p1__24570_SHARP_) {
        return cljs.core.apply.call(null, f, p1__24570_SHARP_);
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__24574 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__24574__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__24574.cljs$lang$maxFixedArity = 4;
    G__24574.cljs$lang$applyTo = function(arglist__24575) {
      var f = cljs.core.first(arglist__24575);
      arglist__24575 = cljs.core.next(arglist__24575);
      var c1 = cljs.core.first(arglist__24575);
      arglist__24575 = cljs.core.next(arglist__24575);
      var c2 = cljs.core.first(arglist__24575);
      arglist__24575 = cljs.core.next(arglist__24575);
      var c3 = cljs.core.first(arglist__24575);
      var colls = cljs.core.rest(arglist__24575);
      return G__24574__delegate(f, c1, c2, c3, colls);
    };
    G__24574.cljs$core$IFn$_invoke$arity$variadic = G__24574__delegate;
    return G__24574;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (n__$1 > 0 && s) {
        var G__24576 = n__$1 - 1;
        var G__24577 = cljs.core.rest.call(null, s);
        n__$1 = G__24576;
        coll__$1 = G__24577;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, n, coll);
  }, null, null);
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__24578 = cljs.core.next.call(null, s);
      var G__24579 = cljs.core.next.call(null, lead);
      s = G__24578;
      lead = G__24579;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if (cljs.core.truth_(function() {
        var and__3431__auto__ = s;
        if (and__3431__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s));
        } else {
          return and__3431__auto__;
        }
      }())) {
        var G__24580 = pred__$1;
        var G__24581 = cljs.core.rest.call(null, s);
        pred__$1 = G__24580;
        coll__$1 = G__24581;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, pred, coll);
  }, null, null);
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__24582__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__24582 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24582__delegate.call(this, c1, c2, colls);
    };
    G__24582.cljs$lang$maxFixedArity = 2;
    G__24582.cljs$lang$applyTo = function(arglist__24583) {
      var c1 = cljs.core.first(arglist__24583);
      arglist__24583 = cljs.core.next(arglist__24583);
      var c2 = cljs.core.first(arglist__24583);
      var colls = cljs.core.rest(arglist__24583);
      return G__24582__delegate(c1, c2, colls);
    };
    G__24582.cljs$core$IFn$_invoke$arity$variadic = G__24582__delegate;
    return G__24582;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll));
  };
  var mapcat__3 = function() {
    var G__24584__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls));
    };
    var G__24584 = function(f, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__24584__delegate.call(this, f, coll, colls);
    };
    G__24584.cljs$lang$maxFixedArity = 2;
    G__24584.cljs$lang$applyTo = function(arglist__24585) {
      var f = cljs.core.first(arglist__24585);
      arglist__24585 = cljs.core.next(arglist__24585);
      var coll = cljs.core.first(arglist__24585);
      var colls = cljs.core.rest(arglist__24585);
      return G__24584__delegate(f, coll, colls);
    };
    G__24584.cljs$core$IFn$_invoke$arity$variadic = G__24584__delegate;
    return G__24584;
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__4291__auto___24586 = size;
        var i_24587 = 0;
        while (true) {
          if (i_24587 < n__4291__auto___24586) {
            if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_24587)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_24587));
            } else {
            }
            var G__24588 = i_24587 + 1;
            i_24587 = G__24588;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
      } else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if (cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r));
        } else {
          return filter.call(null, pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__24589_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__24589_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function into(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__24591 = to;
      if (G__24591) {
        var bit__4086__auto__ = G__24591.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4086__auto__ || G__24591.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from));
    } else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__24592__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__24592 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__24592__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__24592.cljs$lang$maxFixedArity = 4;
    G__24592.cljs$lang$applyTo = function(arglist__24593) {
      var f = cljs.core.first(arglist__24593);
      arglist__24593 = cljs.core.next(arglist__24593);
      var c1 = cljs.core.first(arglist__24593);
      arglist__24593 = cljs.core.next(arglist__24593);
      var c2 = cljs.core.first(arglist__24593);
      arglist__24593 = cljs.core.next(arglist__24593);
      var c3 = cljs.core.first(arglist__24593);
      var colls = cljs.core.rest(arglist__24593);
      return G__24592__delegate(f, c1, c2, c3, colls);
    };
    G__24592.cljs$core$IFn$_invoke$arity$variadic = G__24592__delegate;
    return G__24592;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__24595 = m__$1;
          if (G__24595) {
            var bit__4093__auto__ = G__24595.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4093__auto__ || G__24595.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__24595.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__24595);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__24595);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__24596 = sentinel;
            var G__24597 = m__$2;
            var G__24598 = cljs.core.next.call(null, ks__$1);
            sentinel = G__24596;
            m__$1 = G__24597;
            ks__$1 = G__24598;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__24599, v) {
  var vec__24601 = p__24599;
  var k = cljs.core.nth.call(null, vec__24601, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__24601, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__24602, f) {
    var vec__24612 = p__24602;
    var k = cljs.core.nth.call(null, vec__24612, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__24612, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__24603, f, a) {
    var vec__24613 = p__24603;
    var k = cljs.core.nth.call(null, vec__24613, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__24613, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__24604, f, a, b) {
    var vec__24614 = p__24604;
    var k = cljs.core.nth.call(null, vec__24614, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__24614, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__24605, f, a, b, c) {
    var vec__24615 = p__24605;
    var k = cljs.core.nth.call(null, vec__24615, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__24615, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__24617__delegate = function(m, p__24606, f, a, b, c, args) {
      var vec__24616 = p__24606;
      var k = cljs.core.nth.call(null, vec__24616, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__24616, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__24617 = function(m, p__24606, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__24617__delegate.call(this, m, p__24606, f, a, b, c, args);
    };
    G__24617.cljs$lang$maxFixedArity = 6;
    G__24617.cljs$lang$applyTo = function(arglist__24618) {
      var m = cljs.core.first(arglist__24618);
      arglist__24618 = cljs.core.next(arglist__24618);
      var p__24606 = cljs.core.first(arglist__24618);
      arglist__24618 = cljs.core.next(arglist__24618);
      var f = cljs.core.first(arglist__24618);
      arglist__24618 = cljs.core.next(arglist__24618);
      var a = cljs.core.first(arglist__24618);
      arglist__24618 = cljs.core.next(arglist__24618);
      var b = cljs.core.first(arglist__24618);
      arglist__24618 = cljs.core.next(arglist__24618);
      var c = cljs.core.first(arglist__24618);
      var args = cljs.core.rest(arglist__24618);
      return G__24617__delegate(m, p__24606, f, a, b, c, args);
    };
    G__24617.cljs$core$IFn$_invoke$arity$variadic = G__24617__delegate;
    return G__24617;
  }();
  update_in = function(m, p__24606, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__24606, f);
      case 4:
        return update_in__4.call(this, m, p__24606, f, a);
      case 5:
        return update_in__5.call(this, m, p__24606, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__24606, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__24606, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4013__auto__, writer__4014__auto__, opts__4015__auto__) {
  return cljs.core._write.call(null, writer__4014__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__24619 = ll - 5;
      var G__24620 = r;
      ll = G__24619;
      ret = G__24620;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    if (i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail;
    } else {
      var node = pv.root;
      var level = pv.shift;
      while (true) {
        if (level > 0) {
          var G__24621 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__24622 = level - 5;
          node = G__24621;
          level = G__24622;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__24624 = null;
  var G__24624__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__24624__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__24624 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24624__2.call(this, self__, k);
      case 3:
        return G__24624__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__24624;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args24623) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24623)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__24625 = j + 1;
              var G__24626 = init__$2;
              j = G__24625;
              init__$1 = G__24626;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__24627 = i + step_init[0];
        i = G__24627;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4291__auto___24628 = len;
    var i_24629 = 0;
    while (true) {
      if (i_24629 < n__4291__auto___24628) {
        new_tail[i_24629] = self__.tail[i_24629];
        var G__24630 = i_24629 + 1;
        i_24629 = G__24630;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, 0, 0);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
          } else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__24631 = i + 1;
        var G__24632 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__24631;
        out = G__24632;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray.call(null, args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__24633) {
    var args = cljs.core.seq(arglist__24633);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return null;
  } else {
    return s;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.call = function() {
  var G__24635 = null;
  var G__24635__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__24635__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__24635 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24635__2.call(this, self__, k);
      case 3:
        return G__24635__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__24635;
}();
cljs.core.Subvec.prototype.apply = function(self__, args24634) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24634)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function subvec_seq(i) {
    if (i === self__.end) {
      return null;
    } else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq.call(null, i + 1);
      }, null, null));
    }
  };
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3750__auto__ = self__.end;
    var y__3751__auto__ = v_pos + 1;
    return x__3750__auto__ > y__3751__auto__ ? x__3750__auto__ : y__3751__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__24636 = meta;
      var G__24637 = v.v;
      var G__24638 = v.start + start;
      var G__24639 = v.start + end;
      var G__24640 = __hash;
      meta = G__24636;
      v = G__24637;
      start = G__24638;
      end = G__24639;
      __hash = G__24640;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || (end < 0 || (start > c || end > c))) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj24644 = {};
    return obj24644;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if (0 <= i && i < tv.cnt) {
    if (i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail;
    } else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while (true) {
        if (level > 0) {
          var G__24645 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__24646 = level - 5;
          node = G__24645;
          level = G__24646;
          continue;
        } else {
          return node.arr;
        }
        break;
      }
    }
  } else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__24648 = null;
  var G__24648__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24648__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24648 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24648__2.call(this, self__, k);
      case 3:
        return G__24648__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__24648;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args24647) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24647)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if (level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1;
          } else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1;
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if (!(nr == null)) {
                return nr;
              } else {
                return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
              }
            }();
            if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            } else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1;
            }
          } else {
            return null;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3443__auto__ = self__.rear;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3443__auto__ = self__.front;
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__24649 = i + incr;
        i = G__24649;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0;
      } else {
        return null;
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__24650 = i + 1;
      var G__24651 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__24650;
      out = G__24651;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj24655 = {};
    return obj24655;
  }();
  var l = ks.length;
  var i_24656 = 0;
  while (true) {
    if (i_24656 < l) {
      var k_24657 = ks[i_24656];
      new_obj[k_24657] = obj[k_24657];
      var G__24658 = i_24656 + 1;
      i_24656 = G__24658;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__24661 = null;
  var G__24661__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24661__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24661 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24661__2.call(this, self__, k);
      case 3:
        return G__24661__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__24661;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args24660) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24660)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__24662 = cljs.core.rest.call(null, keys__$1);
        var G__24663 = init__$2;
        keys__$1 = G__24662;
        init__$1 = G__24663;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__24659_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__24659_SHARP_, self__.strobj[p1__24659_SHARP_]], null);
    }, self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj24665 = {};
  return obj24665;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__24666 = i + 2;
          i = G__24666;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__24667 = i + 2;
          i = G__24667;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__24668 = i + 2;
          i = G__24668;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__24669 = i + 2;
          i = G__24669;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__24670 = i + 2;
          i = G__24670;
          continue;
        } else {
          return null;
        }
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_24671 = 0;
  while (true) {
    if (i_24671 < l) {
      narr[i_24671] = arr[i_24671];
      var G__24672 = i_24671 + 1;
      i_24671 = G__24672;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj24675 = {};
    return obj24675;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__24676 = cljs.core.aclone.call(null, self__.arr);
          G__24676[idx + 1] = v;
          return G__24676;
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__24677 = null;
  var G__24677__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24677__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24677 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24677__2.call(this, self__, k);
      case 3:
        return G__24677__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__24677;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args24673) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24673)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__24678 = i + 2;
        var G__24679 = init__$2;
        i = G__24678;
        init__$1 = G__24679;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__24680 = s + 2;
            var G__24681 = d;
            s = G__24680;
            d = G__24681;
            continue;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__24682 = s + 2;
              var G__24683 = d + 2;
              s = G__24682;
              d = G__24683;
              continue;
            } else {
              return null;
            }
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__24684 = i + 2;
        var G__24685 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__24684;
        ret = G__24685;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__24686_24688 = self__.arr;
      G__24686_24688.pop();
      G__24686_24688.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__24687 = o;
      if (G__24687) {
        var bit__4093__auto__ = G__24687.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4093__auto__ || G__24687.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__24687.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__24687);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__24687);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__24689 = cljs.core.next.call(null, es);
          var G__24690 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__24689;
          tcoll__$2 = G__24690;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__24691 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__24692 = i + 2;
      out = G__24691;
      i = G__24692;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4013__auto__, writer__4014__auto__, opts__4015__auto__) {
  return cljs.core._write.call(null, writer__4014__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other);
      } else {
        return null;
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__24695 = cljs.core.aclone.call(null, arr);
    G__24695[i] = a;
    return G__24695;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__24696 = cljs.core.aclone.call(null, arr);
    G__24696[i] = a;
    G__24696[j] = b;
    return G__24696;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__24697 = i + 2;
        var G__24698 = init__$2;
        i = G__24697;
        init__$1 = G__24698;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_24699 = 0;
        var j_24700 = 0;
        while (true) {
          if (i_24699 < 32) {
            if ((self__.bitmap >>> i_24699 & 1) === 0) {
              var G__24701 = i_24699 + 1;
              var G__24702 = j_24700;
              i_24699 = G__24701;
              j_24700 = G__24702;
              continue;
            } else {
              nodes[i_24699] = !(self__.arr[j_24700] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_24700]), self__.arr[j_24700], self__.arr[j_24700 + 1], added_leaf_QMARK_) : self__.arr[j_24700 + 1];
              var G__24703 = i_24699 + 1;
              var G__24704 = j_24700 + 2;
              i_24699 = G__24703;
              j_24700 = G__24704;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable;
        } else {
          return null;
        }
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx);
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
            } else {
              return null;
            }
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_24705 = 0;
      var j_24706 = 0;
      while (true) {
        if (i_24705 < 32) {
          if ((self__.bitmap >>> i_24705 & 1) === 0) {
            var G__24707 = i_24705 + 1;
            var G__24708 = j_24706;
            i_24705 = G__24707;
            j_24706 = G__24708;
            continue;
          } else {
            nodes[i_24705] = !(self__.arr[j_24706] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_24706]), self__.arr[j_24706], self__.arr[j_24706 + 1], added_leaf_QMARK_) : self__.arr[j_24706 + 1];
            var G__24709 = i_24705 + 1;
            var G__24710 = j_24706 + 2;
            i_24705 = G__24709;
            j_24706 = G__24710;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__24711 = i + 1;
        var G__24712 = j + 2;
        var G__24713 = bitmap | 1 << i;
        i = G__24711;
        j = G__24712;
        bitmap = G__24713;
        continue;
      } else {
        var G__24714 = i + 1;
        var G__24715 = j;
        var G__24716 = bitmap;
        i = G__24714;
        j = G__24715;
        bitmap = G__24716;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__24717 = i + 1;
          var G__24718 = init__$2;
          i = G__24717;
          init__$1 = G__24718;
          continue;
        }
      } else {
        var G__24719 = i + 1;
        var G__24720 = init__$1;
        i = G__24719;
        init__$1 = G__24720;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        } else {
          return null;
        }
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__24721 = i + 2;
        i = G__24721;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4090__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__24722 = j + 2;
                j = G__24722;
                continue;
              }
            } else {
              var G__24723 = j + 2;
              j = G__24723;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4090__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__24724 = j + 1;
              j = G__24724;
              continue;
            }
          } else {
            var G__24725 = j + 1;
            j = G__24725;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj24728 = {};
    return obj24728;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__24729 = null;
  var G__24729__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24729__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24729 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24729__2.call(this, self__, k);
      case 3:
        return G__24729__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__24729;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args24726) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24726)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1;
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if (new_root === self__.root) {
          return coll__$1;
        } else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__24730 = i + 1;
      var G__24731 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__24730;
      out = G__24731;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__24732 = o;
      if (G__24732) {
        var bit__4093__auto__ = G__24732.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4093__auto__ || G__24732.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__24732.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__24732);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__24732);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__24733 = cljs.core.next.call(null, es);
          var G__24734 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__24733;
          tcoll__$1 = G__24734;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__24735 = ascending_QMARK_ ? t.left : t.right;
      var G__24736 = cljs.core.conj.call(null, stack__$1, t);
      t = G__24735;
      stack__$1 = G__24736;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null);
        } else {
          return null;
        }
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__24738 = null;
  var G__24738__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24738__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24738 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24738__2.call(this, self__, k);
      case 3:
        return G__24738__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__24738;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args24737) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24737)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.call = function() {
  var G__24740 = null;
  var G__24740__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24740__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24740 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24740__2.call(this, self__, k);
      case 3:
        return G__24740__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__24740;
}();
cljs.core.RedNode.prototype.apply = function(self__, args24739) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24739)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found;
      } else {
        return null;
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if (!(ins == null)) {
            return tree.add_right(ins);
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if (app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
            } else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
            }
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if (!(del == null) || !(found[0] == null)) {
            if (tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
            } else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
            }
          } else {
            return null;
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
      } else {
        return null;
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__24742 = null;
  var G__24742__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24742__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24742 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24742__2.call(this, self__, k);
      case 3:
        return G__24742__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__24742;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args24741) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24741)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__24743 = t.left;
          t = G__24743;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__24744 = t.right;
            t = G__24744;
            continue;
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__24745 = cljs.core.conj.call(null, stack, t);
              var G__24746 = t.left;
              stack = G__24745;
              t = G__24746;
              continue;
            } else {
              var G__24747 = stack;
              var G__24748 = t.right;
              stack = G__24747;
              t = G__24748;
              continue;
            }
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if (c > 0) {
                var G__24749 = cljs.core.conj.call(null, stack, t);
                var G__24750 = t.right;
                stack = G__24749;
                t = G__24750;
                continue;
              } else {
                var G__24751 = stack;
                var G__24752 = t.left;
                stack = G__24751;
                t = G__24752;
                continue;
              }
            } else {
              return null;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__24753 = cljs.core.nnext.call(null, in$);
        var G__24754 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__24753;
        out = G__24754;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__24755) {
    var keyvals = cljs.core.seq(arglist__24755);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__24756) {
    var keyvals = cljs.core.seq(arglist__24756);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj24760 = {};
      return obj24760;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__24761 = cljs.core.nnext.call(null, kvs);
        kvs = G__24761;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__24762) {
    var keyvals = cljs.core.seq(arglist__24762);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__24763 = cljs.core.nnext.call(null, in$);
        var G__24764 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__24763;
        out = G__24764;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__24765) {
    var keyvals = cljs.core.seq(arglist__24765);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__24766 = cljs.core.nnext.call(null, in$);
        var G__24767 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__24766;
        out = G__24767;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__24768) {
    var comparator = cljs.core.first(arglist__24768);
    var keyvals = cljs.core.rest(arglist__24768);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__24769 = self__.mseq;
    if (G__24769) {
      var bit__4093__auto__ = G__24769.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4093__auto__ || G__24769.cljs$core$INext$) {
        return true;
      } else {
        if (!G__24769.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__24769);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__24769);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__24770 = self__.mseq;
    if (G__24770) {
      var bit__4093__auto__ = G__24770.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4093__auto__ || G__24770.cljs$core$INext$) {
        return true;
      } else {
        if (!G__24770.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__24770);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__24770);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__24771 = self__.mseq;
    if (G__24771) {
      var bit__4093__auto__ = G__24771.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4093__auto__ || G__24771.cljs$core$INext$) {
        return true;
      } else {
        if (!G__24771.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__24771);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__24771);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__24772 = self__.mseq;
    if (G__24772) {
      var bit__4093__auto__ = G__24772.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4093__auto__ || G__24772.cljs$core$INext$) {
        return true;
      } else {
        if (!G__24772.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__24772);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__24772);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__24773_SHARP_, p2__24774_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3443__auto__ = p1__24773_SHARP_;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__24774_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__24775) {
    var maps = cljs.core.seq(arglist__24775);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3443__auto__ = m1;
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__24776) {
    var f = cljs.core.first(arglist__24776);
    var maps = cljs.core.rest(arglist__24776);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__24777 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__24778 = cljs.core.next.call(null, keys);
      ret = G__24777;
      keys = G__24778;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__24781 = null;
  var G__24781__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24781__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24781 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24781__2.call(this, self__, k);
      case 3:
        return G__24781__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__24781;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args24780) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24780)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__24779_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__24779_SHARP_);
  }, other));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__24782 = i + 1;
        var G__24783 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__24782;
        out = G__24783;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__24784 = i + 1;
        var G__24785 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__24784;
        out = G__24785;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__24787 = null;
  var G__24787__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__24787__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__24787 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24787__2.call(this, self__, k);
      case 3:
        return G__24787__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__24787;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args24786) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24786)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__24790 = null;
  var G__24790__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__24790__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__24790 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__24790__2.call(this, self__, k);
      case 3:
        return G__24790__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__24790;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args24789) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24789)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && (cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__24788_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__24788_SHARP_);
  }, other));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4285__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4285__auto__.length) {
        var G__24791 = i + 1;
        var G__24792 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__24791;
        res = G__24792;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__24793 = cljs.core._next.call(null, in$__$1);
            var G__24794 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__24793;
            out = G__24794;
            continue;
          } else {
            return cljs.core._persistent_BANG_.call(null, out);
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__24795__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__24795 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__24795__delegate.call(this, keys);
    };
    G__24795.cljs$lang$maxFixedArity = 0;
    G__24795.cljs$lang$applyTo = function(arglist__24796) {
      var keys = cljs.core.seq(arglist__24796);
      return G__24795__delegate(keys);
    };
    G__24795.cljs$core$IFn$_invoke$arity$variadic = G__24795__delegate;
    return G__24795;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__24797) {
    var keys = cljs.core.seq(arglist__24797);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__24798) {
    var comparator = cljs.core.first(arglist__24798);
    var keys = cljs.core.rest(arglist__24798);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function replace(smap, coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
      } else {
        return v;
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
  } else {
    return cljs.core.map.call(null, function(p1__24799_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__24799_SHARP_);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e);
      } else {
        return p1__24799_SHARP_;
      }
    }, coll);
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__24806, seen__$1) {
        while (true) {
          var vec__24807 = p__24806;
          var f = cljs.core.nth.call(null, vec__24807, 0, null);
          var xs__$1 = vec__24807;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4092__auto__) {
            var s = temp__4092__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__24808 = cljs.core.rest.call(null, s);
              var G__24809 = seen__$1;
              p__24806 = G__24808;
              seen__$1 = G__24809;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__24810 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__24811 = cljs.core.next.call(null, s__$1);
      ret = G__24810;
      s__$1 = G__24811;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__24813 = x;
    if (G__24813) {
      var bit__4086__auto__ = G__24813.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4086__auto__ || G__24813.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__24814 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__24815 = cljs.core.next.call(null, ks);
      var G__24816 = cljs.core.next.call(null, vs);
      map = G__24814;
      ks = G__24815;
      vs = G__24816;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__24819__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__24817_SHARP_, p2__24818_SHARP_) {
        return max_key.call(null, k, p1__24817_SHARP_, p2__24818_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__24819 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__24819__delegate.call(this, k, x, y, more);
    };
    G__24819.cljs$lang$maxFixedArity = 3;
    G__24819.cljs$lang$applyTo = function(arglist__24820) {
      var k = cljs.core.first(arglist__24820);
      arglist__24820 = cljs.core.next(arglist__24820);
      var x = cljs.core.first(arglist__24820);
      arglist__24820 = cljs.core.next(arglist__24820);
      var y = cljs.core.first(arglist__24820);
      var more = cljs.core.rest(arglist__24820);
      return G__24819__delegate(k, x, y, more);
    };
    G__24819.cljs$core$IFn$_invoke$arity$variadic = G__24819__delegate;
    return G__24819;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__24823__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__24821_SHARP_, p2__24822_SHARP_) {
        return min_key.call(null, k, p1__24821_SHARP_, p2__24822_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__24823 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__24823__delegate.call(this, k, x, y, more);
    };
    G__24823.cljs$lang$maxFixedArity = 3;
    G__24823.cljs$lang$applyTo = function(arglist__24824) {
      var k = cljs.core.first(arglist__24824);
      arglist__24824 = cljs.core.next(arglist__24824);
      var x = cljs.core.first(arglist__24824);
      arglist__24824 = cljs.core.next(arglist__24824);
      var y = cljs.core.first(arglist__24824);
      var more = cljs.core.rest(arglist__24824);
      return G__24823__delegate(k, x, y, more);
    };
    G__24823.cljs$core$IFn$_invoke$arity$variadic = G__24823__delegate;
    return G__24823;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__24827 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__24827, 0, null);
        var s = vec__24827;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__24828 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__24828, 0, null);
      var s = vec__24828;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__24831 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__24831, 0, null);
        var s = vec__24831;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__24832 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__24832, 0, null);
      var s = vec__24832;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil((self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__24833_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__24833_SHARP_));
        };
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__24844 = null;
      var G__24844__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__24844__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__24844__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__24844__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__24844__4 = function() {
        var G__24845__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__24845 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__24845__delegate.call(this, x, y, z, args);
        };
        G__24845.cljs$lang$maxFixedArity = 3;
        G__24845.cljs$lang$applyTo = function(arglist__24846) {
          var x = cljs.core.first(arglist__24846);
          arglist__24846 = cljs.core.next(arglist__24846);
          var y = cljs.core.first(arglist__24846);
          arglist__24846 = cljs.core.next(arglist__24846);
          var z = cljs.core.first(arglist__24846);
          var args = cljs.core.rest(arglist__24846);
          return G__24845__delegate(x, y, z, args);
        };
        G__24845.cljs$core$IFn$_invoke$arity$variadic = G__24845__delegate;
        return G__24845;
      }();
      G__24844 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__24844__0.call(this);
          case 1:
            return G__24844__1.call(this, x);
          case 2:
            return G__24844__2.call(this, x, y);
          case 3:
            return G__24844__3.call(this, x, y, z);
          default:
            return G__24844__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__24844.cljs$lang$maxFixedArity = 3;
      G__24844.cljs$lang$applyTo = G__24844__4.cljs$lang$applyTo;
      return G__24844;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__24847 = null;
      var G__24847__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__24847__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__24847__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__24847__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__24847__4 = function() {
        var G__24848__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__24848 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__24848__delegate.call(this, x, y, z, args);
        };
        G__24848.cljs$lang$maxFixedArity = 3;
        G__24848.cljs$lang$applyTo = function(arglist__24849) {
          var x = cljs.core.first(arglist__24849);
          arglist__24849 = cljs.core.next(arglist__24849);
          var y = cljs.core.first(arglist__24849);
          arglist__24849 = cljs.core.next(arglist__24849);
          var z = cljs.core.first(arglist__24849);
          var args = cljs.core.rest(arglist__24849);
          return G__24848__delegate(x, y, z, args);
        };
        G__24848.cljs$core$IFn$_invoke$arity$variadic = G__24848__delegate;
        return G__24848;
      }();
      G__24847 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__24847__0.call(this);
          case 1:
            return G__24847__1.call(this, x);
          case 2:
            return G__24847__2.call(this, x, y);
          case 3:
            return G__24847__3.call(this, x, y, z);
          default:
            return G__24847__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__24847.cljs$lang$maxFixedArity = 3;
      G__24847.cljs$lang$applyTo = G__24847__4.cljs$lang$applyTo;
      return G__24847;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__24850 = null;
      var G__24850__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__24850__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__24850__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__24850__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__24850__4 = function() {
        var G__24851__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__24851 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__24851__delegate.call(this, x, y, z, args);
        };
        G__24851.cljs$lang$maxFixedArity = 3;
        G__24851.cljs$lang$applyTo = function(arglist__24852) {
          var x = cljs.core.first(arglist__24852);
          arglist__24852 = cljs.core.next(arglist__24852);
          var y = cljs.core.first(arglist__24852);
          arglist__24852 = cljs.core.next(arglist__24852);
          var z = cljs.core.first(arglist__24852);
          var args = cljs.core.rest(arglist__24852);
          return G__24851__delegate(x, y, z, args);
        };
        G__24851.cljs$core$IFn$_invoke$arity$variadic = G__24851__delegate;
        return G__24851;
      }();
      G__24850 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__24850__0.call(this);
          case 1:
            return G__24850__1.call(this, x);
          case 2:
            return G__24850__2.call(this, x, y);
          case 3:
            return G__24850__3.call(this, x, y, z);
          default:
            return G__24850__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__24850.cljs$lang$maxFixedArity = 3;
      G__24850.cljs$lang$applyTo = G__24850__4.cljs$lang$applyTo;
      return G__24850;
    }();
  };
  var juxt__4 = function() {
    var G__24853__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__24854 = null;
        var G__24854__0 = function() {
          return cljs.core.reduce.call(null, function(p1__24834_SHARP_, p2__24835_SHARP_) {
            return cljs.core.conj.call(null, p1__24834_SHARP_, p2__24835_SHARP_.call(null));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__24854__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__24836_SHARP_, p2__24837_SHARP_) {
            return cljs.core.conj.call(null, p1__24836_SHARP_, p2__24837_SHARP_.call(null, x));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__24854__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__24838_SHARP_, p2__24839_SHARP_) {
            return cljs.core.conj.call(null, p1__24838_SHARP_, p2__24839_SHARP_.call(null, x, y));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__24854__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__24840_SHARP_, p2__24841_SHARP_) {
            return cljs.core.conj.call(null, p1__24840_SHARP_, p2__24841_SHARP_.call(null, x, y, z));
          }, cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__24854__4 = function() {
          var G__24855__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__24842_SHARP_, p2__24843_SHARP_) {
              return cljs.core.conj.call(null, p1__24842_SHARP_, cljs.core.apply.call(null, p2__24843_SHARP_, x, y, z, args));
            }, cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__24855 = function(x, y, z, var_args) {
            var args = null;
            if (arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
            }
            return G__24855__delegate.call(this, x, y, z, args);
          };
          G__24855.cljs$lang$maxFixedArity = 3;
          G__24855.cljs$lang$applyTo = function(arglist__24856) {
            var x = cljs.core.first(arglist__24856);
            arglist__24856 = cljs.core.next(arglist__24856);
            var y = cljs.core.first(arglist__24856);
            arglist__24856 = cljs.core.next(arglist__24856);
            var z = cljs.core.first(arglist__24856);
            var args = cljs.core.rest(arglist__24856);
            return G__24855__delegate(x, y, z, args);
          };
          G__24855.cljs$core$IFn$_invoke$arity$variadic = G__24855__delegate;
          return G__24855;
        }();
        G__24854 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__24854__0.call(this);
            case 1:
              return G__24854__1.call(this, x);
            case 2:
              return G__24854__2.call(this, x, y);
            case 3:
              return G__24854__3.call(this, x, y, z);
            default:
              return G__24854__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__24854.cljs$lang$maxFixedArity = 3;
        G__24854.cljs$lang$applyTo = G__24854__4.cljs$lang$applyTo;
        return G__24854;
      }();
    };
    var G__24853 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__24853__delegate.call(this, f, g, h, fs);
    };
    G__24853.cljs$lang$maxFixedArity = 3;
    G__24853.cljs$lang$applyTo = function(arglist__24857) {
      var f = cljs.core.first(arglist__24857);
      arglist__24857 = cljs.core.next(arglist__24857);
      var g = cljs.core.first(arglist__24857);
      arglist__24857 = cljs.core.next(arglist__24857);
      var h = cljs.core.first(arglist__24857);
      var fs = cljs.core.rest(arglist__24857);
      return G__24853__delegate(f, g, h, fs);
    };
    G__24853.cljs$core$IFn$_invoke$arity$variadic = G__24853__delegate;
    return G__24853;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__24858 = cljs.core.next.call(null, coll);
        coll = G__24858;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__24859 = n - 1;
        var G__24860 = cljs.core.next.call(null, coll);
        n = G__24859;
        coll = G__24860;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  } else {
    return null;
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches);
    } else {
      return cljs.core.vec.call(null, matches);
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
    }, null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__24862 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__24862, 0, null);
  var flags = cljs.core.nth.call(null, vec__24862, 1, null);
  var pattern = cljs.core.nth.call(null, vec__24862, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_24864 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_24865__$1 = cljs.core.next.call(null, coll);
      var n_24866 = (new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts);
      while (true) {
        if (coll_24865__$1 && (n_24866 == null || !(n_24866 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_24865__$1), writer, opts);
          var G__24867 = cljs.core.next.call(null, coll_24865__$1);
          var G__24868 = n_24866 - 1;
          coll_24865__$1 = G__24867;
          n_24866 = G__24868;
          continue;
        } else {
        }
        break;
      }
      if (cljs.core.truth_((new cljs.core.Keyword(null, "print-length", "print-length", 3960797560)).cljs$core$IFn$_invoke$arity$1(opts))) {
        cljs.core._write.call(null, writer, sep);
        print_one.call(null, "...", writer, opts);
      } else {
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_24864;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__24873 = cljs.core.seq.call(null, ss);
    var chunk__24874 = null;
    var count__24875 = 0;
    var i__24876 = 0;
    while (true) {
      if (i__24876 < count__24875) {
        var s = cljs.core._nth.call(null, chunk__24874, i__24876);
        cljs.core._write.call(null, writer, s);
        var G__24877 = seq__24873;
        var G__24878 = chunk__24874;
        var G__24879 = count__24875;
        var G__24880 = i__24876 + 1;
        seq__24873 = G__24877;
        chunk__24874 = G__24878;
        count__24875 = G__24879;
        i__24876 = G__24880;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__24873);
        if (temp__4092__auto__) {
          var seq__24873__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__24873__$1)) {
            var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__24873__$1);
            var G__24881 = cljs.core.chunk_rest.call(null, seq__24873__$1);
            var G__24882 = c__4191__auto__;
            var G__24883 = cljs.core.count.call(null, c__4191__auto__);
            var G__24884 = 0;
            seq__24873 = G__24881;
            chunk__24874 = G__24882;
            count__24875 = G__24883;
            i__24876 = G__24884;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__24873__$1);
            cljs.core._write.call(null, writer, s);
            var G__24885 = cljs.core.next.call(null, seq__24873__$1);
            var G__24886 = null;
            var G__24887 = 0;
            var G__24888 = 0;
            seq__24873 = G__24885;
            chunk__24874 = G__24886;
            count__24875 = G__24887;
            i__24876 = G__24888;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__24889) {
    var writer = cljs.core.first(arglist__24889);
    var ss = cljs.core.rest(arglist__24889);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj24891 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj24891;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if (cljs.core.truth_(function() {
          var and__3431__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if (cljs.core.truth_(and__3431__auto__)) {
            var and__3431__auto____$1 = function() {
              var G__24897 = obj;
              if (G__24897) {
                var bit__4093__auto__ = G__24897.cljs$lang$protocol_mask$partition0$ & 131072;
                if (bit__4093__auto__ || G__24897.cljs$core$IMeta$) {
                  return true;
                } else {
                  if (!G__24897.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__24897);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__24897);
              }
            }();
            if (and__3431__auto____$1) {
              return cljs.core.meta.call(null, obj);
            } else {
              return and__3431__auto____$1;
            }
          } else {
            return and__3431__auto__;
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ");
        } else {
        }
        if (obj == null) {
          return cljs.core._write.call(null, writer, "nil");
        } else {
          if (obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
          } else {
            if (function() {
              var G__24898 = obj;
              if (G__24898) {
                var bit__4086__auto__ = G__24898.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if (bit__4086__auto__ || G__24898.cljs$core$IPrintWithWriter$) {
                  return true;
                } else {
                  return false;
                }
              } else {
                return false;
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts);
            } else {
              if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""));
              } else {
                if (cljs.core.object_QMARK_.call(null, obj)) {
                  cljs.core._write.call(null, writer, "#js ");
                  return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                  }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
                } else {
                  if (obj instanceof Array) {
                    return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                  } else {
                    if (goog.isString(obj)) {
                      if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                        return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                      } else {
                        return cljs.core._write.call(null, writer, obj);
                      }
                    } else {
                      if (cljs.core.fn_QMARK_.call(null, obj)) {
                        return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                      } else {
                        if (obj instanceof Date) {
                          var normalize = function(n, len) {
                            var ns = [cljs.core.str(n)].join("");
                            while (true) {
                              if (cljs.core.count.call(null, ns) < len) {
                                var G__24900 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                                ns = G__24900;
                                continue;
                              } else {
                                return ns;
                              }
                              break;
                            }
                          };
                          return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                        } else {
                          if (cljs.core.regexp_QMARK_.call(null, obj)) {
                            return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                          } else {
                            if (function() {
                              var G__24899 = obj;
                              if (G__24899) {
                                var bit__4093__auto__ = G__24899.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if (bit__4093__auto__ || G__24899.cljs$core$IPrintWithWriter$) {
                                  return true;
                                } else {
                                  if (!G__24899.cljs$lang$protocol_mask$partition0$) {
                                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__24899);
                                  } else {
                                    return false;
                                  }
                                }
                              } else {
                                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__24899);
                              }
                            }()) {
                              return cljs.core._pr_writer.call(null, obj, writer, opts);
                            } else {
                              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e");
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__24905 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__24906 = null;
  var count__24907 = 0;
  var i__24908 = 0;
  while (true) {
    if (i__24908 < count__24907) {
      var obj = cljs.core._nth.call(null, chunk__24906, i__24908);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__24909 = seq__24905;
      var G__24910 = chunk__24906;
      var G__24911 = count__24907;
      var G__24912 = i__24908 + 1;
      seq__24905 = G__24909;
      chunk__24906 = G__24910;
      count__24907 = G__24911;
      i__24908 = G__24912;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__24905);
      if (temp__4092__auto__) {
        var seq__24905__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24905__$1)) {
          var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__24905__$1);
          var G__24913 = cljs.core.chunk_rest.call(null, seq__24905__$1);
          var G__24914 = c__4191__auto__;
          var G__24915 = cljs.core.count.call(null, c__4191__auto__);
          var G__24916 = 0;
          seq__24905 = G__24913;
          chunk__24906 = G__24914;
          count__24907 = G__24915;
          i__24908 = G__24916;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__24905__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__24917 = cljs.core.next.call(null, seq__24905__$1);
          var G__24918 = null;
          var G__24919 = 0;
          var G__24920 = 0;
          seq__24905 = G__24917;
          chunk__24906 = G__24918;
          count__24907 = G__24919;
          i__24908 = G__24920;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__24921) {
    var objs = cljs.core.seq(arglist__24921);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__24922) {
    var objs = cljs.core.seq(arglist__24922);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__24923) {
    var objs = cljs.core.seq(arglist__24923);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__24924) {
    var objs = cljs.core.seq(arglist__24924);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__24925) {
    var objs = cljs.core.seq(arglist__24925);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__24926) {
    var objs = cljs.core.seq(arglist__24926);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__24927) {
    var objs = cljs.core.seq(arglist__24927);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__24928) {
    var objs = cljs.core.seq(arglist__24928);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.IAtom = function() {
  var obj24930 = {};
  return obj24930;
}();
cljs.core.IReset = function() {
  var obj24932 = {};
  return obj24932;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3431__auto__ = o;
    if (and__3431__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4070__auto__ = o == null ? null : o;
    return function() {
      var or__3443__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj24934 = {};
  return obj24934;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3431__auto__ = o;
      if (and__3431__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4070__auto__ = o == null ? null : o;
      return function() {
        var or__3443__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__24935 = cljs.core.seq.call(null, self__.watches);
  var chunk__24936 = null;
  var count__24937 = 0;
  var i__24938 = 0;
  while (true) {
    if (i__24938 < count__24937) {
      var vec__24939 = cljs.core._nth.call(null, chunk__24936, i__24938);
      var key = cljs.core.nth.call(null, vec__24939, 0, null);
      var f = cljs.core.nth.call(null, vec__24939, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__24941 = seq__24935;
      var G__24942 = chunk__24936;
      var G__24943 = count__24937;
      var G__24944 = i__24938 + 1;
      seq__24935 = G__24941;
      chunk__24936 = G__24942;
      count__24937 = G__24943;
      i__24938 = G__24944;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__24935);
      if (temp__4092__auto__) {
        var seq__24935__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24935__$1)) {
          var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__24935__$1);
          var G__24945 = cljs.core.chunk_rest.call(null, seq__24935__$1);
          var G__24946 = c__4191__auto__;
          var G__24947 = cljs.core.count.call(null, c__4191__auto__);
          var G__24948 = 0;
          seq__24935 = G__24945;
          chunk__24936 = G__24946;
          count__24937 = G__24947;
          i__24938 = G__24948;
          continue;
        } else {
          var vec__24940 = cljs.core.first.call(null, seq__24935__$1);
          var key = cljs.core.nth.call(null, vec__24940, 0, null);
          var f = cljs.core.nth.call(null, vec__24940, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__24949 = cljs.core.next.call(null, seq__24935__$1);
          var G__24950 = null;
          var G__24951 = 0;
          var G__24952 = 0;
          seq__24935 = G__24949;
          chunk__24936 = G__24950;
          count__24937 = G__24951;
          i__24938 = G__24952;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__24956__delegate = function(x, p__24953) {
      var map__24955 = p__24953;
      var map__24955__$1 = cljs.core.seq_QMARK_.call(null, map__24955) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24955) : map__24955;
      var validator = cljs.core.get.call(null, map__24955__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__24955__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__24956 = function(x, var_args) {
      var p__24953 = null;
      if (arguments.length > 1) {
        p__24953 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__24956__delegate.call(this, x, p__24953);
    };
    G__24956.cljs$lang$maxFixedArity = 1;
    G__24956.cljs$lang$applyTo = function(arglist__24957) {
      var x = cljs.core.first(arglist__24957);
      var p__24953 = cljs.core.rest(arglist__24957);
      return G__24956__delegate(x, p__24953);
    };
    G__24956.cljs$core$IFn$_invoke$arity$variadic = G__24956__delegate;
    return G__24956;
  }();
  atom = function(x, var_args) {
    var p__24953 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__24958__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__24958 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__24958__delegate.call(this, a, f, x, y, more);
    };
    G__24958.cljs$lang$maxFixedArity = 4;
    G__24958.cljs$lang$applyTo = function(arglist__24959) {
      var a = cljs.core.first(arglist__24959);
      arglist__24959 = cljs.core.next(arglist__24959);
      var f = cljs.core.first(arglist__24959);
      arglist__24959 = cljs.core.next(arglist__24959);
      var x = cljs.core.first(arglist__24959);
      arglist__24959 = cljs.core.next(arglist__24959);
      var y = cljs.core.first(arglist__24959);
      var more = cljs.core.rest(arglist__24959);
      return G__24958__delegate(a, f, x, y, more);
    };
    G__24958.cljs$core$IFn$_invoke$arity$variadic = G__24958__delegate;
    return G__24958;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__24960) {
    var iref = cljs.core.first(arglist__24960);
    arglist__24960 = cljs.core.next(arglist__24960);
    var f = cljs.core.first(arglist__24960);
    var args = cljs.core.rest(arglist__24960);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state));
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(p__24961) {
    var map__24962 = p__24961;
    var map__24962__$1 = cljs.core.seq_QMARK_.call(null, map__24962) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24962) : map__24962;
    var curr_state = map__24962__$1;
    var done = cljs.core.get.call(null, map__24962__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if (cljs.core.truth_(done)) {
      return curr_state;
    } else {
      return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], null);
    }
  }));
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.IEncodeJS = function() {
  var obj24964 = {};
  return obj24964;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__24966 = k;
    if (G__24966) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__24966.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__24966.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__24966);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__24966);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || (typeof k === "number" || (k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol))) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__24980 = x;
      if (G__24980) {
        var bit__4093__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3443__auto__ = bit__4093__auto__;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return G__24980.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__24980.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__24980);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__24980);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj24982 = {};
              return obj24982;
            }();
            var seq__24983_24993 = cljs.core.seq.call(null, x);
            var chunk__24984_24994 = null;
            var count__24985_24995 = 0;
            var i__24986_24996 = 0;
            while (true) {
              if (i__24986_24996 < count__24985_24995) {
                var vec__24987_24997 = cljs.core._nth.call(null, chunk__24984_24994, i__24986_24996);
                var k_24998 = cljs.core.nth.call(null, vec__24987_24997, 0, null);
                var v_24999 = cljs.core.nth.call(null, vec__24987_24997, 1, null);
                m[cljs.core.key__GT_js.call(null, k_24998)] = clj__GT_js.call(null, v_24999);
                var G__25000 = seq__24983_24993;
                var G__25001 = chunk__24984_24994;
                var G__25002 = count__24985_24995;
                var G__25003 = i__24986_24996 + 1;
                seq__24983_24993 = G__25000;
                chunk__24984_24994 = G__25001;
                count__24985_24995 = G__25002;
                i__24986_24996 = G__25003;
                continue;
              } else {
                var temp__4092__auto___25004 = cljs.core.seq.call(null, seq__24983_24993);
                if (temp__4092__auto___25004) {
                  var seq__24983_25005__$1 = temp__4092__auto___25004;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__24983_25005__$1)) {
                    var c__4191__auto___25006 = cljs.core.chunk_first.call(null, seq__24983_25005__$1);
                    var G__25007 = cljs.core.chunk_rest.call(null, seq__24983_25005__$1);
                    var G__25008 = c__4191__auto___25006;
                    var G__25009 = cljs.core.count.call(null, c__4191__auto___25006);
                    var G__25010 = 0;
                    seq__24983_24993 = G__25007;
                    chunk__24984_24994 = G__25008;
                    count__24985_24995 = G__25009;
                    i__24986_24996 = G__25010;
                    continue;
                  } else {
                    var vec__24988_25011 = cljs.core.first.call(null, seq__24983_25005__$1);
                    var k_25012 = cljs.core.nth.call(null, vec__24988_25011, 0, null);
                    var v_25013 = cljs.core.nth.call(null, vec__24988_25011, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_25012)] = clj__GT_js.call(null, v_25013);
                    var G__25014 = cljs.core.next.call(null, seq__24983_25005__$1);
                    var G__25015 = null;
                    var G__25016 = 0;
                    var G__25017 = 0;
                    seq__24983_24993 = G__25014;
                    chunk__24984_24994 = G__25015;
                    count__24985_24995 = G__25016;
                    i__24986_24996 = G__25017;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__24989_25018 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__24990_25019 = null;
              var count__24991_25020 = 0;
              var i__24992_25021 = 0;
              while (true) {
                if (i__24992_25021 < count__24991_25020) {
                  var x_25022__$1 = cljs.core._nth.call(null, chunk__24990_25019, i__24992_25021);
                  arr.push(x_25022__$1);
                  var G__25023 = seq__24989_25018;
                  var G__25024 = chunk__24990_25019;
                  var G__25025 = count__24991_25020;
                  var G__25026 = i__24992_25021 + 1;
                  seq__24989_25018 = G__25023;
                  chunk__24990_25019 = G__25024;
                  count__24991_25020 = G__25025;
                  i__24992_25021 = G__25026;
                  continue;
                } else {
                  var temp__4092__auto___25027 = cljs.core.seq.call(null, seq__24989_25018);
                  if (temp__4092__auto___25027) {
                    var seq__24989_25028__$1 = temp__4092__auto___25027;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__24989_25028__$1)) {
                      var c__4191__auto___25029 = cljs.core.chunk_first.call(null, seq__24989_25028__$1);
                      var G__25030 = cljs.core.chunk_rest.call(null, seq__24989_25028__$1);
                      var G__25031 = c__4191__auto___25029;
                      var G__25032 = cljs.core.count.call(null, c__4191__auto___25029);
                      var G__25033 = 0;
                      seq__24989_25018 = G__25030;
                      chunk__24990_25019 = G__25031;
                      count__24991_25020 = G__25032;
                      i__24992_25021 = G__25033;
                      continue;
                    } else {
                      var x_25034__$1 = cljs.core.first.call(null, seq__24989_25028__$1);
                      arr.push(x_25034__$1);
                      var G__25035 = cljs.core.next.call(null, seq__24989_25028__$1);
                      var G__25036 = null;
                      var G__25037 = 0;
                      var G__25038 = 0;
                      seq__24989_25018 = G__25035;
                      chunk__24990_25019 = G__25036;
                      count__24991_25020 = G__25037;
                      i__24992_25021 = G__25038;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj25040 = {};
  return obj25040;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__25061__delegate = function(x, opts) {
      if (function() {
        var G__25051 = x;
        if (G__25051) {
          var bit__4093__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3443__auto__ = bit__4093__auto__;
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return G__25051.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__25051.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__25051);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__25051);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__25052 = opts;
          var map__25052__$1 = cljs.core.seq_QMARK_.call(null, map__25052) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25052) : map__25052;
          var keywordize_keys = cljs.core.get.call(null, map__25052__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__25052, map__25052__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4160__auto__ = function(map__25052, map__25052__$1, keywordize_keys, keyfn) {
                          return function iter__25057(s__25058) {
                            return new cljs.core.LazySeq(null, function(map__25052, map__25052__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__25058__$1 = s__25058;
                                while (true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__25058__$1);
                                  if (temp__4092__auto__) {
                                    var s__25058__$2 = temp__4092__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__25058__$2)) {
                                      var c__4158__auto__ = cljs.core.chunk_first.call(null, s__25058__$2);
                                      var size__4159__auto__ = cljs.core.count.call(null, c__4158__auto__);
                                      var b__25060 = cljs.core.chunk_buffer.call(null, size__4159__auto__);
                                      if (function() {
                                        var i__25059 = 0;
                                        while (true) {
                                          if (i__25059 < size__4159__auto__) {
                                            var k = cljs.core._nth.call(null, c__4158__auto__, i__25059);
                                            cljs.core.chunk_append.call(null, b__25060, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__25062 = i__25059 + 1;
                                            i__25059 = G__25062;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25060), iter__25057.call(null, cljs.core.chunk_rest.call(null, s__25058__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25060), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__25058__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__25057.call(null, cljs.core.rest.call(null, s__25058__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__25052, map__25052__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__25052, map__25052__$1, keywordize_keys, keyfn);
                        return iter__4160__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1;
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            };
          }(map__25052, map__25052__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__25061 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__25061__delegate.call(this, x, opts);
    };
    G__25061.cljs$lang$maxFixedArity = 1;
    G__25061.cljs$lang$applyTo = function(arglist__25063) {
      var x = cljs.core.first(arglist__25063);
      var opts = cljs.core.rest(arglist__25063);
      return G__25061__delegate(x, opts);
    };
    G__25061.cljs$core$IFn$_invoke$arity$variadic = G__25061__delegate;
    return G__25061;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__25064__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v;
      } else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret;
      }
    };
    var G__25064 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__25064__delegate.call(this, args);
    };
    G__25064.cljs$lang$maxFixedArity = 0;
    G__25064.cljs$lang$applyTo = function(arglist__25065) {
      var args = cljs.core.seq(arglist__25065);
      return G__25064__delegate(args);
    };
    G__25064.cljs$core$IFn$_invoke$arity$variadic = G__25064__delegate;
    return G__25064;
  }();
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__25066 = ret;
        f = G__25066;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__25067__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__25067 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__25067__delegate.call(this, f, args);
    };
    G__25067.cljs$lang$maxFixedArity = 1;
    G__25067.cljs$lang$applyTo = function(arglist__25068) {
      var f = cljs.core.first(arglist__25068);
      var args = cljs.core.rest(arglist__25068);
      return G__25067__delegate(f, args);
    };
    G__25067.cljs$core$IFn$_invoke$arity$variadic = G__25067__delegate;
    return G__25067;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, coll);
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__25069) {
    var f = cljs.core.first(arglist__25069);
    var args = cljs.core.rest(arglist__25069);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3443__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3443__auto__) {
      return or__3443__auto__;
    } else {
      var or__3443__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3443__auto____$1) {
        return or__3443__auto____$1;
      } else {
        var and__3431__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3431__auto__) {
          var and__3431__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3431__auto____$1) {
            var and__3431__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3431__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__25070 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__25071 = i + 1;
                  ret = G__25070;
                  i = G__25071;
                  continue;
                }
                break;
              }
            } else {
              return and__3431__auto____$2;
            }
          } else {
            return and__3431__auto____$1;
          }
        } else {
          return and__3431__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3443__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__25072_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__25072_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__25072_SHARP_), cljs.core.second.call(null, p1__25072_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__25073_SHARP_, p2__25074_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__25073_SHARP_, p2__25074_SHARP_);
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3443__auto__ = cljs.core.truth_(function() {
    var and__3431__auto__ = xprefs;
    if (cljs.core.truth_(and__3431__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3431__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    var or__3443__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__25075 = cljs.core.rest.call(null, ps);
          ps = G__25075;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3443__auto____$1)) {
      return or__3443__auto____$1;
    } else {
      var or__3443__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__25076 = cljs.core.rest.call(null, ps);
            ps = G__25076;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3443__auto____$2)) {
        return or__3443__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3443__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__25079) {
    var vec__25080 = p__25079;
    var k = cljs.core.nth.call(null, vec__25080, 0, null);
    var _ = cljs.core.nth.call(null, vec__25080, 1, null);
    var e = vec__25080;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3443__auto__ = be == null;
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj25082 = {};
  return obj25082;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._reset[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._reset["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._add_method[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._add_method["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._remove_method[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._remove_method["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._prefer_method[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._get_method[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._get_method["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._methods[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._methods["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._prefers[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._prefers["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if (function() {
    var and__3431__auto__ = mf;
    if (and__3431__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args);
  } else {
    var x__4070__auto__ = mf == null ? null : mf;
    return function() {
      var or__3443__auto__ = cljs.core._dispatch[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core._dispatch["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args);
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args);
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$2) {
    return null;
  });
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn;
  } else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__25083__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args);
  };
  var G__25083 = function(_, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return G__25083__delegate.call(this, _, args);
  };
  G__25083.cljs$lang$maxFixedArity = 1;
  G__25083.cljs$lang$applyTo = function(arglist__25084) {
    var _ = cljs.core.first(arglist__25084);
    var args = cljs.core.rest(arglist__25084);
    return G__25083__delegate(_, args);
  };
  G__25083.cljs$core$IFn$_invoke$arity$variadic = G__25083__delegate;
  return G__25083;
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4013__auto__, writer__4014__auto__, opts__4015__auto__) {
  return cljs.core._write.call(null, writer__4014__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0;
        } else {
          return null;
        }
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, 
  null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], null), null), x);
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      } else {
        return null;
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__25085 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__25085;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__25089 = cljs.core._EQ_;
    var expr__25090 = limit;
    if (cljs.core.truth_(pred__25089.call(null, 1, expr__25090))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__25089.call(null, 2, expr__25090))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__25092 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__25093 = limit__$1 - 1;
            var G__25094 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__25092;
            limit__$1 = G__25093;
            parts = G__25094;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__25095 = index - 1;
        index = G__25095;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4090__auto___25096 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4090__auto___25096)) {
        var replacement_25097 = temp__4090__auto___25096;
        buffer.append([cljs.core.str(replacement_25097)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__25098 = index + 1;
      index = G__25098;
      continue;
    }
    break;
  }
};
goog.provide("cemerick.cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
cemerick.cljs.test._STAR_report_counters_STAR_ = null;
cemerick.cljs.test._STAR_initial_report_counters_STAR_ = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 1017460740), 0, new cljs.core.Keyword(null, "pass", "pass", 1017337731), 0, new cljs.core.Keyword(null, "fail", "fail", 1017039504), 0, new cljs.core.Keyword(null, "error", "error", 1110689146), 0], null);
cemerick.cljs.test._STAR_testing_vars_STAR_ = cljs.core.List.EMPTY;
cemerick.cljs.test._STAR_testing_contexts_STAR_ = cljs.core.List.EMPTY;
cemerick.cljs.test._STAR_test_print_fn_STAR_ = null;
cemerick.cljs.test.registered_tests = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_test_hooks = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_fixtures = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.register_test_BANG_ = function register_test_BANG_(ns, name) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_tests, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns], null), cljs.core.fnil.call(null, cljs.core.conj, cljs.core.PersistentHashSet.EMPTY), name);
};
cemerick.cljs.test.register_test_ns_hook_BANG_ = function register_test_ns_hook_BANG_(ns, name) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_test_hooks, cljs.core.assoc, ns, name);
};
cemerick.cljs.test.testing_vars_str = function testing_vars_str(m) {
  var map__29190 = m;
  var map__29190__$1 = cljs.core.seq_QMARK_.call(null, map__29190) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29190) : map__29190;
  var line = cljs.core.get.call(null, map__29190__$1, new cljs.core.Keyword(null, "line", "line", 1017226086));
  var file = cljs.core.get.call(null, map__29190__$1, new cljs.core.Keyword(null, "file", "file", 1017047278));
  return[cljs.core.str(cljs.core.pr_str.call(null, cljs.core.reverse.call(null, cemerick.cljs.test._STAR_testing_vars_STAR_))), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(")")].join("");
};
cemerick.cljs.test.testing_contexts_str = function testing_contexts_str() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, cemerick.cljs.test._STAR_testing_contexts_STAR_)));
};
cemerick.cljs.test.inc_report_counter = function inc_report_counter(name) {
  if (cljs.core.truth_(cemerick.cljs.test._STAR_report_counters_STAR_)) {
    return cljs.core.swap_BANG_.call(null, cemerick.cljs.test._STAR_report_counters_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
  } else {
    return null;
  }
};
cemerick.cljs.test.report = function() {
  var method_table__4301__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4302__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4303__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4304__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4305__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("report", new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4305__auto__, method_table__4301__auto__, prefer_table__4302__auto__, method_cache__4303__auto__, cached_hierarchy__4304__auto__);
}();
cemerick.cljs.test.file_and_line = function file_and_line(error) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", 1017047278), error.fileName, new cljs.core.Keyword(null, "line", "line", 1017226086), error.lineNumber], null);
};
cemerick.cljs.test.do_report = function do_report(m) {
  return cemerick.cljs.test.report.call(null, function() {
    var G__29192 = (new cljs.core.Keyword(null, "type", "type", 1017479852)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146), G__29192)) {
      return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 3885931776)).cljs$core$IFn$_invoke$arity$1(m)), m);
    } else {
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1017039504), G__29192)) {
        return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, Error()), m);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return m;
        } else {
          return null;
        }
      }
    }
  }());
};
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "default", "default", 2558708147), function(m) {
  var _STAR_print_fn_STAR_29193 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3443__auto__ = cemerick.cljs.test._STAR_test_print_fn_STAR_;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    return cljs.core.prn.call(null, m);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_29193;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "pass", "pass", 1017337731), function(m) {
  var _STAR_print_fn_STAR_29194 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3443__auto__ = cemerick.cljs.test._STAR_test_print_fn_STAR_;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    return cemerick.cljs.test.inc_report_counter.call(null, new cljs.core.Keyword(null, "pass", "pass", 1017337731));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_29194;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "fail", "fail", 1017039504), function(m) {
  var _STAR_print_fn_STAR_29195 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3443__auto__ = cemerick.cljs.test._STAR_test_print_fn_STAR_;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, new cljs.core.Keyword(null, "fail", "fail", 1017039504));
    cljs.core.println.call(null, "\nFAIL in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, cemerick.cljs.test._STAR_testing_contexts_STAR_)) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null));
    } else {
    }
    var temp__4092__auto___29196 = (new cljs.core.Keyword(null, "message", "message", 1968829305)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4092__auto___29196)) {
      var message_29197 = temp__4092__auto___29196;
      cljs.core.println.call(null, message_29197);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 3373152810)).cljs$core$IFn$_invoke$arity$1(m)));
    return cljs.core.println.call(null, "  actual:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "actual", "actual", 3885931776)).cljs$core$IFn$_invoke$arity$1(m)));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_29195;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "error", "error", 1110689146), function(m) {
  var _STAR_print_fn_STAR_29198 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3443__auto__ = cemerick.cljs.test._STAR_test_print_fn_STAR_;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, new cljs.core.Keyword(null, "error", "error", 1110689146));
    cljs.core.println.call(null, "\nERROR in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, cemerick.cljs.test._STAR_testing_contexts_STAR_)) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null));
    } else {
    }
    var temp__4092__auto___29199 = (new cljs.core.Keyword(null, "message", "message", 1968829305)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4092__auto___29199)) {
      var message_29200 = temp__4092__auto___29199;
      cljs.core.println.call(null, message_29200);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 3373152810)).cljs$core$IFn$_invoke$arity$1(m)));
    cljs.core.print.call(null, "  actual: ");
    var actual = (new cljs.core.Keyword(null, "actual", "actual", 3885931776)).cljs$core$IFn$_invoke$arity$1(m);
    if (actual instanceof Error) {
      return cljs.core.println.call(null, actual.stack);
    } else {
      return cljs.core.prn.call(null, actual);
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_29198;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "summary", "summary", 3451231E3), function(m) {
  var _STAR_print_fn_STAR_29201 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3443__auto__ = cemerick.cljs.test._STAR_test_print_fn_STAR_;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 1017460740)).cljs$core$IFn$_invoke$arity$1(m), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1017337731)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "fail", "fail", 1017039504)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "error", "error", 1110689146)).cljs$core$IFn$_invoke$arity$1(m), "assertions.");
    return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1017039504)).cljs$core$IFn$_invoke$arity$1(m), "failures,", (new cljs.core.Keyword(null, "error", "error", 1110689146)).cljs$core$IFn$_invoke$arity$1(m), "errors.");
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_29201;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", 1359210286), function(m) {
  var _STAR_print_fn_STAR_29202 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3443__auto__ = cemerick.cljs.test._STAR_test_print_fn_STAR_;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    return cljs.core.println.call(null, "\nTesting", (new cljs.core.Keyword(null, "ns", "ns", 1013907767)).cljs$core$IFn$_invoke$arity$1(m));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_29202;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 3401491808), function(m) {
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", 3128464258), function(m) {
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-var", "end-test-var", 2014682E3), function(m) {
  return null;
});
cemerick.cljs.test.register_fixtures_BANG_ = function() {
  var register_fixtures_BANG___delegate = function(ns_sym, fixture_type, fixture_fns) {
    return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_fixtures, cljs.core.update_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_sym, fixture_type], null), cljs.core.constantly.call(null, fixture_fns));
  };
  var register_fixtures_BANG_ = function(ns_sym, fixture_type, var_args) {
    var fixture_fns = null;
    if (arguments.length > 2) {
      fixture_fns = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return register_fixtures_BANG___delegate.call(this, ns_sym, fixture_type, fixture_fns);
  };
  register_fixtures_BANG_.cljs$lang$maxFixedArity = 2;
  register_fixtures_BANG_.cljs$lang$applyTo = function(arglist__29203) {
    var ns_sym = cljs.core.first(arglist__29203);
    arglist__29203 = cljs.core.next(arglist__29203);
    var fixture_type = cljs.core.first(arglist__29203);
    var fixture_fns = cljs.core.rest(arglist__29203);
    return register_fixtures_BANG___delegate(ns_sym, fixture_type, fixture_fns);
  };
  register_fixtures_BANG_.cljs$core$IFn$_invoke$arity$variadic = register_fixtures_BANG___delegate;
  return register_fixtures_BANG_;
}();
cemerick.cljs.test.default_fixture = function default_fixture(f) {
  return f.call(null);
};
cemerick.cljs.test.compose_fixtures = function compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cemerick.cljs.test.join_fixtures = function join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cemerick.cljs.test.compose_fixtures, cemerick.cljs.test.default_fixture, fixtures);
};
cemerick.cljs.test.test_function = function test_function(v) {
  if (cljs.core.fn_QMARK_.call(null, v)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("test-var must be passed the function to be tested (not a symbol naming it)"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", -1640430032, null), new cljs.core.Symbol(null, "v", "v", -1640531409, null))))].join(""));
  }
  var temp__4092__auto__ = (new cljs.core.Keyword(null, "test", "test", 1017460740)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  if (cljs.core.truth_(temp__4092__auto__)) {
    var t = temp__4092__auto__;
    var _STAR_testing_vars_STAR_29206 = cemerick.cljs.test._STAR_testing_vars_STAR_;
    try {
      cemerick.cljs.test._STAR_testing_vars_STAR_ = cljs.core.conj.call(null, cemerick.cljs.test._STAR_testing_vars_STAR_, function() {
        var or__3443__auto__ = (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return v;
        }
      }());
      cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", 3128464258), new cljs.core.Keyword(null, "var", "var", 1014020761), v], null));
      cemerick.cljs.test.inc_report_counter.call(null, new cljs.core.Keyword(null, "test", "test", 1017460740));
      try {
        t.call(null);
      } catch (e29207) {
        if (e29207 instanceof Error) {
          var e_29208 = e29207;
          cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "error", "error", 1110689146), new cljs.core.Keyword(null, "message", "message", 1968829305), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 3373152810), null, new cljs.core.Keyword(null, "actual", "actual", 3885931776), e_29208], null));
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw e29207;
          } else {
          }
        }
      }
      return cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 2014682E3), new cljs.core.Keyword(null, "var", "var", 1014020761), v], null));
    } finally {
      cemerick.cljs.test._STAR_testing_vars_STAR_ = _STAR_testing_vars_STAR_29206;
    }
  } else {
    return null;
  }
};
cemerick.cljs.test.test_all_vars = function test_all_vars(ns_sym) {
  var once_fixture_fn = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "once", "once", 1017319923)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
  var each_fixture_fn = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "each", "each", 1017009523)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
  return once_fixture_fn.call(null, function() {
    var seq__29213 = cljs.core.seq.call(null, cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests), ns_sym));
    var chunk__29214 = null;
    var count__29215 = 0;
    var i__29216 = 0;
    while (true) {
      if (i__29216 < count__29215) {
        var v = cljs.core._nth.call(null, chunk__29214, i__29216);
        if (cljs.core.truth_((new cljs.core.Keyword(null, "test", "test", 1017460740)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v)))) {
          each_fixture_fn.call(null, function(seq__29213, chunk__29214, count__29215, i__29216, v) {
            return function() {
              return cemerick.cljs.test.test_function.call(null, v);
            };
          }(seq__29213, chunk__29214, count__29215, i__29216, v));
        } else {
        }
        var G__29217 = seq__29213;
        var G__29218 = chunk__29214;
        var G__29219 = count__29215;
        var G__29220 = i__29216 + 1;
        seq__29213 = G__29217;
        chunk__29214 = G__29218;
        count__29215 = G__29219;
        i__29216 = G__29220;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__29213);
        if (temp__4092__auto__) {
          var seq__29213__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__29213__$1)) {
            var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__29213__$1);
            var G__29221 = cljs.core.chunk_rest.call(null, seq__29213__$1);
            var G__29222 = c__4191__auto__;
            var G__29223 = cljs.core.count.call(null, c__4191__auto__);
            var G__29224 = 0;
            seq__29213 = G__29221;
            chunk__29214 = G__29222;
            count__29215 = G__29223;
            i__29216 = G__29224;
            continue;
          } else {
            var v = cljs.core.first.call(null, seq__29213__$1);
            if (cljs.core.truth_((new cljs.core.Keyword(null, "test", "test", 1017460740)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v)))) {
              each_fixture_fn.call(null, function(seq__29213, chunk__29214, count__29215, i__29216, v, seq__29213__$1, temp__4092__auto__) {
                return function() {
                  return cemerick.cljs.test.test_function.call(null, v);
                };
              }(seq__29213, chunk__29214, count__29215, i__29216, v, seq__29213__$1, temp__4092__auto__));
            } else {
            }
            var G__29225 = cljs.core.next.call(null, seq__29213__$1);
            var G__29226 = null;
            var G__29227 = 0;
            var G__29228 = 0;
            seq__29213 = G__29225;
            chunk__29214 = G__29226;
            count__29215 = G__29227;
            i__29216 = G__29228;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
};
cemerick.cljs.test.test_ns = function test_ns(ns_sym) {
  var _STAR_report_counters_STAR_29230 = cemerick.cljs.test._STAR_report_counters_STAR_;
  try {
    cemerick.cljs.test._STAR_report_counters_STAR_ = cljs.core.atom.call(null, cemerick.cljs.test._STAR_initial_report_counters_STAR_);
    cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", 1359210286), new cljs.core.Keyword(null, "ns", "ns", 1013907767), ns_sym], null));
    var temp__4090__auto___29231 = cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_test_hooks), ns_sym);
    if (cljs.core.truth_(temp__4090__auto___29231)) {
      var test_hook_29232 = temp__4090__auto___29231;
      test_hook_29232.call(null);
    } else {
      cemerick.cljs.test.test_all_vars.call(null, ns_sym);
    }
    cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 3401491808), new cljs.core.Keyword(null, "ns", "ns", 1013907767), ns_sym], null));
    return cljs.core.deref.call(null, cemerick.cljs.test._STAR_report_counters_STAR_);
  } finally {
    cemerick.cljs.test._STAR_report_counters_STAR_ = _STAR_report_counters_STAR_29230;
  }
};
cemerick.cljs.test.run_tests_STAR_ = function() {
  var run_tests_STAR___delegate = function(namespaces) {
    var summary = cljs.core.assoc.call(null, cljs.core.apply.call(null, cljs.core.merge_with, cljs.core._PLUS_, cljs.core.map.call(null, cemerick.cljs.test.test_ns, namespaces)), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "summary", "summary", 3451231E3));
    cemerick.cljs.test.do_report.call(null, summary);
    return summary;
  };
  var run_tests_STAR_ = function(var_args) {
    var namespaces = null;
    if (arguments.length > 0) {
      namespaces = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return run_tests_STAR___delegate.call(this, namespaces);
  };
  run_tests_STAR_.cljs$lang$maxFixedArity = 0;
  run_tests_STAR_.cljs$lang$applyTo = function(arglist__29233) {
    var namespaces = cljs.core.seq(arglist__29233);
    return run_tests_STAR___delegate(namespaces);
  };
  run_tests_STAR_.cljs$core$IFn$_invoke$arity$variadic = run_tests_STAR___delegate;
  return run_tests_STAR_;
}();
goog.exportSymbol("cemerick.cljs.test.run_tests_STAR_", cemerick.cljs.test.run_tests_STAR_);
cemerick.cljs.test.run_all_tests = function() {
  var run_all_tests = null;
  var run_all_tests__0 = function() {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests)));
  };
  var run_all_tests__1 = function(re) {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.filter.call(null, function(p1__29234_SHARP_) {
      return cljs.core.re_matches.call(null, re, cljs.core.name.call(null, p1__29234_SHARP_));
    }, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests))));
  };
  run_all_tests = function(re) {
    switch(arguments.length) {
      case 0:
        return run_all_tests__0.call(this);
      case 1:
        return run_all_tests__1.call(this, re);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  run_all_tests.cljs$core$IFn$_invoke$arity$0 = run_all_tests__0;
  run_all_tests.cljs$core$IFn$_invoke$arity$1 = run_all_tests__1;
  return run_all_tests;
}();
goog.exportSymbol("cemerick.cljs.test.run_all_tests", cemerick.cljs.test.run_all_tests);
cemerick.cljs.test.successful_QMARK_ = function successful_QMARK_(summary) {
  return(new cljs.core.Keyword(null, "fail", "fail", 1017039504)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", 1110689146)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
};
goog.exportSymbol("cemerick.cljs.test.successful_QMARK_", cemerick.cljs.test.successful_QMARK_);
cemerick.cljs.test.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
goog.exportSymbol("cemerick.cljs.test.set_print_fn_BANG_", cemerick.cljs.test.set_print_fn_BANG_);
goog.provide("omchaya.test");
goog.require("cljs.core");
goog.require("cemerick.cljs.test");
goog.require("cemerick.cljs.test");
omchaya.test.run = function run() {
  var summary = cemerick.cljs.test.run_tests_STAR_.call(null, new cljs.core.Symbol(null, "omchaya.test", "omchaya.test", 322614707, null));
  var success_QMARK_ = (new cljs.core.Keyword(null, "fail", "fail", 1017039504)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", 1110689146)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
  console.log("Success? ", success_QMARK_);
  if (success_QMARK_) {
    return 0;
  } else {
    return 1;
  }
};
goog.exportSymbol("omchaya.test.run", omchaya.test.run);
goog.provide("goog.i18n.DateTimeSymbols");
goog.provide("goog.i18n.DateTimeSymbols_af");
goog.provide("goog.i18n.DateTimeSymbols_am");
goog.provide("goog.i18n.DateTimeSymbols_ar");
goog.provide("goog.i18n.DateTimeSymbols_bg");
goog.provide("goog.i18n.DateTimeSymbols_bn");
goog.provide("goog.i18n.DateTimeSymbols_ca");
goog.provide("goog.i18n.DateTimeSymbols_chr");
goog.provide("goog.i18n.DateTimeSymbols_cs");
goog.provide("goog.i18n.DateTimeSymbols_cy");
goog.provide("goog.i18n.DateTimeSymbols_da");
goog.provide("goog.i18n.DateTimeSymbols_de");
goog.provide("goog.i18n.DateTimeSymbols_de_AT");
goog.provide("goog.i18n.DateTimeSymbols_de_CH");
goog.provide("goog.i18n.DateTimeSymbols_el");
goog.provide("goog.i18n.DateTimeSymbols_en");
goog.provide("goog.i18n.DateTimeSymbols_en_AU");
goog.provide("goog.i18n.DateTimeSymbols_en_GB");
goog.provide("goog.i18n.DateTimeSymbols_en_IE");
goog.provide("goog.i18n.DateTimeSymbols_en_IN");
goog.provide("goog.i18n.DateTimeSymbols_en_ISO");
goog.provide("goog.i18n.DateTimeSymbols_en_SG");
goog.provide("goog.i18n.DateTimeSymbols_en_US");
goog.provide("goog.i18n.DateTimeSymbols_en_ZA");
goog.provide("goog.i18n.DateTimeSymbols_es");
goog.provide("goog.i18n.DateTimeSymbols_es_419");
goog.provide("goog.i18n.DateTimeSymbols_et");
goog.provide("goog.i18n.DateTimeSymbols_eu");
goog.provide("goog.i18n.DateTimeSymbols_fa");
goog.provide("goog.i18n.DateTimeSymbols_fi");
goog.provide("goog.i18n.DateTimeSymbols_fil");
goog.provide("goog.i18n.DateTimeSymbols_fr");
goog.provide("goog.i18n.DateTimeSymbols_fr_CA");
goog.provide("goog.i18n.DateTimeSymbols_gl");
goog.provide("goog.i18n.DateTimeSymbols_gsw");
goog.provide("goog.i18n.DateTimeSymbols_gu");
goog.provide("goog.i18n.DateTimeSymbols_haw");
goog.provide("goog.i18n.DateTimeSymbols_he");
goog.provide("goog.i18n.DateTimeSymbols_hi");
goog.provide("goog.i18n.DateTimeSymbols_hr");
goog.provide("goog.i18n.DateTimeSymbols_hu");
goog.provide("goog.i18n.DateTimeSymbols_id");
goog.provide("goog.i18n.DateTimeSymbols_in");
goog.provide("goog.i18n.DateTimeSymbols_is");
goog.provide("goog.i18n.DateTimeSymbols_it");
goog.provide("goog.i18n.DateTimeSymbols_iw");
goog.provide("goog.i18n.DateTimeSymbols_ja");
goog.provide("goog.i18n.DateTimeSymbols_kn");
goog.provide("goog.i18n.DateTimeSymbols_ko");
goog.provide("goog.i18n.DateTimeSymbols_ln");
goog.provide("goog.i18n.DateTimeSymbols_lt");
goog.provide("goog.i18n.DateTimeSymbols_lv");
goog.provide("goog.i18n.DateTimeSymbols_ml");
goog.provide("goog.i18n.DateTimeSymbols_mr");
goog.provide("goog.i18n.DateTimeSymbols_ms");
goog.provide("goog.i18n.DateTimeSymbols_mt");
goog.provide("goog.i18n.DateTimeSymbols_nl");
goog.provide("goog.i18n.DateTimeSymbols_no");
goog.provide("goog.i18n.DateTimeSymbols_or");
goog.provide("goog.i18n.DateTimeSymbols_pl");
goog.provide("goog.i18n.DateTimeSymbols_pt");
goog.provide("goog.i18n.DateTimeSymbols_pt_BR");
goog.provide("goog.i18n.DateTimeSymbols_pt_PT");
goog.provide("goog.i18n.DateTimeSymbols_ro");
goog.provide("goog.i18n.DateTimeSymbols_ru");
goog.provide("goog.i18n.DateTimeSymbols_sk");
goog.provide("goog.i18n.DateTimeSymbols_sl");
goog.provide("goog.i18n.DateTimeSymbols_sq");
goog.provide("goog.i18n.DateTimeSymbols_sr");
goog.provide("goog.i18n.DateTimeSymbols_sv");
goog.provide("goog.i18n.DateTimeSymbols_sw");
goog.provide("goog.i18n.DateTimeSymbols_ta");
goog.provide("goog.i18n.DateTimeSymbols_te");
goog.provide("goog.i18n.DateTimeSymbols_th");
goog.provide("goog.i18n.DateTimeSymbols_tl");
goog.provide("goog.i18n.DateTimeSymbols_tr");
goog.provide("goog.i18n.DateTimeSymbols_uk");
goog.provide("goog.i18n.DateTimeSymbols_ur");
goog.provide("goog.i18n.DateTimeSymbols_vi");
goog.provide("goog.i18n.DateTimeSymbols_zh");
goog.provide("goog.i18n.DateTimeSymbols_zh_CN");
goog.provide("goog.i18n.DateTimeSymbols_zh_HK");
goog.provide("goog.i18n.DateTimeSymbols_zh_TW");
goog.provide("goog.i18n.DateTimeSymbols_zu");
goog.i18n.DateTimeSymbols_en_ISO = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yyyy-MM-dd"], TIMEFORMATS:["HH:mm:ss v", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], AVAILABLEFORMATS:{"Md":"M/d", "MMMMd":"MMMM d", "MMMd":"MMM d"}, FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_af = {ERAS:["v.C.", "n.C."], ERANAMES:["voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", 
"Oktober", "November", "Desember"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], STANDALONEWEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], SHORTWEEKDAYS:["So", "Ma", "Di", "Wo", "Do", "Vr", "Sa"], STANDALONESHORTWEEKDAYS:["So", 
"Ma", "Di", "Wo", "Do", "Vr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1ste kwartaal", "2de kwartaal", "3de kwartaal", "4de kwartaal"], AMPMS:["vm.", "nm."], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "dd MMM y", "yyyy-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_am = {ERAS:["\u12d3/\u12d3", "\u12d3/\u121d"], ERANAMES:["\u12d3\u1218\u1270 \u12d3\u1208\u121d", "\u12d3\u1218\u1270 \u121d\u1215\u1228\u1275"], NARROWMONTHS:["\u1303", "\u134c", "\u121b", "\u12a4", "\u121c", "\u1301", "\u1301", "\u12a6", "\u1234", "\u12a6", "\u1296", "\u12f2"], STANDALONENARROWMONTHS:["\u1303", "\u134c", "\u121b", "\u12a4", "\u121c", "\u1301", "\u1301", "\u12a6", "\u1234", "\u12a6", "\u1296", "\u12f2"], MONTHS:["\u1303\u1295\u12e9\u12c8\u122a", "\u134c\u1265\u1229\u12c8\u122a", 
"\u121b\u122d\u127d", "\u12a4\u1355\u1228\u120d", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235\u1275", "\u1234\u1355\u1274\u121d\u1260\u122d", "\u12a6\u12ad\u1270\u12cd\u1260\u122d", "\u1296\u126c\u121d\u1260\u122d", "\u12f2\u1234\u121d\u1260\u122d"], STANDALONEMONTHS:["\u1303\u1295\u12e9\u12c8\u122a", "\u134c\u1265\u1229\u12c8\u122a", "\u121b\u122d\u127d", "\u12a4\u1355\u1228\u120d", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235\u1275", "\u1234\u1355\u1274\u121d\u1260\u122d", 
"\u12a6\u12ad\u1270\u12cd\u1260\u122d", "\u1296\u126c\u121d\u1260\u122d", "\u12f2\u1234\u121d\u1260\u122d"], SHORTMONTHS:["\u1303\u1295\u12e9", "\u134c\u1265\u1229", "\u121b\u122d\u127d", "\u12a4\u1355\u1228", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235", "\u1234\u1355\u1274", "\u12a6\u12ad\u1270", "\u1296\u126c\u121d", "\u12f2\u1234\u121d"], STANDALONESHORTMONTHS:["\u1303\u1295\u12e9", "\u134c\u1265\u1229", "\u121b\u122d\u127d", "\u12a4\u1355\u1228", "\u121c\u12ed", 
"\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235", "\u1234\u1355\u1274", "\u12a6\u12ad\u1270", "\u1296\u126c\u121d", "\u12f2\u1234\u121d"], WEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230\u129e", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], STANDALONEWEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230\u129e", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], SHORTWEEKDAYS:["\u12a5\u1211\u12f5", 
"\u1230\u129e", "\u121b\u12ad\u1230", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], STANDALONESHORTWEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], NARROWWEEKDAYS:["\u12a5", "\u1230", "\u121b", "\u1228", "\u1210", "\u12d3", "\u1245"], STANDALONENARROWWEEKDAYS:["\u12a5", "\u1230", "\u121b", "\u1228", "\u1210", "\u12d3", "\u1245"], SHORTQUARTERS:["Q1", 
"Q2", "Q3", "Q4"], QUARTERS:["1\u129b\u12cd \u1229\u1265", "\u1201\u1208\u1270\u129b\u12cd \u1229\u1265", "3\u129b\u12cd \u1229\u1265", "4\u129b\u12cd \u1229\u1265"], AMPMS:["\u1321\u12cb\u1275", "\u12a8\u1233\u12d3\u1275"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/yyyy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ar = {ZERODIGIT:1632, ERAS:["\u0642.\u0645", "\u0645"], ERANAMES:["\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f", "\u0645\u064a\u0644\u0627\u062f\u064a"], NARROWMONTHS:["\u064a", "\u0641", "\u0645", "\u0623", "\u0648", "\u0646", "\u0644", "\u063a", "\u0633", "\u0643", "\u0628", "\u062f"], STANDALONENARROWMONTHS:["\u064a", "\u0641", "\u0645", "\u0623", "\u0648", "\u0646", "\u0644", "\u063a", "\u0633", "\u0643", "\u0628", "\u062f"], MONTHS:["\u064a\u0646\u0627\u064a\u0631", 
"\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], STANDALONEMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", 
"\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], SHORTMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", 
"\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", 
"\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], WEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], 
STANDALONEWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], SHORTWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", 
"\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], STANDALONESHORTWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], NARROWWEEKDAYS:["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", 
"\u062c", "\u0633"], STANDALONENARROWWEEKDAYS:["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", "\u062c", "\u0633"], SHORTQUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], QUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", 
"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], AMPMS:["\u0635", "\u0645"], DATEFORMATS:["EEEE\u060c d MMMM\u060c y", "d MMMM\u060c y", "dd\u200f/MM\u200f/yyyy", "d\u200f/M\u200f/yyyy"], TIMEFORMATS:["zzzz h:mm:ss a", "z h:mm:ss a", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_bg = {ERAS:["\u043f\u0440. \u043d. \u0435.", "\u043e\u0442 \u043d. \u0435."], ERANAMES:["\u043f\u0440.\u0425\u0440.", "\u0441\u043b.\u0425\u0440."], NARROWMONTHS:["\u044f", "\u0444", "\u043c", "\u0430", "\u043c", "\u044e", "\u044e", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u044f", "\u0444", "\u043c", "\u0430", "\u043c", "\u044e", "\u044e", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u044f\u043d\u0443\u0430\u0440\u0438", 
"\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], STANDALONEMONTHS:["\u044f\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], SHORTMONTHS:["\u044f\u043d.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", 
"\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u044f\u043d.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], WEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u044f", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", "\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", 
"\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], STANDALONESHORTWEEKDAYS:["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", "\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", 
"\u043f", "\u0441"], SHORTQUARTERS:["I \u0442\u0440\u0438\u043c.", "II \u0442\u0440\u0438\u043c.", "III \u0442\u0440\u0438\u043c.", "IV \u0442\u0440\u0438\u043c."], QUARTERS:["1-\u0432\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "2-\u0440\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "3-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "4-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435"], AMPMS:["\u043f\u0440. \u043e\u0431.", 
"\u0441\u043b. \u043e\u0431."], DATEFORMATS:["dd MMMM y, EEEE", "dd MMMM y", "dd.MM.yyyy", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_bn = {ZERODIGIT:2534, ERAS:["\u0996\u09c3\u09b7\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], ERANAMES:["\u0996\u09c3\u09b7\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], NARROWMONTHS:["\u099c\u09be", "\u09ab\u09c7", "\u09ae\u09be", "\u098f", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1", "\u0986", "\u09b8\u09c7", "\u0985", "\u09a8", "\u09a1\u09bf"], STANDALONENARROWMONTHS:["\u099c\u09be", 
"\u09ab\u09c7", "\u09ae\u09be", "\u098f", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1", "\u0986", "\u09b8\u09c7", "\u0985", "\u09a8", "\u09a1\u09bf"], MONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", 
"\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], STANDALONEMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", 
"\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], SHORTMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", 
"\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], STANDALONESHORTMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", 
"\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], WEEKDAYS:["\u09b0\u09ac\u09bf\u09ac\u09be\u09b0", "\u09b8\u09cb\u09ae\u09ac\u09be\u09b0", "\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0", "\u09ac\u09c1\u09a7\u09ac\u09be\u09b0", "\u09ac\u09c3\u09b9\u09b7\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0", "\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0", "\u09b6\u09a8\u09bf\u09ac\u09be\u09b0"], STANDALONEWEEKDAYS:["\u09b0\u09ac\u09bf\u09ac\u09be\u09b0", 
"\u09b8\u09cb\u09ae\u09ac\u09be\u09b0", "\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0", "\u09ac\u09c1\u09a7\u09ac\u09be\u09b0", "\u09ac\u09c3\u09b9\u09b7\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0", "\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0", "\u09b6\u09a8\u09bf\u09ac\u09be\u09b0"], SHORTWEEKDAYS:["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", "\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"], 
STANDALONESHORTWEEKDAYS:["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", "\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"], NARROWWEEKDAYS:["\u09b0", "\u09b8\u09cb", "\u09ae", "\u09ac\u09c1", "\u09ac\u09c3", "\u09b6\u09c1", "\u09b6"], STANDALONENARROWWEEKDAYS:["\u09b0", "\u09b8\u09cb", "\u09ae", "\u09ac\u09c1", "\u09ac\u09c3", "\u09b6\u09c1", "\u09b6"], SHORTQUARTERS:["\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e7", 
"\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e8", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09e9", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6 \u09ea"], QUARTERS:["\u09aa\u09cd\u09b0\u09a5\u09ae \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u09a6\u09cd\u09ac\u09bf\u09a4\u09c0\u09af\u09bc \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u09a4\u09c3\u09a4\u09c0\u09af\u09bc \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5 \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6"], 
AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:4, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ca = {ERAS:["aC", "dC"], ERANAMES:["abans de Crist", "despr\u00e9s de Crist"], NARROWMONTHS:["G", "F", "M", "A", "M", "J", "G", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["g", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["de gener", "de febrer", "de mar\u00e7", "d\u2019abril", "de maig", "de juny", "de juliol", "d\u2019agost", "de setembre", "d\u2019octubre", "de novembre", "de desembre"], STANDALONEMONTHS:["gener", "febrer", "mar\u00e7", "abril", 
"maig", "juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre"], SHORTMONTHS:["de gen.", "de febr.", "de mar\u00e7", "d\u2019abr.", "de maig", "de juny", "de jul.", "d\u2019ag.", "de set.", "d\u2019oct.", "de nov.", "de des."], STANDALONESHORTMONTHS:["gen.", "febr.", "mar\u00e7", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], WEEKDAYS:["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"], STANDALONEWEEKDAYS:["Diumenge", "Dilluns", 
"Dimarts", "Dimecres", "Dijous", "Divendres", "Dissabte"], SHORTWEEKDAYS:["dg.", "dl.", "dt.", "dc.", "dj.", "dv.", "ds."], STANDALONESHORTWEEKDAYS:["dg", "dl", "dt", "dc", "dj", "dv", "ds"], NARROWWEEKDAYS:["G", "l", "T", "C", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["g", "l", "t", "c", "j", "v", "s"], SHORTQUARTERS:["1T", "2T", "3T", "4T"], QUARTERS:["1r trimestre", "2n trimestre", "3r trimestre", "4t trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM 'de' y", "d MMMM 'de' y", "dd/MM/yyyy", 
"dd/MM/yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_chr = {ERAS:["\u13a4\u13d3\u13b7\u13b8", "\u13a4\u13b6\u13d0\u13c5"], ERANAMES:["\u13cf \u13e5\u13cc \u13be\u13d5\u13b2\u13cd\u13ac\u13be", "\u13a0\u13a9\u13c3\u13ae\u13b5\u13d3\u13cd\u13d7\u13f1 \u13a0\u13d5\u13d8\u13f1\u13cd\u13ac \u13f1\u13b0\u13e9 \u13e7\u13d3\u13c2\u13b8\u13a2\u13cd\u13d7"], NARROWMONTHS:["\u13a4", "\u13a7", "\u13a0", "\u13a7", "\u13a0", "\u13d5", "\u13ab", "\u13a6", "\u13da", "\u13da", "\u13c5", "\u13a4"], STANDALONENARROWMONTHS:["\u13a4", "\u13a7", 
"\u13a0", "\u13a7", "\u13a0", "\u13d5", "\u13ab", "\u13a6", "\u13da", "\u13da", "\u13c5", "\u13a4"], MONTHS:["\u13a4\u13c3\u13b8\u13d4\u13c5", "\u13a7\u13a6\u13b5", "\u13a0\u13c5\u13f1", "\u13a7\u13ec\u13c2", "\u13a0\u13c2\u13cd\u13ac\u13d8", "\u13d5\u13ad\u13b7\u13f1", "\u13ab\u13f0\u13c9\u13c2", "\u13a6\u13b6\u13c2", "\u13da\u13b5\u13cd\u13d7", "\u13da\u13c2\u13c5\u13d7", "\u13c5\u13d3\u13d5\u13c6", "\u13a4\u13cd\u13a9\u13f1"], STANDALONEMONTHS:["\u13a4\u13c3\u13b8\u13d4\u13c5", "\u13a7\u13a6\u13b5", 
"\u13a0\u13c5\u13f1", "\u13a7\u13ec\u13c2", "\u13a0\u13c2\u13cd\u13ac\u13d8", "\u13d5\u13ad\u13b7\u13f1", "\u13ab\u13f0\u13c9\u13c2", "\u13a6\u13b6\u13c2", "\u13da\u13b5\u13cd\u13d7", "\u13da\u13c2\u13c5\u13d7", "\u13c5\u13d3\u13d5\u13c6", "\u13a4\u13cd\u13a9\u13f1"], SHORTMONTHS:["\u13a4\u13c3", "\u13a7\u13a6", "\u13a0\u13c5", "\u13a7\u13ec", "\u13a0\u13c2", "\u13d5\u13ad", "\u13ab\u13f0", "\u13a6\u13b6", "\u13da\u13b5", "\u13da\u13c2", "\u13c5\u13d3", "\u13a4\u13cd"], STANDALONESHORTMONTHS:["\u13a4\u13c3", 
"\u13a7\u13a6", "\u13a0\u13c5", "\u13a7\u13ec", "\u13a0\u13c2", "\u13d5\u13ad", "\u13ab\u13f0", "\u13a6\u13b6", "\u13da\u13b5", "\u13da\u13c2", "\u13c5\u13d3", "\u13a4\u13cd"], WEEKDAYS:["\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac", "\u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1\u13a2\u13a6", "\u13e6\u13a2\u13c1\u13a2\u13a6", "\u13c5\u13a9\u13c1\u13a2\u13a6", "\u13e7\u13be\u13a9\u13b6\u13cd\u13d7", "\u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be"], STANDALONEWEEKDAYS:["\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac", 
"\u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1\u13a2\u13a6", "\u13e6\u13a2\u13c1\u13a2\u13a6", "\u13c5\u13a9\u13c1\u13a2\u13a6", "\u13e7\u13be\u13a9\u13b6\u13cd\u13d7", "\u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be"], SHORTWEEKDAYS:["\u13c6\u13cd\u13ac", "\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1", "\u13e6\u13a2\u13c1", "\u13c5\u13a9\u13c1", "\u13e7\u13be\u13a9", "\u13c8\u13d5\u13be"], STANDALONESHORTWEEKDAYS:["\u13c6\u13cd\u13ac", "\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1", "\u13e6\u13a2\u13c1", 
"\u13c5\u13a9\u13c1", "\u13e7\u13be\u13a9", "\u13c8\u13d5\u13be"], NARROWWEEKDAYS:["\u13c6", "\u13c9", "\u13d4", "\u13e6", "\u13c5", "\u13e7", "\u13a4"], STANDALONENARROWWEEKDAYS:["\u13c6", "\u13c9", "\u13d4", "\u13e6", "\u13c5", "\u13e7", "\u13a4"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["\u13cc\u13be\u13b4", "\u13d2\u13af\u13f1\u13a2\u13d7\u13e2"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", 
"h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_cs = {ERAS:["p\u0159. n. l.", "n. l."], ERANAMES:["p\u0159. n. l.", "n. l."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["l", "\u00fa", "b", "d", "k", "\u010d", "\u010d", "s", "z", "\u0159", "l", "p"], MONTHS:["ledna", "\u00fanora", "b\u0159ezna", "dubna", "kv\u011btna", "\u010dervna", "\u010dervence", "srpna", "z\u00e1\u0159\u00ed", "\u0159\u00edjna", "listopadu", "prosince"], STANDALONEMONTHS:["leden", "\u00fanor", 
"b\u0159ezen", "duben", "kv\u011bten", "\u010derven", "\u010dervenec", "srpen", "z\u00e1\u0159\u00ed", "\u0159\u00edjen", "listopad", "prosinec"], SHORTMONTHS:["Led", "\u00dano", "B\u0159e", "Dub", "Kv\u011b", "\u010cer", "\u010cvc", "Srp", "Z\u00e1\u0159", "\u0158\u00edj", "Lis", "Pro"], STANDALONESHORTMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], WEEKDAYS:["ned\u011ble", "pond\u011bl\u00ed", "\u00fater\u00fd", "st\u0159eda", "\u010dtvrtek", "p\u00e1tek", "sobota"], 
STANDALONEWEEKDAYS:["ned\u011ble", "pond\u011bl\u00ed", "\u00fater\u00fd", "st\u0159eda", "\u010dtvrtek", "p\u00e1tek", "sobota"], SHORTWEEKDAYS:["ne", "po", "\u00fat", "st", "\u010dt", "p\u00e1", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", "\u00fat", "st", "\u010dt", "p\u00e1", "so"], NARROWWEEKDAYS:["N", "P", "\u00da", "S", "\u010c", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "\u00da", "S", "\u010c", "P", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u010dtvrtlet\u00ed", "2. \u010dtvrtlet\u00ed", 
"3. \u010dtvrtlet\u00ed", "4. \u010dtvrtlet\u00ed"], AMPMS:["dop.", "odp."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d. M. yyyy", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_cy = {ERAS:["CC", "OC"], ERANAMES:["Cyn Crist", "Oed Crist"], NARROWMONTHS:["I", "C", "M", "E", "M", "M", "G", "A", "M", "H", "T", "R"], STANDALONENARROWMONTHS:["I", "C", "M", "E", "M", "M", "G", "A", "M", "H", "T", "R"], MONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffenaf", "Awst", "Medi", "Hydref", "Tachwedd", "Rhagfyr"], STANDALONEMONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", "Tachwedd", 
"Rhagfyr"], SHORTMONTHS:["Ion", "Chwef", "Mawrth", "Ebrill", "Mai", "Meh", "Gorff", "Awst", "Medi", "Hyd", "Tach", "Rhag"], STANDALONESHORTMONTHS:["Ion", "Chwe", "Maw", "Ebr", "Mai", "Meh", "Gor", "Awst", "Medi", "Hyd", "Tach", "Rhag"], WEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], STANDALONEWEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], SHORTWEEKDAYS:["Sul", "Llun", "Maw", 
"Mer", "Iau", "Gwen", "Sad"], STANDALONESHORTWEEKDAYS:["Sul", "Llun", "Maw", "Mer", "Iau", "Gwe", "Sad"], NARROWWEEKDAYS:["S", "L", "M", "M", "I", "G", "S"], STANDALONENARROWWEEKDAYS:["S", "L", "M", "M", "I", "G", "S"], SHORTQUARTERS:["Ch1", "Ch2", "Ch3", "Ch4"], QUARTERS:["Chwarter 1af", "2il chwarter", "3ydd chwarter", "4ydd chwarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/yyyy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_da = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", 
"december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n", "man", "tir", "ons", "tor", "fre", "l\u00f8r"], 
STANDALONESHORTWEEKDAYS:["s\u00f8n", "man", "tir", "ons", "tor", "fre", "l\u00f8r"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["f.m.", "e.m."], DATEFORMATS:["EEEE 'den' d. MMMM y", "d. MMM y", "dd/MM/yyyy", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", 
"November", "Dezember"], SHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["So", 
"Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.yyyy", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_AT = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["J\u00e4nner", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["J\u00e4nner", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", 
"Oktober", "November", "Dezember"], SHORTMONTHS:["J\u00e4n", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], STANDALONESHORTMONTHS:["J\u00e4n", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", "Mi.", "Do.", 
"Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "dd.MM.yyyy", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_CH = goog.i18n.DateTimeSymbols_de;
goog.i18n.DateTimeSymbols_el = {ERAS:["\u03c0.\u03a7.", "\u03bc.\u03a7."], ERANAMES:["\u03c0.\u03a7.", "\u03bc.\u03a7."], NARROWMONTHS:["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"], STANDALONENARROWMONTHS:["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"], MONTHS:["\u0399\u03b1\u03bd\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", 
"\u039c\u03b1\u03c1\u03c4\u03af\u03bf\u03c5", "\u0391\u03c0\u03c1\u03b9\u03bb\u03af\u03bf\u03c5", "\u039c\u03b1\u0390\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bd\u03af\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bb\u03af\u03bf\u03c5", "\u0391\u03c5\u03b3\u03bf\u03cd\u03c3\u03c4\u03bf\u03c5", "\u03a3\u03b5\u03c0\u03c4\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u039f\u03ba\u03c4\u03c9\u03b2\u03c1\u03af\u03bf\u03c5", "\u039d\u03bf\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u0394\u03b5\u03ba\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5"], 
STANDALONEMONTHS:["\u0399\u03b1\u03bd\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u039c\u03ac\u03c1\u03c4\u03b9\u03bf\u03c2", "\u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf\u03c2", "\u039c\u03ac\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bd\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bb\u03b9\u03bf\u03c2", "\u0391\u03cd\u03b3\u03bf\u03c5\u03c3\u03c4\u03bf\u03c2", "\u03a3\u03b5\u03c0\u03c4\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", 
"\u039f\u03ba\u03c4\u03ce\u03b2\u03c1\u03b9\u03bf\u03c2", "\u039d\u03bf\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", "\u0394\u03b5\u03ba\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2"], SHORTMONTHS:["\u0399\u03b1\u03bd", "\u03a6\u03b5\u03b2", "\u039c\u03b1\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03b1\u03ca", "\u0399\u03bf\u03c5\u03bd", "\u0399\u03bf\u03c5\u03bb", "\u0391\u03c5\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03b5", "\u0394\u03b5\u03ba"], STANDALONESHORTMONTHS:["\u0399\u03b1\u03bd", 
"\u03a6\u03b5\u03b2", "\u039c\u03ac\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03ac\u03b9", "\u0399\u03bf\u03cd\u03bd", "\u0399\u03bf\u03cd\u03bb", "\u0391\u03c5\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03ad", "\u0394\u03b5\u03ba"], WEEKDAYS:["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", "\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", 
"\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"], STANDALONEWEEKDAYS:["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", "\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", "\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"], SHORTWEEKDAYS:["\u039a\u03c5\u03c1", "\u0394\u03b5\u03c5", "\u03a4\u03c1\u03b9", "\u03a4\u03b5\u03c4", "\u03a0\u03b5\u03bc", 
"\u03a0\u03b1\u03c1", "\u03a3\u03b1\u03b2"], STANDALONESHORTWEEKDAYS:["\u039a\u03c5\u03c1", "\u0394\u03b5\u03c5", "\u03a4\u03c1\u03af", "\u03a4\u03b5\u03c4", "\u03a0\u03ad\u03bc", "\u03a0\u03b1\u03c1", "\u03a3\u03ac\u03b2"], NARROWWEEKDAYS:["\u039a", "\u0394", "\u03a4", "\u03a4", "\u03a0", "\u03a0", "\u03a3"], STANDALONENARROWWEEKDAYS:["\u039a", "\u0394", "\u03a4", "\u03a4", "\u03a0", "\u03a0", "\u03a3"], SHORTQUARTERS:["\u03a41", "\u03a42", "\u03a43", "\u03a44"], QUARTERS:["1\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", 
"2\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "3\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "4\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf"], AMPMS:["\u03c0.\u03bc.", "\u03bc.\u03bc."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_AU = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd/MM/yyyy", "d/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_GB = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/yyyy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en_IE = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/yyyy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en_IN = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "dd-MMM-y", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_SG = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_US = goog.i18n.DateTimeSymbols_en;
goog.i18n.DateTimeSymbols_en_ZA = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "dd MMM y", "yyyy/MM/dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_es = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "anno D\u00f3mini"], NARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], STANDALONEMONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", 
"octubre", "noviembre", "diciembre"], SHORTMONTHS:["ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"], STANDALONESHORTMONTHS:["ene", "feb", "mar", "abr", "mayo", "jun", "jul", "ago", "sep", "oct", "nov", "dic"], WEEKDAYS:["domingo", "lunes", "martes", "mi\u00e9rcoles", "jueves", "viernes", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "lunes", "martes", "mi\u00e9rcoles", "jueves", "viernes", "s\u00e1bado"], SHORTWEEKDAYS:["dom", "lun", "mar", "mi\u00e9", "jue", "vie", 
"s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "lun", "mar", "mi\u00e9", "jue", "vie", "s\u00e1b"], NARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2\u00ba trimestre", "3er trimestre", "4\u00ba trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/yyyy", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_es_419 = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "anno D\u00f3mini"], NARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], STANDALONEMONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", 
"octubre", "noviembre", "diciembre"], SHORTMONTHS:["ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"], STANDALONESHORTMONTHS:["ene", "feb", "mar", "abr", "mayo", "jun", "jul", "ago", "sep", "oct", "nov", "dic"], WEEKDAYS:["domingo", "lunes", "martes", "mi\u00e9rcoles", "jueves", "viernes", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "lunes", "martes", "mi\u00e9rcoles", "jueves", "viernes", "s\u00e1bado"], SHORTWEEKDAYS:["dom", "lun", "mar", "mi\u00e9", "jue", "vie", 
"s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "lun", "mar", "mi\u00e9", "jue", "vie", "s\u00e1b"], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2\u00ba trimestre", "3er trimestre", "4\u00ba trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/yyyy", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_et = {ERAS:["e.m.a.", "m.a.j."], ERANAMES:["enne meie aega", "meie aja j\u00e4rgi"], NARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["jaanuar", "veebruar", "m\u00e4rts", "aprill", "mai", "juuni", "juuli", "august", "september", "oktoober", "november", "detsember"], STANDALONEMONTHS:["jaanuar", "veebruar", "m\u00e4rts", "aprill", "mai", "juuni", "juuli", 
"august", "september", "oktoober", "november", "detsember"], SHORTMONTHS:["jaan", "veebr", "m\u00e4rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], STANDALONESHORTMONTHS:["jaan", "veebr", "m\u00e4rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], WEEKDAYS:["p\u00fchap\u00e4ev", "esmasp\u00e4ev", "teisip\u00e4ev", "kolmap\u00e4ev", "neljap\u00e4ev", "reede", "laup\u00e4ev"], STANDALONEWEEKDAYS:["p\u00fchap\u00e4ev", "esmasp\u00e4ev", "teisip\u00e4ev", 
"kolmap\u00e4ev", "neljap\u00e4ev", "reede", "laup\u00e4ev"], SHORTWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], STANDALONESHORTWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], NARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], STANDALONENARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["enne keskp\u00e4eva", "p\u00e4rast keskp\u00e4eva"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", 
"dd.MM.yyyy", "dd.MM.yy"], TIMEFORMATS:["H:mm.ss zzzz", "H:mm.ss z", "H:mm.ss", "H:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_eu = {ERAS:["K.a.", "K.o."], ERANAMES:["K.a.", "K.o."], NARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], STANDALONENARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], MONTHS:["urtarrila", "otsaila", "martxoa", "apirila", "maiatza", "ekaina", "uztaila", "abuztua", "iraila", "urria", "azaroa", "abendua"], STANDALONEMONTHS:["urtarrila", "otsaila", "martxoa", "apirila", "maiatza", "ekaina", "uztaila", "abuztua", "iraila", "urria", 
"azaroa", "abendua"], SHORTMONTHS:["urt", "ots", "mar", "api", "mai", "eka", "uzt", "abu", "ira", "urr", "aza", "abe"], STANDALONESHORTMONTHS:["urt", "ots", "mar", "api", "mai", "eka", "uzt", "abu", "ira", "urr", "aza", "abe"], WEEKDAYS:["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"], STANDALONEWEEKDAYS:["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"], SHORTWEEKDAYS:["ig", "al", "as", "az", "og", "or", "lr"], STANDALONESHORTWEEKDAYS:["ig", 
"al", "as", "az", "og", "or", "lr"], NARROWWEEKDAYS:["I", "M", "A", "A", "A", "O", "I"], STANDALONENARROWWEEKDAYS:["I", "M", "A", "L", "A", "O", "I"], SHORTQUARTERS:["1Hh", "2Hh", "3Hh", "4Hh"], QUARTERS:["1. hiruhilekoa", "2. hiruhilekoa", "3. hiruhilekoa", "4. hiruhilekoa"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, y'eko' MMMM'ren' dd'a'", "y'eko' MMM'ren' dd'a'", "y MMM d", "yyyy-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fa = {ZERODIGIT:1776, ERAS:["\u0642.\u0645.", "\u0645."], ERANAMES:["\u0642\u0628\u0644 \u0627\u0632 \u0645\u06cc\u0644\u0627\u062f", "\u0645\u06cc\u0644\u0627\u062f\u06cc"], NARROWMONTHS:["\u0698", "\u0641", "\u0645", "\u0622", "\u0645", "\u0698", "\u0698", "\u0627", "\u0633", "\u0627", "\u0646", "\u062f"], STANDALONENARROWMONTHS:["\u0698", "\u0641", "\u0645", "\u0622", "\u0645", "\u0698", "\u0698", "\u0627", "\u0633", "\u0627", "\u0646", "\u062f"], MONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647\u0654", 
"\u0641\u0648\u0631\u06cc\u0647\u0654", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647\u0654", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647\u0654", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], STANDALONEMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647", "\u0641\u0648\u0631\u06cc\u0647", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", 
"\u0645\u0647", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], SHORTMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647\u0654", "\u0641\u0648\u0631\u06cc\u0647\u0654", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647\u0654", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647\u0654", 
"\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647", "\u0641\u0648\u0631\u06cc\u0647", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", 
"\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], WEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], STANDALONEWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", 
"\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], SHORTWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], STANDALONESHORTWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", 
"\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], NARROWWEEKDAYS:["\u06cc", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"], STANDALONENARROWWEEKDAYS:["\u06cc", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"], SHORTQUARTERS:["\u0633\u200c\u0645\u06f1", "\u0633\u200c\u0645\u06f2", "\u0633\u200c\u0645\u06f3", 
"\u0633\u200c\u0645\u06f4"], QUARTERS:["\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0627\u0648\u0644", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u062f\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0633\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0686\u0647\u0627\u0631\u0645"], AMPMS:["\u0642\u0628\u0644\u200c\u0627\u0632\u0638\u0647\u0631", "\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", 
"yyyy/M/d"], TIMEFORMATS:["H:mm:ss (zzzz)", "H:mm:ss (z)", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[3, 4], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_fi = {ERAS:["eKr.", "jKr."], ERANAMES:["ennen Kristuksen syntym\u00e4\u00e4", "j\u00e4lkeen Kristuksen syntym\u00e4n"], NARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], STANDALONENARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], MONTHS:["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kes\u00e4kuuta", "hein\u00e4kuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], STANDALONEMONTHS:["tammikuu", 
"helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kes\u00e4kuu", "hein\u00e4kuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"], SHORTMONTHS:["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kes\u00e4kuuta", "hein\u00e4kuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], STANDALONESHORTMONTHS:["tammi", "helmi", "maalis", "huhti", "touko", "kes\u00e4", "hein\u00e4", "elo", "syys", "loka", "marras", "joulu"], WEEKDAYS:["sunnuntaina", "maanantaina", 
"tiistaina", "keskiviikkona", "torstaina", "perjantaina", "lauantaina"], STANDALONEWEEKDAYS:["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"], SHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], STANDALONESHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], NARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], SHORTQUARTERS:["1. nelj.", "2. nelj.", "3. nelj.", "4. nelj."], QUARTERS:["1. nelj\u00e4nnes", 
"2. nelj\u00e4nnes", "3. nelj\u00e4nnes", "4. nelj\u00e4nnes"], AMPMS:["ap.", "ip."], DATEFORMATS:["cccc, d. MMMM y", "d. MMMM y", "d.M.yyyy", "d.M.yyyy"], TIMEFORMATS:["H.mm.ss zzzz", "H.mm.ss z", "H.mm.ss", "H.mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fil = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], 
SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Mye", "Huw", "Bye", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", "Lun", "Mar", 
"Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], STANDALONENARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 sangkapat", "ika-2 sangkapat", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM dd y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_fr = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "f\u00e9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], STANDALONEMONTHS:["janvier", "f\u00e9vrier", "mars", "avril", 
"mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], SHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], STANDALONESHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", 
"jeudi", "vendredi", "samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fr_CA = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "f\u00e9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], STANDALONEMONTHS:["janvier", "f\u00e9vrier", "mars", "avril", 
"mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], SHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], STANDALONESHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", 
"jeudi", "vendredi", "samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "yyyy-MM-dd", "yy-MM-dd"], 
TIMEFORMATS:["HH 'h' mm 'min' ss 's' zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_gl = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "despois de Cristo"], NARROWMONTHS:["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], MONTHS:["Xaneiro", "Febreiro", "Marzo", "Abril", "Maio", "Xu\u00f1o", "Xullo", "Agosto", "Setembro", "Outubro", "Novembro", "Decembro"], STANDALONEMONTHS:["Xaneiro", "Febreiro", "Marzo", "Abril", "Maio", "Xu\u00f1o", "Xullo", "Agosto", 
"Setembro", "Outubro", "Novembro", "Decembro"], SHORTMONTHS:["Xan", "Feb", "Mar", "Abr", "Mai", "Xu\u00f1", "Xul", "Ago", "Set", "Out", "Nov", "Dec"], STANDALONESHORTMONTHS:["Xan", "Feb", "Mar", "Abr", "Mai", "Xu\u00f1", "Xul", "Ago", "Set", "Out", "Nov", "Dec"], WEEKDAYS:["Domingo", "Luns", "Martes", "M\u00e9rcores", "Xoves", "Venres", "S\u00e1bado"], STANDALONEWEEKDAYS:["Domingo", "Luns", "Martes", "M\u00e9rcores", "Xoves", "Venres", "S\u00e1bado"], SHORTWEEKDAYS:["Dom", "Lun", "Mar", "M\u00e9r", 
"Xov", "Ven", "S\u00e1b"], STANDALONESHORTWEEKDAYS:["Dom", "Lun", "Mar", "M\u00e9r", "Xov", "Ven", "S\u00e1b"], NARROWWEEKDAYS:["D", "L", "M", "M", "X", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "X", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1o trimestre", "2o trimestre", "3o trimestre", "4o trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "d MMM, y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gsw = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "Auguscht", "Sept\u00e4mber", "Oktoober", "Nov\u00e4mber", "Dez\u00e4mber"], STANDALONEMONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "Auguscht", 
"Sept\u00e4mber", "Oktoober", "Nov\u00e4mber", "Dez\u00e4mber"], SHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sunntig", "M\u00e4\u00e4ntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], STANDALONEWEEKDAYS:["Sunntig", "M\u00e4\u00e4ntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], 
SHORTWEEKDAYS:["Su.", "M\u00e4.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["Su.", "M\u00e4.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nam."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.yyyy", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", 
"HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_gu = {ERAS:["\u0a88\u0ab2\u0ac1\u0aa8\u0abe \u0a9c\u0aa8\u0acd\u0aae \u0aaa\u0ab9\u0ac7\u0ab8\u0abe\u0a82", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], ERANAMES:["\u0a88\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8 \u0aaa\u0ac2\u0ab0\u0acd\u0ab5\u0ac7", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], NARROWMONTHS:["\u0a9c\u0abe", "\u0aab\u0ac7", "\u0aae\u0abe", "\u0a8f", "\u0aae\u0ac7", "\u0a9c\u0ac2", "\u0a9c\u0ac1", "\u0a91", "\u0ab8", "\u0a91", "\u0aa8", "\u0aa1\u0abf"], STANDALONENARROWMONTHS:["\u0a9c\u0abe", 
"\u0aab\u0ac7", "\u0aae\u0abe", "\u0a8f", "\u0aae\u0ac7", "\u0a9c\u0ac2", "\u0a9c\u0ac1", "\u0a91", "\u0ab8", "\u0a91", "\u0aa8", "\u0aa1\u0abf"], MONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0", 
"\u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0", "\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0"], STANDALONEMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0", 
"\u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0", "\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0"], SHORTMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7", "\u0a91\u0a95\u0acd\u0a9f\u0acb", "\u0aa8\u0ab5\u0ac7", 
"\u0aa1\u0abf\u0ab8\u0ac7"], STANDALONESHORTMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7", "\u0a91\u0a95\u0acd\u0a9f\u0acb", "\u0aa8\u0ab5\u0ac7", "\u0aa1\u0abf\u0ab8\u0ac7"], WEEKDAYS:["\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0", "\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0", 
"\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0", "\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0", "\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0", "\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0"], STANDALONEWEEKDAYS:["\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0", "\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0", "\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0", "\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0", "\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0", 
"\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0"], SHORTWEEKDAYS:["\u0ab0\u0ab5\u0abf", "\u0ab8\u0acb\u0aae", "\u0aae\u0a82\u0a97\u0ab3", "\u0aac\u0ac1\u0aa7", "\u0a97\u0ac1\u0ab0\u0ac1", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0", "\u0ab6\u0aa8\u0abf"], STANDALONESHORTWEEKDAYS:["\u0ab0\u0ab5\u0abf", "\u0ab8\u0acb\u0aae", "\u0aae\u0a82\u0a97\u0ab3", "\u0aac\u0ac1\u0aa7", "\u0a97\u0ac1\u0ab0\u0ac1", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0", "\u0ab6\u0aa8\u0abf"], NARROWWEEKDAYS:["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", 
"\u0a97\u0ac1", "\u0ab6\u0ac1", "\u0ab6"], STANDALONENARROWWEEKDAYS:["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", "\u0a97\u0ac1", "\u0ab6\u0ac1", "\u0ab6"], SHORTQUARTERS:["\u0aaa\u0ac7\u0ab9\u0ab2\u0abe \u0ab9\u0a82\u0aa4 1", "Q2", "Q3", "\u0a9a\u0acc\u0aa4\u0abe \u0ab9\u0a82\u0aa4 4"], QUARTERS:["\u0aaa\u0ac7\u0ab9\u0ab2\u0abe \u0ab9\u0a82\u0aa4 1", "\u0aa1\u0ac2\u0ab8\u0a8b\u0abe \u0ab9\u0a82\u0aa4 2", "\u0aa4\u0ac0\u0ab8\u0a8b\u0abe \u0ab9\u0a82\u0aa4 3", "\u0a9a\u0acc\u0aa4\u0abe \u0ab9\u0a82\u0aa4 4"], 
AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d-MM-yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_haw = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["Ianuali", "Pepeluali", "Malaki", "\u02bbApelila", "Mei", "Iune", "Iulai", "\u02bbAukake", "Kepakemapa", "\u02bbOkakopa", "Nowemapa", "Kekemapa"], STANDALONEMONTHS:["Ianuali", "Pepeluali", "Malaki", "\u02bbApelila", "Mei", "Iune", "Iulai", "\u02bbAukake", 
"Kepakemapa", "\u02bbOkakopa", "Nowemapa", "Kekemapa"], SHORTMONTHS:["Ian.", "Pep.", "Mal.", "\u02bbAp.", "Mei", "Iun.", "Iul.", "\u02bbAu.", "Kep.", "\u02bbOk.", "Now.", "Kek."], STANDALONESHORTMONTHS:["Ian.", "Pep.", "Mal.", "\u02bbAp.", "Mei", "Iun.", "Iul.", "\u02bbAu.", "Kep.", "\u02bbOk.", "Now.", "Kek."], WEEKDAYS:["L\u0101pule", "Po\u02bbakahi", "Po\u02bbalua", "Po\u02bbakolu", "Po\u02bbah\u0101", "Po\u02bbalima", "Po\u02bbaono"], STANDALONEWEEKDAYS:["L\u0101pule", "Po\u02bbakahi", "Po\u02bbalua", 
"Po\u02bbakolu", "Po\u02bbah\u0101", "Po\u02bbalima", "Po\u02bbaono"], SHORTWEEKDAYS:["LP", "P1", "P2", "P3", "P4", "P5", "P6"], STANDALONESHORTWEEKDAYS:["LP", "P1", "P2", "P3", "P4", "P5", "P6"], NARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_he = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05d4\u05f4\u05e0"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", 
"\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], STANDALONEMONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", 
"\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], SHORTMONTHS:["\u05d9\u05e0\u05d5", "\u05e4\u05d1\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0", "\u05d9\u05d5\u05dc", "\u05d0\u05d5\u05d2", "\u05e1\u05e4\u05d8", "\u05d0\u05d5\u05e7", "\u05e0\u05d5\u05d1", "\u05d3\u05e6\u05de"], STANDALONESHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", 
"\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05f3", "\u05d9\u05d5\u05dc\u05f3", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], WEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", 
"\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], STANDALONEWEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], 
SHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], STANDALONESHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], 
NARROWWEEKDAYS:["\u05d0", "\u05d1", "\u05d2", "\u05d3", "\u05d4", "\u05d5", "\u05e9"], STANDALONENARROWWEEKDAYS:["\u05d0", "\u05d1", "\u05d2", "\u05d3", "\u05d4", "\u05d5", "\u05e9"], SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", 
"\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM yyyy", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hi = {ERAS:["\u0908\u0938\u093e\u092a\u0942\u0930\u094d\u0935", "\u0938\u0928"], ERANAMES:["\u0908\u0938\u093e\u092a\u0942\u0930\u094d\u0935", "\u0938\u0928"], NARROWMONTHS:["\u091c", "\u092b\u093c", "\u092e\u093e", "\u0905", "\u092e", "\u091c\u0942", "\u091c\u0941", "\u0905", "\u0938\u093f", "\u0905", "\u0928", "\u0926\u093f"], STANDALONENARROWMONTHS:["\u091c", "\u092b\u093c", "\u092e\u093e", "\u0905", "\u092e", "\u091c\u0942", "\u091c\u0941", "\u0905", "\u0938\u093f", 
"\u0905", "\u0928", "\u0926\u093f"], MONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u0924\u0942\u092c\u0930", "\u0928\u0935\u092e\u094d\u092c\u0930", "\u0926\u093f\u0938\u092e\u094d\u092c\u0930"], STANDALONEMONTHS:["\u091c\u0928\u0935\u0930\u0940", 
"\u092b\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u0924\u0942\u092c\u0930", "\u0928\u0935\u092e\u094d\u092c\u0930", "\u0926\u093f\u0938\u092e\u094d\u092c\u0930"], SHORTMONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", 
"\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u0924\u0942\u092c\u0930", "\u0928\u0935\u092e\u094d\u092c\u0930", "\u0926\u093f\u0938\u092e\u094d\u092c\u0930"], STANDALONESHORTMONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", 
"\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u0924\u0942\u092c\u0930", "\u0928\u0935\u092e\u094d\u092c\u0930", "\u0926\u093f\u0938\u092e\u094d\u092c\u0930"], WEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0932\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u092c\u0943\u0939\u0938\u094d\u092a\u0924\u093f\u0935\u093e\u0930", 
"\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], STANDALONEWEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0932\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u092c\u0943\u0939\u0938\u094d\u092a\u0924\u093f\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], SHORTWEEKDAYS:["\u0930\u0935\u093f.", "\u0938\u094b\u092e.", 
"\u092e\u0902\u0917\u0932.", "\u092c\u0941\u0927.", "\u092c\u0943\u0939.", "\u0936\u0941\u0915\u094d\u0930.", "\u0936\u0928\u093f."], STANDALONESHORTWEEKDAYS:["\u0930\u0935\u093f.", "\u0938\u094b\u092e.", "\u092e\u0902\u0917\u0932.", "\u092c\u0941\u0927.", "\u092c\u0943\u0939.", "\u0936\u0941\u0915\u094d\u0930.", "\u0936\u0928\u093f."], NARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0930", "\u0938\u094b", 
"\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u0942\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0940\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u091a\u094c\u0925\u0940 \u0924\u093f\u092e\u093e\u0939\u0940"], QUARTERS:["\u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u0942\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0940\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", 
"\u091a\u094c\u0925\u0940 \u0924\u093f\u092e\u093e\u0939\u0940"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd-MM-yyyy", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hr = {ERAS:["p. n. e.", "A. D."], ERANAMES:["Prije Krista", "Poslije Krista"], NARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], STANDALONENARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], MONTHS:["sije\u010dnja", "velja\u010de", "o\u017eujka", "travnja", "svibnja", "lipnja", "srpnja", "kolovoza", "rujna", "listopada", "studenoga", "prosinca"], STANDALONEMONTHS:["sije\u010danj", "velja\u010da", 
"o\u017eujak", "travanj", "svibanj", "lipanj", "srpanj", "kolovoz", "rujan", "listopad", "studeni", "prosinac"], SHORTMONTHS:["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], STANDALONESHORTMONTHS:["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], WEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", "petak", "subota"], STANDALONEWEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", 
"petak", "subota"], SHORTWEEKDAYS:["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"], STANDALONESHORTWEEKDAYS:["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"], NARROWWEEKDAYS:["N", "P", "U", "S", "\u010c", "P", "S"], STANDALONENARROWWEEKDAYS:["n", "p", "u", "s", "\u010d", "p", "s"], SHORTQUARTERS:["1kv", "2kv", "3kv", "4kv"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y.", "d. MMMM y.", "d. M. y.", "d.M.y."], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_hu = {ERAS:["i. e.", "i. sz."], ERANAMES:["id\u0151sz\u00e1m\u00edt\u00e1sunk el\u0151tt", "id\u0151sz\u00e1m\u00edt\u00e1sunk szerint"], NARROWMONTHS:["J", "F", "M", "\u00c1", "M", "J", "J", "\u00c1", "Sz", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "\u00c1", "M", "J", "J", "A", "Sz", "O", "N", "D"], MONTHS:["janu\u00e1r", "febru\u00e1r", "m\u00e1rcius", "\u00e1prilis", "m\u00e1jus", "j\u00fanius", "j\u00falius", "augusztus", "szeptember", "okt\u00f3ber", "november", 
"december"], STANDALONEMONTHS:["janu\u00e1r", "febru\u00e1r", "m\u00e1rcius", "\u00e1prilis", "m\u00e1jus", "j\u00fanius", "j\u00falius", "augusztus", "szeptember", "okt\u00f3ber", "november", "december"], SHORTMONTHS:["jan.", "febr.", "m\u00e1rc.", "\u00e1pr.", "m\u00e1j.", "j\u00fan.", "j\u00fal.", "aug.", "szept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan.", "febr.", "m\u00e1rc.", "\u00e1pr.", "m\u00e1j.", "j\u00fan.", "j\u00fal.", "aug.", "szept.", "okt.", "nov.", "dec."], WEEKDAYS:["vas\u00e1rnap", 
"h\u00e9tf\u0151", "kedd", "szerda", "cs\u00fct\u00f6rt\u00f6k", "p\u00e9ntek", "szombat"], STANDALONEWEEKDAYS:["vas\u00e1rnap", "h\u00e9tf\u0151", "kedd", "szerda", "cs\u00fct\u00f6rt\u00f6k", "p\u00e9ntek", "szombat"], SHORTWEEKDAYS:["V", "H", "K", "Sze", "Cs", "P", "Szo"], STANDALONESHORTWEEKDAYS:["V", "H", "K", "Sze", "Cs", "P", "Szo"], NARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], STANDALONENARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], SHORTQUARTERS:["N1", "N2", "N3", "N4"], 
QUARTERS:["I. negyed\u00e9v", "II. negyed\u00e9v", "III. negyed\u00e9v", "IV. negyed\u00e9v"], AMPMS:["de.", "du."], DATEFORMATS:["y. MMMM d., EEEE", "y. MMMM d.", "yyyy.MM.dd.", "yyyy.MM.dd."], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_id = {ERAS:["SM", "M"], ERANAMES:["SM", "M"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], 
SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], 
NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["kuartal pertama", "kuartal kedua", "kuartal ketiga", "kuartal keempat"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM yyyy", "d MMMM yyyy", "d MMM yyyy", "dd/MM/yy"], TIMEFORMATS:["H:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_in = {ERAS:["SM", "M"], ERANAMES:["SM", "M"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], 
SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], 
NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["kuartal pertama", "kuartal kedua", "kuartal ketiga", "kuartal keempat"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM yyyy", "d MMMM yyyy", "d MMM yyyy", "dd/MM/yy"], TIMEFORMATS:["H:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_is = {ERAS:["fyrir Krist", "eftir Krist"], ERANAMES:["fyrir Krist", "eftir Krist"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "\u00c1", "L", "O", "N", "D"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "\u00e1", "s", "o", "n", "d"], MONTHS:["jan\u00faar", "febr\u00faar", "mars", "apr\u00edl", "ma\u00ed", "j\u00fan\u00ed", "j\u00fal\u00ed", "\u00e1g\u00fast", "september", "okt\u00f3ber", "n\u00f3vember", "desember"], STANDALONEMONTHS:["jan\u00faar", "febr\u00faar", 
"mars", "apr\u00edl", "ma\u00ed", "j\u00fan\u00ed", "j\u00fal\u00ed", "\u00e1g\u00fast", "september", "okt\u00f3ber", "n\u00f3vember", "desember"], SHORTMONTHS:["jan", "feb", "mar", "apr", "ma\u00ed", "j\u00fan", "j\u00fal", "\u00e1g\u00fa", "sep", "okt", "n\u00f3v", "des"], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "ma\u00ed", "j\u00fan", "j\u00fal", "\u00e1g\u00fa", "sep", "okt", "n\u00f3v", "des"], WEEKDAYS:["sunnudagur", "m\u00e1nudagur", "\u00feri\u00f0judagur", "mi\u00f0vikudagur", 
"fimmtudagur", "f\u00f6studagur", "laugardagur"], STANDALONEWEEKDAYS:["sunnudagur", "m\u00e1nudagur", "\u00feri\u00f0judagur", "mi\u00f0vikudagur", "fimmtudagur", "f\u00f6studagur", "laugardagur"], SHORTWEEKDAYS:["sun", "m\u00e1n", "\u00feri", "mi\u00f0", "fim", "f\u00f6s", "lau"], STANDALONESHORTWEEKDAYS:["sun", "m\u00e1n", "\u00feri", "mi\u00f0", "fim", "f\u00f6s", "lau"], NARROWWEEKDAYS:["S", "M", "\u00de", "M", "F", "F", "L"], STANDALONENARROWWEEKDAYS:["s", "m", "\u00fe", "m", "f", "f", "l"], 
SHORTQUARTERS:["F1", "F2", "F3", "F4"], QUARTERS:["1st fj\u00f3r\u00f0ungur", "2nd fj\u00f3r\u00f0ungur", "3rd fj\u00f3r\u00f0ungur", "4th fj\u00f3r\u00f0ungur"], AMPMS:["f.h.", "e.h."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d.M.yyyy", "d.M.yyyy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_it = {ERAS:["aC", "dC"], ERANAMES:["a.C.", "d.C"], NARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], MONTHS:["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"], STANDALONEMONTHS:["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", 
"Dicembre"], SHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], STANDALONESHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], WEEKDAYS:["domenica", "luned\u00ec", "marted\u00ec", "mercoled\u00ec", "gioved\u00ec", "venerd\u00ec", "sabato"], STANDALONEWEEKDAYS:["Domenica", "Luned\u00ec", "Marted\u00ec", "Mercoled\u00ec", "Gioved\u00ec", "Venerd\u00ec", "Sabato"], SHORTWEEKDAYS:["dom", "lun", "mar", "mer", "gio", 
"ven", "sab"], STANDALONESHORTWEEKDAYS:["dom", "lun", "mar", "mer", "gio", "ven", "sab"], NARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1o trimestre", "2o trimestre", "3o trimestre", "4o trimestre"], AMPMS:["m.", "p."], DATEFORMATS:["EEEE d MMMM y", "dd MMMM y", "dd/MMM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_iw = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05d4\u05f4\u05e0"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", 
"\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], STANDALONEMONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", 
"\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], SHORTMONTHS:["\u05d9\u05e0\u05d5", "\u05e4\u05d1\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0", "\u05d9\u05d5\u05dc", "\u05d0\u05d5\u05d2", "\u05e1\u05e4\u05d8", "\u05d0\u05d5\u05e7", "\u05e0\u05d5\u05d1", "\u05d3\u05e6\u05de"], STANDALONESHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", 
"\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05f3", "\u05d9\u05d5\u05dc\u05f3", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], WEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", 
"\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], STANDALONEWEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], 
SHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], STANDALONESHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], 
NARROWWEEKDAYS:["\u05d0", "\u05d1", "\u05d2", "\u05d3", "\u05d4", "\u05d5", "\u05e9"], STANDALONENARROWWEEKDAYS:["\u05d0", "\u05d1", "\u05d2", "\u05d3", "\u05d4", "\u05d5", "\u05e9"], SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", 
"\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM yyyy", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ja = {ERAS:["\u7d00\u5143\u524d", "\u897f\u66a6"], ERANAMES:["\u7d00\u5143\u524d", "\u897f\u66a6"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", 
"6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u65e5\u66dc\u65e5", "\u6708\u66dc\u65e5", "\u706b\u66dc\u65e5", "\u6c34\u66dc\u65e5", "\u6728\u66dc\u65e5", 
"\u91d1\u66dc\u65e5", "\u571f\u66dc\u65e5"], STANDALONEWEEKDAYS:["\u65e5\u66dc\u65e5", "\u6708\u66dc\u65e5", "\u706b\u66dc\u65e5", "\u6c34\u66dc\u65e5", "\u6728\u66dc\u65e5", "\u91d1\u66dc\u65e5", "\u571f\u66dc\u65e5"], SHORTWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], STANDALONESHORTWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], NARROWWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], STANDALONENARROWWEEKDAYS:["\u65e5", 
"\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u7b2c1\u56db\u534a\u671f", "\u7b2c2\u56db\u534a\u671f", "\u7b2c3\u56db\u534a\u671f", "\u7b2c4\u56db\u534a\u671f"], AMPMS:["\u5348\u524d", "\u5348\u5f8c"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "yyyy/MM/dd", "yyyy/MM/dd"], TIMEFORMATS:["H\u6642mm\u5206ss\u79d2 zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_kn = {ERAS:["\u0c95\u0ccd\u0cb0\u0cbf.\u0caa\u0cc2", "\u0c9c\u0cbe\u0cb9\u0cc0"], ERANAMES:["\u0c88\u0cb8\u0caa\u0cc2\u0cb5\u0cef.", "\u0c95\u0ccd\u0cb0\u0cbf\u0cb8\u0ccd\u0ca4 \u0cb6\u0c95"], NARROWMONTHS:["\u0c9c", "\u0cab\u0cc6", "\u0cae\u0cbe", "\u0c8e", "\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1", "\u0c86", "\u0cb8\u0cc6", "\u0c85", "\u0ca8", "\u0ca1\u0cbf"], STANDALONENARROWMONTHS:["\u0c9c", "\u0cab\u0cc6", "\u0cae\u0cbe", "\u0c8e", "\u0cae\u0cc7", "\u0c9c\u0cc2", 
"\u0c9c\u0cc1", "\u0c86", "\u0cb8\u0cc6", "\u0c85", "\u0ca8", "\u0ca1\u0cbf"], MONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cc0", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cc0", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8e\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc6", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], STANDALONEMONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cc0", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cc0", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8e\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc6", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], SHORTMONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cc0", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cc0", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8e\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc6", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], STANDALONESHORTMONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cc0", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cc0", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8e\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc6", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", 
"\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], WEEKDAYS:["\u0cb0\u0cb5\u0cbf\u0cb5\u0cbe\u0cb0", "\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0", "\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0", "\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0", "\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0", "\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0"], STANDALONEWEEKDAYS:["\u0cb0\u0cb5\u0cbf\u0cb5\u0cbe\u0cb0", "\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0", "\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0", 
"\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0", "\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0", "\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0"], SHORTWEEKDAYS:["\u0cb0.", "\u0cb8\u0ccb.", "\u0cae\u0c82.", "\u0cac\u0cc1.", "\u0c97\u0cc1.", "\u0cb6\u0cc1.", "\u0cb6\u0ca8\u0cbf."], STANDALONESHORTWEEKDAYS:["\u0cb0.", "\u0cb8\u0ccb.", "\u0cae\u0c82.", "\u0cac\u0cc1.", "\u0c97\u0cc1.", "\u0cb6\u0cc1.", "\u0cb6\u0ca8\u0cbf."], NARROWWEEKDAYS:["\u0cb0", "\u0cb8\u0ccb", 
"\u0cae\u0c82", "\u0cac\u0cc1", "\u0c97\u0cc1", "\u0cb6\u0cc1", "\u0cb6"], STANDALONENARROWWEEKDAYS:["\u0cb0", "\u0cb8\u0ccb", "\u0cae\u0c82", "\u0cac\u0cc1", "\u0c97\u0cc1", "\u0cb6\u0cc1", "\u0cb6"], SHORTQUARTERS:["\u0c92\u0c82\u0ca6\u0cc1 1", "\u0c8e\u0cb0\u0ca1\u0cc1 2", "\u0cae\u0cc2\u0cb0\u0cc1 3", "\u0ca8\u0cbe\u0cb2\u0cc3\u0c95 4"], QUARTERS:["\u0c92\u0c82\u0ca6\u0cc1 1", "\u0c8e\u0cb0\u0ca1\u0cc1 2", "\u0cae\u0cc2\u0cb0\u0cc1 3", "\u0ca8\u0cbe\u0cb2\u0cc3\u0c95 4"], AMPMS:["am", "pm"], 
DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ko = {ERAS:["\uae30\uc6d0\uc804", "\uc11c\uae30"], ERANAMES:["\uc11c\ub825\uae30\uc6d0\uc804", "\uc11c\ub825\uae30\uc6d0"], NARROWMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONENARROWMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], MONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", 
"4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONEMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], SHORTMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONESHORTMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", 
"8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], WEEKDAYS:["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"], STANDALONEWEEKDAYS:["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"], SHORTWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], STANDALONESHORTWEEKDAYS:["\uc77c", 
"\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], NARROWWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], STANDALONENARROWWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], SHORTQUARTERS:["1\ubd84\uae30", "2\ubd84\uae30", "3\ubd84\uae30", "4\ubd84\uae30"], QUARTERS:["\uc81c 1/4\ubd84\uae30", "\uc81c 2/4\ubd84\uae30", "\uc81c 3/4\ubd84\uae30", "\uc81c 4/4\ubd84\uae30"], AMPMS:["\uc624\uc804", "\uc624\ud6c4"], DATEFORMATS:["y\ub144 M\uc6d4 d\uc77c EEEE", 
"y\ub144 M\uc6d4 d\uc77c", "yyyy. M. d.", "yy. M. d."], TIMEFORMATS:["a h\uc2dc m\ubd84 s\ucd08 zzzz", "a h\uc2dc m\ubd84 s\ucd08 z", "a h:mm:ss", "a h:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ln = {ERAS:["lib\u00f3so ya", "nsima ya Y"], ERANAMES:["Yambo ya Y\u00e9zu Kr\u00eds", "Nsima ya Y\u00e9zu Kr\u00eds"], NARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "\u0254", "n", "d"], STANDALONENARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "\u0254", "n", "d"], MONTHS:["s\u00e1nz\u00e1 ya yambo", "s\u00e1nz\u00e1 ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 ya m\u00ednei", "s\u00e1nz\u00e1 ya m\u00edt\u00e1no", 
"s\u00e1nz\u00e1 ya mot\u00f3b\u00e1", "s\u00e1nz\u00e1 ya nsambo", "s\u00e1nz\u00e1 ya mwambe", "s\u00e1nz\u00e1 ya libwa", "s\u00e1nz\u00e1 ya z\u00f3mi", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9"], STANDALONEMONTHS:["s\u00e1nz\u00e1 ya yambo", "s\u00e1nz\u00e1 ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 ya m\u00ednei", "s\u00e1nz\u00e1 ya m\u00edt\u00e1no", "s\u00e1nz\u00e1 ya mot\u00f3b\u00e1", 
"s\u00e1nz\u00e1 ya nsambo", "s\u00e1nz\u00e1 ya mwambe", "s\u00e1nz\u00e1 ya libwa", "s\u00e1nz\u00e1 ya z\u00f3mi", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9"], SHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "\u0254tb", "nvb", "dsb"], STANDALONESHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "\u0254tb", "nvb", "dsb"], WEEKDAYS:["eyenga", "mok\u0254l\u0254 mwa yambo", "mok\u0254l\u0254 mwa m\u00edbal\u00e9", 
"mok\u0254l\u0254 mwa m\u00eds\u00e1to", "mok\u0254l\u0254 ya m\u00edn\u00e9i", "mok\u0254l\u0254 ya m\u00edt\u00e1no", "mp\u0254\u0301s\u0254"], STANDALONEWEEKDAYS:["eyenga", "mok\u0254l\u0254 mwa yambo", "mok\u0254l\u0254 mwa m\u00edbal\u00e9", "mok\u0254l\u0254 mwa m\u00eds\u00e1to", "mok\u0254l\u0254 ya m\u00edn\u00e9i", "mok\u0254l\u0254 ya m\u00edt\u00e1no", "mp\u0254\u0301s\u0254"], SHORTWEEKDAYS:["eye", "ybo", "mbl", "mst", "min", "mtn", "mps"], STANDALONESHORTWEEKDAYS:["eye", "ybo", "mbl", 
"mst", "min", "mtn", "mps"], NARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", "p"], STANDALONENARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", "p"], SHORTQUARTERS:["SM1", "SM2", "SM3", "SM4"], QUARTERS:["s\u00e1nz\u00e1 m\u00eds\u00e1to ya yambo", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00ednei"], AMPMS:["nt\u0254\u0301ng\u0254\u0301", "mp\u00f3kwa"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", 
"d MMM y", "d/M/yyyy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_lt = {ERAS:["pr. Kr.", "po Kr."], ERANAMES:["prie\u0161 Krist\u0173", "po Kristaus"], NARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], STANDALONENARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], MONTHS:["sausio", "vasaris", "kovas", "balandis", "gegu\u017e\u0117", "bir\u017eelis", "liepa", "rugpj\u016btis", "rugs\u0117jis", "spalis", "lapkritis", "gruodis"], STANDALONEMONTHS:["Sausis", "Vasaris", "Kovas", "Balandis", "Gegu\u017e\u0117", 
"Bir\u017eelis", "Liepa", "Rugpj\u016btis", "Rugs\u0117jis", "Spalis", "Lapkritis", "Gruodis"], SHORTMONTHS:["Saus.", "Vas", "Kov.", "Bal.", "Geg.", "Bir.", "Liep.", "Rugp.", "Rugs.", "Spal.", "Lapkr.", "Gruod."], STANDALONESHORTMONTHS:["Saus.", "Vas.", "Kov.", "Bal.", "Geg.", "Bir.", "Liep.", "Rugp.", "Rugs.", "Spal.", "Lapkr.", "Gruod."], WEEKDAYS:["sekmadienis", "pirmadienis", "antradienis", "tre\u010diadienis", "ketvirtadienis", "penktadienis", "\u0161e\u0161tadienis"], STANDALONEWEEKDAYS:["sekmadienis", 
"pirmadienis", "antradienis", "tre\u010diadienis", "ketvirtadienis", "penktadienis", "\u0161e\u0161tadienis"], SHORTWEEKDAYS:["Sk", "Pr", "An", "Tr", "Kt", "Pn", "\u0160t"], STANDALONESHORTWEEKDAYS:["Sk", "Pr", "An", "Tr", "Kt", "Pn", "\u0160t"], NARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "\u0160"], STANDALONENARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "\u0160"], SHORTQUARTERS:["I k.", "II k.", "III k.", "IV ketv."], QUARTERS:["I ketvirtis", "II ketvirtis", "III ketvirtis", "IV ketvirtis"], 
AMPMS:["prie\u0161piet", "popiet"], DATEFORMATS:["y 'm'. MMMM d 'd'., EEEE", "y 'm'. MMMM d 'd'.", "y MMM d", "yyyy-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_lv = {ERAS:["p.m.\u0113.", "m.\u0113."], ERANAMES:["pirms m\u016bsu \u0113ras", "m\u016bsu \u0113r\u0101"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janv\u0101ris", "febru\u0101ris", "marts", "apr\u012blis", "maijs", "j\u016bnijs", "j\u016blijs", "augusts", "septembris", "oktobris", "novembris", "decembris"], STANDALONEMONTHS:["janv\u0101ris", "febru\u0101ris", 
"marts", "apr\u012blis", "maijs", "j\u016bnijs", "j\u016blijs", "augusts", "septembris", "oktobris", "novembris", "decembris"], SHORTMONTHS:["janv.", "febr.", "marts", "apr.", "maijs", "j\u016bn.", "j\u016bl.", "aug.", "sept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["janv.", "febr.", "marts", "apr.", "maijs", "j\u016bn.", "j\u016bl.", "aug.", "sept.", "okt.", "nov.", "dec."], WEEKDAYS:["sv\u0113tdiena", "pirmdiena", "otrdiena", "tre\u0161diena", "ceturtdiena", "piektdiena", "sestdiena"], 
STANDALONEWEEKDAYS:["sv\u0113tdiena", "pirmdiena", "otrdiena", "tre\u0161diena", "ceturtdiena", "piektdiena", "sestdiena"], SHORTWEEKDAYS:["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"], STANDALONESHORTWEEKDAYS:["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"], NARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], STANDALONENARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], SHORTQUARTERS:["C1", "C2", "C3", "C4"], QUARTERS:["1. ceturksnis", "2. ceturksnis", "3. ceturksnis", "4. ceturksnis"], AMPMS:["priek\u0161pusdien\u0101", 
"p\u0113cpusdien\u0101"], DATEFORMATS:["EEEE, y. 'gada' d. MMMM", "y. 'gada' d. MMMM", "y. 'gada' d. MMM", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ml = {ERAS:["\u0d15\u0d4d\u0d30\u0d3f.\u0d2e\u0d42", "\u0d15\u0d4d\u0d30\u0d3f.\u0d2a\u0d3f."], ERANAMES:["\u0d15\u0d4d\u0d30\u0d3f\u0d38\u0d4d\u0d24\u0d41\u0d35\u0d3f\u0d28\u0d41\u0d4d \u0d2e\u0d41\u0d2e\u0d4d\u0d2a\u0d4d\u200c", "\u0d15\u0d4d\u0d30\u0d3f\u0d38\u0d4d\u0d24\u0d41\u0d35\u0d3f\u0d28\u0d4d \u0d2a\u0d3f\u0d28\u0d4d\u200d\u0d2a\u0d4d"], NARROWMONTHS:["\u0d1c", "\u0d2b\u0d46", "\u0d2e\u0d3e", "\u0d0f", "\u0d2e\u0d47", "\u0d1c\u0d42", "\u0d1c\u0d42", "\u0d13", 
"\u0d38\u0d46", "\u0d12", "\u0d28", "\u0d21\u0d3f"], STANDALONENARROWMONTHS:["\u0d1c", "\u0d2b\u0d46", "\u0d2e\u0d3e", "\u0d0f", "\u0d2e\u0d47", "\u0d1c\u0d42", "\u0d1c\u0d42", "\u0d13", "\u0d38\u0d46", "\u0d12", "\u0d28", "\u0d21\u0d3f"], MONTHS:["\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f", "\u0d2e\u0d3e\u0d30\u0d4d\u200d\u0d1a\u0d4d\u0d1a\u0d4d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u200d", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d23\u0d4d\u200d", 
"\u0d1c\u0d42\u0d32\u0d48", "\u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d30\u0d4d\u200d", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b\u0d2c\u0d30\u0d4d\u200d", "\u0d28\u0d35\u0d02\u0d2c\u0d30\u0d4d\u200d", "\u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d30\u0d4d\u200d"], STANDALONEMONTHS:["\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f", "\u0d2e\u0d3e\u0d30\u0d4d\u200d\u0d1a\u0d4d\u0d1a\u0d4d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u200d", 
"\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d23\u0d4d\u200d", "\u0d1c\u0d42\u0d32\u0d48", "\u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d30\u0d4d\u200d", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b\u0d2c\u0d30\u0d4d\u200d", "\u0d28\u0d35\u0d02\u0d2c\u0d30\u0d4d\u200d", "\u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d30\u0d4d\u200d"], SHORTMONTHS:["\u0d1c\u0d28\u0d41", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41", "\u0d2e\u0d3e\u0d30\u0d4d\u200d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f", 
"\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d23\u0d4d\u200d", "\u0d1c\u0d42\u0d32\u0d48", "\u0d13\u0d17", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b", "\u0d28\u0d35\u0d02", "\u0d21\u0d3f\u0d38\u0d02"], STANDALONESHORTMONTHS:["\u0d1c\u0d28\u0d41", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41", "\u0d2e\u0d3e\u0d30\u0d4d\u200d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d23\u0d4d\u200d", "\u0d1c\u0d42\u0d32\u0d48", "\u0d13\u0d17", 
"\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b", "\u0d28\u0d35\u0d02", "\u0d21\u0d3f\u0d38\u0d02"], WEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u0d1a", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u0d1a", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u0d1a", "\u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u0d1a", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u0d1a", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u0d1a", 
"\u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u0d1a"], STANDALONEWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u0d1a", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u0d1a", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u0d1a", "\u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u0d1a", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u0d1a", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u0d1a", "\u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u0d1a"], SHORTWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d30\u0d4d\u200d", 
"\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d4d\u200d", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35", "\u0d2c\u0d41\u0d27\u0d28\u0d4d\u200d", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f", "\u0d36\u0d28\u0d3f"], STANDALONESHORTWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d30\u0d4d\u200d", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d4d\u200d", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35", "\u0d2c\u0d41\u0d27\u0d28\u0d4d\u200d", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f", "\u0d36\u0d28\u0d3f"], 
NARROWWEEKDAYS:["\u0d1e\u0d3e", "\u0d24\u0d3f", "\u0d1a\u0d4a", "\u0d2c\u0d41", "\u0d35\u0d4d\u0d2f\u0d3e", "\u0d35\u0d46", "\u0d36"], STANDALONENARROWWEEKDAYS:["\u0d1e\u0d3e", "\u0d24\u0d3f", "\u0d1a\u0d4a", "\u0d2c\u0d41", "\u0d35\u0d4d\u0d2f\u0d3e", "\u0d35\u0d46", "\u0d36"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u0d12\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d30\u0d23\u0d4d\u0d1f\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d2e\u0d42\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", 
"\u0d28\u0d3e\u0d32\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02"], AMPMS:["am", "pm"], DATEFORMATS:["y, MMMM d, EEEE", "y, MMMM d", "y, MMM d", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_mr = {ERAS:["\u0908\u0938\u093e\u092a\u0942\u0930\u094d\u0935", "\u0938\u0928"], ERANAMES:["\u0908\u0938\u0935\u0940\u0938\u0928\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u0935\u0940\u0938\u0928"], NARROWMONTHS:["\u091c\u093e", "\u092b\u0947", "\u092e\u093e", "\u090f", "\u092e\u0947", "\u091c\u0942", "\u091c\u0941", "\u0911", "\u0938", "\u0911", "\u0928\u094b", "\u0921\u093f"], STANDALONENARROWMONTHS:["\u091c\u093e", "\u092b\u0947", "\u092e\u093e", "\u090f", "\u092e\u0947", 
"\u091c\u0942", "\u091c\u0941", "\u0911", "\u0938", "\u0911", "\u0928\u094b", "\u0921\u093f"], MONTHS:["\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917\u0938\u094d\u091f", "\u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930", 
"\u0921\u093f\u0938\u0947\u0902\u092c\u0930"], STANDALONEMONTHS:["\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917\u0938\u094d\u091f", "\u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930", 
"\u0921\u093f\u0938\u0947\u0902\u092c\u0930"], SHORTMONTHS:["\u091c\u093e\u0928\u0947", "\u092b\u0947\u092c\u094d\u0930\u0941", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917", "\u0938\u0947\u092a\u094d\u091f\u0947\u0902", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902", "\u0921\u093f\u0938\u0947\u0902"], STANDALONESHORTMONTHS:["\u091c\u093e\u0928\u0947", 
"\u092b\u0947\u092c\u094d\u0930\u0941", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917", "\u0938\u0947\u092a\u094d\u091f\u0947\u0902", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902", "\u0921\u093f\u0938\u0947\u0902"], WEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0933\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", 
"\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], STANDALONEWEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0933\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], SHORTWEEKDAYS:["\u0930\u0935\u093f", 
"\u0938\u094b\u092e", "\u092e\u0902\u0917\u0933", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0933", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], NARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0930", 
"\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u0924\u093f 1", "2 \u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u093f 3", "\u0924\u093f 4"], QUARTERS:["\u092a\u094d\u0930\u0925\u092e \u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0943\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u091a\u0924\u0941\u0930\u094d\u0925 \u0924\u093f\u092e\u093e\u0939\u0940"], 
AMPMS:["am", "pm"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["h-mm-ss a zzzz", "h-mm-ss a z", "h-mm-ss a", "h-mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ms = {ERAS:["S.M.", "TM"], ERANAMES:["S.M.", "TM"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], STANDALONEMONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], 
SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogos", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogos", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], STANDALONEWEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], SHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], 
NARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], SHORTQUARTERS:["Suku 1", "Suku Ke-2", "Suku Ke-3", "Suku Ke-4"], QUARTERS:["Suku pertama", "Suku Ke-2", "Suku Ke-3", "Suku Ke-4"], AMPMS:["PG", "PTG"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd/MM/yyyy", "d/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mt = {ERAS:["QK", "WK"], ERANAMES:["Qabel Kristu", "Wara Kristu"], NARROWMONTHS:["J", "F", "M", "A", "M", "\u0120", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "\u0120", "L", "A", "S", "O", "N", "D"], MONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "\u0120unju", "Lulju", "Awwissu", "Settembru", "Ottubru", "Novembru", "Di\u010bembru"], STANDALONEMONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "\u0120unju", "Lulju", "Awwissu", 
"Settembru", "Ottubru", "Novembru", "Di\u010bembru"], SHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "\u0120un", "Lul", "Aww", "Set", "Ott", "Nov", "Di\u010b"], STANDALONESHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "\u0120un", "Lul", "Aww", "Set", "Ott", "Nov", "Di\u010b"], WEEKDAYS:["Il-\u0126add", "It-Tnejn", "It-Tlieta", "L-Erbg\u0127a", "Il-\u0126amis", "Il-\u0120img\u0127a", "Is-Sibt"], STANDALONEWEEKDAYS:["Il-\u0126add", "It-Tnejn", "It-Tlieta", "L-Erbg\u0127a", "Il-\u0126amis", "Il-\u0120img\u0127a", 
"Is-Sibt"], SHORTWEEKDAYS:["\u0126ad", "Tne", "Tli", "Erb", "\u0126am", "\u0120im", "Sib"], STANDALONESHORTWEEKDAYS:["\u0126ad", "Tne", "Tli", "Erb", "\u0126am", "\u0120im", "Sib"], NARROWWEEKDAYS:["\u0126", "T", "T", "E", "\u0126", "\u0120", "S"], STANDALONENARROWWEEKDAYS:["\u0126", "T", "T", "E", "\u0126", "\u0120", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["K1", "K2", "K3", "K4"], AMPMS:["QN", "WN"], DATEFORMATS:["EEEE, d 'ta'\u2019 MMMM y", "d 'ta'\u2019 MMMM y", "dd MMM y", "dd/MM/yyyy"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_nl = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["Voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", 
"oktober", "november", "december"], SHORTMONTHS:["jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mrt", "apr", "mei", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], STANDALONEWEEKDAYS:["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], SHORTWEEKDAYS:["zo", "ma", "di", "wo", "do", "vr", "za"], 
STANDALONESHORTWEEKDAYS:["zo", "ma", "di", "wo", "do", "vr", "za"], NARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], STANDALONENARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_no = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], STANDALONEMONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], 
SHORTMONTHS:["jan.", "feb.", "mars", "apr.", "mai", "juni", "juli", "aug.", "sep.", "okt.", "nov.", "des."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], STANDALONESHORTWEEKDAYS:["s\u00f8.", 
"ma.", "ti.", "on.", "to.", "fr.", "l\u00f8."], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.yy"], TIMEFORMATS:["'kl'. HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_or = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["\u0b1c\u0b3e", "\u0b2b\u0b47", "\u0b2e\u0b3e", "\u0b05", "\u0b2e\u0b47", "\u0b1c\u0b41", "\u0b1c\u0b41", "\u0b05", "\u0b38\u0b47", "\u0b05", "\u0b28", "\u0b21\u0b3f"], STANDALONENARROWMONTHS:["\u0b1c\u0b3e", "\u0b2b\u0b47", "\u0b2e\u0b3e", "\u0b05", "\u0b2e\u0b47", "\u0b1c\u0b41", "\u0b1c\u0b41", "\u0b05", "\u0b38\u0b47", "\u0b05", "\u0b28", "\u0b21\u0b3f"], MONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], STANDALONEMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], SHORTMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], STANDALONESHORTMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b4d\u0b30\u0b41\u0b5f\u0b3e\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b47", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], WEEKDAYS:["\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30", 
"\u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30", "\u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30", "\u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30", "\u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30", "\u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30", "\u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30"], STANDALONEWEEKDAYS:["\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30", "\u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30", "\u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30", "\u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30", "\u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30", 
"\u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30", "\u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30"], SHORTWEEKDAYS:["\u0b30\u0b2c\u0b3f", "\u0b38\u0b4b\u0b2e", "\u0b2e\u0b19\u0b4d\u0b17\u0b33", "\u0b2c\u0b41\u0b27", "\u0b17\u0b41\u0b30\u0b41", "\u0b36\u0b41\u0b15\u0b4d\u0b30", "\u0b36\u0b28\u0b3f"], STANDALONESHORTWEEKDAYS:["\u0b30\u0b2c\u0b3f", "\u0b38\u0b4b\u0b2e", "\u0b2e\u0b19\u0b4d\u0b17\u0b33", "\u0b2c\u0b41\u0b27", "\u0b17\u0b41\u0b30\u0b41", "\u0b36\u0b41\u0b15\u0b4d\u0b30", "\u0b36\u0b28\u0b3f"], 
NARROWWEEKDAYS:["\u0b30", "\u0b38\u0b4b", "\u0b2e", "\u0b2c\u0b41", "\u0b17\u0b41", "\u0b36\u0b41", "\u0b36"], STANDALONENARROWWEEKDAYS:["\u0b30", "\u0b38\u0b4b", "\u0b2e", "\u0b2c\u0b41", "\u0b17\u0b41", "\u0b36\u0b41", "\u0b36"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], 
FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pl = {ERAS:["p.n.e.", "n.e."], ERANAMES:["p.n.e.", "n.e."], NARROWMONTHS:["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], STANDALONENARROWMONTHS:["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], MONTHS:["stycznia", "lutego", "marca", "kwietnia", "maja", "czerwca", "lipca", "sierpnia", "wrze\u015bnia", "pa\u017adziernika", "listopada", "grudnia"], STANDALONEMONTHS:["stycze\u0144", "luty", "marzec", "kwiecie\u0144", "maj", "czerwiec", "lipiec", "sierpie\u0144", 
"wrzesie\u0144", "pa\u017adziernik", "listopad", "grudzie\u0144"], SHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"], STANDALONESHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"], WEEKDAYS:["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"], STANDALONEWEEKDAYS:["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"], 
SHORTWEEKDAYS:["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."], STANDALONESHORTWEEKDAYS:["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."], NARROWWEEKDAYS:["N", "P", "W", "\u015a", "C", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "W", "\u015a", "C", "P", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["I kwarta\u0142", "II kwarta\u0142", "III kwarta\u0142", "IV kwarta\u0142"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd.MM.yyyy"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_pt = {ERAS:["a.C.", "d.C."], ERANAMES:["Antes de Cristo", "Ano do Senhor"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"], STANDALONEMONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", 
"setembro", "outubro", "novembro", "dezembro"], SHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], STANDALONESHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], WEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], 
SHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1\u00ba trimestre", "2\u00ba trimestre", "3\u00ba trimestre", "4\u00ba trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/yyyy", "dd/MM/yy"], 
TIMEFORMATS:["HH'h'mm'min'ss's' zzzz", "HH'h'mm'min'ss's' z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pt_BR = goog.i18n.DateTimeSymbols_pt;
goog.i18n.DateTimeSymbols_pt_PT = {ERAS:["a.C.", "d.C."], ERANAMES:["Antes de Cristo", "Ano do Senhor"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Janeiro", "Fevereiro", "Mar\u00e7o", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], STANDALONEMONTHS:["Janeiro", "Fevereiro", "Mar\u00e7o", "Abril", "Maio", "Junho", "Julho", "Agosto", 
"Setembro", "Outubro", "Novembro", "Dezembro"], SHORTMONTHS:["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"], WEEKDAYS:["Domingo", "Segunda-feira", "Ter\u00e7a-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "S\u00e1bado"], STANDALONEWEEKDAYS:["Domingo", "Segunda-feira", "Ter\u00e7a-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "S\u00e1bado"], 
SHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.\u00ba trimestre", "2.\u00ba trimestre", "3.\u00ba trimestre", "4.\u00ba trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/yyyy", 
"dd/MM/yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ro = {ERAS:["\u00ee.Hr.", "d.Hr."], ERANAMES:["\u00eenainte de Hristos", "dup\u0103 Hristos"], NARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], MONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], STANDALONEMONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", 
"iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], SHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], STANDALONESHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], WEEKDAYS:["duminic\u0103", "luni", "mar\u021bi", "miercuri", "joi", "vineri", "s\u00e2mb\u0103t\u0103"], STANDALONEWEEKDAYS:["duminic\u0103", "luni", "mar\u021bi", "miercuri", "joi", "vineri", "s\u00e2mb\u0103t\u0103"], 
SHORTWEEKDAYS:["Du", "Lu", "Ma", "Mi", "Jo", "Vi", "S\u00e2"], STANDALONESHORTWEEKDAYS:["Du", "Lu", "Ma", "Mi", "Jo", "Vi", "S\u00e2"], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["trim. I", "trim. II", "trim. III", "trim. IV"], QUARTERS:["trimestrul I", "trimestrul al II-lea", "trimestrul al III-lea", "trimestrul al IV-lea"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd.MM.yyyy", "dd.MM.yyyy"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ru = {ERAS:["\u0434\u043e \u043d.\u044d.", "\u043d.\u044d."], ERANAMES:["\u0434\u043e \u043d.\u044d.", "\u043d.\u044d."], NARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], STANDALONENARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], MONTHS:["\u044f\u043d\u0432\u0430\u0440\u044f", "\u0444\u0435\u0432\u0440\u0430\u043b\u044f", 
"\u043c\u0430\u0440\u0442\u0430", "\u0430\u043f\u0440\u0435\u043b\u044f", "\u043c\u0430\u044f", "\u0438\u044e\u043d\u044f", "\u0438\u044e\u043b\u044f", "\u0430\u0432\u0433\u0443\u0441\u0442\u0430", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044f", "\u043e\u043a\u0442\u044f\u0431\u0440\u044f", "\u043d\u043e\u044f\u0431\u0440\u044f", "\u0434\u0435\u043a\u0430\u0431\u0440\u044f"], STANDALONEMONTHS:["\u042f\u043d\u0432\u0430\u0440\u044c", "\u0424\u0435\u0432\u0440\u0430\u043b\u044c", "\u041c\u0430\u0440\u0442", 
"\u0410\u043f\u0440\u0435\u043b\u044c", "\u041c\u0430\u0439", "\u0418\u044e\u043d\u044c", "\u0418\u044e\u043b\u044c", "\u0410\u0432\u0433\u0443\u0441\u0442", "\u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u041e\u043a\u0442\u044f\u0431\u0440\u044c", "\u041d\u043e\u044f\u0431\u0440\u044c", "\u0414\u0435\u043a\u0430\u0431\u0440\u044c"], SHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442\u0430", "\u0430\u043f\u0440.", "\u043c\u0430\u044f", "\u0438\u044e\u043d\u044f", 
"\u0438\u044e\u043b\u044f", "\u0430\u0432\u0433.", "\u0441\u0435\u043d\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f\u0431.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u042f\u043d\u0432.", "\u0424\u0435\u0432\u0440.", "\u041c\u0430\u0440\u0442", "\u0410\u043f\u0440.", "\u041c\u0430\u0439", "\u0418\u044e\u043d\u044c", "\u0418\u044e\u043b\u044c", "\u0410\u0432\u0433.", "\u0421\u0435\u043d\u0442.", "\u041e\u043a\u0442.", "\u041d\u043e\u044f\u0431.", "\u0414\u0435\u043a."], WEEKDAYS:["\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0435\u0440\u0433", "\u043f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0441\u0443\u0431\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", "\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0412\u0442\u043e\u0440\u043d\u0438\u043a", "\u0421\u0440\u0435\u0434\u0430", 
"\u0427\u0435\u0442\u0432\u0435\u0440\u0433", "\u041f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0421\u0443\u0431\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u0432\u0441", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], STANDALONESHORTWEEKDAYS:["\u0412\u0441", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], NARROWWEEKDAYS:["\u0412", "\u041f\u043d", "\u0412\u0442", "\u0421", "\u0427", "\u041f", "\u0421"], 
STANDALONENARROWWEEKDAYS:["\u0412", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], SHORTQUARTERS:["1-\u0439 \u043a\u0432.", "2-\u0439 \u043a\u0432.", "3-\u0439 \u043a\u0432.", "4-\u0439 \u043a\u0432."], QUARTERS:["1-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "2-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "3-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "4-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], AMPMS:["\u0434\u043e \u043f\u043e\u043b\u0443\u0434\u043d\u044f", 
"\u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u043b\u0443\u0434\u043d\u044f"], DATEFORMATS:["EEEE, d MMMM y\u00a0'\u0433'.", "d MMMM y\u00a0'\u0433'.", "dd.MM.yyyy", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sk = {ERAS:["pred n.l.", "n.l."], ERANAMES:["pred n.l.", "n.l."], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["janu\u00e1ra", "febru\u00e1ra", "marca", "apr\u00edla", "m\u00e1ja", "j\u00fana", "j\u00fala", "augusta", "septembra", "okt\u00f3bra", "novembra", "decembra"], STANDALONEMONTHS:["janu\u00e1r", "febru\u00e1r", "marec", "apr\u00edl", "m\u00e1j", 
"j\u00fan", "j\u00fal", "august", "september", "okt\u00f3ber", "november", "december"], SHORTMONTHS:["jan", "feb", "mar", "apr", "m\u00e1j", "j\u00fan", "j\u00fal", "aug", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "m\u00e1j", "j\u00fan", "j\u00fal", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["nede\u013ea", "pondelok", "utorok", "streda", "\u0161tvrtok", "piatok", "sobota"], STANDALONEWEEKDAYS:["nede\u013ea", "pondelok", "utorok", "streda", "\u0161tvrtok", 
"piatok", "sobota"], SHORTWEEKDAYS:["ne", "po", "ut", "st", "\u0161t", "pi", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", "ut", "st", "\u0161t", "pi", "so"], NARROWWEEKDAYS:["N", "P", "U", "S", "\u0160", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "U", "S", "\u0160", "P", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u0161tvr\u0165rok", "2. \u0161tvr\u0165rok", "3. \u0161tvr\u0165rok", "4. \u0161tvr\u0165rok"], AMPMS:["dopoludnia", "popoludn\u00ed"], DATEFORMATS:["EEEE, d. MMMM y", 
"d. MMMM y", "d.M.yyyy", "d.M.yyyy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sl = {ERAS:["pr. n. \u0161t.", "po Kr."], ERANAMES:["pred na\u0161im \u0161tetjem", "na\u0161e \u0161tetje"], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", "avgust", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", 
"avgust", "september", "oktober", "november", "december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "avg.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], WEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "\u010detrtek", "petek", "sobota"], STANDALONEWEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "\u010detrtek", "petek", "sobota"], SHORTWEEKDAYS:["ned.", "pon.", "tor.", 
"sre.", "\u010det.", "pet.", "sob."], STANDALONESHORTWEEKDAYS:["ned", "pon", "tor", "sre", "\u010det", "pet", "sob"], NARROWWEEKDAYS:["n", "p", "t", "s", "\u010d", "p", "s"], STANDALONENARROWWEEKDAYS:["n", "p", "t", "s", "\u010d", "p", "s"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u010detrtletje", "2. \u010detrtletje", "3. \u010detrtletje", "4. \u010detrtletje"], AMPMS:["dop.", "pop."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "d. MMM yyyy", "d. MM. yy"], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sq = {ERAS:["p.e.r.", "n.e.r."], ERANAMES:["p.e.r.", "n.e.r."], NARROWMONTHS:["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], STANDALONENARROWMONTHS:["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], MONTHS:["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", "tetor", "n\u00ebntor", "dhjetor"], STANDALONEMONTHS:["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", "tetor", "n\u00ebntor", 
"dhjetor"], SHORTMONTHS:["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "N\u00ebn", "Dhj"], STANDALONESHORTMONTHS:["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "N\u00ebn", "Dhj"], WEEKDAYS:["e diel", "e h\u00ebn\u00eb", "e mart\u00eb", "e m\u00ebrkur\u00eb", "e enjte", "e premte", "e shtun\u00eb"], STANDALONEWEEKDAYS:["e diel", "e h\u00ebn\u00eb", "e mart\u00eb", "e m\u00ebrkur\u00eb", "e enjte", "e premte", "e shtun\u00eb"], SHORTWEEKDAYS:["Die", "H\u00ebn", 
"Mar", "M\u00ebr", "Enj", "Pre", "Sht"], STANDALONESHORTWEEKDAYS:["Die", "H\u00ebn", "Mar", "M\u00ebr", "Enj", "Pre", "Sht"], NARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], STANDALONENARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["PD", "MD"], DATEFORMATS:["EEEE, dd MMMM y", "dd MMMM y", "yyyy-MM-dd", "yy-MM-dd"], TIMEFORMATS:["h.mm.ss.a zzzz", "h.mm.ss.a z", "h.mm.ss.a", "h.mm.a"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sr = {ERAS:["\u043f. \u043d. \u0435.", "\u043d. \u0435."], ERANAMES:["\u041f\u0440\u0435 \u043d\u043e\u0432\u0435 \u0435\u0440\u0435", "\u041d\u043e\u0432\u0435 \u0435\u0440\u0435"], NARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440", 
"\u0444\u0435\u0431\u0440\u0443\u0430\u0440", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"], STANDALONEMONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440", "\u0444\u0435\u0431\u0440\u0443\u0430\u0440", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"], SHORTMONTHS:["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", 
"\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"], STANDALONESHORTMONTHS:["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"], WEEKDAYS:["\u043d\u0435\u0434\u0435\u0459\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", 
"\u0443\u0442\u043e\u0440\u0430\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u043f\u0435\u0442\u0430\u043a", "\u0441\u0443\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u0459\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", "\u0443\u0442\u043e\u0440\u0430\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u043f\u0435\u0442\u0430\u043a", "\u0441\u0443\u0431\u043e\u0442\u0430"], 
SHORTWEEKDAYS:["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"], STANDALONESHORTWEEKDAYS:["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0443", "\u0441", "\u0447", "\u043f", "\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0443", "\u0441", 
"\u0447", "\u043f", "\u0441"], SHORTQUARTERS:["\u041a1", "\u041a2", "\u041a3", "\u041a4"], QUARTERS:["\u041f\u0440\u0432\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0414\u0440\u0443\u0433\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0422\u0440\u0435\u045b\u0435 \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0427\u0435\u0442\u0432\u0440\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435"], AMPMS:["\u043f\u0440\u0435 \u043f\u043e\u0434\u043d\u0435", 
"\u043f\u043e\u043f\u043e\u0434\u043d\u0435"], DATEFORMATS:["EEEE, dd. MMMM y.", "dd. MMMM y.", "dd.MM.y.", "d.M.yy."], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sv = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f\u00f6re Kristus", "efter Kristus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", 
"oktober", "november", "december"], SHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["s\u00f6ndag", "m\u00e5ndag", "tisdag", "onsdag", "torsdag", "fredag", "l\u00f6rdag"], STANDALONEWEEKDAYS:["s\u00f6ndag", "m\u00e5ndag", "tisdag", "onsdag", "torsdag", "fredag", "l\u00f6rdag"], SHORTWEEKDAYS:["s\u00f6n", "m\u00e5n", "tis", "ons", "tors", 
"fre", "l\u00f6r"], STANDALONESHORTWEEKDAYS:["s\u00f6n", "m\u00e5n", "tis", "ons", "tor", "fre", "l\u00f6r"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1:a kvartalet", "2:a kvartalet", "3:e kvartalet", "4:e kvartalet"], AMPMS:["fm", "em"], DATEFORMATS:["EEEE'en' 'den' d:'e' MMMM y", "d MMMM y", "d MMM y", "yyyy-MM-dd"], TIMEFORMATS:["'kl'. HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sw = {ERAS:["KK", "BK"], ERANAMES:["Kabla ya Kristo", "Baada ya Kristo"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", "Novemba", "Desemba"], STANDALONEMONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", 
"Novemba", "Desemba"], SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], STANDALONEWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], SHORTWEEKDAYS:["J2", "J3", "J4", "J5", "Alh", "Ij", "J1"], STANDALONESHORTWEEKDAYS:["J2", 
"J3", "J4", "J5", "Alh", "Ij", "J1"], NARROWWEEKDAYS:["2", "3", "4", "5", "A", "I", "1"], STANDALONENARROWWEEKDAYS:["2", "3", "4", "5", "A", "I", "1"], SHORTQUARTERS:["R1", "R2", "R3", "R4"], QUARTERS:["Robo 1", "Robo 2", "Robo 3", "Robo 4"], AMPMS:["asubuhi", "alasiri"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/yyyy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ta = {ERAS:["\u0b95\u0bbf.\u0bae\u0bc1.", "\u0b95\u0bbf.\u0baa\u0bbf."], ERANAMES:["\u0b95\u0bbf\u0bb1\u0bbf\u0bb8\u0bcd\u0ba4\u0bc1\u0bb5\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd", "\u0b85\u0ba9\u0bcb \u0b9f\u0bcb\u0bae\u0bbf\u0ba9\u0bbf"], NARROWMONTHS:["\u0b9c", "\u0baa\u0bbf", "\u0bae\u0bbe", "\u0b8f", "\u0bae\u0bc7", "\u0b9c\u0bc2", "\u0b9c\u0bc2", "\u0b86", "\u0b9a\u0bc6", "\u0b85", "\u0ba8", "\u0b9f\u0bbf"], STANDALONENARROWMONTHS:["\u0b9c", "\u0baa\u0bbf", 
"\u0bae\u0bbe", "\u0b8f", "\u0bae\u0bc7", "\u0b9c\u0bc2", "\u0b9c\u0bc2", "\u0b86", "\u0b9a\u0bc6", "\u0b85", "\u0ba8", "\u0b9f\u0bbf"], MONTHS:["\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf", "\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf", "\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd", "\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bcd", "\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd", 
"\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd"], STANDALONEMONTHS:["\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf", "\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf", "\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd", "\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bc1", "\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd", 
"\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd"], SHORTMONTHS:["\u0b9c\u0ba9.", "\u0baa\u0bbf\u0baa\u0bcd.", "\u0bae\u0bbe\u0bb0\u0bcd.", "\u0b8f\u0baa\u0bcd.", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95.", "\u0b9a\u0bc6\u0baa\u0bcd.", "\u0b85\u0b95\u0bcd.", "\u0ba8\u0bb5.", "\u0b9f\u0bbf\u0b9a."], STANDALONESHORTMONTHS:["\u0b9c\u0ba9.", "\u0baa\u0bbf\u0baa\u0bcd.", "\u0bae\u0bbe\u0bb0\u0bcd.", "\u0b8f\u0baa\u0bcd.", 
"\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95.", "\u0b9a\u0bc6\u0baa\u0bcd.", "\u0b85\u0b95\u0bcd.", "\u0ba8\u0bb5.", "\u0b9f\u0bbf\u0b9a."], WEEKDAYS:["\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1", "\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd", "\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd", "\u0baa\u0bc1\u0ba4\u0ba9\u0bcd", "\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd", "\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf", "\u0b9a\u0ba9\u0bbf"], STANDALONEWEEKDAYS:["\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1", 
"\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd", "\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd", "\u0baa\u0bc1\u0ba4\u0ba9\u0bcd", "\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd", "\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf", "\u0b9a\u0ba9\u0bbf"], SHORTWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], STANDALONESHORTWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], NARROWWEEKDAYS:["\u0b9e\u0bbe", 
"\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], STANDALONENARROWWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], SHORTQUARTERS:["\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc11", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc12", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc13", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc14"], QUARTERS:["\u0bae\u0bc1\u0ba4\u0bb2\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", 
"\u0b87\u0bb0\u0ba3\u0bcd\u0b9f\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0bae\u0bc2\u0ba9\u0bcd\u0bb1\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0ba8\u0bbe\u0ba9\u0bcd\u0b95\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], 
FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_te = {ERAS:["\u0c08\u0c38\u0c3e\u0c2a\u0c42\u0c30\u0c4d\u0c35.", "\u0c38\u0c28\u0c4d."], ERANAMES:["\u0c08\u0c38\u0c3e\u0c2a\u0c42\u0c30\u0c4d\u0c35.", "\u0c38\u0c28\u0c4d."], NARROWMONTHS:["\u0c1c", "\u0c2b\u0c3f", "\u0c2e\u0c3e", "\u0c0f", "\u0c2e\u0c46", "\u0c1c\u0c41", "\u0c1c\u0c41", "\u0c06", "\u0c38\u0c46", "\u0c05", "\u0c28", "\u0c21\u0c3f"], STANDALONENARROWMONTHS:["\u0c1c", "\u0c2b\u0c3f", "\u0c2e", "\u0c0e", "\u0c2e\u0c46", "\u0c1c\u0c41", "\u0c1c\u0c41", "\u0c06", 
"\u0c38\u0c46", "\u0c05", "\u0c28", "\u0c21\u0c3f"], MONTHS:["\u0c1c\u0c28\u0c35\u0c30\u0c3f", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0e\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c42\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", 
"\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], STANDALONEMONTHS:["\u0c1c\u0c28\u0c35\u0c30\u0c3f", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0e\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c42\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", 
"\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], SHORTMONTHS:["\u0c1c\u0c28", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0f\u0c2a\u0c4d\u0c30\u0c3f", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c42\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", "\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], 
STANDALONESHORTMONTHS:["\u0c1c\u0c28", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0f\u0c2a\u0c4d\u0c30\u0c3f", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c42\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", "\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], WEEKDAYS:["\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02", 
"\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02", "\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02", "\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02", "\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02"], STANDALONEWEEKDAYS:["\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02", "\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02", "\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02", "\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02", 
"\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02"], SHORTWEEKDAYS:["\u0c06\u0c26\u0c3f", "\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", "\u0c36\u0c28\u0c3f"], STANDALONESHORTWEEKDAYS:["\u0c06\u0c26\u0c3f", "\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", 
"\u0c36\u0c28\u0c3f"], NARROWWEEKDAYS:["\u0c06", "\u0c38\u0c4b", "\u0c2e", "\u0c2c\u0c41", "\u0c17\u0c41", "\u0c36\u0c41", "\u0c36"], STANDALONENARROWWEEKDAYS:["\u0c06", "\u0c38\u0c4b", "\u0c2e", "\u0c2c\u0c41", "\u0c17\u0c41", "\u0c36\u0c41", "\u0c36"], SHORTQUARTERS:["\u0c12\u0c15\u0c1f\u0c3f 1", "\u0c30\u0c46\u0c02\u0c21\u0c41 2", "\u0c2e\u0c42\u0c21\u0c41 3", "\u0c28\u0c3e\u0c32\u0c41\u0c17\u0c41 4"], QUARTERS:["\u0c12\u0c15\u0c1f\u0c3f 1", "\u0c30\u0c46\u0c02\u0c21\u0c41 2", "\u0c2e\u0c42\u0c21\u0c41 3", 
"\u0c28\u0c3e\u0c32\u0c41\u0c17\u0c41 4"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_th = {ERAS:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19 \u0e04.\u0e28.", "\u0e04.\u0e28."], ERANAMES:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a", "\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a"], NARROWMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", 
"\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], STANDALONENARROWMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], MONTHS:["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", "\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", 
"\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"], STANDALONEMONTHS:["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", 
"\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", "\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"], SHORTMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", 
"\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], STANDALONESHORTMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], WEEKDAYS:["\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", 
"\u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", "\u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18", "\u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35", "\u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c"], STANDALONEWEEKDAYS:["\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", "\u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", 
"\u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18", "\u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35", "\u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c"], SHORTWEEKDAYS:["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."], STANDALONESHORTWEEKDAYS:["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."], NARROWWEEKDAYS:["\u0e2d", "\u0e08", "\u0e2d", "\u0e1e", "\u0e1e", 
"\u0e28", "\u0e2a"], STANDALONENARROWWEEKDAYS:["\u0e2d", "\u0e08", "\u0e2d", "\u0e1e", "\u0e1e", "\u0e28", "\u0e2a"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 1", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 2", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 3", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 4"], AMPMS:["\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07", "\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07"], DATEFORMATS:["EEEE\u0e17\u0e35\u0e48 d MMMM G y", 
"d MMMM y", "d MMM y", "d/M/yyyy"], TIMEFORMATS:["H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 m \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 zzzz", "H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 m \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 z", "H:mm:ss", "H:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tl = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], 
SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Mye", "Huw", "Bye", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", "Lun", "Mar", 
"Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], STANDALONENARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 sangkapat", "ika-2 sangkapat", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM dd y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tr = {ERAS:["M\u00d6", "MS"], ERANAMES:["Milattan \u00d6nce", "Milattan Sonra"], NARROWMONTHS:["O", "\u015e", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], STANDALONENARROWMONTHS:["O", "\u015e", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], MONTHS:["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", "Temmuz", "A\u011fustos", "Eyl\u00fcl", "Ekim", "Kas\u0131m", "Aral\u0131k"], STANDALONEMONTHS:["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", 
"Temmuz", "A\u011fustos", "Eyl\u00fcl", "Ekim", "Kas\u0131m", "Aral\u0131k"], SHORTMONTHS:["Oca", "\u015eub", "Mar", "Nis", "May", "Haz", "Tem", "A\u011fu", "Eyl", "Eki", "Kas", "Ara"], STANDALONESHORTMONTHS:["Oca", "\u015eub", "Mar", "Nis", "May", "Haz", "Tem", "A\u011fu", "Eyl", "Eki", "Kas", "Ara"], WEEKDAYS:["Pazar", "Pazartesi", "Sal\u0131", "\u00c7ar\u015famba", "Per\u015fembe", "Cuma", "Cumartesi"], STANDALONEWEEKDAYS:["Pazar", "Pazartesi", "Sal\u0131", "\u00c7ar\u015famba", "Per\u015fembe", 
"Cuma", "Cumartesi"], SHORTWEEKDAYS:["Paz", "Pzt", "Sal", "\u00c7ar", "Per", "Cum", "Cmt"], STANDALONESHORTWEEKDAYS:["Paz", "Pzt", "Sal", "\u00c7ar", "Per", "Cum", "Cmt"], NARROWWEEKDAYS:["P", "P", "S", "\u00c7", "P", "C", "C"], STANDALONENARROWWEEKDAYS:["P", "P", "S", "\u00c7", "P", "C", "C"], SHORTQUARTERS:["\u00c71", "\u00c72", "\u00c73", "\u00c74"], QUARTERS:["1. \u00e7eyrek", "2. \u00e7eyrek", "3. \u00e7eyrek", "4. \u00e7eyrek"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y EEEE", "d MMMM y", 
"d MMM y", "dd MM yyyy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_uk = {ERAS:["\u0434\u043e \u043d.\u0435.", "\u043d.\u0435."], ERANAMES:["\u0434\u043e \u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438", "\u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438"], NARROWMONTHS:["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"], STANDALONENARROWMONTHS:["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"], MONTHS:["\u0441\u0456\u0447\u043d\u044f", 
"\u043b\u044e\u0442\u043e\u0433\u043e", "\u0431\u0435\u0440\u0435\u0437\u043d\u044f", "\u043a\u0432\u0456\u0442\u043d\u044f", "\u0442\u0440\u0430\u0432\u043d\u044f", "\u0447\u0435\u0440\u0432\u043d\u044f", "\u043b\u0438\u043f\u043d\u044f", "\u0441\u0435\u0440\u043f\u043d\u044f", "\u0432\u0435\u0440\u0435\u0441\u043d\u044f", "\u0436\u043e\u0432\u0442\u043d\u044f", "\u043b\u0438\u0441\u0442\u043e\u043f\u0430\u0434\u0430", "\u0433\u0440\u0443\u0434\u043d\u044f"], STANDALONEMONTHS:["\u0421\u0456\u0447\u0435\u043d\u044c", 
"\u041b\u044e\u0442\u0438\u0439", "\u0411\u0435\u0440\u0435\u0437\u0435\u043d\u044c", "\u041a\u0432\u0456\u0442\u0435\u043d\u044c", "\u0422\u0440\u0430\u0432\u0435\u043d\u044c", "\u0427\u0435\u0440\u0432\u0435\u043d\u044c", "\u041b\u0438\u043f\u0435\u043d\u044c", "\u0421\u0435\u0440\u043f\u0435\u043d\u044c", "\u0412\u0435\u0440\u0435\u0441\u0435\u043d\u044c", "\u0416\u043e\u0432\u0442\u0435\u043d\u044c", "\u041b\u0438\u0441\u0442\u043e\u043f\u0430\u0434", "\u0413\u0440\u0443\u0434\u0435\u043d\u044c"], 
SHORTMONTHS:["\u0441\u0456\u0447.", "\u043b\u044e\u0442.", "\u0431\u0435\u0440.", "\u043a\u0432\u0456\u0442.", "\u0442\u0440\u0430\u0432.", "\u0447\u0435\u0440\u0432.", "\u043b\u0438\u043f.", "\u0441\u0435\u0440\u043f.", "\u0432\u0435\u0440.", "\u0436\u043e\u0432\u0442.", "\u043b\u0438\u0441\u0442.", "\u0433\u0440\u0443\u0434."], STANDALONESHORTMONTHS:["\u0421\u0456\u0447", "\u041b\u044e\u0442", "\u0411\u0435\u0440", "\u041a\u0432\u0456", "\u0422\u0440\u0430", "\u0427\u0435\u0440", "\u041b\u0438\u043f", 
"\u0421\u0435\u0440", "\u0412\u0435\u0440", "\u0416\u043e\u0432", "\u041b\u0438\u0441", "\u0413\u0440\u0443"], WEEKDAYS:["\u041d\u0435\u0434\u0456\u043b\u044f", "\u041f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0412\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0421\u0435\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0435\u0440", "\u041f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f", "\u0421\u0443\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u041d\u0435\u0434\u0456\u043b\u044f", 
"\u041f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0412\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0421\u0435\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0435\u0440", "\u041f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f", "\u0421\u0443\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u041d\u0434", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], STANDALONESHORTWEEKDAYS:["\u041d\u0434", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", 
"\u041f\u0442", "\u0421\u0431"], NARROWWEEKDAYS:["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], STANDALONENARROWWEEKDAYS:["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], SHORTQUARTERS:["I \u043a\u0432.", "II \u043a\u0432.", "III \u043a\u0432.", "IV \u043a\u0432."], QUARTERS:["I \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "II \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "III \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "IV \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], 
AMPMS:["\u0434\u043f", "\u043f\u043f"], DATEFORMATS:["EEEE, d MMMM y '\u0440'.", "d MMMM y '\u0440'.", "d MMM y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ur = {ERAS:["\u0642 \u0645", "\u0639\u064a\u0633\u0648\u06cc \u0633\u0646"], ERANAMES:["\u0642\u0628\u0644 \u0645\u0633\u064a\u062d", "\u0639\u064a\u0633\u0648\u06cc \u0633\u0646"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u064a\u0644", 
"\u0645\u0626", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], STANDALONEMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u064a\u0644", "\u0645\u0626", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", 
"\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], SHORTMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u064a\u0644", "\u0645\u0626", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u062c\u0646\u0648\u0631\u06cc", 
"\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u064a\u0644", "\u0645\u0626", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], WEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u067e\u064a\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u0647", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", 
"\u06c1\u0641\u062a\u06c1"], STANDALONEWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u067e\u064a\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u0647", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], SHORTWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u067e\u064a\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u0647", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], STANDALONESHORTWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", 
"\u067e\u064a\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u0647", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], NARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], SHORTQUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062a\u064a\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", 
"\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], QUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062a\u064a\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], AMPMS:["\u062f\u0646", "\u0631\u0627\u062a"], DATEFORMATS:["EEEE\u060d d\u060d MMMM y", "d\u060d MMMM y", "d\u060d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_vi = {ERAS:["tr. CN", "sau CN"], ERANAMES:["tr. CN", "sau CN"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["th\u00e1ng m\u1ed9t", "th\u00e1ng hai", "th\u00e1ng ba", "th\u00e1ng t\u01b0", "th\u00e1ng n\u0103m", "th\u00e1ng s\u00e1u", "th\u00e1ng b\u1ea3y", "th\u00e1ng t\u00e1m", "th\u00e1ng ch\u00edn", "th\u00e1ng m\u01b0\u1eddi", "th\u00e1ng m\u01b0\u1eddi m\u1ed9t", 
"th\u00e1ng m\u01b0\u1eddi hai"], STANDALONEMONTHS:["th\u00e1ng m\u1ed9t", "th\u00e1ng hai", "th\u00e1ng ba", "th\u00e1ng t\u01b0", "th\u00e1ng n\u0103m", "th\u00e1ng s\u00e1u", "th\u00e1ng b\u1ea3y", "th\u00e1ng t\u00e1m", "th\u00e1ng ch\u00edn", "th\u00e1ng m\u01b0\u1eddi", "th\u00e1ng m\u01b0\u1eddi m\u1ed9t", "th\u00e1ng m\u01b0\u1eddi hai"], SHORTMONTHS:["thg 1", "thg 2", "thg 3", "thg 4", "thg 5", "thg 6", "thg 7", "thg 8", "thg 9", "thg 10", "thg 11", "thg 12"], STANDALONESHORTMONTHS:["thg 1", 
"thg 2", "thg 3", "thg 4", "thg 5", "thg 6", "thg 7", "thg 8", "thg 9", "thg 10", "thg 11", "thg 12"], WEEKDAYS:["Ch\u1ee7 nh\u1eadt", "Th\u1ee9 hai", "Th\u1ee9 ba", "Th\u1ee9 t\u01b0", "Th\u1ee9 n\u0103m", "Th\u1ee9 s\u00e1u", "Th\u1ee9 b\u1ea3y"], STANDALONEWEEKDAYS:["Ch\u1ee7 nh\u1eadt", "Th\u1ee9 hai", "Th\u1ee9 ba", "Th\u1ee9 t\u01b0", "Th\u1ee9 n\u0103m", "Th\u1ee9 s\u00e1u", "Th\u1ee9 b\u1ea3y"], SHORTWEEKDAYS:["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], STANDALONESHORTWEEKDAYS:["CN", 
"Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], NARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], STANDALONENARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Qu\u00fd 1", "Qu\u00fd 2", "Qu\u00fd 3", "Qu\u00fd 4"], AMPMS:["SA", "CH"], DATEFORMATS:["EEEE, 'ng\u00e0y' dd MMMM 'n\u0103m' y", "'Ng\u00e0y' dd 'th\u00e1ng' M 'n\u0103m' y", "dd-MM-yyyy", "dd/MM/yyyy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_zh = {ERAS:["\u516c\u5143\u524d", "\u516c\u5143"], ERANAMES:["\u516c\u5143\u524d", "\u516c\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], 
STANDALONEMONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", 
"\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u5468\u65e5", "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", 
"\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], STANDALONESHORTWEEKDAYS:["\u5468\u65e5", "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], NARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63\u5ea6", "\u7b2c2\u5b63\u5ea6", "\u7b2c3\u5b63\u5ea6", 
"\u7b2c4\u5b63\u5ea6"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "yyyy-M-d", "yy-M-d"], TIMEFORMATS:["zzzzah\u65f6mm\u5206ss\u79d2", "zah\u65f6mm\u5206ss\u79d2", "ah:mm:ss", "ah:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_CN = goog.i18n.DateTimeSymbols_zh;
goog.i18n.DateTimeSymbols_zh_HK = {ERAS:["\u897f\u5143\u524d", "\u897f\u5143"], ERANAMES:["\u897f\u5143\u524d", "\u897f\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", 
"\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", 
"\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], STANDALONESHORTWEEKDAYS:["\u5468\u65e5", "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", 
"\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], NARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", "\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", 
"yy\u5e74M\u6708d\u65e5"], TIMEFORMATS:["ah:mm:ss [zzzz]", "ah:mm:ss [z]", "ahh:mm:ss", "ah:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_TW = {ERAS:["\u897f\u5143\u524d", "\u897f\u5143"], ERANAMES:["\u897f\u5143\u524d", "\u897f\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", 
"\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", 
"\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], STANDALONESHORTWEEKDAYS:["\u5468\u65e5", "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", 
"\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], NARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", "\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "yyyy/M/d", "y/M/d"], 
TIMEFORMATS:["zzzzah\u6642mm\u5206ss\u79d2", "zah\u6642mm\u5206ss\u79d2", "ah:mm:ss", "ah:mm"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zu = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januwari", "Februwari", "Mashi", "Apreli", "Meyi", "Juni", "Julayi", "Agasti", "Septhemba", "Okthoba", "Novemba", "Disemba"], STANDALONEMONTHS:["uJanuwari", "uFebruwari", "uMashi", "u-Apreli", "uMeyi", "uJuni", "uJulayi", "uAgasti", "uSepthemba", "u-Okthoba", 
"uNovemba", "uDisemba"], SHORTMONTHS:["Jan", "Feb", "Mas", "Apr", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mas", "Apr", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["Sonto", "Msombuluko", "Lwesibili", "Lwesithathu", "uLwesine", "Lwesihlanu", "Mgqibelo"], STANDALONEWEEKDAYS:["Sonto", "Msombuluko", "Lwesibili", "Lwesithathu", "uLwesine", "Lwesihlanu", "Mgqibelo"], SHORTWEEKDAYS:["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], 
STANDALONESHORTWEEKDAYS:["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], NARROWWEEKDAYS:["S", "M", "B", "T", "S", "H", "M"], STANDALONENARROWWEEKDAYS:["S", "M", "B", "T", "S", "H", "M"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ikota yoku-1", "ikota yesi-2", "ikota yesi-3", "ikota yesi-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE dd MMMM y", "d MMMM y", "d MMM y", "yyyy-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], 
FIRSTWEEKCUTOFFDAY:5};
if (goog.LOCALE == "af") {
  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_af;
} else {
  if (goog.LOCALE == "am") {
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_am;
  } else {
    if (goog.LOCALE == "ar") {
      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ar;
    } else {
      if (goog.LOCALE == "bg") {
        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bg;
      } else {
        if (goog.LOCALE == "bn") {
          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bn;
        } else {
          if (goog.LOCALE == "ca") {
            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ca;
          } else {
            if (goog.LOCALE == "chr") {
              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_chr;
            } else {
              if (goog.LOCALE == "cs") {
                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cs;
              } else {
                if (goog.LOCALE == "cy") {
                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cy;
                } else {
                  if (goog.LOCALE == "da") {
                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_da;
                  } else {
                    if (goog.LOCALE == "de") {
                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de;
                    } else {
                      if (goog.LOCALE == "de_AT" || goog.LOCALE == "de-AT") {
                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de_AT;
                      } else {
                        if (goog.LOCALE == "de_CH" || goog.LOCALE == "de-CH") {
                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de;
                        } else {
                          if (goog.LOCALE == "el") {
                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_el;
                          } else {
                            if (goog.LOCALE == "en") {
                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                            } else {
                              if (goog.LOCALE == "en_AU" || goog.LOCALE == "en-AU") {
                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_AU;
                              } else {
                                if (goog.LOCALE == "en_GB" || goog.LOCALE == "en-GB") {
                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_GB;
                                } else {
                                  if (goog.LOCALE == "en_IE" || goog.LOCALE == "en-IE") {
                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IE;
                                  } else {
                                    if (goog.LOCALE == "en_IN" || goog.LOCALE == "en-IN") {
                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IN;
                                    } else {
                                      if (goog.LOCALE == "en_SG" || goog.LOCALE == "en-SG") {
                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_SG;
                                      } else {
                                        if (goog.LOCALE == "en_US" || goog.LOCALE == "en-US") {
                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                        } else {
                                          if (goog.LOCALE == "en_ZA" || goog.LOCALE == "en-ZA") {
                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_ZA;
                                          } else {
                                            if (goog.LOCALE == "es") {
                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
                                            } else {
                                              if (goog.LOCALE == "es_419" || goog.LOCALE == "es-419") {
                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es_419;
                                              } else {
                                                if (goog.LOCALE == "et") {
                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_et;
                                                } else {
                                                  if (goog.LOCALE == "eu") {
                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_eu;
                                                  } else {
                                                    if (goog.LOCALE == "fa") {
                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fa;
                                                    } else {
                                                      if (goog.LOCALE == "fi") {
                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fi;
                                                      } else {
                                                        if (goog.LOCALE == "fil") {
                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fil;
                                                        } else {
                                                          if (goog.LOCALE == "fr") {
                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr;
                                                          } else {
                                                            if (goog.LOCALE == "fr_CA" || goog.LOCALE == "fr-CA") {
                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr_CA;
                                                            } else {
                                                              if (goog.LOCALE == "gl") {
                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gl;
                                                              } else {
                                                                if (goog.LOCALE == "gsw") {
                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gsw;
                                                                } else {
                                                                  if (goog.LOCALE == "gu") {
                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gu;
                                                                  } else {
                                                                    if (goog.LOCALE == "haw") {
                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_haw;
                                                                    } else {
                                                                      if (goog.LOCALE == "he") {
                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_he;
                                                                      } else {
                                                                        if (goog.LOCALE == "hi") {
                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hi;
                                                                        } else {
                                                                          if (goog.LOCALE == "hr") {
                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hr;
                                                                          } else {
                                                                            if (goog.LOCALE == "hu") {
                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hu;
                                                                            } else {
                                                                              if (goog.LOCALE == "id") {
                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_id;
                                                                              } else {
                                                                                if (goog.LOCALE == "in") {
                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_in;
                                                                                } else {
                                                                                  if (goog.LOCALE == "is") {
                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_is;
                                                                                  } else {
                                                                                    if (goog.LOCALE == "it") {
                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_it;
                                                                                    } else {
                                                                                      if (goog.LOCALE == "iw") {
                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_iw;
                                                                                      } else {
                                                                                        if (goog.LOCALE == "ja") {
                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ja;
                                                                                        } else {
                                                                                          if (goog.LOCALE == "kn") {
                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_kn;
                                                                                          } else {
                                                                                            if (goog.LOCALE == "ko") {
                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ko;
                                                                                            } else {
                                                                                              if (goog.LOCALE == "ln") {
                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ln;
                                                                                              } else {
                                                                                                if (goog.LOCALE == "lt") {
                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lt;
                                                                                                } else {
                                                                                                  if (goog.LOCALE == "lv") {
                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lv;
                                                                                                  } else {
                                                                                                    if (goog.LOCALE == "ml") {
                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ml;
                                                                                                    } else {
                                                                                                      if (goog.LOCALE == "mr") {
                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mr;
                                                                                                      } else {
                                                                                                        if (goog.LOCALE == "ms") {
                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ms;
                                                                                                        } else {
                                                                                                          if (goog.LOCALE == "mt") {
                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mt;
                                                                                                          } else {
                                                                                                            if (goog.LOCALE == "nl") {
                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_nl;
                                                                                                            } else {
                                                                                                              if (goog.LOCALE == "no") {
                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_no;
                                                                                                              } else {
                                                                                                                if (goog.LOCALE == "or") {
                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_or;
                                                                                                                } else {
                                                                                                                  if (goog.LOCALE == "pl") {
                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pl;
                                                                                                                  } else {
                                                                                                                    if (goog.LOCALE == "pt") {
                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt;
                                                                                                                    } else {
                                                                                                                      if (goog.LOCALE == "pt_BR" || goog.LOCALE == "pt-BR") {
                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt;
                                                                                                                      } else {
                                                                                                                        if (goog.LOCALE == "pt_PT" || goog.LOCALE == "pt-PT") {
                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt_PT;
                                                                                                                        } else {
                                                                                                                          if (goog.LOCALE == "ro") {
                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ro;
                                                                                                                          } else {
                                                                                                                            if (goog.LOCALE == "ru") {
                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ru;
                                                                                                                            } else {
                                                                                                                              if (goog.LOCALE == "sk") {
                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sk;
                                                                                                                              } else {
                                                                                                                                if (goog.LOCALE == "sl") {
                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sl;
                                                                                                                                } else {
                                                                                                                                  if (goog.LOCALE == "sq") {
                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sq;
                                                                                                                                  } else {
                                                                                                                                    if (goog.LOCALE == "sr") {
                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sr;
                                                                                                                                    } else {
                                                                                                                                      if (goog.LOCALE == "sv") {
                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sv;
                                                                                                                                      } else {
                                                                                                                                        if (goog.LOCALE == "sw") {
                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sw;
                                                                                                                                        } else {
                                                                                                                                          if (goog.LOCALE == "ta") {
                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ta;
                                                                                                                                          } else {
                                                                                                                                            if (goog.LOCALE == "te") {
                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_te;
                                                                                                                                            } else {
                                                                                                                                              if (goog.LOCALE == "th") {
                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_th;
                                                                                                                                              } else {
                                                                                                                                                if (goog.LOCALE == "tl") {
                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tl;
                                                                                                                                                } else {
                                                                                                                                                  if (goog.LOCALE == "tr") {
                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tr;
                                                                                                                                                  } else {
                                                                                                                                                    if (goog.LOCALE == "uk") {
                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_uk;
                                                                                                                                                    } else {
                                                                                                                                                      if (goog.LOCALE == "ur") {
                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ur;
                                                                                                                                                      } else {
                                                                                                                                                        if (goog.LOCALE == "vi") {
                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_vi;
                                                                                                                                                        } else {
                                                                                                                                                          if (goog.LOCALE == "zh") {
                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh;
                                                                                                                                                          } else {
                                                                                                                                                            if (goog.LOCALE == "zh_CN" || goog.LOCALE == "zh-CN") {
                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh;
                                                                                                                                                            } else {
                                                                                                                                                              if (goog.LOCALE == "zh_HK" || goog.LOCALE == "zh-HK") {
                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_HK;
                                                                                                                                                              } else {
                                                                                                                                                                if (goog.LOCALE == "zh_TW" || goog.LOCALE == "zh-TW") {
                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_TW;
                                                                                                                                                                } else {
                                                                                                                                                                  if (goog.LOCALE == "zu") {
                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zu;
                                                                                                                                                                  } else {
                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
;goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    this.creationStack = (new Error).stack;
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = 0;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope));
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn;
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.ASSUME_ANY_VERSION = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || (goog.userAgent.ASSUME_GECKO || (goog.userAgent.ASSUME_MOBILE_WEBKIT || (goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA)));
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null;
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"];
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if (!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && (!goog.userAgent.detectedWebkit_ && navigator.product == "Gecko");
  }
};
if (!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_();
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.ASSUME_ANDROID = false;
goog.userAgent.ASSUME_IPHONE = false;
goog.userAgent.ASSUME_IPAD = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || (goog.userAgent.ASSUME_WINDOWS || (goog.userAgent.ASSUME_LINUX || (goog.userAgent.ASSUME_X11 || (goog.userAgent.ASSUME_ANDROID || (goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD)))));
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && ua.indexOf("Android") >= 0;
  goog.userAgent.detectedIPhone_ = !!ua && ua.indexOf("iPhone") >= 0;
  goog.userAgent.detectedIPad_ = !!ua && ua.indexOf("iPad") >= 0;
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion;
  } else {
    if (goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/;
      } else {
        if (goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/;
        }
      }
    }
    if (re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : "";
    }
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || (goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0));
};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersion("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersion("1.9b") || (goog.userAgent.IE && goog.userAgent.isVersion("8") || (goog.userAgent.OPERA && 
goog.userAgent.isVersion("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("528"))), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersion("8") || goog.userAgent.IE && !goog.userAgent.isVersion("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || (!!(goog.global["document"] && (document.documentElement && "ontouchstart" in document.documentElement)) || !!(goog.global["navigator"] && goog.global["navigator"]["msMaxTouchPoints"]))};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.defaultPrevented = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", 
POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", 
MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROVER:"MSPointerOver", MSPOINTEROUT:"MSPointerOut", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
  delete this.propagationStopped_;
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && (goog.userAgent.MAC && this.ctrlKey));
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventLike");
goog.events.Listenable = function() {
};
goog.events.Listenable.USE_LISTENABLE_INTERFACE = false;
goog.events.Listenable.IMPLEMENTED_BY_PROP_ = "__closure_listenable";
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP_] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP_]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function() {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
};
goog.events.Listener.ENABLE_MONITORING = false;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.isFunction(listener)) {
    this.isFunctionListener_ = true;
  } else {
    if (listener && (listener.handleEvent && goog.isFunction(listener.handleEvent))) {
      this.isFunctionListener_ = false;
    } else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = goog.events.ListenableKey.reserveKey();
  this.removed = false;
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if (this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject);
  }
  return this.listener.handleEvent.call(this.listener, eventObject);
};
goog.provide("goog.events");
goog.provide("goog.events.Key");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.Key;
goog.events.ListenableType;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var listenableKey;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listen((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  } else {
    listenableKey = goog.events.listen_((src), type, listener, false, opt_capt, opt_handler);
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key;
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    map[type] = {count_:0, remaining_:0};
  }
  map = map[type];
  if (!(capture in map)) {
    map[capture] = {count_:0, remaining_:0};
    map.count_++;
  }
  map = map[capture];
  var srcUid = goog.getUid(src);
  var listenerArray, listenerObj;
  map.remaining_++;
  if (!map[srcUid]) {
    listenerArray = map[srcUid] = [];
    map.count_++;
  } else {
    listenerArray = map[srcUid];
    for (var i = 0;i < listenerArray.length;i++) {
      listenerObj = listenerArray[i];
      if (listenerObj.listener == listener && listenerObj.handler == opt_handler) {
        if (listenerObj.removed) {
          break;
        }
        if (!callOnce) {
          listenerArray[i].callOnce = false;
        }
        return listenerArray[i];
      }
    }
  }
  var proxy = goog.events.getProxy();
  listenerObj = new goog.events.Listener;
  listenerObj.init(listener, proxy, src, type, capture, opt_handler);
  listenerObj.callOnce = callOnce;
  proxy.src = src;
  proxy.listener = listenerObj;
  listenerArray.push(listenerObj);
  if (!goog.events.sources_[srcUid]) {
    goog.events.sources_[srcUid] = [];
  }
  goog.events.sources_[srcUid].push(listenerObj);
  if (src.addEventListener) {
    if (src == goog.global || !src.customEvent_) {
      src.addEventListener(type, proxy, capture);
    }
  } else {
    src.attachEvent(goog.events.getOnString_(type), proxy);
  }
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  var listenableKey;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listenOnce((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  } else {
    listenableKey = goog.events.listen_((src), type, listener, true, opt_capt, opt_handler);
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key;
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), goog.events.wrapListener_(listener), opt_capt, opt_handler);
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (!listenerArray) {
    return false;
  }
  for (var i = 0;i < listenerArray.length;i++) {
    if (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler)) {
      return goog.events.unlistenByKey(listenerArray[i].key);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  var listener = goog.events.listeners_[key];
  if (!listener) {
    return false;
  }
  if (listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if (src.removeEventListener) {
    if (src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture);
    }
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  var srcUid = goog.getUid(src);
  if (goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if (sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid];
    }
  }
  listener.removed = true;
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if (listenerArray) {
    listenerArray.needsCleanup_ = true;
    goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  }
  delete goog.events.listeners_[key];
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.cleanUp = function(listenableKey) {
  delete goog.events.listeners_[listenableKey.key];
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if (!listenerArray.locked_) {
    if (listenerArray.needsCleanup_) {
      for (var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if (listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue;
        }
        if (oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex];
        }
        newIndex++;
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if (newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if (goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--;
        }
        if (goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type];
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  if (!noObj) {
    if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && (opt_obj && goog.events.Listenable.isImplementedBy(opt_obj))) {
      return opt_obj.removeAllListeners(opt_type);
    }
    var srcUid = goog.getUid((opt_obj));
    if (goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for (var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if (noType || opt_type == listener.type) {
          goog.events.unlistenByKey(listener.key);
          count++;
        }
      }
    }
  } else {
    goog.object.forEach(goog.events.listeners_, function(listener, key) {
      goog.events.unlistenByKey(key);
      count++;
    });
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    return goog.events.getListeners_(obj, type, capture) || [];
  }
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if (map[objUid]) {
        return map[objUid];
      }
    }
  }
  return null;
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener((type), goog.events.wrapListener_(listener), capture, opt_handler);
  }
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;i++) {
      if (!listenerArray[i].removed && (listenerArray[i].listener == listener && (listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler))) {
        return listenerArray[i];
      }
    }
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if (listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if (hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && (!!map[opt_capture] && objUid in map[opt_capture]);
    } else {
      if (!(hasType || hasCapture)) {
        return true;
      } else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture;
        });
      }
    }
  }
  return false;
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  var map = goog.events.listenerTree_;
  if (type in map) {
    map = map[type];
    if (capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject);
    }
  }
  return true;
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if (map[objUid]) {
    var remaining = --map.remaining_;
    var listenerArray = map[objUid];
    if (!listenerArray.locked_) {
      listenerArray.locked_ = 1;
    } else {
      listenerArray.locked_++;
    }
    try {
      var length = listenerArray.length;
      for (var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if (listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    } finally {
      map.remaining_ = Math.max(remaining, map.remaining_);
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray);
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener.key);
  }
  return listener.handleEvent(eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_);
};
goog.events.dispatchEvent = function(src, e) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    return src.dispatchEvent(e);
  }
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  if (goog.isString(e)) {
    e = new goog.events.Event(e, src);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event((type), src);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || src;
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if (hasCapture) {
    ancestors = [];
    for (var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent);
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for (var i = ancestors.length - 1;!e.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false;
    }
  }
  var hasBubble = false in map;
  if (hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if (hasCapture) {
      for (var i = 0;!e.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false;
      }
    } else {
      for (var current = src;!e.propagationStopped_ && (current && targetsMap.remaining_);current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false;
      }
    }
  }
  return Boolean(rv);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if (!(type in map)) {
    return true;
  }
  map = map[type];
  var retval, targetsMap;
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var hasCapture = true in map;
    var hasBubble = false in map;
    if (hasCapture) {
      if (goog.events.isMarkedIeEvent_(ieEvent)) {
        return true;
      }
      goog.events.markIeEvent_(ieEvent);
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, (this));
    retval = true;
    try {
      if (hasCapture) {
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && (i >= 0 && targetsMap.remaining_);i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt);
        }
        if (hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for (var i = 0;!evt.propagationStopped_ && (i < ancestors.length && targetsMap.remaining_);i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt);
          }
        }
      } else {
        retval = goog.events.fireListener(listener, evt);
      }
    } finally {
      if (ancestors) {
        ancestors.length = 0;
      }
    }
    return retval;
  }
  var be = new goog.events.BrowserEvent(opt_evt, (this));
  retval = goog.events.fireListener(listener, be);
  return retval;
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener_ = function(listener) {
  if (goog.isFunction(listener)) {
    return listener;
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
    return listener.handleEvent(e);
  });
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.eventTargetListeners_ = {};
    this.reallyDisposed_ = false;
    this.actualEventTarget_ = this;
  }
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.Listenable.addImplementation(goog.events.EventTarget);
}
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    if (this.reallyDisposed_) {
      return true;
    }
    var ancestorsTree, ancestor = this.getParentEventTarget();
    if (ancestor) {
      ancestorsTree = [];
      var ancestorCount = 1;
      for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
        ancestorsTree.push(ancestor);
        goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
      }
    }
    return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
  } else {
    return goog.events.dispatchEvent(this, e);
  }
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.removeAllListeners();
    this.reallyDisposed_ = true;
  } else {
    goog.events.removeAll(this);
  }
  this.parentEventTarget_ = null;
};
if (goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, false, opt_useCapture, opt_listenerScope);
  };
  goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, true, opt_useCapture, opt_listenerScope);
  };
  goog.events.EventTarget.prototype.listenInternal_ = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not listen on disposed object.");
    var listenerArray = this.eventTargetListeners_[type] || (this.eventTargetListeners_[type] = []);
    var listenerObj;
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if (index > -1) {
      listenerObj = listenerArray[index];
      if (!callOnce) {
        listenerObj.callOnce = false;
      }
      return listenerObj;
    }
    listenerObj = new goog.events.Listener;
    listenerObj.init(listener, null, this, type, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
    return listenerObj;
  };
  goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
    if (!(type in this.eventTargetListeners_)) {
      return false;
    }
    var listenerArray = this.eventTargetListeners_[type];
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if (index > -1) {
      var listenerObj = listenerArray[index];
      goog.events.cleanUp(listenerObj);
      listenerObj.removed = true;
      return goog.array.removeAt(listenerArray, index);
    }
    return false;
  };
  goog.events.EventTarget.prototype.unlistenByKey = function(key) {
    var type = key.type;
    if (!(type in this.eventTargetListeners_)) {
      return false;
    }
    var removed = goog.array.remove(this.eventTargetListeners_[type], key);
    if (removed) {
      goog.events.cleanUp(key);
      key.removed = true;
    }
    return removed;
  };
  goog.events.EventTarget.prototype.removeAllListeners = function(opt_type, opt_capture) {
    var count = 0;
    for (var type in this.eventTargetListeners_) {
      if (!opt_type || type == opt_type) {
        var listenerArray = this.eventTargetListeners_[type];
        for (var i = 0;i < listenerArray.length;i++) {
          ++count;
          goog.events.cleanUp(listenerArray[i]);
          listenerArray[i].removed = true;
        }
        listenerArray.length = 0;
      }
    }
    return count;
  };
  goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not fire listeners after dispose() completed.");
    if (!(type in this.eventTargetListeners_)) {
      return true;
    }
    var rv = true;
    var listenerArray = goog.array.clone(this.eventTargetListeners_[type]);
    for (var i = 0;i < listenerArray.length;++i) {
      var listener = listenerArray[i];
      if (listener && (!listener.removed && listener.capture == capture)) {
        if (listener.callOnce) {
          this.unlistenByKey(listener);
        }
        rv = listener.handleEvent(eventObject) !== false && rv;
      }
    }
    return rv && eventObject.returnValue_ != false;
  };
  goog.events.EventTarget.prototype.getListeners = function(type, capture) {
    var listenerArray = this.eventTargetListeners_[type];
    var rv = [];
    if (listenerArray) {
      for (var i = 0;i < listenerArray.length;++i) {
        var listenerObj = listenerArray[i];
        if (listenerObj.capture == capture) {
          rv.push(listenerObj);
        }
      }
    }
    return rv;
  };
  goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
    var listenerArray = this.eventTargetListeners_[type];
    var i = -1;
    if (listenerArray) {
      i = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
    }
    return i > -1 ? listenerArray[i] : null;
  };
  goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    return goog.object.some(this.eventTargetListeners_, function(listenersArray, type) {
      for (var i = 0;i < listenersArray.length;++i) {
        if ((!hasType || listenersArray[i].type == opt_type) && (!hasCapture || listenersArray[i].capture == opt_capture)) {
          return true;
        }
      }
      return false;
    });
  };
  goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
    this.actualEventTarget_ = target;
  };
  goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
    var type = e.type || (e);
    if (goog.isString(e)) {
      e = new goog.events.Event(e, target);
    } else {
      if (!(e instanceof goog.events.Event)) {
        var oldEvent = e;
        e = new goog.events.Event(type, target);
        goog.object.extend(e, oldEvent);
      } else {
        e.target = e.target || target;
      }
    }
    var rv = true, currentTarget;
    if (opt_ancestorsTree) {
      for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, true, e) && rv;
      }
    }
    if (!e.propagationStopped_) {
      currentTarget = e.currentTarget = target;
      rv = currentTarget.fireListeners(type, true, e) && rv;
      if (!e.propagationStopped_) {
        rv = currentTarget.fireListeners(type, false, e) && rv;
      }
    }
    if (opt_ancestorsTree) {
      for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, false, e) && rv;
      }
    }
    return rv;
  };
  goog.events.EventTarget.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.listener == listener && (listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope)) {
        return i;
      }
    }
    return-1;
  };
}
;goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      return f.call(opt_obj, val, undefined, iterator);
    }
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if (i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      } else {
        i++;
        return this.next();
      }
    }
  };
  return newIter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while (true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if (val1 != val2) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    } else {
      if (b1 && !b2) {
        return false;
      }
      if (!b2) {
        try {
          val2 = iterable2.next();
          return false;
        } catch (ex1) {
          if (ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true;
        }
      }
    }
  }
  return false;
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if (opt_values) {
    this.addAll(opt_values);
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if (type == "object" && val || type == "function") {
    return "o" + goog.getUid((val));
  } else {
    return type.substr(0, 1) + val;
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this);
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0;i < values.length;i++) {
    var value = values[i];
    if (this.contains(value)) {
      result.add(value);
    }
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return false;
  }
  if (!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col);
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false);
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if (goog.userAgent.WEBKIT && !goog.userAgent.isVersion("535.3")) {
    retVal = !retVal;
  }
  target.onerror = function(message, url, line) {
    if (oldErrorHandler) {
      oldErrorHandler(message, url, line);
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if (typeof obj == "undefined") {
    return "undefined";
  }
  if (obj == null) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (!opt_showFn && goog.isFunction(obj[x])) {
      continue;
    }
    var s = x + " \x3d ";
    try {
      s += obj[x];
    } catch (e) {
      s += "*** " + e + " ***";
    }
    str.push(s);
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (!goog.isDef(obj)) {
        str.push("undefined");
      } else {
        if (goog.isNull(obj)) {
          str.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                if (previous.contains(obj)) {
                  str.push("*** reference loop detected ***");
                } else {
                  previous.add(obj);
                  str.push("{");
                  for (var x in obj) {
                    if (!opt_showFn && goog.isFunction(obj[x])) {
                      continue;
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace);
                  }
                  str.push("\n" + space + "}");
                }
              } else {
                str.push(obj);
              }
            }
          }
        }
      }
    } catch (e) {
      str.push("*** " + e + " ***");
    }
  };
  helper(obj, "");
  return str.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0;i < arr.length;i++) {
    if (goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]));
    } else {
      str.push(arr[i]);
    }
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error;
  } catch (e2) {
    return "Exception trying to expose exception! You win, we lose. " + e2;
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"};
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || (err.line || "Not available");
  } catch (e) {
    lineNumber = "Not available";
    threwError = true;
  }
  try {
    fileName = err.fileName || (err.filename || (err.sourceURL || (goog.global["$googDebugFname"] || href)));
  } catch (e) {
    fileName = "Not available";
    threwError = true;
  }
  if (threwError || (!err.lineNumber || (!err.fileName || !err.stack))) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"};
  }
  return err;
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if (!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller);
  }
  if (opt_message) {
    var x = 0;
    while (error["message" + x]) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while (fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  if (opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]");
  } else {
    sb.push("[end]");
  }
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, []);
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0;i < args.length;i++) {
        if (i > 0) {
          sb.push(", ");
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break;
        }
        if (argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "...";
        }
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      if (fn) {
        sb.push("[...long stack...]");
      } else {
        sb.push("[end]");
      }
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      goog.debug.fnNameCache_[fn] = name;
      return name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if (goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++;
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_;
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_;
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_;
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text;
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName;
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg;
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_;
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time;
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_;
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  if (!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer;
  }
  return goog.debug.LogBuffer.instance_;
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false;
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if (!buffer[0]) {
    return;
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]));
  } while (i != curIndex);
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name;
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if (!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_;
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for (var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if (!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_();
  }
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  if (goog.global["console"]) {
    if (goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg);
    } else {
      if (goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg);
      }
    }
  }
  if (goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg);
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    if (!this.handlers_) {
      this.handlers_ = [];
    }
    this.handlers_.push(handler);
  } else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler);
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler);
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  if (!this.children_) {
    this.children_ = {};
  }
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level;
  } else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level;
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_;
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if (this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception));
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if (goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  } else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_);
  }
  if (opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller));
  }
  return logRecord;
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception);
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception);
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception);
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception);
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if (this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord);
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while (target) {
      target.callPublish_(logRecord);
      target = target.getParent();
    }
  } else {
    for (var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    for (var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if (!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG);
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_);
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if (/^\s*$/.test(s)) {
    return false;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.parse = function(s) {
  var o = String(s);
  if (goog.json.isValid_(o)) {
    try {
      return(eval("(" + o + ")"));
    } catch (ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return(eval("(" + s + ")"));
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if (object == null) {
        sb.push("null");
        break;
      }
      if (goog.isArray(object)) {
        this.serializeArray((object), sb);
        break;
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);;
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if (c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c];
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if (cc < 16) {
      rv += "000";
    } else {
      if (cc < 256) {
        rv += "00";
      } else {
        if (cc < 4096) {
          rv += "0";
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16);
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if (typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ",";
      }
    }
  }
  sb.push("}");
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false;
  }
};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = false;
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory((factory), (optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this);
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if (progId) {
    return new ActiveXObject(progId);
  } else {
    return new XMLHttpRequest;
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if (progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;
  }
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && (typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined")) {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_);
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && (pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "\x26", key, "\x3d", goog.string.urlEncode(value)]);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || (followingChar == goog.uri.utils.CharCode_.EQUAL || (followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH))) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if (opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback);
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if (opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval);
  }
  if (opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials);
  }
  x.send(url, opt_method, opt_content, opt_headers);
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while (instances.length) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo);
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_;
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false;
  } catch (err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if (opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value);
    });
  }
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if (method == "POST" && (!headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER) && !contentIsFormData)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  if (this.responseType_) {
    this.xhr_.responseType = this.responseType_;
  }
  if (goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_;
  }
  try {
    if (this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null;
    }
    if (this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_);
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false;
  } catch (err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if (typeof goog == "undefined") {
  } else {
    if (this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT);
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if (this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if (!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR);
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if (this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_();
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if (this.xhr_) {
    if (this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false;
    }
    this.cleanUpXhr_(true);
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this);
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (!this.inOpen_ && (!this.inSend_ && !this.inAbort_)) {
    this.onReadyStateChangeEntryPoint_();
  } else {
    this.onReadyStateChangeHelper_();
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (!this.active_) {
    return;
  }
  if (typeof goog == "undefined") {
  } else {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && (this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2)) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return;
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if (this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if (this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS);
          } else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_();
          }
        } finally {
          this.cleanUpXhr_();
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if (this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null;
    }
    if (!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY);
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_;
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    this.logger_.fine("Can not get status: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_);
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return "";
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if (this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"];
    }
  } catch (e) {
    this.logger_.fine("Can not get responseBody: " + e.message);
  }
  return null;
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null;
  } catch (e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (!this.xhr_) {
    return undefined;
  }
  var responseText = this.xhr_.responseText;
  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length);
  }
  return goog.json.parse(responseText);
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
      ;
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null;
  } catch (e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined;
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_;
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.provide("goog.i18n.NumberFormatSymbols");
goog.provide("goog.i18n.NumberFormatSymbols_af");
goog.provide("goog.i18n.NumberFormatSymbols_af_ZA");
goog.provide("goog.i18n.NumberFormatSymbols_am");
goog.provide("goog.i18n.NumberFormatSymbols_am_ET");
goog.provide("goog.i18n.NumberFormatSymbols_ar");
goog.provide("goog.i18n.NumberFormatSymbols_ar_001");
goog.provide("goog.i18n.NumberFormatSymbols_ar_EG");
goog.provide("goog.i18n.NumberFormatSymbols_bg");
goog.provide("goog.i18n.NumberFormatSymbols_bg_BG");
goog.provide("goog.i18n.NumberFormatSymbols_bn");
goog.provide("goog.i18n.NumberFormatSymbols_bn_BD");
goog.provide("goog.i18n.NumberFormatSymbols_ca");
goog.provide("goog.i18n.NumberFormatSymbols_ca_AD");
goog.provide("goog.i18n.NumberFormatSymbols_ca_ES");
goog.provide("goog.i18n.NumberFormatSymbols_cs");
goog.provide("goog.i18n.NumberFormatSymbols_cs_CZ");
goog.provide("goog.i18n.NumberFormatSymbols_da");
goog.provide("goog.i18n.NumberFormatSymbols_da_DK");
goog.provide("goog.i18n.NumberFormatSymbols_de");
goog.provide("goog.i18n.NumberFormatSymbols_de_AT");
goog.provide("goog.i18n.NumberFormatSymbols_de_BE");
goog.provide("goog.i18n.NumberFormatSymbols_de_CH");
goog.provide("goog.i18n.NumberFormatSymbols_de_DE");
goog.provide("goog.i18n.NumberFormatSymbols_de_LU");
goog.provide("goog.i18n.NumberFormatSymbols_el");
goog.provide("goog.i18n.NumberFormatSymbols_el_GR");
goog.provide("goog.i18n.NumberFormatSymbols_en");
goog.provide("goog.i18n.NumberFormatSymbols_en_AS");
goog.provide("goog.i18n.NumberFormatSymbols_en_AU");
goog.provide("goog.i18n.NumberFormatSymbols_en_Dsrt_US");
goog.provide("goog.i18n.NumberFormatSymbols_en_FM");
goog.provide("goog.i18n.NumberFormatSymbols_en_GB");
goog.provide("goog.i18n.NumberFormatSymbols_en_GU");
goog.provide("goog.i18n.NumberFormatSymbols_en_IE");
goog.provide("goog.i18n.NumberFormatSymbols_en_IN");
goog.provide("goog.i18n.NumberFormatSymbols_en_MH");
goog.provide("goog.i18n.NumberFormatSymbols_en_MP");
goog.provide("goog.i18n.NumberFormatSymbols_en_PR");
goog.provide("goog.i18n.NumberFormatSymbols_en_PW");
goog.provide("goog.i18n.NumberFormatSymbols_en_SG");
goog.provide("goog.i18n.NumberFormatSymbols_en_TC");
goog.provide("goog.i18n.NumberFormatSymbols_en_UM");
goog.provide("goog.i18n.NumberFormatSymbols_en_US");
goog.provide("goog.i18n.NumberFormatSymbols_en_VG");
goog.provide("goog.i18n.NumberFormatSymbols_en_VI");
goog.provide("goog.i18n.NumberFormatSymbols_en_ZA");
goog.provide("goog.i18n.NumberFormatSymbols_es");
goog.provide("goog.i18n.NumberFormatSymbols_es_419");
goog.provide("goog.i18n.NumberFormatSymbols_es_EA");
goog.provide("goog.i18n.NumberFormatSymbols_es_ES");
goog.provide("goog.i18n.NumberFormatSymbols_es_IC");
goog.provide("goog.i18n.NumberFormatSymbols_et");
goog.provide("goog.i18n.NumberFormatSymbols_et_EE");
goog.provide("goog.i18n.NumberFormatSymbols_eu");
goog.provide("goog.i18n.NumberFormatSymbols_eu_ES");
goog.provide("goog.i18n.NumberFormatSymbols_fa");
goog.provide("goog.i18n.NumberFormatSymbols_fa_IR");
goog.provide("goog.i18n.NumberFormatSymbols_fi");
goog.provide("goog.i18n.NumberFormatSymbols_fi_FI");
goog.provide("goog.i18n.NumberFormatSymbols_fil");
goog.provide("goog.i18n.NumberFormatSymbols_fil_PH");
goog.provide("goog.i18n.NumberFormatSymbols_fr");
goog.provide("goog.i18n.NumberFormatSymbols_fr_BL");
goog.provide("goog.i18n.NumberFormatSymbols_fr_CA");
goog.provide("goog.i18n.NumberFormatSymbols_fr_FR");
goog.provide("goog.i18n.NumberFormatSymbols_fr_GF");
goog.provide("goog.i18n.NumberFormatSymbols_fr_GP");
goog.provide("goog.i18n.NumberFormatSymbols_fr_MC");
goog.provide("goog.i18n.NumberFormatSymbols_fr_MF");
goog.provide("goog.i18n.NumberFormatSymbols_fr_MQ");
goog.provide("goog.i18n.NumberFormatSymbols_fr_RE");
goog.provide("goog.i18n.NumberFormatSymbols_fr_YT");
goog.provide("goog.i18n.NumberFormatSymbols_gl");
goog.provide("goog.i18n.NumberFormatSymbols_gl_ES");
goog.provide("goog.i18n.NumberFormatSymbols_gsw");
goog.provide("goog.i18n.NumberFormatSymbols_gsw_CH");
goog.provide("goog.i18n.NumberFormatSymbols_gu");
goog.provide("goog.i18n.NumberFormatSymbols_gu_IN");
goog.provide("goog.i18n.NumberFormatSymbols_he");
goog.provide("goog.i18n.NumberFormatSymbols_he_IL");
goog.provide("goog.i18n.NumberFormatSymbols_hi");
goog.provide("goog.i18n.NumberFormatSymbols_hi_IN");
goog.provide("goog.i18n.NumberFormatSymbols_hr");
goog.provide("goog.i18n.NumberFormatSymbols_hr_HR");
goog.provide("goog.i18n.NumberFormatSymbols_hu");
goog.provide("goog.i18n.NumberFormatSymbols_hu_HU");
goog.provide("goog.i18n.NumberFormatSymbols_id");
goog.provide("goog.i18n.NumberFormatSymbols_id_ID");
goog.provide("goog.i18n.NumberFormatSymbols_in");
goog.provide("goog.i18n.NumberFormatSymbols_is");
goog.provide("goog.i18n.NumberFormatSymbols_is_IS");
goog.provide("goog.i18n.NumberFormatSymbols_it");
goog.provide("goog.i18n.NumberFormatSymbols_it_IT");
goog.provide("goog.i18n.NumberFormatSymbols_it_SM");
goog.provide("goog.i18n.NumberFormatSymbols_iw");
goog.provide("goog.i18n.NumberFormatSymbols_ja");
goog.provide("goog.i18n.NumberFormatSymbols_ja_JP");
goog.provide("goog.i18n.NumberFormatSymbols_kn");
goog.provide("goog.i18n.NumberFormatSymbols_kn_IN");
goog.provide("goog.i18n.NumberFormatSymbols_ko");
goog.provide("goog.i18n.NumberFormatSymbols_ko_KR");
goog.provide("goog.i18n.NumberFormatSymbols_ln");
goog.provide("goog.i18n.NumberFormatSymbols_ln_CD");
goog.provide("goog.i18n.NumberFormatSymbols_lt");
goog.provide("goog.i18n.NumberFormatSymbols_lt_LT");
goog.provide("goog.i18n.NumberFormatSymbols_lv");
goog.provide("goog.i18n.NumberFormatSymbols_lv_LV");
goog.provide("goog.i18n.NumberFormatSymbols_ml");
goog.provide("goog.i18n.NumberFormatSymbols_ml_IN");
goog.provide("goog.i18n.NumberFormatSymbols_mr");
goog.provide("goog.i18n.NumberFormatSymbols_mr_IN");
goog.provide("goog.i18n.NumberFormatSymbols_ms");
goog.provide("goog.i18n.NumberFormatSymbols_ms_MY");
goog.provide("goog.i18n.NumberFormatSymbols_mt");
goog.provide("goog.i18n.NumberFormatSymbols_mt_MT");
goog.provide("goog.i18n.NumberFormatSymbols_nl");
goog.provide("goog.i18n.NumberFormatSymbols_nl_CW");
goog.provide("goog.i18n.NumberFormatSymbols_nl_NL");
goog.provide("goog.i18n.NumberFormatSymbols_nl_SX");
goog.provide("goog.i18n.NumberFormatSymbols_no");
goog.provide("goog.i18n.NumberFormatSymbols_or");
goog.provide("goog.i18n.NumberFormatSymbols_or_IN");
goog.provide("goog.i18n.NumberFormatSymbols_pl");
goog.provide("goog.i18n.NumberFormatSymbols_pl_PL");
goog.provide("goog.i18n.NumberFormatSymbols_pt");
goog.provide("goog.i18n.NumberFormatSymbols_pt_BR");
goog.provide("goog.i18n.NumberFormatSymbols_pt_PT");
goog.provide("goog.i18n.NumberFormatSymbols_ro");
goog.provide("goog.i18n.NumberFormatSymbols_ro_RO");
goog.provide("goog.i18n.NumberFormatSymbols_ru");
goog.provide("goog.i18n.NumberFormatSymbols_ru_RU");
goog.provide("goog.i18n.NumberFormatSymbols_sk");
goog.provide("goog.i18n.NumberFormatSymbols_sk_SK");
goog.provide("goog.i18n.NumberFormatSymbols_sl");
goog.provide("goog.i18n.NumberFormatSymbols_sl_SI");
goog.provide("goog.i18n.NumberFormatSymbols_sq");
goog.provide("goog.i18n.NumberFormatSymbols_sq_AL");
goog.provide("goog.i18n.NumberFormatSymbols_sr");
goog.provide("goog.i18n.NumberFormatSymbols_sr_Cyrl_RS");
goog.provide("goog.i18n.NumberFormatSymbols_sr_Latn_RS");
goog.provide("goog.i18n.NumberFormatSymbols_sv");
goog.provide("goog.i18n.NumberFormatSymbols_sv_SE");
goog.provide("goog.i18n.NumberFormatSymbols_sw");
goog.provide("goog.i18n.NumberFormatSymbols_sw_TZ");
goog.provide("goog.i18n.NumberFormatSymbols_ta");
goog.provide("goog.i18n.NumberFormatSymbols_ta_IN");
goog.provide("goog.i18n.NumberFormatSymbols_te");
goog.provide("goog.i18n.NumberFormatSymbols_te_IN");
goog.provide("goog.i18n.NumberFormatSymbols_th");
goog.provide("goog.i18n.NumberFormatSymbols_th_TH");
goog.provide("goog.i18n.NumberFormatSymbols_tl");
goog.provide("goog.i18n.NumberFormatSymbols_tr");
goog.provide("goog.i18n.NumberFormatSymbols_tr_TR");
goog.provide("goog.i18n.NumberFormatSymbols_uk");
goog.provide("goog.i18n.NumberFormatSymbols_uk_UA");
goog.provide("goog.i18n.NumberFormatSymbols_ur");
goog.provide("goog.i18n.NumberFormatSymbols_ur_PK");
goog.provide("goog.i18n.NumberFormatSymbols_vi");
goog.provide("goog.i18n.NumberFormatSymbols_vi_VN");
goog.provide("goog.i18n.NumberFormatSymbols_zh");
goog.provide("goog.i18n.NumberFormatSymbols_zh_CN");
goog.provide("goog.i18n.NumberFormatSymbols_zh_HK");
goog.provide("goog.i18n.NumberFormatSymbols_zh_Hans_CN");
goog.provide("goog.i18n.NumberFormatSymbols_zh_TW");
goog.provide("goog.i18n.NumberFormatSymbols_zu");
goog.provide("goog.i18n.NumberFormatSymbols_zu_ZA");
goog.i18n.NumberFormatSymbols_af = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"ZAR"};
goog.i18n.NumberFormatSymbols_af_ZA = goog.i18n.NumberFormatSymbols_af;
goog.i18n.NumberFormatSymbols_am = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"ETB"};
goog.i18n.NumberFormatSymbols_am_ET = goog.i18n.NumberFormatSymbols_am;
goog.i18n.NumberFormatSymbols_ar = {DECIMAL_SEP:"\u066b", GROUP_SEP:"\u066c", PERCENT:"\u066a", ZERO_DIGIT:"\u0660", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"\u0627\u0633", PERMILL:"\u0609", INFINITY:"\u221e", NAN:"\u0644\u064a\u0633\u00a0\u0631\u0642\u0645", DECIMAL_PATTERN:"#0.###;#0.###-", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#0.00;\u00a4\u00a0#0.00-", DEF_CURRENCY_CODE:"EGP"};
goog.i18n.NumberFormatSymbols_ar_001 = goog.i18n.NumberFormatSymbols_ar;
goog.i18n.NumberFormatSymbols_ar_EG = goog.i18n.NumberFormatSymbols_ar;
goog.i18n.NumberFormatSymbols_bg = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"BGN"};
goog.i18n.NumberFormatSymbols_bg_BG = goog.i18n.NumberFormatSymbols_bg;
goog.i18n.NumberFormatSymbols_bn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"\u09e6", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u09b8\u0982\u0996\u09cd\u09af\u09be\u00a0\u09a8\u09be", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"#,##,##0.00\u00a4;(#,##,##0.00\u00a4)", DEF_CURRENCY_CODE:"BDT"};
goog.i18n.NumberFormatSymbols_bn_BD = goog.i18n.NumberFormatSymbols_bn;
goog.i18n.NumberFormatSymbols_ca = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_ca_AD = goog.i18n.NumberFormatSymbols_ca;
goog.i18n.NumberFormatSymbols_ca_ES = goog.i18n.NumberFormatSymbols_ca;
goog.i18n.NumberFormatSymbols_cs = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"CZK"};
goog.i18n.NumberFormatSymbols_cs_CZ = goog.i18n.NumberFormatSymbols_cs;
goog.i18n.NumberFormatSymbols_da = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"DKK"};
goog.i18n.NumberFormatSymbols_da_DK = goog.i18n.NumberFormatSymbols_da;
goog.i18n.NumberFormatSymbols_de = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_de_AT = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_de_BE = goog.i18n.NumberFormatSymbols_de;
goog.i18n.NumberFormatSymbols_de_CH = {DECIMAL_SEP:".", GROUP_SEP:"'", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00;\u00a4-#,##0.00", DEF_CURRENCY_CODE:"CHF"};
goog.i18n.NumberFormatSymbols_de_DE = goog.i18n.NumberFormatSymbols_de;
goog.i18n.NumberFormatSymbols_de_LU = goog.i18n.NumberFormatSymbols_de;
goog.i18n.NumberFormatSymbols_el = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"e", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"[#E0]", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_el_GR = goog.i18n.NumberFormatSymbols_el;
goog.i18n.NumberFormatSymbols_en = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"USD"};
goog.i18n.NumberFormatSymbols_en_AS = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_AU = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"AUD"};
goog.i18n.NumberFormatSymbols_en_Dsrt_US = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_FM = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_GB = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"GBP"};
goog.i18n.NumberFormatSymbols_en_GU = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_IE = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_en_IN = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_en_MH = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_MP = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_PR = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_PW = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_SG = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"SGD"};
goog.i18n.NumberFormatSymbols_en_TC = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_UM = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_US = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_VG = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_VI = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_ZA = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"ZAR"};
goog.i18n.NumberFormatSymbols_es = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_es_419 = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"MXN"};
goog.i18n.NumberFormatSymbols_es_EA = goog.i18n.NumberFormatSymbols_es;
goog.i18n.NumberFormatSymbols_es_ES = goog.i18n.NumberFormatSymbols_es;
goog.i18n.NumberFormatSymbols_es_IC = goog.i18n.NumberFormatSymbols_es;
goog.i18n.NumberFormatSymbols_et = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#0.00\u00a4;(#0.00\u00a4)", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_et_EE = goog.i18n.NumberFormatSymbols_et;
goog.i18n.NumberFormatSymbols_eu = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"%\u00a0#,##0", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4;(#,##0.00\u00a0\u00a4)", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_eu_ES = goog.i18n.NumberFormatSymbols_eu;
goog.i18n.NumberFormatSymbols_fa = {DECIMAL_SEP:"\u066b", GROUP_SEP:"\u066c", PERCENT:"\u066a", ZERO_DIGIT:"\u06f0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"\u00d7\u06f1\u06f0^", PERMILL:"\u0609", INFINITY:"\u221e", NAN:"\u0646\u0627\u0639\u062f\u062f", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u200e\u00a4#,##0.00;\u200e(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"IRR"};
goog.i18n.NumberFormatSymbols_fa_IR = goog.i18n.NumberFormatSymbols_fa;
goog.i18n.NumberFormatSymbols_fi = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"ep\u00e4luku", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_fi_FI = goog.i18n.NumberFormatSymbols_fi;
goog.i18n.NumberFormatSymbols_fil = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"PHP"};
goog.i18n.NumberFormatSymbols_fil_PH = goog.i18n.NumberFormatSymbols_fil;
goog.i18n.NumberFormatSymbols_fr = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4;(#,##0.00\u00a0\u00a4)", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_fr_BL = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_CA = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4;(#,##0.00\u00a0\u00a4)", DEF_CURRENCY_CODE:"CAD"};
goog.i18n.NumberFormatSymbols_fr_FR = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_GF = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_GP = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_MC = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_MF = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_MQ = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_RE = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_fr_YT = goog.i18n.NumberFormatSymbols_fr;
goog.i18n.NumberFormatSymbols_gl = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_gl_ES = goog.i18n.NumberFormatSymbols_gl;
goog.i18n.NumberFormatSymbols_gsw = {DECIMAL_SEP:".", GROUP_SEP:"\u2019", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"CHF"};
goog.i18n.NumberFormatSymbols_gsw_CH = goog.i18n.NumberFormatSymbols_gsw;
goog.i18n.NumberFormatSymbols_gu = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_gu_IN = goog.i18n.NumberFormatSymbols_gu;
goog.i18n.NumberFormatSymbols_he = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"ILS"};
goog.i18n.NumberFormatSymbols_he_IL = goog.i18n.NumberFormatSymbols_he;
goog.i18n.NumberFormatSymbols_hi = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_hi_IN = goog.i18n.NumberFormatSymbols_hi;
goog.i18n.NumberFormatSymbols_hr = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"HRK"};
goog.i18n.NumberFormatSymbols_hr_HR = goog.i18n.NumberFormatSymbols_hr;
goog.i18n.NumberFormatSymbols_hu = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"HUF"};
goog.i18n.NumberFormatSymbols_hu_HU = goog.i18n.NumberFormatSymbols_hu;
goog.i18n.NumberFormatSymbols_id = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"IDR"};
goog.i18n.NumberFormatSymbols_id_ID = goog.i18n.NumberFormatSymbols_id;
goog.i18n.NumberFormatSymbols_in = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"IDR"};
goog.i18n.NumberFormatSymbols_is = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"ISK"};
goog.i18n.NumberFormatSymbols_is_IS = goog.i18n.NumberFormatSymbols_is;
goog.i18n.NumberFormatSymbols_it = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_it_IT = goog.i18n.NumberFormatSymbols_it;
goog.i18n.NumberFormatSymbols_it_SM = goog.i18n.NumberFormatSymbols_it;
goog.i18n.NumberFormatSymbols_iw = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"ILS"};
goog.i18n.NumberFormatSymbols_ja = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"JPY"};
goog.i18n.NumberFormatSymbols_ja_JP = goog.i18n.NumberFormatSymbols_ja;
goog.i18n.NumberFormatSymbols_kn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"\u0c88", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_kn_IN = goog.i18n.NumberFormatSymbols_kn;
goog.i18n.NumberFormatSymbols_ko = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"KRW"};
goog.i18n.NumberFormatSymbols_ko_KR = goog.i18n.NumberFormatSymbols_ko;
goog.i18n.NumberFormatSymbols_ln = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"CDF"};
goog.i18n.NumberFormatSymbols_ln_CD = goog.i18n.NumberFormatSymbols_ln;
goog.i18n.NumberFormatSymbols_lt = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2013", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0 %", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"LTL"};
goog.i18n.NumberFormatSymbols_lt_LT = goog.i18n.NumberFormatSymbols_lt;
goog.i18n.NumberFormatSymbols_lv = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"nav\u00a0skaitlis", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"LVL"};
goog.i18n.NumberFormatSymbols_lv_LV = goog.i18n.NumberFormatSymbols_lv;
goog.i18n.NumberFormatSymbols_ml = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"#,##,##0.00\u00a4", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_ml_IN = goog.i18n.NumberFormatSymbols_ml;
goog.i18n.NumberFormatSymbols_mr = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_mr_IN = goog.i18n.NumberFormatSymbols_mr;
goog.i18n.NumberFormatSymbols_ms = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"MYR"};
goog.i18n.NumberFormatSymbols_ms_MY = goog.i18n.NumberFormatSymbols_ms;
goog.i18n.NumberFormatSymbols_mt = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_mt_MT = goog.i18n.NumberFormatSymbols_mt;
goog.i18n.NumberFormatSymbols_nl = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00;\u00a4\u00a0#,##0.00-", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_nl_CW = goog.i18n.NumberFormatSymbols_nl;
goog.i18n.NumberFormatSymbols_nl_NL = goog.i18n.NumberFormatSymbols_nl;
goog.i18n.NumberFormatSymbols_nl_SX = goog.i18n.NumberFormatSymbols_nl;
goog.i18n.NumberFormatSymbols_no = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"NOK"};
goog.i18n.NumberFormatSymbols_or = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_or_IN = goog.i18n.NumberFormatSymbols_or;
goog.i18n.NumberFormatSymbols_pl = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4;(#,##0.00\u00a0\u00a4)", DEF_CURRENCY_CODE:"PLN"};
goog.i18n.NumberFormatSymbols_pl_PL = goog.i18n.NumberFormatSymbols_pl;
goog.i18n.NumberFormatSymbols_pt = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"BRL"};
goog.i18n.NumberFormatSymbols_pt_BR = goog.i18n.NumberFormatSymbols_pt;
goog.i18n.NumberFormatSymbols_pt_PT = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_ro = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"RON"};
goog.i18n.NumberFormatSymbols_ro_RO = goog.i18n.NumberFormatSymbols_ro;
goog.i18n.NumberFormatSymbols_ru = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u043d\u0435\u00a0\u0447\u0438\u0441\u043b\u043e", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"RUB"};
goog.i18n.NumberFormatSymbols_ru_RU = goog.i18n.NumberFormatSymbols_ru;
goog.i18n.NumberFormatSymbols_sk = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_sk_SK = goog.i18n.NumberFormatSymbols_sk;
goog.i18n.NumberFormatSymbols_sl = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"e", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_sl_SI = goog.i18n.NumberFormatSymbols_sl;
goog.i18n.NumberFormatSymbols_sq = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"ALL"};
goog.i18n.NumberFormatSymbols_sq_AL = goog.i18n.NumberFormatSymbols_sq;
goog.i18n.NumberFormatSymbols_sr = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"RSD"};
goog.i18n.NumberFormatSymbols_sr_Cyrl_RS = goog.i18n.NumberFormatSymbols_sr;
goog.i18n.NumberFormatSymbols_sr_Latn_RS = goog.i18n.NumberFormatSymbols_sr;
goog.i18n.NumberFormatSymbols_sv = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"\u00d710^", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u00a4\u00a4\u00a4", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"SEK"};
goog.i18n.NumberFormatSymbols_sv_SE = goog.i18n.NumberFormatSymbols_sv;
goog.i18n.NumberFormatSymbols_sw = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"TZS"};
goog.i18n.NumberFormatSymbols_sw_TZ = goog.i18n.NumberFormatSymbols_sw;
goog.i18n.NumberFormatSymbols_ta = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_ta_IN = goog.i18n.NumberFormatSymbols_ta;
goog.i18n.NumberFormatSymbols_te = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_te_IN = goog.i18n.NumberFormatSymbols_te;
goog.i18n.NumberFormatSymbols_th = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"THB"};
goog.i18n.NumberFormatSymbols_th_TH = goog.i18n.NumberFormatSymbols_th;
goog.i18n.NumberFormatSymbols_tl = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"PHP"};
goog.i18n.NumberFormatSymbols_tr = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"%#,##0", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4;(#,##0.00\u00a0\u00a4)", DEF_CURRENCY_CODE:"TRY"};
goog.i18n.NumberFormatSymbols_tr_TR = goog.i18n.NumberFormatSymbols_tr;
goog.i18n.NumberFormatSymbols_uk = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"\u0415", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u041d\u0435\u00a0\u0447\u0438\u0441\u043b\u043e", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"UAH"};
goog.i18n.NumberFormatSymbols_uk_UA = goog.i18n.NumberFormatSymbols_uk;
goog.i18n.NumberFormatSymbols_ur = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"PKR"};
goog.i18n.NumberFormatSymbols_ur_PK = goog.i18n.NumberFormatSymbols_ur;
goog.i18n.NumberFormatSymbols_vi = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"VND"};
goog.i18n.NumberFormatSymbols_vi_VN = goog.i18n.NumberFormatSymbols_vi;
goog.i18n.NumberFormatSymbols_zh = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"CNY"};
goog.i18n.NumberFormatSymbols_zh_CN = goog.i18n.NumberFormatSymbols_zh;
goog.i18n.NumberFormatSymbols_zh_HK = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u975e\u6578\u503c", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"HKD"};
goog.i18n.NumberFormatSymbols_zh_Hans_CN = goog.i18n.NumberFormatSymbols_zh;
goog.i18n.NumberFormatSymbols_zh_TW = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u975e\u6578\u503c", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"TWD"};
goog.i18n.NumberFormatSymbols_zu = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"I-NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;(\u00a4#,##0.00)", DEF_CURRENCY_CODE:"ZAR"};
goog.i18n.NumberFormatSymbols_zu_ZA = goog.i18n.NumberFormatSymbols_zu;
goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
if (goog.LOCALE == "af") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_af;
}
if (goog.LOCALE == "af_ZA" || goog.LOCALE == "af-ZA") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_af;
}
if (goog.LOCALE == "am") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_am;
}
if (goog.LOCALE == "am_ET" || goog.LOCALE == "am-ET") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_am;
}
if (goog.LOCALE == "ar") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ar;
}
if (goog.LOCALE == "ar_001" || goog.LOCALE == "ar-001") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ar;
}
if (goog.LOCALE == "ar_EG" || goog.LOCALE == "ar-EG") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ar;
}
if (goog.LOCALE == "bg") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bg;
}
if (goog.LOCALE == "bg_BG" || goog.LOCALE == "bg-BG") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bg;
}
if (goog.LOCALE == "bn") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bn;
}
if (goog.LOCALE == "bn_BD" || goog.LOCALE == "bn-BD") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bn;
}
if (goog.LOCALE == "ca") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ca;
}
if (goog.LOCALE == "ca_AD" || goog.LOCALE == "ca-AD") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ca;
}
if (goog.LOCALE == "ca_ES" || goog.LOCALE == "ca-ES") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ca;
}
if (goog.LOCALE == "cs") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_cs;
}
if (goog.LOCALE == "cs_CZ" || goog.LOCALE == "cs-CZ") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_cs;
}
if (goog.LOCALE == "da") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_da;
}
if (goog.LOCALE == "da_DK" || goog.LOCALE == "da-DK") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_da;
}
if (goog.LOCALE == "de") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de;
}
if (goog.LOCALE == "de_AT" || goog.LOCALE == "de-AT") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de_AT;
}
if (goog.LOCALE == "de_BE" || goog.LOCALE == "de-BE") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de;
}
if (goog.LOCALE == "de_CH" || goog.LOCALE == "de-CH") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de_CH;
}
if (goog.LOCALE == "de_DE" || goog.LOCALE == "de-DE") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de;
}
if (goog.LOCALE == "de_LU" || goog.LOCALE == "de-LU") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de;
}
if (goog.LOCALE == "el") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_el;
}
if (goog.LOCALE == "el_GR" || goog.LOCALE == "el-GR") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_el;
}
if (goog.LOCALE == "en") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if (goog.LOCALE == "en_AS" || goog.LOCALE == "en-AS") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if (goog.LOCALE == "en_AU" || goog.LOCALE == "en-AU") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_AU;
}
if (goog.LOCALE == "en_Dsrt_US" || goog.LOCALE == "en-Dsrt-US") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if (goog.LOCALE == "en_FM" || goog.LOCALE == "en-FM") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if (goog.LOCALE == "en_GB" || goog.LOCALE == "en-GB") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_GB;
}
if (goog.LOCALE == "en_GU" || goog.LOCALE == "en-GU") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if (goog.LOCALE == "en_IE" || goog.LOCALE == "en-IE") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_IE;
}
if (goog.LOCALE == "en_IN" || goog.LOCALE == "en-IN") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_IN;
}
if (goog.LOCALE == "en_MH" || goog.LOCALE == "en-MH") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if (goog.LOCALE == "en_MP" || goog.LOCALE == "en-MP") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if (goog.LOCALE == "en_PR" || goog.LOCALE == "en-PR") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if (goog.LOCALE == "en_PW" || goog.LOCALE == "en-PW") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if (goog.LOCALE == "en_SG" || goog.LOCALE == "en-SG") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_SG;
}
if (goog.LOCALE == "en_TC" || goog.LOCALE == "en-TC") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if (goog.LOCALE == "en_UM" || goog.LOCALE == "en-UM") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if (goog.LOCALE == "en_US" || goog.LOCALE == "en-US") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if (goog.LOCALE == "en_VG" || goog.LOCALE == "en-VG") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if (goog.LOCALE == "en_VI" || goog.LOCALE == "en-VI") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
}
if (goog.LOCALE == "en_ZA" || goog.LOCALE == "en-ZA") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_ZA;
}
if (goog.LOCALE == "es") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es;
}
if (goog.LOCALE == "es_419" || goog.LOCALE == "es-419") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es_419;
}
if (goog.LOCALE == "es_EA" || goog.LOCALE == "es-EA") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es;
}
if (goog.LOCALE == "es_ES" || goog.LOCALE == "es-ES") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es;
}
if (goog.LOCALE == "es_IC" || goog.LOCALE == "es-IC") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es;
}
if (goog.LOCALE == "et") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_et;
}
if (goog.LOCALE == "et_EE" || goog.LOCALE == "et-EE") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_et;
}
if (goog.LOCALE == "eu") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_eu;
}
if (goog.LOCALE == "eu_ES" || goog.LOCALE == "eu-ES") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_eu;
}
if (goog.LOCALE == "fa") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fa;
}
if (goog.LOCALE == "fa_IR" || goog.LOCALE == "fa-IR") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fa;
}
if (goog.LOCALE == "fi") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fi;
}
if (goog.LOCALE == "fi_FI" || goog.LOCALE == "fi-FI") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fi;
}
if (goog.LOCALE == "fil") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fil;
}
if (goog.LOCALE == "fil_PH" || goog.LOCALE == "fil-PH") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fil;
}
if (goog.LOCALE == "fr") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if (goog.LOCALE == "fr_BL" || goog.LOCALE == "fr-BL") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if (goog.LOCALE == "fr_CA" || goog.LOCALE == "fr-CA") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr_CA;
}
if (goog.LOCALE == "fr_FR" || goog.LOCALE == "fr-FR") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if (goog.LOCALE == "fr_GF" || goog.LOCALE == "fr-GF") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if (goog.LOCALE == "fr_GP" || goog.LOCALE == "fr-GP") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if (goog.LOCALE == "fr_MC" || goog.LOCALE == "fr-MC") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if (goog.LOCALE == "fr_MF" || goog.LOCALE == "fr-MF") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if (goog.LOCALE == "fr_MQ" || goog.LOCALE == "fr-MQ") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if (goog.LOCALE == "fr_RE" || goog.LOCALE == "fr-RE") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if (goog.LOCALE == "fr_YT" || goog.LOCALE == "fr-YT") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
}
if (goog.LOCALE == "gl") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gl;
}
if (goog.LOCALE == "gl_ES" || goog.LOCALE == "gl-ES") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gl;
}
if (goog.LOCALE == "gsw") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gsw;
}
if (goog.LOCALE == "gsw_CH" || goog.LOCALE == "gsw-CH") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gsw;
}
if (goog.LOCALE == "gu") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gu;
}
if (goog.LOCALE == "gu_IN" || goog.LOCALE == "gu-IN") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gu;
}
if (goog.LOCALE == "he") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_he;
}
if (goog.LOCALE == "he_IL" || goog.LOCALE == "he-IL") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_he;
}
if (goog.LOCALE == "hi") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hi;
}
if (goog.LOCALE == "hi_IN" || goog.LOCALE == "hi-IN") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hi;
}
if (goog.LOCALE == "hr") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hr;
}
if (goog.LOCALE == "hr_HR" || goog.LOCALE == "hr-HR") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hr;
}
if (goog.LOCALE == "hu") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hu;
}
if (goog.LOCALE == "hu_HU" || goog.LOCALE == "hu-HU") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hu;
}
if (goog.LOCALE == "id") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_id;
}
if (goog.LOCALE == "id_ID" || goog.LOCALE == "id-ID") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_id;
}
if (goog.LOCALE == "in") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_in;
}
if (goog.LOCALE == "is") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_is;
}
if (goog.LOCALE == "is_IS" || goog.LOCALE == "is-IS") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_is;
}
if (goog.LOCALE == "it") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_it;
}
if (goog.LOCALE == "it_IT" || goog.LOCALE == "it-IT") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_it;
}
if (goog.LOCALE == "it_SM" || goog.LOCALE == "it-SM") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_it;
}
if (goog.LOCALE == "iw") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_iw;
}
if (goog.LOCALE == "ja") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ja;
}
if (goog.LOCALE == "ja_JP" || goog.LOCALE == "ja-JP") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ja;
}
if (goog.LOCALE == "kn") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_kn;
}
if (goog.LOCALE == "kn_IN" || goog.LOCALE == "kn-IN") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_kn;
}
if (goog.LOCALE == "ko") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ko;
}
if (goog.LOCALE == "ko_KR" || goog.LOCALE == "ko-KR") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ko;
}
if (goog.LOCALE == "ln") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ln;
}
if (goog.LOCALE == "ln_CD" || goog.LOCALE == "ln-CD") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ln;
}
if (goog.LOCALE == "lt") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lt;
}
if (goog.LOCALE == "lt_LT" || goog.LOCALE == "lt-LT") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lt;
}
if (goog.LOCALE == "lv") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lv;
}
if (goog.LOCALE == "lv_LV" || goog.LOCALE == "lv-LV") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lv;
}
if (goog.LOCALE == "ml") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ml;
}
if (goog.LOCALE == "ml_IN" || goog.LOCALE == "ml-IN") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ml;
}
if (goog.LOCALE == "mr") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mr;
}
if (goog.LOCALE == "mr_IN" || goog.LOCALE == "mr-IN") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mr;
}
if (goog.LOCALE == "ms") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ms;
}
if (goog.LOCALE == "ms_MY" || goog.LOCALE == "ms-MY") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ms;
}
if (goog.LOCALE == "mt") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mt;
}
if (goog.LOCALE == "mt_MT" || goog.LOCALE == "mt-MT") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mt;
}
if (goog.LOCALE == "nl") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_nl;
}
if (goog.LOCALE == "nl_CW" || goog.LOCALE == "nl-CW") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_nl;
}
if (goog.LOCALE == "nl_NL" || goog.LOCALE == "nl-NL") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_nl;
}
if (goog.LOCALE == "nl_SX" || goog.LOCALE == "nl-SX") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_nl;
}
if (goog.LOCALE == "no") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_no;
}
if (goog.LOCALE == "or") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_or;
}
if (goog.LOCALE == "or_IN" || goog.LOCALE == "or-IN") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_or;
}
if (goog.LOCALE == "pl") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pl;
}
if (goog.LOCALE == "pl_PL" || goog.LOCALE == "pl-PL") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pl;
}
if (goog.LOCALE == "pt") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pt;
}
if (goog.LOCALE == "pt_BR" || goog.LOCALE == "pt-BR") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pt;
}
if (goog.LOCALE == "pt_PT" || goog.LOCALE == "pt-PT") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pt_PT;
}
if (goog.LOCALE == "ro") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ro;
}
if (goog.LOCALE == "ro_RO" || goog.LOCALE == "ro-RO") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ro;
}
if (goog.LOCALE == "ru") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ru;
}
if (goog.LOCALE == "ru_RU" || goog.LOCALE == "ru-RU") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ru;
}
if (goog.LOCALE == "sk") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sk;
}
if (goog.LOCALE == "sk_SK" || goog.LOCALE == "sk-SK") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sk;
}
if (goog.LOCALE == "sl") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sl;
}
if (goog.LOCALE == "sl_SI" || goog.LOCALE == "sl-SI") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sl;
}
if (goog.LOCALE == "sq") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sq;
}
if (goog.LOCALE == "sq_AL" || goog.LOCALE == "sq-AL") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sq;
}
if (goog.LOCALE == "sr") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sr;
}
if (goog.LOCALE == "sr_Cyrl_RS" || goog.LOCALE == "sr-Cyrl-RS") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sr;
}
if (goog.LOCALE == "sr_Latn_RS" || goog.LOCALE == "sr-Latn-RS") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sr;
}
if (goog.LOCALE == "sv") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sv;
}
if (goog.LOCALE == "sv_SE" || goog.LOCALE == "sv-SE") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sv;
}
if (goog.LOCALE == "sw") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sw;
}
if (goog.LOCALE == "sw_TZ" || goog.LOCALE == "sw-TZ") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sw;
}
if (goog.LOCALE == "ta") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ta;
}
if (goog.LOCALE == "ta_IN" || goog.LOCALE == "ta-IN") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ta;
}
if (goog.LOCALE == "te") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_te;
}
if (goog.LOCALE == "te_IN" || goog.LOCALE == "te-IN") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_te;
}
if (goog.LOCALE == "th") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_th;
}
if (goog.LOCALE == "th_TH" || goog.LOCALE == "th-TH") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_th;
}
if (goog.LOCALE == "tl") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_tl;
}
if (goog.LOCALE == "tr") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_tr;
}
if (goog.LOCALE == "tr_TR" || goog.LOCALE == "tr-TR") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_tr;
}
if (goog.LOCALE == "uk") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_uk;
}
if (goog.LOCALE == "uk_UA" || goog.LOCALE == "uk-UA") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_uk;
}
if (goog.LOCALE == "ur") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ur;
}
if (goog.LOCALE == "ur_PK" || goog.LOCALE == "ur-PK") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ur;
}
if (goog.LOCALE == "vi") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_vi;
}
if (goog.LOCALE == "vi_VN" || goog.LOCALE == "vi-VN") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_vi;
}
if (goog.LOCALE == "zh") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh;
}
if (goog.LOCALE == "zh_CN" || goog.LOCALE == "zh-CN") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh;
}
if (goog.LOCALE == "zh_HK" || goog.LOCALE == "zh-HK") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh_HK;
}
if (goog.LOCALE == "zh_Hans_CN" || goog.LOCALE == "zh-Hans-CN") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh;
}
if (goog.LOCALE == "zh_TW" || goog.LOCALE == "zh-TW") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh_TW;
}
if (goog.LOCALE == "zu") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zu;
}
if (goog.LOCALE == "zu_ZA" || goog.LOCALE == "zu-ZA") {
  goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zu;
}
;goog.provide("goog.crypt");
goog.require("goog.array");
goog.crypt.stringToByteArray = function(str) {
  var output = [], p = 0;
  for (var i = 0;i < str.length;i++) {
    var c = str.charCodeAt(i);
    while (c > 255) {
      output[p++] = c & 255;
      c >>= 8;
    }
    output[p++] = c;
  }
  return output;
};
goog.crypt.byteArrayToString = function(array) {
  return String.fromCharCode.apply(null, array);
};
goog.crypt.byteArrayToHex = function(array) {
  return goog.array.map(array, function(numByte) {
    var hexByte = numByte.toString(16);
    return hexByte.length > 1 ? hexByte : "0" + hexByte;
  }).join("");
};
goog.crypt.hexToByteArray = function(hexString) {
  goog.asserts.assert(hexString.length % 2 == 0, "Key string length must be multiple of 2");
  var arr = [];
  for (var i = 0;i < hexString.length;i += 2) {
    arr.push(parseInt(hexString.substring(i, i + 2), 16));
  }
  return arr;
};
goog.crypt.stringToUtf8ByteArray = function(str) {
  str = str.replace(/\r\n/g, "\n");
  var out = [], p = 0;
  for (var i = 0;i < str.length;i++) {
    var c = str.charCodeAt(i);
    if (c < 128) {
      out[p++] = c;
    } else {
      if (c < 2048) {
        out[p++] = c >> 6 | 192;
        out[p++] = c & 63 | 128;
      } else {
        out[p++] = c >> 12 | 224;
        out[p++] = c >> 6 & 63 | 128;
        out[p++] = c & 63 | 128;
      }
    }
  }
  return out;
};
goog.crypt.utf8ByteArrayToString = function(bytes) {
  var out = [], pos = 0, c = 0;
  while (pos < bytes.length) {
    var c1 = bytes[pos++];
    if (c1 < 128) {
      out[c++] = String.fromCharCode(c1);
    } else {
      if (c1 > 191 && c1 < 224) {
        var c2 = bytes[pos++];
        out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);
      } else {
        var c2 = bytes[pos++];
        var c3 = bytes[pos++];
        out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
      }
    }
  }
  return out.join("");
};
goog.crypt.xorByteArray = function(bytes1, bytes2) {
  goog.asserts.assert(bytes1.length == bytes2.length, "XOR array lengths must match");
  var result = [];
  for (var i = 0;i < bytes1.length;i++) {
    result.push(bytes1[i] ^ bytes2[i]);
  }
  return result;
};
goog.provide("goog.i18n.currency");
goog.i18n.currency.PRECISION_MASK_ = 7;
goog.i18n.currency.POSITION_FLAG_ = 8;
goog.i18n.currency.SPACE_FLAG_ = 32;
goog.i18n.currency.addTier2Support = function() {
  for (var key in goog.i18n.currency.CurrencyInfoTier2) {
    goog.i18n.currency.CurrencyInfo[key] = goog.i18n.currency.CurrencyInfoTier2[key];
  }
};
goog.i18n.currency.getGlobalCurrencyPattern = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  var patternNum = info[0];
  if (currencyCode == info[1]) {
    return goog.i18n.currency.getCurrencyPattern_(patternNum, info[1]);
  }
  return currencyCode + " " + goog.i18n.currency.getCurrencyPattern_(patternNum, info[1]);
};
goog.i18n.currency.getGlobalCurrencySign = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  return currencyCode == info[1] ? currencyCode : currencyCode + " " + info[1];
};
goog.i18n.currency.getLocalCurrencyPattern = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  return goog.i18n.currency.getCurrencyPattern_(info[0], info[1]);
};
goog.i18n.currency.getLocalCurrencySign = function(currencyCode) {
  return goog.i18n.currency.CurrencyInfo[currencyCode][1];
};
goog.i18n.currency.getPortableCurrencyPattern = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  return goog.i18n.currency.getCurrencyPattern_(info[0], info[2]);
};
goog.i18n.currency.getPortableCurrencySign = function(currencyCode) {
  return goog.i18n.currency.CurrencyInfo[currencyCode][2];
};
goog.i18n.currency.isPrefixSignPosition = function(currencyCode) {
  return(goog.i18n.currency.CurrencyInfo[currencyCode][0] & goog.i18n.currency.POSITION_FLAG_) == 0;
};
goog.i18n.currency.getCurrencyPattern_ = function(patternNum, sign) {
  var strParts = ["#,##0"];
  var precision = patternNum & goog.i18n.currency.PRECISION_MASK_;
  if (precision > 0) {
    strParts.push(".");
    for (var i = 0;i < precision;i++) {
      strParts.push("0");
    }
  }
  if ((patternNum & goog.i18n.currency.POSITION_FLAG_) == 0) {
    strParts.unshift(patternNum & goog.i18n.currency.SPACE_FLAG_ ? "' " : "'");
    strParts.unshift(sign);
    strParts.unshift("'");
  } else {
    strParts.push(patternNum & goog.i18n.currency.SPACE_FLAG_ ? " '" : "'", sign, "'");
  }
  return strParts.join("");
};
goog.i18n.currency.adjustPrecision = function(pattern, currencyCode) {
  var strParts = ["0"];
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  var precision = info[0] & goog.i18n.currency.PRECISION_MASK_;
  if (precision > 0) {
    strParts.push(".");
    for (var i = 0;i < precision;i++) {
      strParts.push("0");
    }
  }
  return pattern.replace(/0.00/g, strParts.join(""));
};
goog.i18n.currency.CurrencyInfo = {"AED":[2, "dh", "\u062f.\u0625.", "DH"], "AUD":[2, "$", "AU$"], "BDT":[2, "\u09f3", "Tk"], "BRL":[2, "R$", "R$"], "CAD":[2, "$", "C$"], "CHF":[2, "CHF", "CHF"], "CLP":[0, "$", "CL$"], "CNY":[2, "\u00a5", "RMB\u00a5"], "COP":[0, "$", "COL$"], "CRC":[0, "\u20a1", "CR\u20a1"], "CZK":[2, "K\u010d", "K\u010d"], "DKK":[18, "kr", "kr"], "DOP":[2, "$", "RD$"], "EGP":[2, "\u00a3", "LE"], "EUR":[18, "\u20ac", "\u20ac"], "GBP":[2, "\u00a3", "GB\u00a3"], "HKD":[2, "$", "HK$"], 
"ILS":[2, "\u20aa", "IL\u20aa"], "INR":[2, "\u20b9", "Rs"], "ISK":[0, "kr", "kr"], "JMD":[2, "$", "JA$"], "JPY":[0, "\u00a5", "JP\u00a5"], "KRW":[0, "\u20a9", "KR\u20a9"], "LKR":[2, "Rs", "SLRs"], "MNT":[0, "\u20ae", "MN\u20ae"], "MXN":[2, "$", "Mex$"], "MYR":[2, "RM", "RM"], "NOK":[18, "kr", "NOkr"], "PAB":[2, "B/.", "B/."], "PEN":[2, "S/.", "S/."], "PHP":[2, "\u20b1", "Php"], "PKR":[0, "Rs", "PKRs."], "RUB":[42, "\u0440\u0443\u0431.", "\u0440\u0443\u0431."], "SAR":[2, "Rial", "Rial"], "SEK":[2, 
"kr", "kr"], "SGD":[2, "$", "S$"], "THB":[2, "\u0e3f", "THB"], "TRY":[2, "TL", "YTL"], "TWD":[2, "NT$", "NT$"], "USD":[2, "$", "US$"], "UYU":[2, "$", "UY$"], "VND":[0, "\u20ab", "VN\u20ab"], "YER":[0, "Rial", "Rial"], "ZAR":[2, "R", "ZAR"]};
goog.i18n.currency.CurrencyInfoTier2 = {"AFN":[16, "Af.", "AFN"], "ALL":[0, "Lek", "Lek"], "AMD":[0, "Dram", "dram"], "AOA":[2, "Kz", "Kz"], "ARS":[2, "$", "AR$"], "AWG":[2, "Afl.", "Afl."], "AZN":[2, "man.", "man."], "BAM":[18, "KM", "KM"], "BBD":[2, "$", "Bds$"], "BGN":[2, "lev", "lev"], "BHD":[3, "din", "din"], "BIF":[0, "FBu", "FBu"], "BMD":[2, "$", "BD$"], "BND":[2, "$", "B$"], "BOB":[2, "Bs", "Bs"], "BSD":[2, "$", "BS$"], "BTN":[2, "Nu.", "Nu."], "BWP":[2, "P", "pula"], "BYR":[0, "BYR", "BYR"], 
"BZD":[2, "$", "BZ$"], "CDF":[2, "FrCD", "CDF"], "CUC":[1, "$", "CUC$"], "CUP":[2, "$", "CU$"], "CVE":[2, "CVE", "Esc"], "DJF":[0, "Fdj", "Fdj"], "DZD":[2, "din", "din"], "ERN":[2, "Nfk", "Nfk"], "ETB":[2, "Birr", "Birr"], "FJD":[2, "$", "FJ$"], "FKP":[2, "\u00a3", "FK\u00a3"], "GEL":[2, "GEL", "GEL"], "GHS":[2, "GHS", "GHS"], "GIP":[2, "\u00a3", "GI\u00a3"], "GMD":[2, "GMD", "GMD"], "GNF":[0, "FG", "FG"], "GTQ":[2, "Q", "GTQ"], "GYD":[0, "$", "GY$"], "HNL":[2, "L", "HNL"], "HRK":[2, "kn", "kn"], 
"HTG":[2, "HTG", "HTG"], "HUF":[0, "Ft", "Ft"], "IDR":[0, "Rp", "Rp"], "IQD":[0, "din", "IQD"], "IRR":[0, "Rial", "IRR"], "JOD":[3, "din", "JOD"], "KES":[2, "Ksh", "Ksh"], "KGS":[2, "KGS", "KGS"], "KHR":[2, "Riel", "KHR"], "KMF":[0, "CF", "KMF"], "KPW":[0, "\u20a9KP", "KPW"], "KWD":[3, "din", "KWD"], "KYD":[2, "$", "KY$"], "KZT":[2, "\u20b8", "KZT"], "LAK":[0, "\u20ad", "\u20ad"], "LBP":[0, "L\u00a3", "LBP"], "LRD":[2, "$", "L$"], "LSL":[2, "LSL", "LSL"], "LTL":[2, "Lt", "Lt"], "LVL":[2, "Ls", "Ls"], 
"LYD":[3, "din", "LD"], "MAD":[2, "dh", "MAD"], "MDL":[2, "MDL", "MDL"], "MGA":[0, "Ar", "MGA"], "MKD":[2, "din", "MKD"], "MMK":[0, "K", "MMK"], "MOP":[2, "MOP", "MOP$"], "MRO":[0, "MRO", "MRO"], "MUR":[0, "MURs", "MURs"], "MWK":[2, "MWK", "MWK"], "MZN":[2, "MTn", "MTn"], "NAD":[2, "$", "N$"], "NGN":[2, "\u20a6", "NG\u20a6"], "NIO":[2, "C$", "C$"], "NPR":[2, "Rs", "NPRs"], "NZD":[2, "$", "NZ$"], "OMR":[3, "Rial", "OMR"], "PGK":[2, "PGK", "PGK"], "PLN":[2, "z\u0142", "z\u0142"], "PYG":[0, "Gs", "PYG"], 
"QAR":[2, "Rial", "QR"], "RON":[2, "RON", "RON"], "RSD":[0, "din", "RSD"], "RWF":[0, "RF", "RF"], "SBD":[2, "$", "SI$"], "SCR":[2, "SCR", "SCR"], "SDG":[2, "SDG", "SDG"], "SHP":[2, "\u00a3", "SH\u00a3"], "SLL":[0, "SLL", "SLL"], "SOS":[0, "SOS", "SOS"], "SRD":[2, "$", "SR$"], "STD":[0, "Db", "Db"], "SYP":[16, "\u00a3", "SY\u00a3"], "SZL":[2, "SZL", "SZL"], "TJS":[2, "Som", "TJS"], "TND":[3, "din", "DT"], "TOP":[2, "T$", "T$"], "TTD":[2, "$", "TT$"], "TZS":[0, "TSh", "TSh"], "UAH":[2, "\u20b4", "UAH"], 
"UGX":[0, "UGX", "UGX"], "UYU":[1, "$", "$U"], "UZS":[0, "so\u02bcm", "UZS"], "VEF":[2, "Bs", "Bs"], "VUV":[0, "VUV", "VUV"], "WST":[2, "WST", "WST"], "XAF":[0, "FCFA", "FCFA"], "XCD":[2, "$", "EC$"], "XOF":[0, "CFA", "CFA"], "XPF":[0, "FCFP", "FCFP"], "ZMK":[0, "ZMK", "ZMK"]};
goog.provide("goog.i18n.NumberFormat");
goog.provide("goog.i18n.NumberFormat.CurrencyStyle");
goog.provide("goog.i18n.NumberFormat.Format");
goog.require("goog.i18n.NumberFormatSymbols");
goog.require("goog.i18n.currency");
goog.i18n.NumberFormat = function(pattern, opt_currency, opt_currencyStyle) {
  this.intlCurrencyCode_ = opt_currency || goog.i18n.NumberFormatSymbols.DEF_CURRENCY_CODE;
  this.currencyStyle_ = opt_currencyStyle || goog.i18n.NumberFormat.CurrencyStyle.LOCAL;
  this.maximumIntegerDigits_ = 40;
  this.minimumIntegerDigits_ = 1;
  this.maximumFractionDigits_ = 3;
  this.minimumFractionDigits_ = 0;
  this.minExponentDigits_ = 0;
  this.useSignForPositiveExponent_ = false;
  this.positivePrefix_ = "";
  this.positiveSuffix_ = "";
  this.negativePrefix_ = "-";
  this.negativeSuffix_ = "";
  this.multiplier_ = 1;
  this.groupingSize_ = 3;
  this.decimalSeparatorAlwaysShown_ = false;
  this.useExponentialNotation_ = false;
  if (typeof pattern == "number") {
    this.applyStandardPattern_(pattern);
  } else {
    this.applyPattern_(pattern);
  }
};
goog.i18n.NumberFormat.Format = {DECIMAL:1, SCIENTIFIC:2, PERCENT:3, CURRENCY:4};
goog.i18n.NumberFormat.CurrencyStyle = {LOCAL:0, PORTABLE:1, GLOBAL:2};
goog.i18n.NumberFormat.enforceAsciiDigits_ = false;
goog.i18n.NumberFormat.setEnforceAsciiDigits = function(doEnforce) {
  goog.i18n.NumberFormat.enforceAsciiDigits_ = doEnforce;
};
goog.i18n.NumberFormat.isEnforceAsciiDigits = function() {
  return goog.i18n.NumberFormat.enforceAsciiDigits_;
};
goog.i18n.NumberFormat.prototype.setMinimumFractionDigits = function(min) {
  if (min > this.maximumFractionDigits_) {
    throw Error("Min value must be less than max value");
  }
  this.minimumFractionDigits_ = min;
};
goog.i18n.NumberFormat.prototype.setMaximumFractionDigits = function(max) {
  if (this.minimumFractionDigits_ > max) {
    throw Error("Min value must be less than max value");
  }
  this.maximumFractionDigits_ = max;
};
goog.i18n.NumberFormat.prototype.applyPattern_ = function(pattern) {
  this.pattern_ = pattern.replace(/ /g, "\u00a0");
  var pos = [0];
  this.positivePrefix_ = this.parseAffix_(pattern, pos);
  var trunkStart = pos[0];
  this.parseTrunk_(pattern, pos);
  var trunkLen = pos[0] - trunkStart;
  this.positiveSuffix_ = this.parseAffix_(pattern, pos);
  if (pos[0] < pattern.length && pattern.charAt(pos[0]) == goog.i18n.NumberFormat.PATTERN_SEPARATOR_) {
    pos[0]++;
    this.negativePrefix_ = this.parseAffix_(pattern, pos);
    pos[0] += trunkLen;
    this.negativeSuffix_ = this.parseAffix_(pattern, pos);
  } else {
    this.negativePrefix_ = this.positivePrefix_ + this.negativePrefix_;
    this.negativeSuffix_ += this.positiveSuffix_;
  }
};
goog.i18n.NumberFormat.prototype.applyStandardPattern_ = function(patternType) {
  switch(patternType) {
    case goog.i18n.NumberFormat.Format.DECIMAL:
      this.applyPattern_(goog.i18n.NumberFormatSymbols.DECIMAL_PATTERN);
      break;
    case goog.i18n.NumberFormat.Format.SCIENTIFIC:
      this.applyPattern_(goog.i18n.NumberFormatSymbols.SCIENTIFIC_PATTERN);
      break;
    case goog.i18n.NumberFormat.Format.PERCENT:
      this.applyPattern_(goog.i18n.NumberFormatSymbols.PERCENT_PATTERN);
      break;
    case goog.i18n.NumberFormat.Format.CURRENCY:
      this.applyPattern_(goog.i18n.currency.adjustPrecision(goog.i18n.NumberFormatSymbols.CURRENCY_PATTERN, this.intlCurrencyCode_));
      break;
    default:
      throw Error("Unsupported pattern type.");;
  }
};
goog.i18n.NumberFormat.prototype.parse = function(text, opt_pos) {
  var pos = opt_pos || [0];
  var start = pos[0];
  var ret = NaN;
  text = text.replace(/ /g, "\u00a0");
  var gotPositive = text.indexOf(this.positivePrefix_, pos[0]) == pos[0];
  var gotNegative = text.indexOf(this.negativePrefix_, pos[0]) == pos[0];
  if (gotPositive && gotNegative) {
    if (this.positivePrefix_.length > this.negativePrefix_.length) {
      gotNegative = false;
    } else {
      if (this.positivePrefix_.length < this.negativePrefix_.length) {
        gotPositive = false;
      }
    }
  }
  if (gotPositive) {
    pos[0] += this.positivePrefix_.length;
  } else {
    if (gotNegative) {
      pos[0] += this.negativePrefix_.length;
    }
  }
  if (text.indexOf(goog.i18n.NumberFormatSymbols.INFINITY, pos[0]) == pos[0]) {
    pos[0] += goog.i18n.NumberFormatSymbols.INFINITY.length;
    ret = Infinity;
  } else {
    ret = this.parseNumber_(text, pos);
  }
  if (gotPositive) {
    if (!(text.indexOf(this.positiveSuffix_, pos[0]) == pos[0])) {
      return NaN;
    }
    pos[0] += this.positiveSuffix_.length;
  } else {
    if (gotNegative) {
      if (!(text.indexOf(this.negativeSuffix_, pos[0]) == pos[0])) {
        return NaN;
      }
      pos[0] += this.negativeSuffix_.length;
    }
  }
  return gotNegative ? -ret : ret;
};
goog.i18n.NumberFormat.prototype.parseNumber_ = function(text, pos) {
  var sawDecimal = false;
  var sawExponent = false;
  var sawDigit = false;
  var scale = 1;
  var decimal = goog.i18n.NumberFormatSymbols.DECIMAL_SEP;
  var grouping = goog.i18n.NumberFormatSymbols.GROUP_SEP;
  var exponentChar = goog.i18n.NumberFormatSymbols.EXP_SYMBOL;
  var normalizedText = "";
  for (;pos[0] < text.length;pos[0]++) {
    var ch = text.charAt(pos[0]);
    var digit = this.getDigit_(ch);
    if (digit >= 0 && digit <= 9) {
      normalizedText += digit;
      sawDigit = true;
    } else {
      if (ch == decimal.charAt(0)) {
        if (sawDecimal || sawExponent) {
          break;
        }
        normalizedText += ".";
        sawDecimal = true;
      } else {
        if (ch == grouping.charAt(0) && ("\u00a0" != grouping.charAt(0) || pos[0] + 1 < text.length && this.getDigit_(text.charAt(pos[0] + 1)) >= 0)) {
          if (sawDecimal || sawExponent) {
            break;
          }
          continue;
        } else {
          if (ch == exponentChar.charAt(0)) {
            if (sawExponent) {
              break;
            }
            normalizedText += "E";
            sawExponent = true;
          } else {
            if (ch == "+" || ch == "-") {
              normalizedText += ch;
            } else {
              if (ch == goog.i18n.NumberFormatSymbols.PERCENT.charAt(0)) {
                if (scale != 1) {
                  break;
                }
                scale = 100;
                if (sawDigit) {
                  pos[0]++;
                  break;
                }
              } else {
                if (ch == goog.i18n.NumberFormatSymbols.PERMILL.charAt(0)) {
                  if (scale != 1) {
                    break;
                  }
                  scale = 1E3;
                  if (sawDigit) {
                    pos[0]++;
                    break;
                  }
                } else {
                  break;
                }
              }
            }
          }
        }
      }
    }
  }
  return parseFloat(normalizedText) / scale;
};
goog.i18n.NumberFormat.prototype.format = function(number) {
  if (isNaN(number)) {
    return goog.i18n.NumberFormatSymbols.NAN;
  }
  var parts = [];
  var isNegative = number < 0 || number == 0 && 1 / number < 0;
  parts.push(isNegative ? this.negativePrefix_ : this.positivePrefix_);
  if (!isFinite(number)) {
    parts.push(goog.i18n.NumberFormatSymbols.INFINITY);
  } else {
    number *= isNegative ? -1 : 1;
    number *= this.multiplier_;
    this.useExponentialNotation_ ? this.subformatExponential_(number, parts) : this.subformatFixed_(number, this.minimumIntegerDigits_, parts);
  }
  parts.push(isNegative ? this.negativeSuffix_ : this.positiveSuffix_);
  return parts.join("");
};
goog.i18n.NumberFormat.prototype.subformatFixed_ = function(number, minIntDigits, parts) {
  var power = Math.pow(10, this.maximumFractionDigits_);
  var shiftedNumber = Math.round(number * power);
  var intValue, fracValue;
  if (isFinite(shiftedNumber)) {
    intValue = Math.floor(shiftedNumber / power);
    fracValue = Math.floor(shiftedNumber - intValue * power);
  } else {
    intValue = number;
    fracValue = 0;
  }
  var fractionPresent = this.minimumFractionDigits_ > 0 || fracValue > 0;
  var intPart = "";
  var translatableInt = intValue;
  while (translatableInt > 1E20) {
    intPart = "0" + intPart;
    translatableInt = Math.round(translatableInt / 10);
  }
  intPart = translatableInt + intPart;
  var decimal = goog.i18n.NumberFormatSymbols.DECIMAL_SEP;
  var grouping = goog.i18n.NumberFormatSymbols.GROUP_SEP;
  var zeroCode = goog.i18n.NumberFormat.enforceAsciiDigits_ ? 48 : goog.i18n.NumberFormatSymbols.ZERO_DIGIT.charCodeAt(0);
  var digitLen = intPart.length;
  if (intValue > 0 || minIntDigits > 0) {
    for (var i = digitLen;i < minIntDigits;i++) {
      parts.push(String.fromCharCode(zeroCode));
    }
    for (var i = 0;i < digitLen;i++) {
      parts.push(String.fromCharCode(zeroCode + intPart.charAt(i) * 1));
      if (digitLen - i > 1 && (this.groupingSize_ > 0 && (digitLen - i) % this.groupingSize_ == 1)) {
        parts.push(grouping);
      }
    }
  } else {
    if (!fractionPresent) {
      parts.push(String.fromCharCode(zeroCode));
    }
  }
  if (this.decimalSeparatorAlwaysShown_ || fractionPresent) {
    parts.push(decimal);
  }
  var fracPart = "" + (fracValue + power);
  var fracLen = fracPart.length;
  while (fracPart.charAt(fracLen - 1) == "0" && fracLen > this.minimumFractionDigits_ + 1) {
    fracLen--;
  }
  for (var i = 1;i < fracLen;i++) {
    parts.push(String.fromCharCode(zeroCode + fracPart.charAt(i) * 1));
  }
};
goog.i18n.NumberFormat.prototype.addExponentPart_ = function(exponent, parts) {
  parts.push(goog.i18n.NumberFormatSymbols.EXP_SYMBOL);
  if (exponent < 0) {
    exponent = -exponent;
    parts.push(goog.i18n.NumberFormatSymbols.MINUS_SIGN);
  } else {
    if (this.useSignForPositiveExponent_) {
      parts.push(goog.i18n.NumberFormatSymbols.PLUS_SIGN);
    }
  }
  var exponentDigits = "" + exponent;
  var zeroChar = goog.i18n.NumberFormat.enforceAsciiDigits_ ? "0" : goog.i18n.NumberFormatSymbols.ZERO_DIGIT;
  for (var i = exponentDigits.length;i < this.minExponentDigits_;i++) {
    parts.push(zeroChar);
  }
  parts.push(exponentDigits);
};
goog.i18n.NumberFormat.prototype.subformatExponential_ = function(number, parts) {
  if (number == 0) {
    this.subformatFixed_(number, this.minimumIntegerDigits_, parts);
    this.addExponentPart_(0, parts);
    return;
  }
  var exponent = Math.floor(Math.log(number) / Math.log(10));
  number /= Math.pow(10, exponent);
  var minIntDigits = this.minimumIntegerDigits_;
  if (this.maximumIntegerDigits_ > 1 && this.maximumIntegerDigits_ > this.minimumIntegerDigits_) {
    while (exponent % this.maximumIntegerDigits_ != 0) {
      number *= 10;
      exponent--;
    }
    minIntDigits = 1;
  } else {
    if (this.minimumIntegerDigits_ < 1) {
      exponent++;
      number /= 10;
    } else {
      exponent -= this.minimumIntegerDigits_ - 1;
      number *= Math.pow(10, this.minimumIntegerDigits_ - 1);
    }
  }
  this.subformatFixed_(number, minIntDigits, parts);
  this.addExponentPart_(exponent, parts);
};
goog.i18n.NumberFormat.prototype.getDigit_ = function(ch) {
  var code = ch.charCodeAt(0);
  if (48 <= code && code < 58) {
    return code - 48;
  } else {
    var zeroCode = goog.i18n.NumberFormatSymbols.ZERO_DIGIT.charCodeAt(0);
    return zeroCode <= code && code < zeroCode + 10 ? code - zeroCode : -1;
  }
};
goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_ = "0";
goog.i18n.NumberFormat.PATTERN_GROUPING_SEPARATOR_ = ",";
goog.i18n.NumberFormat.PATTERN_DECIMAL_SEPARATOR_ = ".";
goog.i18n.NumberFormat.PATTERN_PER_MILLE_ = "\u2030";
goog.i18n.NumberFormat.PATTERN_PERCENT_ = "%";
goog.i18n.NumberFormat.PATTERN_DIGIT_ = "#";
goog.i18n.NumberFormat.PATTERN_SEPARATOR_ = ";";
goog.i18n.NumberFormat.PATTERN_EXPONENT_ = "E";
goog.i18n.NumberFormat.PATTERN_PLUS_ = "+";
goog.i18n.NumberFormat.PATTERN_MINUS_ = "-";
goog.i18n.NumberFormat.PATTERN_CURRENCY_SIGN_ = "\u00a4";
goog.i18n.NumberFormat.QUOTE_ = "'";
goog.i18n.NumberFormat.prototype.parseAffix_ = function(pattern, pos) {
  var affix = "";
  var inQuote = false;
  var len = pattern.length;
  for (;pos[0] < len;pos[0]++) {
    var ch = pattern.charAt(pos[0]);
    if (ch == goog.i18n.NumberFormat.QUOTE_) {
      if (pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.QUOTE_) {
        pos[0]++;
        affix += "'";
      } else {
        inQuote = !inQuote;
      }
      continue;
    }
    if (inQuote) {
      affix += ch;
    } else {
      switch(ch) {
        case goog.i18n.NumberFormat.PATTERN_DIGIT_:
        ;
        case goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_:
        ;
        case goog.i18n.NumberFormat.PATTERN_GROUPING_SEPARATOR_:
        ;
        case goog.i18n.NumberFormat.PATTERN_DECIMAL_SEPARATOR_:
        ;
        case goog.i18n.NumberFormat.PATTERN_SEPARATOR_:
          return affix;
        case goog.i18n.NumberFormat.PATTERN_CURRENCY_SIGN_:
          if (pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.PATTERN_CURRENCY_SIGN_) {
            pos[0]++;
            affix += this.intlCurrencyCode_;
          } else {
            switch(this.currencyStyle_) {
              case goog.i18n.NumberFormat.CurrencyStyle.LOCAL:
                affix += goog.i18n.currency.getLocalCurrencySign(this.intlCurrencyCode_);
                break;
              case goog.i18n.NumberFormat.CurrencyStyle.GLOBAL:
                affix += goog.i18n.currency.getGlobalCurrencySign(this.intlCurrencyCode_);
                break;
              case goog.i18n.NumberFormat.CurrencyStyle.PORTABLE:
                affix += goog.i18n.currency.getPortableCurrencySign(this.intlCurrencyCode_);
                break;
              default:
                break;
            }
          }
          break;
        case goog.i18n.NumberFormat.PATTERN_PERCENT_:
          if (this.multiplier_ != 1) {
            throw Error("Too many percent/permill");
          }
          this.multiplier_ = 100;
          affix += goog.i18n.NumberFormatSymbols.PERCENT;
          break;
        case goog.i18n.NumberFormat.PATTERN_PER_MILLE_:
          if (this.multiplier_ != 1) {
            throw Error("Too many percent/permill");
          }
          this.multiplier_ = 1E3;
          affix += goog.i18n.NumberFormatSymbols.PERMILL;
          break;
        default:
          affix += ch;
      }
    }
  }
  return affix;
};
goog.i18n.NumberFormat.prototype.parseTrunk_ = function(pattern, pos) {
  var decimalPos = -1;
  var digitLeftCount = 0;
  var zeroDigitCount = 0;
  var digitRightCount = 0;
  var groupingCount = -1;
  var len = pattern.length;
  for (var loop = true;pos[0] < len && loop;pos[0]++) {
    var ch = pattern.charAt(pos[0]);
    switch(ch) {
      case goog.i18n.NumberFormat.PATTERN_DIGIT_:
        if (zeroDigitCount > 0) {
          digitRightCount++;
        } else {
          digitLeftCount++;
        }
        if (groupingCount >= 0 && decimalPos < 0) {
          groupingCount++;
        }
        break;
      case goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_:
        if (digitRightCount > 0) {
          throw Error('Unexpected "0" in pattern "' + pattern + '"');
        }
        zeroDigitCount++;
        if (groupingCount >= 0 && decimalPos < 0) {
          groupingCount++;
        }
        break;
      case goog.i18n.NumberFormat.PATTERN_GROUPING_SEPARATOR_:
        groupingCount = 0;
        break;
      case goog.i18n.NumberFormat.PATTERN_DECIMAL_SEPARATOR_:
        if (decimalPos >= 0) {
          throw Error('Multiple decimal separators in pattern "' + pattern + '"');
        }
        decimalPos = digitLeftCount + zeroDigitCount + digitRightCount;
        break;
      case goog.i18n.NumberFormat.PATTERN_EXPONENT_:
        if (this.useExponentialNotation_) {
          throw Error('Multiple exponential symbols in pattern "' + pattern + '"');
        }
        this.useExponentialNotation_ = true;
        this.minExponentDigits_ = 0;
        if (pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.PATTERN_PLUS_) {
          pos[0]++;
          this.useSignForPositiveExponent_ = true;
        }
        while (pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_) {
          pos[0]++;
          this.minExponentDigits_++;
        }
        if (digitLeftCount + zeroDigitCount < 1 || this.minExponentDigits_ < 1) {
          throw Error('Malformed exponential pattern "' + pattern + '"');
        }
        loop = false;
        break;
      default:
        pos[0]--;
        loop = false;
        break;
    }
  }
  if (zeroDigitCount == 0 && (digitLeftCount > 0 && decimalPos >= 0)) {
    var n = decimalPos;
    if (n == 0) {
      n++;
    }
    digitRightCount = digitLeftCount - n;
    digitLeftCount = n - 1;
    zeroDigitCount = 1;
  }
  if (decimalPos < 0 && digitRightCount > 0 || (decimalPos >= 0 && (decimalPos < digitLeftCount || decimalPos > digitLeftCount + zeroDigitCount) || groupingCount == 0)) {
    throw Error('Malformed pattern "' + pattern + '"');
  }
  var totalDigits = digitLeftCount + zeroDigitCount + digitRightCount;
  this.maximumFractionDigits_ = decimalPos >= 0 ? totalDigits - decimalPos : 0;
  if (decimalPos >= 0) {
    this.minimumFractionDigits_ = digitLeftCount + zeroDigitCount - decimalPos;
    if (this.minimumFractionDigits_ < 0) {
      this.minimumFractionDigits_ = 0;
    }
  }
  var effectiveDecimalPos = decimalPos >= 0 ? decimalPos : totalDigits;
  this.minimumIntegerDigits_ = effectiveDecimalPos - digitLeftCount;
  if (this.useExponentialNotation_) {
    this.maximumIntegerDigits_ = digitLeftCount + this.minimumIntegerDigits_;
    if (this.maximumFractionDigits_ == 0 && this.minimumIntegerDigits_ == 0) {
      this.minimumIntegerDigits_ = 1;
    }
  }
  this.groupingSize_ = Math.max(0, groupingCount);
  this.decimalSeparatorAlwaysShown_ = decimalPos == 0 || decimalPos == totalDigits;
};
goog.provide("goog.crypt.Hash");
goog.crypt.Hash = function() {
};
goog.crypt.Hash.prototype.reset = goog.abstractMethod;
goog.crypt.Hash.prototype.update = goog.abstractMethod;
goog.crypt.Hash.prototype.digest = goog.abstractMethod;
goog.provide("goog.crypt.Md5");
goog.require("goog.crypt.Hash");
goog.crypt.Md5 = function() {
  goog.base(this);
  this.chain_ = new Array(4);
  this.block_ = new Array(64);
  this.blockLength_ = 0;
  this.totalLength_ = 0;
  this.reset();
};
goog.inherits(goog.crypt.Md5, goog.crypt.Hash);
goog.crypt.Md5.prototype.reset = function() {
  this.chain_[0] = 1732584193;
  this.chain_[1] = 4023233417;
  this.chain_[2] = 2562383102;
  this.chain_[3] = 271733878;
  this.blockLength_ = 0;
  this.totalLength_ = 0;
};
goog.crypt.Md5.prototype.compress_ = function(buf, opt_offset) {
  if (!opt_offset) {
    opt_offset = 0;
  }
  var X = new Array(16);
  if (goog.isString(buf)) {
    for (var i = 0;i < 16;++i) {
      X[i] = buf.charCodeAt(opt_offset++) | buf.charCodeAt(opt_offset++) << 8 | buf.charCodeAt(opt_offset++) << 16 | buf.charCodeAt(opt_offset++) << 24;
    }
  } else {
    for (var i = 0;i < 16;++i) {
      X[i] = buf[opt_offset++] | buf[opt_offset++] << 8 | buf[opt_offset++] << 16 | buf[opt_offset++] << 24;
    }
  }
  var A = this.chain_[0];
  var B = this.chain_[1];
  var C = this.chain_[2];
  var D = this.chain_[3];
  var sum = 0;
  sum = A + (D ^ B & (C ^ D)) + X[0] + 3614090360 & 4294967295;
  A = B + (sum << 7 & 4294967295 | sum >>> 25);
  sum = D + (C ^ A & (B ^ C)) + X[1] + 3905402710 & 4294967295;
  D = A + (sum << 12 & 4294967295 | sum >>> 20);
  sum = C + (B ^ D & (A ^ B)) + X[2] + 606105819 & 4294967295;
  C = D + (sum << 17 & 4294967295 | sum >>> 15);
  sum = B + (A ^ C & (D ^ A)) + X[3] + 3250441966 & 4294967295;
  B = C + (sum << 22 & 4294967295 | sum >>> 10);
  sum = A + (D ^ B & (C ^ D)) + X[4] + 4118548399 & 4294967295;
  A = B + (sum << 7 & 4294967295 | sum >>> 25);
  sum = D + (C ^ A & (B ^ C)) + X[5] + 1200080426 & 4294967295;
  D = A + (sum << 12 & 4294967295 | sum >>> 20);
  sum = C + (B ^ D & (A ^ B)) + X[6] + 2821735955 & 4294967295;
  C = D + (sum << 17 & 4294967295 | sum >>> 15);
  sum = B + (A ^ C & (D ^ A)) + X[7] + 4249261313 & 4294967295;
  B = C + (sum << 22 & 4294967295 | sum >>> 10);
  sum = A + (D ^ B & (C ^ D)) + X[8] + 1770035416 & 4294967295;
  A = B + (sum << 7 & 4294967295 | sum >>> 25);
  sum = D + (C ^ A & (B ^ C)) + X[9] + 2336552879 & 4294967295;
  D = A + (sum << 12 & 4294967295 | sum >>> 20);
  sum = C + (B ^ D & (A ^ B)) + X[10] + 4294925233 & 4294967295;
  C = D + (sum << 17 & 4294967295 | sum >>> 15);
  sum = B + (A ^ C & (D ^ A)) + X[11] + 2304563134 & 4294967295;
  B = C + (sum << 22 & 4294967295 | sum >>> 10);
  sum = A + (D ^ B & (C ^ D)) + X[12] + 1804603682 & 4294967295;
  A = B + (sum << 7 & 4294967295 | sum >>> 25);
  sum = D + (C ^ A & (B ^ C)) + X[13] + 4254626195 & 4294967295;
  D = A + (sum << 12 & 4294967295 | sum >>> 20);
  sum = C + (B ^ D & (A ^ B)) + X[14] + 2792965006 & 4294967295;
  C = D + (sum << 17 & 4294967295 | sum >>> 15);
  sum = B + (A ^ C & (D ^ A)) + X[15] + 1236535329 & 4294967295;
  B = C + (sum << 22 & 4294967295 | sum >>> 10);
  sum = A + (C ^ D & (B ^ C)) + X[1] + 4129170786 & 4294967295;
  A = B + (sum << 5 & 4294967295 | sum >>> 27);
  sum = D + (B ^ C & (A ^ B)) + X[6] + 3225465664 & 4294967295;
  D = A + (sum << 9 & 4294967295 | sum >>> 23);
  sum = C + (A ^ B & (D ^ A)) + X[11] + 643717713 & 4294967295;
  C = D + (sum << 14 & 4294967295 | sum >>> 18);
  sum = B + (D ^ A & (C ^ D)) + X[0] + 3921069994 & 4294967295;
  B = C + (sum << 20 & 4294967295 | sum >>> 12);
  sum = A + (C ^ D & (B ^ C)) + X[5] + 3593408605 & 4294967295;
  A = B + (sum << 5 & 4294967295 | sum >>> 27);
  sum = D + (B ^ C & (A ^ B)) + X[10] + 38016083 & 4294967295;
  D = A + (sum << 9 & 4294967295 | sum >>> 23);
  sum = C + (A ^ B & (D ^ A)) + X[15] + 3634488961 & 4294967295;
  C = D + (sum << 14 & 4294967295 | sum >>> 18);
  sum = B + (D ^ A & (C ^ D)) + X[4] + 3889429448 & 4294967295;
  B = C + (sum << 20 & 4294967295 | sum >>> 12);
  sum = A + (C ^ D & (B ^ C)) + X[9] + 568446438 & 4294967295;
  A = B + (sum << 5 & 4294967295 | sum >>> 27);
  sum = D + (B ^ C & (A ^ B)) + X[14] + 3275163606 & 4294967295;
  D = A + (sum << 9 & 4294967295 | sum >>> 23);
  sum = C + (A ^ B & (D ^ A)) + X[3] + 4107603335 & 4294967295;
  C = D + (sum << 14 & 4294967295 | sum >>> 18);
  sum = B + (D ^ A & (C ^ D)) + X[8] + 1163531501 & 4294967295;
  B = C + (sum << 20 & 4294967295 | sum >>> 12);
  sum = A + (C ^ D & (B ^ C)) + X[13] + 2850285829 & 4294967295;
  A = B + (sum << 5 & 4294967295 | sum >>> 27);
  sum = D + (B ^ C & (A ^ B)) + X[2] + 4243563512 & 4294967295;
  D = A + (sum << 9 & 4294967295 | sum >>> 23);
  sum = C + (A ^ B & (D ^ A)) + X[7] + 1735328473 & 4294967295;
  C = D + (sum << 14 & 4294967295 | sum >>> 18);
  sum = B + (D ^ A & (C ^ D)) + X[12] + 2368359562 & 4294967295;
  B = C + (sum << 20 & 4294967295 | sum >>> 12);
  sum = A + (B ^ C ^ D) + X[5] + 4294588738 & 4294967295;
  A = B + (sum << 4 & 4294967295 | sum >>> 28);
  sum = D + (A ^ B ^ C) + X[8] + 2272392833 & 4294967295;
  D = A + (sum << 11 & 4294967295 | sum >>> 21);
  sum = C + (D ^ A ^ B) + X[11] + 1839030562 & 4294967295;
  C = D + (sum << 16 & 4294967295 | sum >>> 16);
  sum = B + (C ^ D ^ A) + X[14] + 4259657740 & 4294967295;
  B = C + (sum << 23 & 4294967295 | sum >>> 9);
  sum = A + (B ^ C ^ D) + X[1] + 2763975236 & 4294967295;
  A = B + (sum << 4 & 4294967295 | sum >>> 28);
  sum = D + (A ^ B ^ C) + X[4] + 1272893353 & 4294967295;
  D = A + (sum << 11 & 4294967295 | sum >>> 21);
  sum = C + (D ^ A ^ B) + X[7] + 4139469664 & 4294967295;
  C = D + (sum << 16 & 4294967295 | sum >>> 16);
  sum = B + (C ^ D ^ A) + X[10] + 3200236656 & 4294967295;
  B = C + (sum << 23 & 4294967295 | sum >>> 9);
  sum = A + (B ^ C ^ D) + X[13] + 681279174 & 4294967295;
  A = B + (sum << 4 & 4294967295 | sum >>> 28);
  sum = D + (A ^ B ^ C) + X[0] + 3936430074 & 4294967295;
  D = A + (sum << 11 & 4294967295 | sum >>> 21);
  sum = C + (D ^ A ^ B) + X[3] + 3572445317 & 4294967295;
  C = D + (sum << 16 & 4294967295 | sum >>> 16);
  sum = B + (C ^ D ^ A) + X[6] + 76029189 & 4294967295;
  B = C + (sum << 23 & 4294967295 | sum >>> 9);
  sum = A + (B ^ C ^ D) + X[9] + 3654602809 & 4294967295;
  A = B + (sum << 4 & 4294967295 | sum >>> 28);
  sum = D + (A ^ B ^ C) + X[12] + 3873151461 & 4294967295;
  D = A + (sum << 11 & 4294967295 | sum >>> 21);
  sum = C + (D ^ A ^ B) + X[15] + 530742520 & 4294967295;
  C = D + (sum << 16 & 4294967295 | sum >>> 16);
  sum = B + (C ^ D ^ A) + X[2] + 3299628645 & 4294967295;
  B = C + (sum << 23 & 4294967295 | sum >>> 9);
  sum = A + (C ^ (B | ~D)) + X[0] + 4096336452 & 4294967295;
  A = B + (sum << 6 & 4294967295 | sum >>> 26);
  sum = D + (B ^ (A | ~C)) + X[7] + 1126891415 & 4294967295;
  D = A + (sum << 10 & 4294967295 | sum >>> 22);
  sum = C + (A ^ (D | ~B)) + X[14] + 2878612391 & 4294967295;
  C = D + (sum << 15 & 4294967295 | sum >>> 17);
  sum = B + (D ^ (C | ~A)) + X[5] + 4237533241 & 4294967295;
  B = C + (sum << 21 & 4294967295 | sum >>> 11);
  sum = A + (C ^ (B | ~D)) + X[12] + 1700485571 & 4294967295;
  A = B + (sum << 6 & 4294967295 | sum >>> 26);
  sum = D + (B ^ (A | ~C)) + X[3] + 2399980690 & 4294967295;
  D = A + (sum << 10 & 4294967295 | sum >>> 22);
  sum = C + (A ^ (D | ~B)) + X[10] + 4293915773 & 4294967295;
  C = D + (sum << 15 & 4294967295 | sum >>> 17);
  sum = B + (D ^ (C | ~A)) + X[1] + 2240044497 & 4294967295;
  B = C + (sum << 21 & 4294967295 | sum >>> 11);
  sum = A + (C ^ (B | ~D)) + X[8] + 1873313359 & 4294967295;
  A = B + (sum << 6 & 4294967295 | sum >>> 26);
  sum = D + (B ^ (A | ~C)) + X[15] + 4264355552 & 4294967295;
  D = A + (sum << 10 & 4294967295 | sum >>> 22);
  sum = C + (A ^ (D | ~B)) + X[6] + 2734768916 & 4294967295;
  C = D + (sum << 15 & 4294967295 | sum >>> 17);
  sum = B + (D ^ (C | ~A)) + X[13] + 1309151649 & 4294967295;
  B = C + (sum << 21 & 4294967295 | sum >>> 11);
  sum = A + (C ^ (B | ~D)) + X[4] + 4149444226 & 4294967295;
  A = B + (sum << 6 & 4294967295 | sum >>> 26);
  sum = D + (B ^ (A | ~C)) + X[11] + 3174756917 & 4294967295;
  D = A + (sum << 10 & 4294967295 | sum >>> 22);
  sum = C + (A ^ (D | ~B)) + X[2] + 718787259 & 4294967295;
  C = D + (sum << 15 & 4294967295 | sum >>> 17);
  sum = B + (D ^ (C | ~A)) + X[9] + 3951481745 & 4294967295;
  B = C + (sum << 21 & 4294967295 | sum >>> 11);
  this.chain_[0] = this.chain_[0] + A & 4294967295;
  this.chain_[1] = this.chain_[1] + B & 4294967295;
  this.chain_[2] = this.chain_[2] + C & 4294967295;
  this.chain_[3] = this.chain_[3] + D & 4294967295;
};
goog.crypt.Md5.prototype.update = function(bytes, opt_length) {
  if (!goog.isDef(opt_length)) {
    opt_length = bytes.length;
  }
  var lengthMinusBlock = opt_length - 64;
  var block = this.block_;
  var blockLength = this.blockLength_;
  var i = 0;
  while (i < opt_length) {
    if (blockLength == 0) {
      while (i <= lengthMinusBlock) {
        this.compress_(bytes, i);
        i += 64;
      }
    }
    if (goog.isString(bytes)) {
      while (i < opt_length) {
        block[blockLength++] = bytes.charCodeAt(i++);
        if (blockLength == 64) {
          this.compress_(block);
          blockLength = 0;
          break;
        }
      }
    } else {
      while (i < opt_length) {
        block[blockLength++] = bytes[i++];
        if (blockLength == 64) {
          this.compress_(block);
          blockLength = 0;
          break;
        }
      }
    }
  }
  this.blockLength_ = blockLength;
  this.totalLength_ += opt_length;
};
goog.crypt.Md5.prototype.digest = function() {
  var pad = new Array((this.blockLength_ < 56 ? 64 : 128) - this.blockLength_);
  pad[0] = 128;
  for (var i = 1;i < pad.length - 8;++i) {
    pad[i] = 0;
  }
  var totalBits = this.totalLength_ * 8;
  for (var i = pad.length - 8;i < pad.length;++i) {
    pad[i] = totalBits & 255;
    totalBits /= 256;
  }
  this.update(pad);
  var digest = new Array(16);
  var n = 0;
  for (var i = 0;i < 4;++i) {
    for (var j = 0;j < 32;j += 8) {
      digest[n++] = this.chain_[i] >>> j & 255;
    }
  }
  return digest;
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj27678 = {};
  return obj27678;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3431__auto__ = port;
    if (and__3431__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4070__auto__ = port == null ? null : port;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj27680 = {};
  return obj27680;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if (function() {
    var and__3431__auto__ = port;
    if (and__3431__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler);
  } else {
    var x__4070__auto__ = port == null ? null : port;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj27682 = {};
  return obj27682;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3431__auto__ = chan;
    if (and__3431__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4070__auto__ = chan == null ? null : chan;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj27684 = {};
  return obj27684;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3431__auto__ = h;
    if (and__3431__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4070__auto__ = h == null ? null : h;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3431__auto__ = h;
    if (and__3431__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4070__auto__ = h == null ? null : h;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj27686 = {};
  return obj27686;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3431__auto__ = b;
    if (and__3431__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4070__auto__ = b == null ? null : b;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3431__auto__ = b;
    if (and__3431__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4070__auto__ = b == null ? null : b;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3431__auto__ = b;
    if (and__3431__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4070__auto__ = b == null ? null : b;
    return function() {
      var or__3443__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj27688 = {};
  return obj27688;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t27706 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t27706 = function(f, fn_handler, meta27707) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta27707 = meta27707;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t27706.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t27706.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t27706";
    cljs.core.async.impl.ioc_helpers.t27706.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.ioc-helpers/t27706");
    };
    cljs.core.async.impl.ioc_helpers.t27706.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t27706.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t27706.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t27706.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27708) {
      var self__ = this;
      var _27708__$1 = this;
      return self__.meta27707;
    };
    cljs.core.async.impl.ioc_helpers.t27706.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27708, meta27707__$1) {
      var self__ = this;
      var _27708__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t27706(self__.f, self__.fn_handler, meta27707__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t27706 = function __GT_t27706(f__$1, fn_handler__$1, meta27707) {
      return new cljs.core.async.impl.ioc_helpers.t27706(f__$1, fn_handler__$1, meta27707);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t27706(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e27710) {
    if (e27710 instanceof Object) {
      var ex = e27710;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e27710;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_27713_27715 = state;
    statearr_27713_27715[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_27713_27715[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_27714_27716 = state;
    statearr_27714_27716[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_27714_27716[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_27719_27721 = state;
    statearr_27719_27721[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_27719_27721[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_27720_27722 = state;
    statearr_27720_27722[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_27720_27722[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__27723) {
    var map__27728 = p__27723;
    var map__27728__$1 = cljs.core.seq_QMARK_.call(null, map__27728) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27728) : map__27728;
    var opts = map__27728__$1;
    var statearr_27729_27732 = state;
    statearr_27729_27732[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_27730_27733 = state;
      statearr_27730_27733[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    }, ports, opts);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_27731_27734 = state;
      statearr_27731_27734[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__27723 = null;
    if (arguments.length > 3) {
      p__27723 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__27723);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__27735) {
    var state = cljs.core.first(arglist__27735);
    arglist__27735 = cljs.core.next(arglist__27735);
    var cont_block = cljs.core.first(arglist__27735);
    arglist__27735 = cljs.core.next(arglist__27735);
    var ports = cljs.core.first(arglist__27735);
    var p__27723 = cljs.core.rest(arglist__27735);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__27723);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null;
    }));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4024__auto__) {
  var self__ = this;
  var this__4024__auto____$1 = this;
  var h__3854__auto__ = self__.__hash;
  if (!(h__3854__auto__ == null)) {
    return h__3854__auto__;
  } else {
    var h__3854__auto____$1 = cljs.core.hash_imap.call(null, this__4024__auto____$1);
    self__.__hash = h__3854__auto____$1;
    return h__3854__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4029__auto__, k__4030__auto__) {
  var self__ = this;
  var this__4029__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4029__auto____$1, k__4030__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4031__auto__, k27737, else__4032__auto__) {
  var self__ = this;
  var this__4031__auto____$1 = this;
  if (cljs.core.keyword_identical_QMARK_.call(null, k27737, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893))) {
    return self__.catch_block;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, k27737, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687))) {
      return self__.catch_exception;
    } else {
      if (cljs.core.keyword_identical_QMARK_.call(null, k27737, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429))) {
        return self__.finally_block;
      } else {
        if (cljs.core.keyword_identical_QMARK_.call(null, k27737, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097))) {
          return self__.continue_block;
        } else {
          if (cljs.core.keyword_identical_QMARK_.call(null, k27737, new cljs.core.Keyword(null, "prev", "prev", 1017353637))) {
            return self__.prev;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.get.call(null, self__.__extmap, k27737, else__4032__auto__);
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4036__auto__, k__4037__auto__, G__27736) {
  var self__ = this;
  var this__4036__auto____$1 = this;
  var pred__27739 = cljs.core.keyword_identical_QMARK_;
  var expr__27740 = k__4037__auto__;
  if (cljs.core.truth_(pred__27739.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), expr__27740))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__27736, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__27739.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), expr__27740))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__27736, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__27739.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), expr__27740))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__27736, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__27739.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), expr__27740))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__27736, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__27739.call(null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), expr__27740))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__27736, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4037__auto__, G__27736), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4043__auto__, writer__4044__auto__, opts__4045__auto__) {
  var self__ = this;
  var this__4043__auto____$1 = this;
  var pr_pair__4046__auto__ = function(keyval__4047__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4044__auto__, cljs.core.pr_writer, "", " ", "", opts__4045__auto__, keyval__4047__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4044__auto__, pr_pair__4046__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4045__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4034__auto__, entry__4035__auto__) {
  var self__ = this;
  var this__4034__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4035__auto__)) {
    return cljs.core._assoc.call(null, this__4034__auto____$1, cljs.core._nth.call(null, entry__4035__auto__, 0), cljs.core._nth.call(null, entry__4035__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4034__auto____$1, entry__4035__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4041__auto__) {
  var self__ = this;
  var this__4041__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", 1017353637), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4033__auto__) {
  var self__ = this;
  var this__4033__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4025__auto__, other__4026__auto__) {
  var self__ = this;
  var this__4025__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = other__4026__auto__;
    if (cljs.core.truth_(and__3431__auto__)) {
      return this__4025__auto____$1.constructor === other__4026__auto__.constructor && cljs.core.equiv_map.call(null, this__4025__auto____$1, other__4026__auto__);
    } else {
      return and__3431__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4028__auto__, G__27736) {
  var self__ = this;
  var this__4028__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__27736, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4023__auto__) {
  var self__ = this;
  var this__4023__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4027__auto__) {
  var self__ = this;
  var this__4027__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4038__auto__, k__4039__auto__) {
  var self__ = this;
  var this__4038__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null, new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), null, new cljs.core.Keyword(null, "prev", "prev", 1017353637), 
  null], null), null), k__4039__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4038__auto____$1), self__.__meta), k__4039__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4039__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4063__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4063__auto__, writer__4064__auto__) {
  return cljs.core._write.call(null, writer__4064__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__27738) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(G__27738), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(G__27738), (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(G__27738), (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(G__27738), 
  (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(G__27738), null, cljs.core.dissoc.call(null, G__27738, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097), new cljs.core.Keyword(null, "prev", "prev", 1017353637)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_27743 = state;
  statearr_27743[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_27743;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3431__auto__ = exception;
      if (cljs.core.truth_(and__3431__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3431__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3431__auto__ = exception;
        if (cljs.core.truth_(and__3431__auto__)) {
          var and__3431__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3431__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3431__auto____$1;
          }
        } else {
          return and__3431__auto__;
        }
      }())) {
        var statearr_27749 = state;
        statearr_27749[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_27749[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_27749[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_27749[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 2343862893), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", 1686480687), null);
        return statearr_27749;
      } else {
        if (cljs.core.truth_(function() {
          var and__3431__auto__ = exception;
          if (cljs.core.truth_(and__3431__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3431__auto__;
          }
        }())) {
          var statearr_27750_27754 = state;
          statearr_27750_27754[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__27755 = state;
          state = G__27755;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3431__auto__ = exception;
            if (cljs.core.truth_(and__3431__auto__)) {
              var and__3431__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3431__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3431__auto____$1;
              }
            } else {
              return and__3431__auto__;
            }
          }())) {
            var statearr_27751 = state;
            statearr_27751[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_27751[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
            return statearr_27751;
          } else {
            if (cljs.core.truth_(function() {
              var and__3431__auto__ = cljs.core.not.call(null, exception);
              if (and__3431__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3431__auto__;
              }
            }())) {
              var statearr_27752 = state;
              statearr_27752[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_27752[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429), null);
              return statearr_27752;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 2846533429)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_27753 = state;
                statearr_27753[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", 1486987097)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_27753[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", 1017353637)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_27753;
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  if (false) {
                    return null;
                  } else {
                    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No matching clause"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));
                  }
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__27700 = cnt + 1;
      cnt = G__27700;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4291__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4291__auto__) {
      var v_27701 = this$.pop();
      if (keep_QMARK_.call(null, v_27701)) {
        this$.unshift(v_27701);
      } else {
      }
      var G__27702 = x + 1;
      x = G__27702;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_27689 = 0;
  while (true) {
    var m_27690 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_27690 == null) {
    } else {
      m_27690.call(null);
      if (count_27689 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__27691 = count_27689 + 1;
        count_27689 = G__27691;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3431__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3431__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t27695 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t27695 = function(val, box, meta27696) {
      this.val = val;
      this.box = box;
      this.meta27696 = meta27696;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t27695.cljs$lang$type = true;
    cljs.core.async.impl.channels.t27695.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t27695";
    cljs.core.async.impl.channels.t27695.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.channels/t27695");
    };
    cljs.core.async.impl.channels.t27695.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t27695.prototype.cljs$core$IMeta$_meta$arity$1 = function(_27697) {
      var self__ = this;
      var _27697__$1 = this;
      return self__.meta27696;
    };
    cljs.core.async.impl.channels.t27695.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_27697, meta27696__$1) {
      var self__ = this;
      var _27697__$1 = this;
      return new cljs.core.async.impl.channels.t27695(self__.val, self__.box, meta27696__$1);
    };
    cljs.core.async.impl.channels.__GT_t27695 = function __GT_t27695(val__$1, box__$1, meta27696) {
      return new cljs.core.async.impl.channels.t27695(val__$1, box__$1, meta27696);
    };
  }
  return new cljs.core.async.impl.channels.t27695(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4013__auto__, writer__4014__auto__, opts__4015__auto__) {
  return cljs.core._write.call(null, writer__4014__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_27698 = self__.takes.pop();
      if (taker_27698 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_27698)) {
          var take_cb_27699 = cljs.core.async.impl.protocols.commit.call(null, taker_27698);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_27699, taker_27698) {
            return function() {
              return take_cb_27699.call(null, null);
            };
          }(take_cb_27699, taker_27698));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null);
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__27653 = level + 1;
        level = G__27653;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_27654 = 0;
    while (true) {
      if (i_27654 < arr.length) {
        arr[i_27654] = null;
        var G__27655 = i_27654 + 1;
        i_27654 = G__27655;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__27656 = x_SINGLEQUOTE_;
                x__$1 = G__27656;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__27657 = x__$1;
        var G__27658 = k;
        var G__27659 = level - 1;
        var G__27660 = update;
        x = G__27657;
        k = G__27658;
        level = G__27659;
        update = G__27660;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, function() {
      if (node == null) {
        return null;
      } else {
        return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
      }
    }, null, null);
  };
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_27661 = self__.level + 1;
      while (true) {
        if (i_27661 <= new_level + 1) {
          update[i_27661] = self__.header;
          var G__27662 = i_27661 + 1;
          i_27661 = G__27662;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_27663 = 0;
    while (true) {
      if (i_27663 <= self__.level) {
        var links_27664 = update[i_27663].forward;
        if (links_27664[i_27663] === x__$1) {
          links_27664[i_27663] = x__$1.forward[i_27663];
          var G__27665 = i_27663 + 1;
          i_27663 = G__27665;
          continue;
        } else {
          var G__27666 = i_27663 + 1;
          i_27663 = G__27666;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__27667 = x_SINGLEQUOTE_;
              x__$1 = G__27667;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__27668 = nx;
        var G__27669 = level__$1 - 1;
        x = G__27668;
        level__$1 = G__27669;
        continue;
      } else {
        var G__27670 = x;
        var G__27671 = level__$1 - 1;
        x = G__27670;
        level__$1 = G__27671;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__27672 = x_SINGLEQUOTE_;
              x__$1 = G__27672;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__27673 = nx;
        var G__27674 = level__$1 - 1;
        x = G__27673;
        level__$1 = G__27674;
        continue;
      } else {
        var G__27675 = x;
        var G__27676 = level__$1 - 1;
        x = G__27675;
        level__$1 = G__27676;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3443__auto__ = cljs.core.truth_(function() {
    var and__3431__auto__ = me;
    if (cljs.core.truth_(and__3431__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3431__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
    }, msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t25102 !== "undefined") {
  } else {
    cljs.core.async.t25102 = function(f, fn_handler, meta25103) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta25103 = meta25103;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t25102.cljs$lang$type = true;
    cljs.core.async.t25102.cljs$lang$ctorStr = "cljs.core.async/t25102";
    cljs.core.async.t25102.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t25102");
    };
    cljs.core.async.t25102.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t25102.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t25102.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t25102.prototype.cljs$core$IMeta$_meta$arity$1 = function(_25104) {
      var self__ = this;
      var _25104__$1 = this;
      return self__.meta25103;
    };
    cljs.core.async.t25102.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_25104, meta25103__$1) {
      var self__ = this;
      var _25104__$1 = this;
      return new cljs.core.async.t25102(self__.f, self__.fn_handler, meta25103__$1);
    };
    cljs.core.async.__GT_t25102 = function __GT_t25102(f__$1, fn_handler__$1, meta25103) {
      return new cljs.core.async.t25102(f__$1, fn_handler__$1, meta25103);
    };
  }
  return new cljs.core.async.t25102(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__25106 = buff;
  if (G__25106) {
    var bit__4093__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3443__auto__ = bit__4093__auto__;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return G__25106.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__25106.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__25106);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__25106);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_25107 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_25107);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_25107);
        });
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop() {
  return null;
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if (null) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop);
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true);
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if (cljs.core.truth_(function() {
      var and__3431__auto__ = ret;
      if (cljs.core.truth_(and__3431__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop);
      } else {
        return and__3431__auto__;
      }
    }())) {
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, fn0);
      }
    } else {
    }
    return null;
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4291__auto___25108 = n;
  var x_25109 = 0;
  while (true) {
    if (x_25109 < n__4291__auto___25108) {
      a[x_25109] = 0;
      var G__25110 = x_25109 + 1;
      x_25109 = G__25110;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__25111 = i + 1;
      i = G__25111;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t25115 !== "undefined") {
  } else {
    cljs.core.async.t25115 = function(flag, alt_flag, meta25116) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta25116 = meta25116;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t25115.cljs$lang$type = true;
    cljs.core.async.t25115.cljs$lang$ctorStr = "cljs.core.async/t25115";
    cljs.core.async.t25115.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t25115");
    };
    cljs.core.async.t25115.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t25115.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.deref.call(null, self__.flag);
    };
    cljs.core.async.t25115.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true;
    };
    cljs.core.async.t25115.prototype.cljs$core$IMeta$_meta$arity$1 = function(_25117) {
      var self__ = this;
      var _25117__$1 = this;
      return self__.meta25116;
    };
    cljs.core.async.t25115.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_25117, meta25116__$1) {
      var self__ = this;
      var _25117__$1 = this;
      return new cljs.core.async.t25115(self__.flag, self__.alt_flag, meta25116__$1);
    };
    cljs.core.async.__GT_t25115 = function __GT_t25115(flag__$1, alt_flag__$1, meta25116) {
      return new cljs.core.async.t25115(flag__$1, alt_flag__$1, meta25116);
    };
  }
  return new cljs.core.async.t25115(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t25121 !== "undefined") {
  } else {
    cljs.core.async.t25121 = function(cb, flag, alt_handler, meta25122) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta25122 = meta25122;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t25121.cljs$lang$type = true;
    cljs.core.async.t25121.cljs$lang$ctorStr = "cljs.core.async/t25121";
    cljs.core.async.t25121.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t25121");
    };
    cljs.core.async.t25121.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t25121.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t25121.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t25121.prototype.cljs$core$IMeta$_meta$arity$1 = function(_25123) {
      var self__ = this;
      var _25123__$1 = this;
      return self__.meta25122;
    };
    cljs.core.async.t25121.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_25123, meta25122__$1) {
      var self__ = this;
      var _25123__$1 = this;
      return new cljs.core.async.t25121(self__.cb, self__.flag, self__.alt_handler, meta25122__$1);
    };
    cljs.core.async.__GT_t25121 = function __GT_t25121(cb__$1, flag__$1, alt_handler__$1, meta25122) {
      return new cljs.core.async.t25121(cb__$1, flag__$1, alt_handler__$1, meta25122);
    };
  }
  return new cljs.core.async.t25121(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__25124_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__25124_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3443__auto__ = wport;
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__25125 = i + 1;
          i = G__25125;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3443__auto__ = ret;
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3431__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3431__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3431__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__25126) {
    var map__25128 = p__25126;
    var map__25128__$1 = cljs.core.seq_QMARK_.call(null, map__25128) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25128) : map__25128;
    var opts = map__25128__$1;
    if (null) {
      return null;
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__25126 = null;
    if (arguments.length > 1) {
      p__25126 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__25126);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__25129) {
    var ports = cljs.core.first(arglist__25129);
    var p__25126 = cljs.core.rest(arglist__25129);
    return alts_BANG___delegate(ports, p__25126);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t25137 !== "undefined") {
  } else {
    cljs.core.async.t25137 = function(ch, f, map_LT_, meta25138) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta25138 = meta25138;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t25137.cljs$lang$type = true;
    cljs.core.async.t25137.cljs$lang$ctorStr = "cljs.core.async/t25137";
    cljs.core.async.t25137.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t25137");
    };
    cljs.core.async.t25137.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t25137.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
    };
    cljs.core.async.t25137.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t25137.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t25140 !== "undefined") {
        } else {
          cljs.core.async.t25140 = function(fn1, _, meta25138, ch, f, map_LT_, meta25141) {
            this.fn1 = fn1;
            this._ = _;
            this.meta25138 = meta25138;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta25141 = meta25141;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t25140.cljs$lang$type = true;
          cljs.core.async.t25140.cljs$lang$ctorStr = "cljs.core.async/t25140";
          cljs.core.async.t25140.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
            return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t25140");
          };
          cljs.core.async.t25140.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t25140.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
          };
          cljs.core.async.t25140.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
          };
          cljs.core.async.t25140.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
            return function(f1, ___$4) {
              return function(p1__25130_SHARP_) {
                return f1.call(null, p1__25130_SHARP_ == null ? null : self__.f.call(null, p1__25130_SHARP_));
              };
            }(f1, ___$4);
          };
          cljs.core.async.t25140.prototype.cljs$core$IMeta$_meta$arity$1 = function(_25142) {
            var self__ = this;
            var _25142__$1 = this;
            return self__.meta25141;
          };
          cljs.core.async.t25140.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_25142, meta25141__$1) {
            var self__ = this;
            var _25142__$1 = this;
            return new cljs.core.async.t25140(self__.fn1, self__._, self__.meta25138, self__.ch, self__.f, self__.map_LT_, meta25141__$1);
          };
          cljs.core.async.__GT_t25140 = function __GT_t25140(fn1__$1, ___$2, meta25138__$1, ch__$2, f__$2, map_LT___$2, meta25141) {
            return new cljs.core.async.t25140(fn1__$1, ___$2, meta25138__$1, ch__$2, f__$2, map_LT___$2, meta25141);
          };
        }
        return new cljs.core.async.t25140(fn1, ___$1, self__.meta25138, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3431__auto__ = ret;
        if (cljs.core.truth_(and__3431__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3431__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t25137.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t25137.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t25137.prototype.cljs$core$IMeta$_meta$arity$1 = function(_25139) {
      var self__ = this;
      var _25139__$1 = this;
      return self__.meta25138;
    };
    cljs.core.async.t25137.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_25139, meta25138__$1) {
      var self__ = this;
      var _25139__$1 = this;
      return new cljs.core.async.t25137(self__.ch, self__.f, self__.map_LT_, meta25138__$1);
    };
    cljs.core.async.__GT_t25137 = function __GT_t25137(ch__$1, f__$1, map_LT___$1, meta25138) {
      return new cljs.core.async.t25137(ch__$1, f__$1, map_LT___$1, meta25138);
    };
  }
  return new cljs.core.async.t25137(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t25146 !== "undefined") {
  } else {
    cljs.core.async.t25146 = function(ch, f, map_GT_, meta25147) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta25147 = meta25147;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t25146.cljs$lang$type = true;
    cljs.core.async.t25146.cljs$lang$ctorStr = "cljs.core.async/t25146";
    cljs.core.async.t25146.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t25146");
    };
    cljs.core.async.t25146.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t25146.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0);
    };
    cljs.core.async.t25146.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t25146.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t25146.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t25146.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t25146.prototype.cljs$core$IMeta$_meta$arity$1 = function(_25148) {
      var self__ = this;
      var _25148__$1 = this;
      return self__.meta25147;
    };
    cljs.core.async.t25146.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_25148, meta25147__$1) {
      var self__ = this;
      var _25148__$1 = this;
      return new cljs.core.async.t25146(self__.ch, self__.f, self__.map_GT_, meta25147__$1);
    };
    cljs.core.async.__GT_t25146 = function __GT_t25146(ch__$1, f__$1, map_GT___$1, meta25147) {
      return new cljs.core.async.t25146(ch__$1, f__$1, map_GT___$1, meta25147);
    };
  }
  return new cljs.core.async.t25146(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t25152 !== "undefined") {
  } else {
    cljs.core.async.t25152 = function(ch, p, filter_GT_, meta25153) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta25153 = meta25153;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t25152.cljs$lang$type = true;
    cljs.core.async.t25152.cljs$lang$ctorStr = "cljs.core.async/t25152";
    cljs.core.async.t25152.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t25152");
    };
    cljs.core.async.t25152.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t25152.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
      } else {
        return cljs.core.async.impl.channels.box.call(null, null);
      }
    };
    cljs.core.async.t25152.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t25152.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t25152.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t25152.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t25152.prototype.cljs$core$IMeta$_meta$arity$1 = function(_25154) {
      var self__ = this;
      var _25154__$1 = this;
      return self__.meta25153;
    };
    cljs.core.async.t25152.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_25154, meta25153__$1) {
      var self__ = this;
      var _25154__$1 = this;
      return new cljs.core.async.t25152(self__.ch, self__.p, self__.filter_GT_, meta25153__$1);
    };
    cljs.core.async.__GT_t25152 = function __GT_t25152(ch__$1, p__$1, filter_GT___$1, meta25153) {
      return new cljs.core.async.t25152(ch__$1, p__$1, filter_GT___$1, meta25153);
    };
  }
  return new cljs.core.async.t25152(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6068__auto___25237 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6069__auto__ = function() {
        var switch__5998__auto__ = function(state_25216) {
          var state_val_25217 = state_25216[1];
          if (state_val_25217 === 1) {
            var state_25216__$1 = state_25216;
            var statearr_25218_25238 = state_25216__$1;
            statearr_25218_25238[2] = null;
            statearr_25218_25238[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25217 === 2) {
              var state_25216__$1 = state_25216;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_25216__$1, 4, ch);
            } else {
              if (state_val_25217 === 3) {
                var inst_25214 = state_25216[2];
                var state_25216__$1 = state_25216;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_25216__$1, inst_25214);
              } else {
                if (state_val_25217 === 4) {
                  var inst_25198 = state_25216[7];
                  var inst_25198__$1 = state_25216[2];
                  var inst_25199 = inst_25198__$1 == null;
                  var state_25216__$1 = function() {
                    var statearr_25219 = state_25216;
                    statearr_25219[7] = inst_25198__$1;
                    return statearr_25219;
                  }();
                  if (cljs.core.truth_(inst_25199)) {
                    var statearr_25220_25239 = state_25216__$1;
                    statearr_25220_25239[1] = 5;
                  } else {
                    var statearr_25221_25240 = state_25216__$1;
                    statearr_25221_25240[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_25217 === 5) {
                    var inst_25201 = cljs.core.async.close_BANG_.call(null, out);
                    var state_25216__$1 = state_25216;
                    var statearr_25222_25241 = state_25216__$1;
                    statearr_25222_25241[2] = inst_25201;
                    statearr_25222_25241[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_25217 === 6) {
                      var inst_25198 = state_25216[7];
                      var inst_25203 = p.call(null, inst_25198);
                      var state_25216__$1 = state_25216;
                      if (cljs.core.truth_(inst_25203)) {
                        var statearr_25223_25242 = state_25216__$1;
                        statearr_25223_25242[1] = 8;
                      } else {
                        var statearr_25224_25243 = state_25216__$1;
                        statearr_25224_25243[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_25217 === 7) {
                        var inst_25212 = state_25216[2];
                        var state_25216__$1 = state_25216;
                        var statearr_25225_25244 = state_25216__$1;
                        statearr_25225_25244[2] = inst_25212;
                        statearr_25225_25244[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25217 === 8) {
                          var inst_25198 = state_25216[7];
                          var state_25216__$1 = state_25216;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25216__$1, 11, out, inst_25198);
                        } else {
                          if (state_val_25217 === 9) {
                            var state_25216__$1 = state_25216;
                            var statearr_25226_25245 = state_25216__$1;
                            statearr_25226_25245[2] = null;
                            statearr_25226_25245[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_25217 === 10) {
                              var inst_25209 = state_25216[2];
                              var state_25216__$1 = function() {
                                var statearr_25227 = state_25216;
                                statearr_25227[8] = inst_25209;
                                return statearr_25227;
                              }();
                              var statearr_25228_25246 = state_25216__$1;
                              statearr_25228_25246[2] = null;
                              statearr_25228_25246[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_25217 === 11) {
                                var inst_25206 = state_25216[2];
                                var state_25216__$1 = state_25216;
                                var statearr_25229_25247 = state_25216__$1;
                                statearr_25229_25247[2] = inst_25206;
                                statearr_25229_25247[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5998__auto__) {
          return function() {
            var state_machine__5999__auto__ = null;
            var state_machine__5999__auto____0 = function() {
              var statearr_25233 = [null, null, null, null, null, null, null, null, null];
              statearr_25233[0] = state_machine__5999__auto__;
              statearr_25233[1] = 1;
              return statearr_25233;
            };
            var state_machine__5999__auto____1 = function(state_25216) {
              while (true) {
                var ret_value__6000__auto__ = function() {
                  try {
                    while (true) {
                      var result__6001__auto__ = switch__5998__auto__.call(null, state_25216);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6001__auto__;
                      }
                      break;
                    }
                  } catch (e25234) {
                    if (e25234 instanceof Object) {
                      var ex__6002__auto__ = e25234;
                      var statearr_25235_25248 = state_25216;
                      statearr_25235_25248[5] = ex__6002__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_25216);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e25234;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__25249 = state_25216;
                  state_25216 = G__25249;
                  continue;
                } else {
                  return ret_value__6000__auto__;
                }
                break;
              }
            };
            state_machine__5999__auto__ = function(state_25216) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5999__auto____0.call(this);
                case 1:
                  return state_machine__5999__auto____1.call(this, state_25216);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
            return state_machine__5999__auto__;
          }();
        }(switch__5998__auto__);
      }();
      var state__6070__auto__ = function() {
        var statearr_25236 = f__6069__auto__.call(null);
        statearr_25236[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto___25237;
        return statearr_25236;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
    });
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6068__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6069__auto__ = function() {
      var switch__5998__auto__ = function(state_25401) {
        var state_val_25402 = state_25401[1];
        if (state_val_25402 === 1) {
          var state_25401__$1 = state_25401;
          var statearr_25403_25440 = state_25401__$1;
          statearr_25403_25440[2] = null;
          statearr_25403_25440[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_25402 === 2) {
            var state_25401__$1 = state_25401;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_25401__$1, 4, in$);
          } else {
            if (state_val_25402 === 3) {
              var inst_25399 = state_25401[2];
              var state_25401__$1 = state_25401;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_25401__$1, inst_25399);
            } else {
              if (state_val_25402 === 4) {
                var inst_25347 = state_25401[7];
                var inst_25347__$1 = state_25401[2];
                var inst_25348 = inst_25347__$1 == null;
                var state_25401__$1 = function() {
                  var statearr_25404 = state_25401;
                  statearr_25404[7] = inst_25347__$1;
                  return statearr_25404;
                }();
                if (cljs.core.truth_(inst_25348)) {
                  var statearr_25405_25441 = state_25401__$1;
                  statearr_25405_25441[1] = 5;
                } else {
                  var statearr_25406_25442 = state_25401__$1;
                  statearr_25406_25442[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_25402 === 5) {
                  var inst_25350 = cljs.core.async.close_BANG_.call(null, out);
                  var state_25401__$1 = state_25401;
                  var statearr_25407_25443 = state_25401__$1;
                  statearr_25407_25443[2] = inst_25350;
                  statearr_25407_25443[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_25402 === 6) {
                    var inst_25347 = state_25401[7];
                    var inst_25352 = f.call(null, inst_25347);
                    var inst_25357 = cljs.core.seq.call(null, inst_25352);
                    var inst_25358 = inst_25357;
                    var inst_25359 = null;
                    var inst_25360 = 0;
                    var inst_25361 = 0;
                    var state_25401__$1 = function() {
                      var statearr_25408 = state_25401;
                      statearr_25408[8] = inst_25359;
                      statearr_25408[9] = inst_25360;
                      statearr_25408[10] = inst_25358;
                      statearr_25408[11] = inst_25361;
                      return statearr_25408;
                    }();
                    var statearr_25409_25444 = state_25401__$1;
                    statearr_25409_25444[2] = null;
                    statearr_25409_25444[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_25402 === 7) {
                      var inst_25397 = state_25401[2];
                      var state_25401__$1 = state_25401;
                      var statearr_25410_25445 = state_25401__$1;
                      statearr_25410_25445[2] = inst_25397;
                      statearr_25410_25445[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_25402 === 8) {
                        var inst_25360 = state_25401[9];
                        var inst_25361 = state_25401[11];
                        var inst_25363 = inst_25361 < inst_25360;
                        var inst_25364 = inst_25363;
                        var state_25401__$1 = state_25401;
                        if (cljs.core.truth_(inst_25364)) {
                          var statearr_25411_25446 = state_25401__$1;
                          statearr_25411_25446[1] = 10;
                        } else {
                          var statearr_25412_25447 = state_25401__$1;
                          statearr_25412_25447[1] = 11;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25402 === 9) {
                          var inst_25394 = state_25401[2];
                          var state_25401__$1 = function() {
                            var statearr_25413 = state_25401;
                            statearr_25413[12] = inst_25394;
                            return statearr_25413;
                          }();
                          var statearr_25414_25448 = state_25401__$1;
                          statearr_25414_25448[2] = null;
                          statearr_25414_25448[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_25402 === 10) {
                            var inst_25359 = state_25401[8];
                            var inst_25361 = state_25401[11];
                            var inst_25366 = cljs.core._nth.call(null, inst_25359, inst_25361);
                            var state_25401__$1 = state_25401;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25401__$1, 13, out, inst_25366);
                          } else {
                            if (state_val_25402 === 11) {
                              var inst_25372 = state_25401[13];
                              var inst_25358 = state_25401[10];
                              var inst_25372__$1 = cljs.core.seq.call(null, inst_25358);
                              var state_25401__$1 = function() {
                                var statearr_25418 = state_25401;
                                statearr_25418[13] = inst_25372__$1;
                                return statearr_25418;
                              }();
                              if (inst_25372__$1) {
                                var statearr_25419_25449 = state_25401__$1;
                                statearr_25419_25449[1] = 14;
                              } else {
                                var statearr_25420_25450 = state_25401__$1;
                                statearr_25420_25450[1] = 15;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_25402 === 12) {
                                var inst_25392 = state_25401[2];
                                var state_25401__$1 = state_25401;
                                var statearr_25421_25451 = state_25401__$1;
                                statearr_25421_25451[2] = inst_25392;
                                statearr_25421_25451[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_25402 === 13) {
                                  var inst_25359 = state_25401[8];
                                  var inst_25360 = state_25401[9];
                                  var inst_25358 = state_25401[10];
                                  var inst_25361 = state_25401[11];
                                  var inst_25368 = state_25401[2];
                                  var inst_25369 = inst_25361 + 1;
                                  var tmp25415 = inst_25359;
                                  var tmp25416 = inst_25360;
                                  var tmp25417 = inst_25358;
                                  var inst_25358__$1 = tmp25417;
                                  var inst_25359__$1 = tmp25415;
                                  var inst_25360__$1 = tmp25416;
                                  var inst_25361__$1 = inst_25369;
                                  var state_25401__$1 = function() {
                                    var statearr_25422 = state_25401;
                                    statearr_25422[14] = inst_25368;
                                    statearr_25422[8] = inst_25359__$1;
                                    statearr_25422[9] = inst_25360__$1;
                                    statearr_25422[10] = inst_25358__$1;
                                    statearr_25422[11] = inst_25361__$1;
                                    return statearr_25422;
                                  }();
                                  var statearr_25423_25452 = state_25401__$1;
                                  statearr_25423_25452[2] = null;
                                  statearr_25423_25452[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_25402 === 14) {
                                    var inst_25372 = state_25401[13];
                                    var inst_25374 = cljs.core.chunked_seq_QMARK_.call(null, inst_25372);
                                    var state_25401__$1 = state_25401;
                                    if (inst_25374) {
                                      var statearr_25424_25453 = state_25401__$1;
                                      statearr_25424_25453[1] = 17;
                                    } else {
                                      var statearr_25425_25454 = state_25401__$1;
                                      statearr_25425_25454[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_25402 === 15) {
                                      var state_25401__$1 = state_25401;
                                      var statearr_25426_25455 = state_25401__$1;
                                      statearr_25426_25455[2] = null;
                                      statearr_25426_25455[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_25402 === 16) {
                                        var inst_25390 = state_25401[2];
                                        var state_25401__$1 = state_25401;
                                        var statearr_25427_25456 = state_25401__$1;
                                        statearr_25427_25456[2] = inst_25390;
                                        statearr_25427_25456[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_25402 === 17) {
                                          var inst_25372 = state_25401[13];
                                          var inst_25376 = cljs.core.chunk_first.call(null, inst_25372);
                                          var inst_25377 = cljs.core.chunk_rest.call(null, inst_25372);
                                          var inst_25378 = cljs.core.count.call(null, inst_25376);
                                          var inst_25358 = inst_25377;
                                          var inst_25359 = inst_25376;
                                          var inst_25360 = inst_25378;
                                          var inst_25361 = 0;
                                          var state_25401__$1 = function() {
                                            var statearr_25428 = state_25401;
                                            statearr_25428[8] = inst_25359;
                                            statearr_25428[9] = inst_25360;
                                            statearr_25428[10] = inst_25358;
                                            statearr_25428[11] = inst_25361;
                                            return statearr_25428;
                                          }();
                                          var statearr_25429_25457 = state_25401__$1;
                                          statearr_25429_25457[2] = null;
                                          statearr_25429_25457[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_25402 === 18) {
                                            var inst_25372 = state_25401[13];
                                            var inst_25381 = cljs.core.first.call(null, inst_25372);
                                            var state_25401__$1 = state_25401;
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25401__$1, 20, out, inst_25381);
                                          } else {
                                            if (state_val_25402 === 19) {
                                              var inst_25387 = state_25401[2];
                                              var state_25401__$1 = state_25401;
                                              var statearr_25430_25458 = state_25401__$1;
                                              statearr_25430_25458[2] = inst_25387;
                                              statearr_25430_25458[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_25402 === 20) {
                                                var inst_25372 = state_25401[13];
                                                var inst_25383 = state_25401[2];
                                                var inst_25384 = cljs.core.next.call(null, inst_25372);
                                                var inst_25358 = inst_25384;
                                                var inst_25359 = null;
                                                var inst_25360 = 0;
                                                var inst_25361 = 0;
                                                var state_25401__$1 = function() {
                                                  var statearr_25431 = state_25401;
                                                  statearr_25431[15] = inst_25383;
                                                  statearr_25431[8] = inst_25359;
                                                  statearr_25431[9] = inst_25360;
                                                  statearr_25431[10] = inst_25358;
                                                  statearr_25431[11] = inst_25361;
                                                  return statearr_25431;
                                                }();
                                                var statearr_25432_25459 = state_25401__$1;
                                                statearr_25432_25459[2] = null;
                                                statearr_25432_25459[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5998__auto__) {
        return function() {
          var state_machine__5999__auto__ = null;
          var state_machine__5999__auto____0 = function() {
            var statearr_25436 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_25436[0] = state_machine__5999__auto__;
            statearr_25436[1] = 1;
            return statearr_25436;
          };
          var state_machine__5999__auto____1 = function(state_25401) {
            while (true) {
              var ret_value__6000__auto__ = function() {
                try {
                  while (true) {
                    var result__6001__auto__ = switch__5998__auto__.call(null, state_25401);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6001__auto__;
                    }
                    break;
                  }
                } catch (e25437) {
                  if (e25437 instanceof Object) {
                    var ex__6002__auto__ = e25437;
                    var statearr_25438_25460 = state_25401;
                    statearr_25438_25460[5] = ex__6002__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_25401);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e25437;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__25461 = state_25401;
                state_25401 = G__25461;
                continue;
              } else {
                return ret_value__6000__auto__;
              }
              break;
            }
          };
          state_machine__5999__auto__ = function(state_25401) {
            switch(arguments.length) {
              case 0:
                return state_machine__5999__auto____0.call(this);
              case 1:
                return state_machine__5999__auto____1.call(this, state_25401);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
          return state_machine__5999__auto__;
        }();
      }(switch__5998__auto__);
    }();
    var state__6070__auto__ = function() {
      var statearr_25439 = f__6069__auto__.call(null);
      statearr_25439[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto__;
      return statearr_25439;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
  });
  return c__6068__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6068__auto___25542 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6069__auto__ = function() {
        var switch__5998__auto__ = function(state_25521) {
          var state_val_25522 = state_25521[1];
          if (state_val_25522 === 1) {
            var state_25521__$1 = state_25521;
            var statearr_25523_25543 = state_25521__$1;
            statearr_25523_25543[2] = null;
            statearr_25523_25543[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25522 === 2) {
              var state_25521__$1 = state_25521;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_25521__$1, 4, from);
            } else {
              if (state_val_25522 === 3) {
                var inst_25519 = state_25521[2];
                var state_25521__$1 = state_25521;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_25521__$1, inst_25519);
              } else {
                if (state_val_25522 === 4) {
                  var inst_25504 = state_25521[7];
                  var inst_25504__$1 = state_25521[2];
                  var inst_25505 = inst_25504__$1 == null;
                  var state_25521__$1 = function() {
                    var statearr_25524 = state_25521;
                    statearr_25524[7] = inst_25504__$1;
                    return statearr_25524;
                  }();
                  if (cljs.core.truth_(inst_25505)) {
                    var statearr_25525_25544 = state_25521__$1;
                    statearr_25525_25544[1] = 5;
                  } else {
                    var statearr_25526_25545 = state_25521__$1;
                    statearr_25526_25545[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_25522 === 5) {
                    var state_25521__$1 = state_25521;
                    if (cljs.core.truth_(close_QMARK_)) {
                      var statearr_25527_25546 = state_25521__$1;
                      statearr_25527_25546[1] = 8;
                    } else {
                      var statearr_25528_25547 = state_25521__$1;
                      statearr_25528_25547[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_25522 === 6) {
                      var inst_25504 = state_25521[7];
                      var state_25521__$1 = state_25521;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25521__$1, 11, to, inst_25504);
                    } else {
                      if (state_val_25522 === 7) {
                        var inst_25517 = state_25521[2];
                        var state_25521__$1 = state_25521;
                        var statearr_25529_25548 = state_25521__$1;
                        statearr_25529_25548[2] = inst_25517;
                        statearr_25529_25548[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25522 === 8) {
                          var inst_25508 = cljs.core.async.close_BANG_.call(null, to);
                          var state_25521__$1 = state_25521;
                          var statearr_25530_25549 = state_25521__$1;
                          statearr_25530_25549[2] = inst_25508;
                          statearr_25530_25549[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_25522 === 9) {
                            var state_25521__$1 = state_25521;
                            var statearr_25531_25550 = state_25521__$1;
                            statearr_25531_25550[2] = null;
                            statearr_25531_25550[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_25522 === 10) {
                              var inst_25511 = state_25521[2];
                              var state_25521__$1 = state_25521;
                              var statearr_25532_25551 = state_25521__$1;
                              statearr_25532_25551[2] = inst_25511;
                              statearr_25532_25551[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_25522 === 11) {
                                var inst_25514 = state_25521[2];
                                var state_25521__$1 = function() {
                                  var statearr_25533 = state_25521;
                                  statearr_25533[8] = inst_25514;
                                  return statearr_25533;
                                }();
                                var statearr_25534_25552 = state_25521__$1;
                                statearr_25534_25552[2] = null;
                                statearr_25534_25552[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5998__auto__) {
          return function() {
            var state_machine__5999__auto__ = null;
            var state_machine__5999__auto____0 = function() {
              var statearr_25538 = [null, null, null, null, null, null, null, null, null];
              statearr_25538[0] = state_machine__5999__auto__;
              statearr_25538[1] = 1;
              return statearr_25538;
            };
            var state_machine__5999__auto____1 = function(state_25521) {
              while (true) {
                var ret_value__6000__auto__ = function() {
                  try {
                    while (true) {
                      var result__6001__auto__ = switch__5998__auto__.call(null, state_25521);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6001__auto__;
                      }
                      break;
                    }
                  } catch (e25539) {
                    if (e25539 instanceof Object) {
                      var ex__6002__auto__ = e25539;
                      var statearr_25540_25553 = state_25521;
                      statearr_25540_25553[5] = ex__6002__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_25521);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e25539;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__25554 = state_25521;
                  state_25521 = G__25554;
                  continue;
                } else {
                  return ret_value__6000__auto__;
                }
                break;
              }
            };
            state_machine__5999__auto__ = function(state_25521) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5999__auto____0.call(this);
                case 1:
                  return state_machine__5999__auto____1.call(this, state_25521);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
            return state_machine__5999__auto__;
          }();
        }(switch__5998__auto__);
      }();
      var state__6070__auto__ = function() {
        var statearr_25541 = f__6069__auto__.call(null);
        statearr_25541[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto___25542;
        return statearr_25541;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
    });
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6068__auto___25641 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6069__auto__ = function() {
        var switch__5998__auto__ = function(state_25619) {
          var state_val_25620 = state_25619[1];
          if (state_val_25620 === 1) {
            var state_25619__$1 = state_25619;
            var statearr_25621_25642 = state_25619__$1;
            statearr_25621_25642[2] = null;
            statearr_25621_25642[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25620 === 2) {
              var state_25619__$1 = state_25619;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_25619__$1, 4, ch);
            } else {
              if (state_val_25620 === 3) {
                var inst_25617 = state_25619[2];
                var state_25619__$1 = state_25619;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_25619__$1, inst_25617);
              } else {
                if (state_val_25620 === 4) {
                  var inst_25600 = state_25619[7];
                  var inst_25600__$1 = state_25619[2];
                  var inst_25601 = inst_25600__$1 == null;
                  var state_25619__$1 = function() {
                    var statearr_25622 = state_25619;
                    statearr_25622[7] = inst_25600__$1;
                    return statearr_25622;
                  }();
                  if (cljs.core.truth_(inst_25601)) {
                    var statearr_25623_25643 = state_25619__$1;
                    statearr_25623_25643[1] = 5;
                  } else {
                    var statearr_25624_25644 = state_25619__$1;
                    statearr_25624_25644[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_25620 === 5) {
                    var inst_25603 = cljs.core.async.close_BANG_.call(null, tc);
                    var inst_25604 = cljs.core.async.close_BANG_.call(null, fc);
                    var state_25619__$1 = function() {
                      var statearr_25625 = state_25619;
                      statearr_25625[8] = inst_25603;
                      return statearr_25625;
                    }();
                    var statearr_25626_25645 = state_25619__$1;
                    statearr_25626_25645[2] = inst_25604;
                    statearr_25626_25645[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_25620 === 6) {
                      var inst_25600 = state_25619[7];
                      var inst_25606 = p.call(null, inst_25600);
                      var state_25619__$1 = state_25619;
                      if (cljs.core.truth_(inst_25606)) {
                        var statearr_25627_25646 = state_25619__$1;
                        statearr_25627_25646[1] = 9;
                      } else {
                        var statearr_25628_25647 = state_25619__$1;
                        statearr_25628_25647[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_25620 === 7) {
                        var inst_25615 = state_25619[2];
                        var state_25619__$1 = state_25619;
                        var statearr_25629_25648 = state_25619__$1;
                        statearr_25629_25648[2] = inst_25615;
                        statearr_25629_25648[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25620 === 8) {
                          var inst_25612 = state_25619[2];
                          var state_25619__$1 = function() {
                            var statearr_25630 = state_25619;
                            statearr_25630[9] = inst_25612;
                            return statearr_25630;
                          }();
                          var statearr_25631_25649 = state_25619__$1;
                          statearr_25631_25649[2] = null;
                          statearr_25631_25649[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_25620 === 9) {
                            var state_25619__$1 = state_25619;
                            var statearr_25632_25650 = state_25619__$1;
                            statearr_25632_25650[2] = tc;
                            statearr_25632_25650[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_25620 === 10) {
                              var state_25619__$1 = state_25619;
                              var statearr_25633_25651 = state_25619__$1;
                              statearr_25633_25651[2] = fc;
                              statearr_25633_25651[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_25620 === 11) {
                                var inst_25600 = state_25619[7];
                                var inst_25610 = state_25619[2];
                                var state_25619__$1 = state_25619;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25619__$1, 8, inst_25610, inst_25600);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5998__auto__) {
          return function() {
            var state_machine__5999__auto__ = null;
            var state_machine__5999__auto____0 = function() {
              var statearr_25637 = [null, null, null, null, null, null, null, null, null, null];
              statearr_25637[0] = state_machine__5999__auto__;
              statearr_25637[1] = 1;
              return statearr_25637;
            };
            var state_machine__5999__auto____1 = function(state_25619) {
              while (true) {
                var ret_value__6000__auto__ = function() {
                  try {
                    while (true) {
                      var result__6001__auto__ = switch__5998__auto__.call(null, state_25619);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6001__auto__;
                      }
                      break;
                    }
                  } catch (e25638) {
                    if (e25638 instanceof Object) {
                      var ex__6002__auto__ = e25638;
                      var statearr_25639_25652 = state_25619;
                      statearr_25639_25652[5] = ex__6002__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_25619);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e25638;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__25653 = state_25619;
                  state_25619 = G__25653;
                  continue;
                } else {
                  return ret_value__6000__auto__;
                }
                break;
              }
            };
            state_machine__5999__auto__ = function(state_25619) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5999__auto____0.call(this);
                case 1:
                  return state_machine__5999__auto____1.call(this, state_25619);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
            return state_machine__5999__auto__;
          }();
        }(switch__5998__auto__);
      }();
      var state__6070__auto__ = function() {
        var statearr_25640 = f__6069__auto__.call(null);
        statearr_25640[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto___25641;
        return statearr_25640;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
    });
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6068__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6069__auto__ = function() {
      var switch__5998__auto__ = function(state_25700) {
        var state_val_25701 = state_25700[1];
        if (state_val_25701 === 7) {
          var inst_25696 = state_25700[2];
          var state_25700__$1 = state_25700;
          var statearr_25702_25718 = state_25700__$1;
          statearr_25702_25718[2] = inst_25696;
          statearr_25702_25718[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_25701 === 6) {
            var inst_25689 = state_25700[7];
            var inst_25686 = state_25700[8];
            var inst_25693 = f.call(null, inst_25686, inst_25689);
            var inst_25686__$1 = inst_25693;
            var state_25700__$1 = function() {
              var statearr_25703 = state_25700;
              statearr_25703[8] = inst_25686__$1;
              return statearr_25703;
            }();
            var statearr_25704_25719 = state_25700__$1;
            statearr_25704_25719[2] = null;
            statearr_25704_25719[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25701 === 5) {
              var inst_25686 = state_25700[8];
              var state_25700__$1 = state_25700;
              var statearr_25705_25720 = state_25700__$1;
              statearr_25705_25720[2] = inst_25686;
              statearr_25705_25720[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_25701 === 4) {
                var inst_25689 = state_25700[7];
                var inst_25689__$1 = state_25700[2];
                var inst_25690 = inst_25689__$1 == null;
                var state_25700__$1 = function() {
                  var statearr_25706 = state_25700;
                  statearr_25706[7] = inst_25689__$1;
                  return statearr_25706;
                }();
                if (cljs.core.truth_(inst_25690)) {
                  var statearr_25707_25721 = state_25700__$1;
                  statearr_25707_25721[1] = 5;
                } else {
                  var statearr_25708_25722 = state_25700__$1;
                  statearr_25708_25722[1] = 6;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_25701 === 3) {
                  var inst_25698 = state_25700[2];
                  var state_25700__$1 = state_25700;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_25700__$1, inst_25698);
                } else {
                  if (state_val_25701 === 2) {
                    var state_25700__$1 = state_25700;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_25700__$1, 4, ch);
                  } else {
                    if (state_val_25701 === 1) {
                      var inst_25686 = init;
                      var state_25700__$1 = function() {
                        var statearr_25709 = state_25700;
                        statearr_25709[8] = inst_25686;
                        return statearr_25709;
                      }();
                      var statearr_25710_25723 = state_25700__$1;
                      statearr_25710_25723[2] = null;
                      statearr_25710_25723[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      return null;
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5998__auto__) {
        return function() {
          var state_machine__5999__auto__ = null;
          var state_machine__5999__auto____0 = function() {
            var statearr_25714 = [null, null, null, null, null, null, null, null, null];
            statearr_25714[0] = state_machine__5999__auto__;
            statearr_25714[1] = 1;
            return statearr_25714;
          };
          var state_machine__5999__auto____1 = function(state_25700) {
            while (true) {
              var ret_value__6000__auto__ = function() {
                try {
                  while (true) {
                    var result__6001__auto__ = switch__5998__auto__.call(null, state_25700);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6001__auto__;
                    }
                    break;
                  }
                } catch (e25715) {
                  if (e25715 instanceof Object) {
                    var ex__6002__auto__ = e25715;
                    var statearr_25716_25724 = state_25700;
                    statearr_25716_25724[5] = ex__6002__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_25700);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e25715;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__25725 = state_25700;
                state_25700 = G__25725;
                continue;
              } else {
                return ret_value__6000__auto__;
              }
              break;
            }
          };
          state_machine__5999__auto__ = function(state_25700) {
            switch(arguments.length) {
              case 0:
                return state_machine__5999__auto____0.call(this);
              case 1:
                return state_machine__5999__auto____1.call(this, state_25700);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
          return state_machine__5999__auto__;
        }();
      }(switch__5998__auto__);
    }();
    var state__6070__auto__ = function() {
      var statearr_25717 = f__6069__auto__.call(null);
      statearr_25717[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto__;
      return statearr_25717;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
  });
  return c__6068__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6068__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6069__auto__ = function() {
        var switch__5998__auto__ = function(state_25787) {
          var state_val_25788 = state_25787[1];
          if (state_val_25788 === 1) {
            var inst_25767 = cljs.core.seq.call(null, coll);
            var inst_25768 = inst_25767;
            var state_25787__$1 = function() {
              var statearr_25789 = state_25787;
              statearr_25789[7] = inst_25768;
              return statearr_25789;
            }();
            var statearr_25790_25808 = state_25787__$1;
            statearr_25790_25808[2] = null;
            statearr_25790_25808[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_25788 === 2) {
              var inst_25768 = state_25787[7];
              var state_25787__$1 = state_25787;
              if (cljs.core.truth_(inst_25768)) {
                var statearr_25791_25809 = state_25787__$1;
                statearr_25791_25809[1] = 4;
              } else {
                var statearr_25792_25810 = state_25787__$1;
                statearr_25792_25810[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_25788 === 3) {
                var inst_25785 = state_25787[2];
                var state_25787__$1 = state_25787;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_25787__$1, inst_25785);
              } else {
                if (state_val_25788 === 4) {
                  var inst_25768 = state_25787[7];
                  var inst_25771 = cljs.core.first.call(null, inst_25768);
                  var state_25787__$1 = state_25787;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_25787__$1, 7, ch, inst_25771);
                } else {
                  if (state_val_25788 === 5) {
                    var state_25787__$1 = state_25787;
                    if (cljs.core.truth_(close_QMARK_)) {
                      var statearr_25793_25811 = state_25787__$1;
                      statearr_25793_25811[1] = 8;
                    } else {
                      var statearr_25794_25812 = state_25787__$1;
                      statearr_25794_25812[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_25788 === 6) {
                      var inst_25783 = state_25787[2];
                      var state_25787__$1 = state_25787;
                      var statearr_25795_25813 = state_25787__$1;
                      statearr_25795_25813[2] = inst_25783;
                      statearr_25795_25813[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_25788 === 7) {
                        var inst_25768 = state_25787[7];
                        var inst_25773 = state_25787[2];
                        var inst_25774 = cljs.core.next.call(null, inst_25768);
                        var inst_25768__$1 = inst_25774;
                        var state_25787__$1 = function() {
                          var statearr_25796 = state_25787;
                          statearr_25796[8] = inst_25773;
                          statearr_25796[7] = inst_25768__$1;
                          return statearr_25796;
                        }();
                        var statearr_25797_25814 = state_25787__$1;
                        statearr_25797_25814[2] = null;
                        statearr_25797_25814[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_25788 === 8) {
                          var inst_25778 = cljs.core.async.close_BANG_.call(null, ch);
                          var state_25787__$1 = state_25787;
                          var statearr_25798_25815 = state_25787__$1;
                          statearr_25798_25815[2] = inst_25778;
                          statearr_25798_25815[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_25788 === 9) {
                            var state_25787__$1 = state_25787;
                            var statearr_25799_25816 = state_25787__$1;
                            statearr_25799_25816[2] = null;
                            statearr_25799_25816[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_25788 === 10) {
                              var inst_25781 = state_25787[2];
                              var state_25787__$1 = state_25787;
                              var statearr_25800_25817 = state_25787__$1;
                              statearr_25800_25817[2] = inst_25781;
                              statearr_25800_25817[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5998__auto__) {
          return function() {
            var state_machine__5999__auto__ = null;
            var state_machine__5999__auto____0 = function() {
              var statearr_25804 = [null, null, null, null, null, null, null, null, null];
              statearr_25804[0] = state_machine__5999__auto__;
              statearr_25804[1] = 1;
              return statearr_25804;
            };
            var state_machine__5999__auto____1 = function(state_25787) {
              while (true) {
                var ret_value__6000__auto__ = function() {
                  try {
                    while (true) {
                      var result__6001__auto__ = switch__5998__auto__.call(null, state_25787);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6001__auto__;
                      }
                      break;
                    }
                  } catch (e25805) {
                    if (e25805 instanceof Object) {
                      var ex__6002__auto__ = e25805;
                      var statearr_25806_25818 = state_25787;
                      statearr_25806_25818[5] = ex__6002__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_25787);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e25805;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__25819 = state_25787;
                  state_25787 = G__25819;
                  continue;
                } else {
                  return ret_value__6000__auto__;
                }
                break;
              }
            };
            state_machine__5999__auto__ = function(state_25787) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5999__auto____0.call(this);
                case 1:
                  return state_machine__5999__auto____1.call(this, state_25787);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
            return state_machine__5999__auto__;
          }();
        }(switch__5998__auto__);
      }();
      var state__6070__auto__ = function() {
        var statearr_25807 = f__6069__auto__.call(null);
        statearr_25807[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto__;
        return statearr_25807;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
    });
    return c__6068__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj25821 = {};
  return obj25821;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3431__auto__ = _;
    if (and__3431__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4070__auto__ = _ == null ? null : _;
    return function() {
      var or__3443__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj25823 = {};
  return obj25823;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t26047 !== "undefined") {
    } else {
      cljs.core.async.t26047 = function(cs, ch, mult, meta26048) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta26048 = meta26048;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t26047.cljs$lang$type = true;
      cljs.core.async.t26047.cljs$lang$ctorStr = "cljs.core.async/t26047";
      cljs.core.async.t26047.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
          return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t26047");
        };
      }(cs);
      cljs.core.async.t26047.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t26047.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t26047.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t26047.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t26047.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t26047.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t26047.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_26049) {
          var self__ = this;
          var _26049__$1 = this;
          return self__.meta26048;
        };
      }(cs);
      cljs.core.async.t26047.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_26049, meta26048__$1) {
          var self__ = this;
          var _26049__$1 = this;
          return new cljs.core.async.t26047(self__.cs, self__.ch, self__.mult, meta26048__$1);
        };
      }(cs);
      cljs.core.async.__GT_t26047 = function(cs) {
        return function __GT_t26047(cs__$1, ch__$1, mult__$1, meta26048) {
          return new cljs.core.async.t26047(cs__$1, ch__$1, mult__$1, meta26048);
        };
      }(cs);
    }
    return new cljs.core.async.t26047(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6068__auto___26270 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6069__auto__ = function() {
      var switch__5998__auto__ = function(state_26184) {
        var state_val_26185 = state_26184[1];
        if (state_val_26185 === 32) {
          var inst_26128 = state_26184[7];
          var inst_26052 = state_26184[8];
          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_26184, 31, Object, null, 30);
          var inst_26135 = cljs.core.async.put_BANG_.call(null, inst_26128, inst_26052, done);
          var state_26184__$1 = state_26184;
          var statearr_26186_26271 = state_26184__$1;
          statearr_26186_26271[2] = inst_26135;
          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26184__$1);
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_26185 === 1) {
            var state_26184__$1 = state_26184;
            var statearr_26187_26272 = state_26184__$1;
            statearr_26187_26272[2] = null;
            statearr_26187_26272[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_26185 === 33) {
              var inst_26141 = state_26184[9];
              var inst_26143 = cljs.core.chunked_seq_QMARK_.call(null, inst_26141);
              var state_26184__$1 = state_26184;
              if (inst_26143) {
                var statearr_26188_26273 = state_26184__$1;
                statearr_26188_26273[1] = 36;
              } else {
                var statearr_26189_26274 = state_26184__$1;
                statearr_26189_26274[1] = 37;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_26185 === 2) {
                var state_26184__$1 = state_26184;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26184__$1, 4, ch);
              } else {
                if (state_val_26185 === 34) {
                  var state_26184__$1 = state_26184;
                  var statearr_26190_26275 = state_26184__$1;
                  statearr_26190_26275[2] = null;
                  statearr_26190_26275[1] = 35;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_26185 === 3) {
                    var inst_26182 = state_26184[2];
                    var state_26184__$1 = state_26184;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26184__$1, inst_26182);
                  } else {
                    if (state_val_26185 === 35) {
                      var inst_26166 = state_26184[2];
                      var state_26184__$1 = state_26184;
                      var statearr_26191_26276 = state_26184__$1;
                      statearr_26191_26276[2] = inst_26166;
                      statearr_26191_26276[1] = 29;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_26185 === 4) {
                        var inst_26052 = state_26184[8];
                        var inst_26052__$1 = state_26184[2];
                        var inst_26053 = inst_26052__$1 == null;
                        var state_26184__$1 = function() {
                          var statearr_26192 = state_26184;
                          statearr_26192[8] = inst_26052__$1;
                          return statearr_26192;
                        }();
                        if (cljs.core.truth_(inst_26053)) {
                          var statearr_26193_26277 = state_26184__$1;
                          statearr_26193_26277[1] = 5;
                        } else {
                          var statearr_26194_26278 = state_26184__$1;
                          statearr_26194_26278[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_26185 === 36) {
                          var inst_26141 = state_26184[9];
                          var inst_26145 = cljs.core.chunk_first.call(null, inst_26141);
                          var inst_26146 = cljs.core.chunk_rest.call(null, inst_26141);
                          var inst_26147 = cljs.core.count.call(null, inst_26145);
                          var inst_26120 = inst_26146;
                          var inst_26121 = inst_26145;
                          var inst_26122 = inst_26147;
                          var inst_26123 = 0;
                          var state_26184__$1 = function() {
                            var statearr_26195 = state_26184;
                            statearr_26195[10] = inst_26122;
                            statearr_26195[11] = inst_26123;
                            statearr_26195[12] = inst_26121;
                            statearr_26195[13] = inst_26120;
                            return statearr_26195;
                          }();
                          var statearr_26196_26279 = state_26184__$1;
                          statearr_26196_26279[2] = null;
                          statearr_26196_26279[1] = 25;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_26185 === 5) {
                            var inst_26059 = cljs.core.deref.call(null, cs);
                            var inst_26060 = cljs.core.seq.call(null, inst_26059);
                            var inst_26061 = inst_26060;
                            var inst_26062 = null;
                            var inst_26063 = 0;
                            var inst_26064 = 0;
                            var state_26184__$1 = function() {
                              var statearr_26197 = state_26184;
                              statearr_26197[14] = inst_26064;
                              statearr_26197[15] = inst_26063;
                              statearr_26197[16] = inst_26061;
                              statearr_26197[17] = inst_26062;
                              return statearr_26197;
                            }();
                            var statearr_26198_26280 = state_26184__$1;
                            statearr_26198_26280[2] = null;
                            statearr_26198_26280[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_26185 === 37) {
                              var inst_26141 = state_26184[9];
                              var inst_26150 = cljs.core.first.call(null, inst_26141);
                              var state_26184__$1 = function() {
                                var statearr_26199 = state_26184;
                                statearr_26199[18] = inst_26150;
                                return statearr_26199;
                              }();
                              var statearr_26200_26281 = state_26184__$1;
                              statearr_26200_26281[2] = null;
                              statearr_26200_26281[1] = 41;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_26185 === 6) {
                                var inst_26112 = state_26184[19];
                                var inst_26111 = cljs.core.deref.call(null, cs);
                                var inst_26112__$1 = cljs.core.keys.call(null, inst_26111);
                                var inst_26113 = cljs.core.count.call(null, inst_26112__$1);
                                var inst_26114 = cljs.core.reset_BANG_.call(null, dctr, inst_26113);
                                var inst_26119 = cljs.core.seq.call(null, inst_26112__$1);
                                var inst_26120 = inst_26119;
                                var inst_26121 = null;
                                var inst_26122 = 0;
                                var inst_26123 = 0;
                                var state_26184__$1 = function() {
                                  var statearr_26201 = state_26184;
                                  statearr_26201[20] = inst_26114;
                                  statearr_26201[19] = inst_26112__$1;
                                  statearr_26201[10] = inst_26122;
                                  statearr_26201[11] = inst_26123;
                                  statearr_26201[12] = inst_26121;
                                  statearr_26201[13] = inst_26120;
                                  return statearr_26201;
                                }();
                                var statearr_26202_26282 = state_26184__$1;
                                statearr_26202_26282[2] = null;
                                statearr_26202_26282[1] = 25;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_26185 === 38) {
                                  var inst_26163 = state_26184[2];
                                  var state_26184__$1 = state_26184;
                                  var statearr_26203_26283 = state_26184__$1;
                                  statearr_26203_26283[2] = inst_26163;
                                  statearr_26203_26283[1] = 35;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_26185 === 7) {
                                    var inst_26180 = state_26184[2];
                                    var state_26184__$1 = state_26184;
                                    var statearr_26204_26284 = state_26184__$1;
                                    statearr_26204_26284[2] = inst_26180;
                                    statearr_26204_26284[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_26185 === 39) {
                                      var inst_26141 = state_26184[9];
                                      var inst_26159 = state_26184[2];
                                      var inst_26160 = cljs.core.next.call(null, inst_26141);
                                      var inst_26120 = inst_26160;
                                      var inst_26121 = null;
                                      var inst_26122 = 0;
                                      var inst_26123 = 0;
                                      var state_26184__$1 = function() {
                                        var statearr_26205 = state_26184;
                                        statearr_26205[21] = inst_26159;
                                        statearr_26205[10] = inst_26122;
                                        statearr_26205[11] = inst_26123;
                                        statearr_26205[12] = inst_26121;
                                        statearr_26205[13] = inst_26120;
                                        return statearr_26205;
                                      }();
                                      var statearr_26206_26285 = state_26184__$1;
                                      statearr_26206_26285[2] = null;
                                      statearr_26206_26285[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_26185 === 8) {
                                        var inst_26064 = state_26184[14];
                                        var inst_26063 = state_26184[15];
                                        var inst_26066 = inst_26064 < inst_26063;
                                        var inst_26067 = inst_26066;
                                        var state_26184__$1 = state_26184;
                                        if (cljs.core.truth_(inst_26067)) {
                                          var statearr_26207_26286 = state_26184__$1;
                                          statearr_26207_26286[1] = 10;
                                        } else {
                                          var statearr_26208_26287 = state_26184__$1;
                                          statearr_26208_26287[1] = 11;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_26185 === 40) {
                                          var inst_26150 = state_26184[18];
                                          var inst_26151 = state_26184[2];
                                          var inst_26152 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var inst_26153 = cljs.core.async.untap_STAR_.call(null, m, inst_26150);
                                          var state_26184__$1 = function() {
                                            var statearr_26209 = state_26184;
                                            statearr_26209[22] = inst_26152;
                                            statearr_26209[23] = inst_26151;
                                            return statearr_26209;
                                          }();
                                          var statearr_26210_26288 = state_26184__$1;
                                          statearr_26210_26288[2] = inst_26153;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26184__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_26185 === 9) {
                                            var inst_26109 = state_26184[2];
                                            var state_26184__$1 = state_26184;
                                            var statearr_26211_26289 = state_26184__$1;
                                            statearr_26211_26289[2] = inst_26109;
                                            statearr_26211_26289[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_26185 === 41) {
                                              var inst_26150 = state_26184[18];
                                              var inst_26052 = state_26184[8];
                                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_26184, 40, Object, null, 39);
                                              var inst_26157 = cljs.core.async.put_BANG_.call(null, inst_26150, inst_26052, done);
                                              var state_26184__$1 = state_26184;
                                              var statearr_26212_26290 = state_26184__$1;
                                              statearr_26212_26290[2] = inst_26157;
                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26184__$1);
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_26185 === 10) {
                                                var inst_26064 = state_26184[14];
                                                var inst_26062 = state_26184[17];
                                                var inst_26070 = cljs.core._nth.call(null, inst_26062, inst_26064);
                                                var inst_26071 = cljs.core.nth.call(null, inst_26070, 0, null);
                                                var inst_26072 = cljs.core.nth.call(null, inst_26070, 1, null);
                                                var state_26184__$1 = function() {
                                                  var statearr_26213 = state_26184;
                                                  statearr_26213[24] = inst_26071;
                                                  return statearr_26213;
                                                }();
                                                if (cljs.core.truth_(inst_26072)) {
                                                  var statearr_26214_26291 = state_26184__$1;
                                                  statearr_26214_26291[1] = 13;
                                                } else {
                                                  var statearr_26215_26292 = state_26184__$1;
                                                  statearr_26215_26292[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_26185 === 42) {
                                                  var state_26184__$1 = state_26184;
                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26184__$1, 45, dchan);
                                                } else {
                                                  if (state_val_26185 === 11) {
                                                    var inst_26081 = state_26184[25];
                                                    var inst_26061 = state_26184[16];
                                                    var inst_26081__$1 = cljs.core.seq.call(null, inst_26061);
                                                    var state_26184__$1 = function() {
                                                      var statearr_26216 = state_26184;
                                                      statearr_26216[25] = inst_26081__$1;
                                                      return statearr_26216;
                                                    }();
                                                    if (inst_26081__$1) {
                                                      var statearr_26217_26293 = state_26184__$1;
                                                      statearr_26217_26293[1] = 16;
                                                    } else {
                                                      var statearr_26218_26294 = state_26184__$1;
                                                      statearr_26218_26294[1] = 17;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_26185 === 43) {
                                                      var state_26184__$1 = state_26184;
                                                      var statearr_26219_26295 = state_26184__$1;
                                                      statearr_26219_26295[2] = null;
                                                      statearr_26219_26295[1] = 44;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_26185 === 12) {
                                                        var inst_26107 = state_26184[2];
                                                        var state_26184__$1 = state_26184;
                                                        var statearr_26220_26296 = state_26184__$1;
                                                        statearr_26220_26296[2] = inst_26107;
                                                        statearr_26220_26296[1] = 9;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_26185 === 44) {
                                                          var inst_26177 = state_26184[2];
                                                          var state_26184__$1 = function() {
                                                            var statearr_26221 = state_26184;
                                                            statearr_26221[26] = inst_26177;
                                                            return statearr_26221;
                                                          }();
                                                          var statearr_26222_26297 = state_26184__$1;
                                                          statearr_26222_26297[2] = null;
                                                          statearr_26222_26297[1] = 2;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          if (state_val_26185 === 13) {
                                                            var inst_26071 = state_26184[24];
                                                            var inst_26074 = cljs.core.async.close_BANG_.call(null, inst_26071);
                                                            var state_26184__$1 = state_26184;
                                                            var statearr_26223_26298 = state_26184__$1;
                                                            statearr_26223_26298[2] = inst_26074;
                                                            statearr_26223_26298[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            if (state_val_26185 === 45) {
                                                              var inst_26174 = state_26184[2];
                                                              var state_26184__$1 = state_26184;
                                                              var statearr_26227_26299 = state_26184__$1;
                                                              statearr_26227_26299[2] = inst_26174;
                                                              statearr_26227_26299[1] = 44;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                            } else {
                                                              if (state_val_26185 === 14) {
                                                                var state_26184__$1 = state_26184;
                                                                var statearr_26228_26300 = state_26184__$1;
                                                                statearr_26228_26300[2] = null;
                                                                statearr_26228_26300[1] = 15;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                              } else {
                                                                if (state_val_26185 === 15) {
                                                                  var inst_26064 = state_26184[14];
                                                                  var inst_26063 = state_26184[15];
                                                                  var inst_26061 = state_26184[16];
                                                                  var inst_26062 = state_26184[17];
                                                                  var inst_26077 = state_26184[2];
                                                                  var inst_26078 = inst_26064 + 1;
                                                                  var tmp26224 = inst_26063;
                                                                  var tmp26225 = inst_26061;
                                                                  var tmp26226 = inst_26062;
                                                                  var inst_26061__$1 = tmp26225;
                                                                  var inst_26062__$1 = tmp26226;
                                                                  var inst_26063__$1 = tmp26224;
                                                                  var inst_26064__$1 = inst_26078;
                                                                  var state_26184__$1 = function() {
                                                                    var statearr_26229 = state_26184;
                                                                    statearr_26229[14] = inst_26064__$1;
                                                                    statearr_26229[15] = inst_26063__$1;
                                                                    statearr_26229[27] = inst_26077;
                                                                    statearr_26229[16] = inst_26061__$1;
                                                                    statearr_26229[17] = inst_26062__$1;
                                                                    return statearr_26229;
                                                                  }();
                                                                  var statearr_26230_26301 = state_26184__$1;
                                                                  statearr_26230_26301[2] = null;
                                                                  statearr_26230_26301[1] = 8;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                } else {
                                                                  if (state_val_26185 === 16) {
                                                                    var inst_26081 = state_26184[25];
                                                                    var inst_26083 = cljs.core.chunked_seq_QMARK_.call(null, inst_26081);
                                                                    var state_26184__$1 = state_26184;
                                                                    if (inst_26083) {
                                                                      var statearr_26231_26302 = state_26184__$1;
                                                                      statearr_26231_26302[1] = 19;
                                                                    } else {
                                                                      var statearr_26232_26303 = state_26184__$1;
                                                                      statearr_26232_26303[1] = 20;
                                                                    }
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                  } else {
                                                                    if (state_val_26185 === 17) {
                                                                      var state_26184__$1 = state_26184;
                                                                      var statearr_26233_26304 = state_26184__$1;
                                                                      statearr_26233_26304[2] = null;
                                                                      statearr_26233_26304[1] = 18;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                    } else {
                                                                      if (state_val_26185 === 18) {
                                                                        var inst_26105 = state_26184[2];
                                                                        var state_26184__$1 = state_26184;
                                                                        var statearr_26234_26305 = state_26184__$1;
                                                                        statearr_26234_26305[2] = inst_26105;
                                                                        statearr_26234_26305[1] = 12;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                      } else {
                                                                        if (state_val_26185 === 19) {
                                                                          var inst_26081 = state_26184[25];
                                                                          var inst_26085 = cljs.core.chunk_first.call(null, inst_26081);
                                                                          var inst_26086 = cljs.core.chunk_rest.call(null, inst_26081);
                                                                          var inst_26087 = cljs.core.count.call(null, inst_26085);
                                                                          var inst_26061 = inst_26086;
                                                                          var inst_26062 = inst_26085;
                                                                          var inst_26063 = inst_26087;
                                                                          var inst_26064 = 0;
                                                                          var state_26184__$1 = function() {
                                                                            var statearr_26235 = state_26184;
                                                                            statearr_26235[14] = inst_26064;
                                                                            statearr_26235[15] = inst_26063;
                                                                            statearr_26235[16] = inst_26061;
                                                                            statearr_26235[17] = inst_26062;
                                                                            return statearr_26235;
                                                                          }();
                                                                          var statearr_26236_26306 = state_26184__$1;
                                                                          statearr_26236_26306[2] = null;
                                                                          statearr_26236_26306[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                        } else {
                                                                          if (state_val_26185 === 20) {
                                                                            var inst_26081 = state_26184[25];
                                                                            var inst_26091 = cljs.core.first.call(null, inst_26081);
                                                                            var inst_26092 = cljs.core.nth.call(null, inst_26091, 0, null);
                                                                            var inst_26093 = cljs.core.nth.call(null, inst_26091, 1, null);
                                                                            var state_26184__$1 = function() {
                                                                              var statearr_26237 = state_26184;
                                                                              statearr_26237[28] = inst_26092;
                                                                              return statearr_26237;
                                                                            }();
                                                                            if (cljs.core.truth_(inst_26093)) {
                                                                              var statearr_26238_26307 = state_26184__$1;
                                                                              statearr_26238_26307[1] = 22;
                                                                            } else {
                                                                              var statearr_26239_26308 = state_26184__$1;
                                                                              statearr_26239_26308[1] = 23;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                          } else {
                                                                            if (state_val_26185 === 21) {
                                                                              var inst_26102 = state_26184[2];
                                                                              var state_26184__$1 = state_26184;
                                                                              var statearr_26240_26309 = state_26184__$1;
                                                                              statearr_26240_26309[2] = inst_26102;
                                                                              statearr_26240_26309[1] = 18;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                            } else {
                                                                              if (state_val_26185 === 22) {
                                                                                var inst_26092 = state_26184[28];
                                                                                var inst_26095 = cljs.core.async.close_BANG_.call(null, inst_26092);
                                                                                var state_26184__$1 = state_26184;
                                                                                var statearr_26241_26310 = state_26184__$1;
                                                                                statearr_26241_26310[2] = inst_26095;
                                                                                statearr_26241_26310[1] = 24;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                              } else {
                                                                                if (state_val_26185 === 23) {
                                                                                  var state_26184__$1 = state_26184;
                                                                                  var statearr_26242_26311 = state_26184__$1;
                                                                                  statearr_26242_26311[2] = null;
                                                                                  statearr_26242_26311[1] = 24;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                } else {
                                                                                  if (state_val_26185 === 24) {
                                                                                    var inst_26081 = state_26184[25];
                                                                                    var inst_26098 = state_26184[2];
                                                                                    var inst_26099 = cljs.core.next.call(null, inst_26081);
                                                                                    var inst_26061 = inst_26099;
                                                                                    var inst_26062 = null;
                                                                                    var inst_26063 = 0;
                                                                                    var inst_26064 = 0;
                                                                                    var state_26184__$1 = function() {
                                                                                      var statearr_26243 = state_26184;
                                                                                      statearr_26243[14] = inst_26064;
                                                                                      statearr_26243[15] = inst_26063;
                                                                                      statearr_26243[16] = inst_26061;
                                                                                      statearr_26243[17] = inst_26062;
                                                                                      statearr_26243[29] = inst_26098;
                                                                                      return statearr_26243;
                                                                                    }();
                                                                                    var statearr_26244_26312 = state_26184__$1;
                                                                                    statearr_26244_26312[2] = null;
                                                                                    statearr_26244_26312[1] = 8;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                  } else {
                                                                                    if (state_val_26185 === 25) {
                                                                                      var inst_26122 = state_26184[10];
                                                                                      var inst_26123 = state_26184[11];
                                                                                      var inst_26125 = inst_26123 < inst_26122;
                                                                                      var inst_26126 = inst_26125;
                                                                                      var state_26184__$1 = state_26184;
                                                                                      if (cljs.core.truth_(inst_26126)) {
                                                                                        var statearr_26245_26313 = state_26184__$1;
                                                                                        statearr_26245_26313[1] = 27;
                                                                                      } else {
                                                                                        var statearr_26246_26314 = state_26184__$1;
                                                                                        statearr_26246_26314[1] = 28;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                    } else {
                                                                                      if (state_val_26185 === 26) {
                                                                                        var inst_26112 = state_26184[19];
                                                                                        var inst_26170 = state_26184[2];
                                                                                        var inst_26171 = cljs.core.seq.call(null, inst_26112);
                                                                                        var state_26184__$1 = function() {
                                                                                          var statearr_26247 = state_26184;
                                                                                          statearr_26247[30] = inst_26170;
                                                                                          return statearr_26247;
                                                                                        }();
                                                                                        if (inst_26171) {
                                                                                          var statearr_26248_26315 = state_26184__$1;
                                                                                          statearr_26248_26315[1] = 42;
                                                                                        } else {
                                                                                          var statearr_26249_26316 = state_26184__$1;
                                                                                          statearr_26249_26316[1] = 43;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                      } else {
                                                                                        if (state_val_26185 === 27) {
                                                                                          var inst_26123 = state_26184[11];
                                                                                          var inst_26121 = state_26184[12];
                                                                                          var inst_26128 = cljs.core._nth.call(null, inst_26121, inst_26123);
                                                                                          var state_26184__$1 = function() {
                                                                                            var statearr_26250 = state_26184;
                                                                                            statearr_26250[7] = inst_26128;
                                                                                            return statearr_26250;
                                                                                          }();
                                                                                          var statearr_26251_26317 = state_26184__$1;
                                                                                          statearr_26251_26317[2] = null;
                                                                                          statearr_26251_26317[1] = 32;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                        } else {
                                                                                          if (state_val_26185 === 28) {
                                                                                            var inst_26141 = state_26184[9];
                                                                                            var inst_26120 = state_26184[13];
                                                                                            var inst_26141__$1 = cljs.core.seq.call(null, inst_26120);
                                                                                            var state_26184__$1 = function() {
                                                                                              var statearr_26255 = state_26184;
                                                                                              statearr_26255[9] = inst_26141__$1;
                                                                                              return statearr_26255;
                                                                                            }();
                                                                                            if (inst_26141__$1) {
                                                                                              var statearr_26256_26318 = state_26184__$1;
                                                                                              statearr_26256_26318[1] = 33;
                                                                                            } else {
                                                                                              var statearr_26257_26319 = state_26184__$1;
                                                                                              statearr_26257_26319[1] = 34;
                                                                                            }
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                          } else {
                                                                                            if (state_val_26185 === 29) {
                                                                                              var inst_26168 = state_26184[2];
                                                                                              var state_26184__$1 = state_26184;
                                                                                              var statearr_26258_26320 = state_26184__$1;
                                                                                              statearr_26258_26320[2] = inst_26168;
                                                                                              statearr_26258_26320[1] = 26;
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                            } else {
                                                                                              if (state_val_26185 === 30) {
                                                                                                var inst_26122 = state_26184[10];
                                                                                                var inst_26123 = state_26184[11];
                                                                                                var inst_26121 = state_26184[12];
                                                                                                var inst_26120 = state_26184[13];
                                                                                                var inst_26137 = state_26184[2];
                                                                                                var inst_26138 = inst_26123 + 1;
                                                                                                var tmp26252 = inst_26122;
                                                                                                var tmp26253 = inst_26121;
                                                                                                var tmp26254 = inst_26120;
                                                                                                var inst_26120__$1 = tmp26254;
                                                                                                var inst_26121__$1 = tmp26253;
                                                                                                var inst_26122__$1 = tmp26252;
                                                                                                var inst_26123__$1 = inst_26138;
                                                                                                var state_26184__$1 = function() {
                                                                                                  var statearr_26259 = state_26184;
                                                                                                  statearr_26259[10] = inst_26122__$1;
                                                                                                  statearr_26259[11] = inst_26123__$1;
                                                                                                  statearr_26259[12] = inst_26121__$1;
                                                                                                  statearr_26259[31] = inst_26137;
                                                                                                  statearr_26259[13] = inst_26120__$1;
                                                                                                  return statearr_26259;
                                                                                                }();
                                                                                                var statearr_26260_26321 = state_26184__$1;
                                                                                                statearr_26260_26321[2] = null;
                                                                                                statearr_26260_26321[1] = 25;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                              } else {
                                                                                                if (state_val_26185 === 31) {
                                                                                                  var inst_26128 = state_26184[7];
                                                                                                  var inst_26129 = state_26184[2];
                                                                                                  var inst_26130 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                                                                                  var inst_26131 = cljs.core.async.untap_STAR_.call(null, m, inst_26128);
                                                                                                  var state_26184__$1 = function() {
                                                                                                    var statearr_26261 = state_26184;
                                                                                                    statearr_26261[32] = inst_26129;
                                                                                                    statearr_26261[33] = inst_26130;
                                                                                                    return statearr_26261;
                                                                                                  }();
                                                                                                  var statearr_26262_26322 = state_26184__$1;
                                                                                                  statearr_26262_26322[2] = inst_26131;
                                                                                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26184__$1);
                                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                                                                } else {
                                                                                                  return null;
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5998__auto__) {
        return function() {
          var state_machine__5999__auto__ = null;
          var state_machine__5999__auto____0 = function() {
            var statearr_26266 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_26266[0] = state_machine__5999__auto__;
            statearr_26266[1] = 1;
            return statearr_26266;
          };
          var state_machine__5999__auto____1 = function(state_26184) {
            while (true) {
              var ret_value__6000__auto__ = function() {
                try {
                  while (true) {
                    var result__6001__auto__ = switch__5998__auto__.call(null, state_26184);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6001__auto__;
                    }
                    break;
                  }
                } catch (e26267) {
                  if (e26267 instanceof Object) {
                    var ex__6002__auto__ = e26267;
                    var statearr_26268_26323 = state_26184;
                    statearr_26268_26323[5] = ex__6002__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26184);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e26267;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__26324 = state_26184;
                state_26184 = G__26324;
                continue;
              } else {
                return ret_value__6000__auto__;
              }
              break;
            }
          };
          state_machine__5999__auto__ = function(state_26184) {
            switch(arguments.length) {
              case 0:
                return state_machine__5999__auto____0.call(this);
              case 1:
                return state_machine__5999__auto____1.call(this, state_26184);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
          return state_machine__5999__auto__;
        }();
      }(switch__5998__auto__);
    }();
    var state__6070__auto__ = function() {
      var statearr_26269 = f__6069__auto__.call(null);
      statearr_26269[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto___26270;
      return statearr_26269;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
  });
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj26326 = {};
  return obj26326;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3431__auto__ = m;
    if (and__3431__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4070__auto__ = m == null ? null : m;
    return function() {
      var or__3443__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t26436 !== "undefined") {
    } else {
      cljs.core.async.t26436 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta26437) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta26437 = meta26437;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t26436.cljs$lang$type = true;
      cljs.core.async.t26436.cljs$lang$ctorStr = "cljs.core.async/t26436";
      cljs.core.async.t26436.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
          return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t26436");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t26436.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t26436.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t26436.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t26436.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t26436.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t26436.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t26436.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t26436.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t26436.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_26438) {
          var self__ = this;
          var _26438__$1 = this;
          return self__.meta26437;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t26436.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_26438, meta26437__$1) {
          var self__ = this;
          var _26438__$1 = this;
          return new cljs.core.async.t26436(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta26437__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t26436 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t26436(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta26437) {
          return new cljs.core.async.t26436(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta26437);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t26436(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null);
  }();
  var c__6068__auto___26545 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6069__auto__ = function() {
      var switch__5998__auto__ = function(state_26503) {
        var state_val_26504 = state_26503[1];
        if (state_val_26504 === 1) {
          var inst_26442 = state_26503[7];
          var inst_26442__$1 = calc_state.call(null);
          var inst_26443 = cljs.core.seq_QMARK_.call(null, inst_26442__$1);
          var state_26503__$1 = function() {
            var statearr_26505 = state_26503;
            statearr_26505[7] = inst_26442__$1;
            return statearr_26505;
          }();
          if (inst_26443) {
            var statearr_26506_26546 = state_26503__$1;
            statearr_26506_26546[1] = 2;
          } else {
            var statearr_26507_26547 = state_26503__$1;
            statearr_26507_26547[1] = 3;
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_26504 === 2) {
            var inst_26442 = state_26503[7];
            var inst_26445 = cljs.core.apply.call(null, cljs.core.hash_map, inst_26442);
            var state_26503__$1 = state_26503;
            var statearr_26508_26548 = state_26503__$1;
            statearr_26508_26548[2] = inst_26445;
            statearr_26508_26548[1] = 4;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_26504 === 3) {
              var inst_26442 = state_26503[7];
              var state_26503__$1 = state_26503;
              var statearr_26509_26549 = state_26503__$1;
              statearr_26509_26549[2] = inst_26442;
              statearr_26509_26549[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_26504 === 4) {
                var inst_26442 = state_26503[7];
                var inst_26448 = state_26503[2];
                var inst_26449 = cljs.core.get.call(null, inst_26448, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                var inst_26450 = cljs.core.get.call(null, inst_26448, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                var inst_26451 = cljs.core.get.call(null, inst_26448, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                var inst_26452 = inst_26442;
                var state_26503__$1 = function() {
                  var statearr_26510 = state_26503;
                  statearr_26510[8] = inst_26449;
                  statearr_26510[9] = inst_26452;
                  statearr_26510[10] = inst_26451;
                  statearr_26510[11] = inst_26450;
                  return statearr_26510;
                }();
                var statearr_26511_26550 = state_26503__$1;
                statearr_26511_26550[2] = null;
                statearr_26511_26550[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_26504 === 5) {
                  var inst_26452 = state_26503[9];
                  var inst_26455 = cljs.core.seq_QMARK_.call(null, inst_26452);
                  var state_26503__$1 = state_26503;
                  if (inst_26455) {
                    var statearr_26512_26551 = state_26503__$1;
                    statearr_26512_26551[1] = 7;
                  } else {
                    var statearr_26513_26552 = state_26503__$1;
                    statearr_26513_26552[1] = 8;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_26504 === 6) {
                    var inst_26501 = state_26503[2];
                    var state_26503__$1 = state_26503;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26503__$1, inst_26501);
                  } else {
                    if (state_val_26504 === 7) {
                      var inst_26452 = state_26503[9];
                      var inst_26457 = cljs.core.apply.call(null, cljs.core.hash_map, inst_26452);
                      var state_26503__$1 = state_26503;
                      var statearr_26514_26553 = state_26503__$1;
                      statearr_26514_26553[2] = inst_26457;
                      statearr_26514_26553[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_26504 === 8) {
                        var inst_26452 = state_26503[9];
                        var state_26503__$1 = state_26503;
                        var statearr_26515_26554 = state_26503__$1;
                        statearr_26515_26554[2] = inst_26452;
                        statearr_26515_26554[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_26504 === 9) {
                          var inst_26460 = state_26503[12];
                          var inst_26460__$1 = state_26503[2];
                          var inst_26461 = cljs.core.get.call(null, inst_26460__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                          var inst_26462 = cljs.core.get.call(null, inst_26460__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                          var inst_26463 = cljs.core.get.call(null, inst_26460__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                          var state_26503__$1 = function() {
                            var statearr_26516 = state_26503;
                            statearr_26516[13] = inst_26463;
                            statearr_26516[12] = inst_26460__$1;
                            statearr_26516[14] = inst_26462;
                            return statearr_26516;
                          }();
                          return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_26503__$1, 10, inst_26461);
                        } else {
                          if (state_val_26504 === 10) {
                            var inst_26468 = state_26503[15];
                            var inst_26467 = state_26503[16];
                            var inst_26466 = state_26503[2];
                            var inst_26467__$1 = cljs.core.nth.call(null, inst_26466, 0, null);
                            var inst_26468__$1 = cljs.core.nth.call(null, inst_26466, 1, null);
                            var inst_26469 = inst_26467__$1 == null;
                            var inst_26470 = cljs.core._EQ_.call(null, inst_26468__$1, change);
                            var inst_26471 = inst_26469 || inst_26470;
                            var state_26503__$1 = function() {
                              var statearr_26517 = state_26503;
                              statearr_26517[15] = inst_26468__$1;
                              statearr_26517[16] = inst_26467__$1;
                              return statearr_26517;
                            }();
                            if (cljs.core.truth_(inst_26471)) {
                              var statearr_26518_26555 = state_26503__$1;
                              statearr_26518_26555[1] = 11;
                            } else {
                              var statearr_26519_26556 = state_26503__$1;
                              statearr_26519_26556[1] = 12;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_26504 === 11) {
                              var inst_26467 = state_26503[16];
                              var inst_26473 = inst_26467 == null;
                              var state_26503__$1 = state_26503;
                              if (cljs.core.truth_(inst_26473)) {
                                var statearr_26520_26557 = state_26503__$1;
                                statearr_26520_26557[1] = 14;
                              } else {
                                var statearr_26521_26558 = state_26503__$1;
                                statearr_26521_26558[1] = 15;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_26504 === 12) {
                                var inst_26463 = state_26503[13];
                                var inst_26468 = state_26503[15];
                                var inst_26482 = state_26503[17];
                                var inst_26482__$1 = inst_26463.call(null, inst_26468);
                                var state_26503__$1 = function() {
                                  var statearr_26522 = state_26503;
                                  statearr_26522[17] = inst_26482__$1;
                                  return statearr_26522;
                                }();
                                if (cljs.core.truth_(inst_26482__$1)) {
                                  var statearr_26523_26559 = state_26503__$1;
                                  statearr_26523_26559[1] = 17;
                                } else {
                                  var statearr_26524_26560 = state_26503__$1;
                                  statearr_26524_26560[1] = 18;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_26504 === 13) {
                                  var inst_26499 = state_26503[2];
                                  var state_26503__$1 = state_26503;
                                  var statearr_26525_26561 = state_26503__$1;
                                  statearr_26525_26561[2] = inst_26499;
                                  statearr_26525_26561[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_26504 === 14) {
                                    var inst_26468 = state_26503[15];
                                    var inst_26475 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_26468);
                                    var state_26503__$1 = state_26503;
                                    var statearr_26526_26562 = state_26503__$1;
                                    statearr_26526_26562[2] = inst_26475;
                                    statearr_26526_26562[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_26504 === 15) {
                                      var state_26503__$1 = state_26503;
                                      var statearr_26527_26563 = state_26503__$1;
                                      statearr_26527_26563[2] = null;
                                      statearr_26527_26563[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_26504 === 16) {
                                        var inst_26478 = state_26503[2];
                                        var inst_26479 = calc_state.call(null);
                                        var inst_26452 = inst_26479;
                                        var state_26503__$1 = function() {
                                          var statearr_26528 = state_26503;
                                          statearr_26528[18] = inst_26478;
                                          statearr_26528[9] = inst_26452;
                                          return statearr_26528;
                                        }();
                                        var statearr_26529_26564 = state_26503__$1;
                                        statearr_26529_26564[2] = null;
                                        statearr_26529_26564[1] = 5;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_26504 === 17) {
                                          var inst_26482 = state_26503[17];
                                          var state_26503__$1 = state_26503;
                                          var statearr_26530_26565 = state_26503__$1;
                                          statearr_26530_26565[2] = inst_26482;
                                          statearr_26530_26565[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_26504 === 18) {
                                            var inst_26463 = state_26503[13];
                                            var inst_26462 = state_26503[14];
                                            var inst_26468 = state_26503[15];
                                            var inst_26485 = cljs.core.empty_QMARK_.call(null, inst_26463);
                                            var inst_26486 = inst_26462.call(null, inst_26468);
                                            var inst_26487 = cljs.core.not.call(null, inst_26486);
                                            var inst_26488 = inst_26485 && inst_26487;
                                            var state_26503__$1 = state_26503;
                                            var statearr_26531_26566 = state_26503__$1;
                                            statearr_26531_26566[2] = inst_26488;
                                            statearr_26531_26566[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_26504 === 19) {
                                              var inst_26490 = state_26503[2];
                                              var state_26503__$1 = state_26503;
                                              if (cljs.core.truth_(inst_26490)) {
                                                var statearr_26532_26567 = state_26503__$1;
                                                statearr_26532_26567[1] = 20;
                                              } else {
                                                var statearr_26533_26568 = state_26503__$1;
                                                statearr_26533_26568[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_26504 === 20) {
                                                var inst_26467 = state_26503[16];
                                                var state_26503__$1 = state_26503;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26503__$1, 23, out, inst_26467);
                                              } else {
                                                if (state_val_26504 === 21) {
                                                  var state_26503__$1 = state_26503;
                                                  var statearr_26534_26569 = state_26503__$1;
                                                  statearr_26534_26569[2] = null;
                                                  statearr_26534_26569[1] = 22;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_26504 === 22) {
                                                    var inst_26460 = state_26503[12];
                                                    var inst_26496 = state_26503[2];
                                                    var inst_26452 = inst_26460;
                                                    var state_26503__$1 = function() {
                                                      var statearr_26535 = state_26503;
                                                      statearr_26535[9] = inst_26452;
                                                      statearr_26535[19] = inst_26496;
                                                      return statearr_26535;
                                                    }();
                                                    var statearr_26536_26570 = state_26503__$1;
                                                    statearr_26536_26570[2] = null;
                                                    statearr_26536_26570[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_26504 === 23) {
                                                      var inst_26493 = state_26503[2];
                                                      var state_26503__$1 = state_26503;
                                                      var statearr_26537_26571 = state_26503__$1;
                                                      statearr_26537_26571[2] = inst_26493;
                                                      statearr_26537_26571[1] = 22;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5998__auto__) {
        return function() {
          var state_machine__5999__auto__ = null;
          var state_machine__5999__auto____0 = function() {
            var statearr_26541 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_26541[0] = state_machine__5999__auto__;
            statearr_26541[1] = 1;
            return statearr_26541;
          };
          var state_machine__5999__auto____1 = function(state_26503) {
            while (true) {
              var ret_value__6000__auto__ = function() {
                try {
                  while (true) {
                    var result__6001__auto__ = switch__5998__auto__.call(null, state_26503);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6001__auto__;
                    }
                    break;
                  }
                } catch (e26542) {
                  if (e26542 instanceof Object) {
                    var ex__6002__auto__ = e26542;
                    var statearr_26543_26572 = state_26503;
                    statearr_26543_26572[5] = ex__6002__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26503);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e26542;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__26573 = state_26503;
                state_26503 = G__26573;
                continue;
              } else {
                return ret_value__6000__auto__;
              }
              break;
            }
          };
          state_machine__5999__auto__ = function(state_26503) {
            switch(arguments.length) {
              case 0:
                return state_machine__5999__auto____0.call(this);
              case 1:
                return state_machine__5999__auto____1.call(this, state_26503);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
          return state_machine__5999__auto__;
        }();
      }(switch__5998__auto__);
    }();
    var state__6070__auto__ = function() {
      var statearr_26544 = f__6069__auto__.call(null);
      statearr_26544[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto___26545;
      return statearr_26544;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
  });
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj26575 = {};
  return obj26575;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3431__auto__ = p;
    if (and__3431__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4070__auto__ = p == null ? null : p;
    return function() {
      var or__3443__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3431__auto__ = p;
    if (and__3431__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4070__auto__ = p == null ? null : p;
    return function() {
      var or__3443__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3431__auto__ = p;
      if (and__3431__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4070__auto__ = p == null ? null : p;
      return function() {
        var or__3443__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3431__auto__ = p;
      if (and__3431__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4070__auto__ = p == null ? null : p;
      return function() {
        var or__3443__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3443__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3443__auto__, mults) {
            return function(p1__26576_SHARP_) {
              if (cljs.core.truth_(p1__26576_SHARP_.call(null, topic))) {
                return p1__26576_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__26576_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3443__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t26701 !== "undefined") {
      } else {
        cljs.core.async.t26701 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta26702) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta26702 = meta26702;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t26701.cljs$lang$type = true;
        cljs.core.async.t26701.cljs$lang$ctorStr = "cljs.core.async/t26701";
        cljs.core.async.t26701.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
            return cljs.core._write.call(null, writer__4011__auto__, "cljs.core.async/t26701");
          };
        }(mults, ensure_mult);
        cljs.core.async.t26701.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t26701.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t26701.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t26701.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t26701.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t26701.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t26701.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t26701.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_26703) {
            var self__ = this;
            var _26703__$1 = this;
            return self__.meta26702;
          };
        }(mults, ensure_mult);
        cljs.core.async.t26701.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_26703, meta26702__$1) {
            var self__ = this;
            var _26703__$1 = this;
            return new cljs.core.async.t26701(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta26702__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t26701 = function(mults, ensure_mult) {
          return function __GT_t26701(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta26702) {
            return new cljs.core.async.t26701(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta26702);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t26701(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__6068__auto___26825 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6069__auto__ = function() {
        var switch__5998__auto__ = function(state_26777) {
          var state_val_26778 = state_26777[1];
          if (state_val_26778 === 1) {
            var state_26777__$1 = state_26777;
            var statearr_26779_26826 = state_26777__$1;
            statearr_26779_26826[2] = null;
            statearr_26779_26826[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_26778 === 2) {
              var state_26777__$1 = state_26777;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26777__$1, 4, ch);
            } else {
              if (state_val_26778 === 3) {
                var inst_26775 = state_26777[2];
                var state_26777__$1 = state_26777;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26777__$1, inst_26775);
              } else {
                if (state_val_26778 === 4) {
                  var inst_26706 = state_26777[7];
                  var inst_26706__$1 = state_26777[2];
                  var inst_26707 = inst_26706__$1 == null;
                  var state_26777__$1 = function() {
                    var statearr_26780 = state_26777;
                    statearr_26780[7] = inst_26706__$1;
                    return statearr_26780;
                  }();
                  if (cljs.core.truth_(inst_26707)) {
                    var statearr_26781_26827 = state_26777__$1;
                    statearr_26781_26827[1] = 5;
                  } else {
                    var statearr_26782_26828 = state_26777__$1;
                    statearr_26782_26828[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_26778 === 5) {
                    var inst_26713 = cljs.core.deref.call(null, mults);
                    var inst_26714 = cljs.core.vals.call(null, inst_26713);
                    var inst_26715 = cljs.core.seq.call(null, inst_26714);
                    var inst_26716 = inst_26715;
                    var inst_26717 = null;
                    var inst_26718 = 0;
                    var inst_26719 = 0;
                    var state_26777__$1 = function() {
                      var statearr_26783 = state_26777;
                      statearr_26783[8] = inst_26718;
                      statearr_26783[9] = inst_26717;
                      statearr_26783[10] = inst_26719;
                      statearr_26783[11] = inst_26716;
                      return statearr_26783;
                    }();
                    var statearr_26784_26829 = state_26777__$1;
                    statearr_26784_26829[2] = null;
                    statearr_26784_26829[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_26778 === 6) {
                      var inst_26756 = state_26777[12];
                      var inst_26754 = state_26777[13];
                      var inst_26706 = state_26777[7];
                      var inst_26754__$1 = topic_fn.call(null, inst_26706);
                      var inst_26755 = cljs.core.deref.call(null, mults);
                      var inst_26756__$1 = cljs.core.get.call(null, inst_26755, inst_26754__$1);
                      var state_26777__$1 = function() {
                        var statearr_26785 = state_26777;
                        statearr_26785[12] = inst_26756__$1;
                        statearr_26785[13] = inst_26754__$1;
                        return statearr_26785;
                      }();
                      if (cljs.core.truth_(inst_26756__$1)) {
                        var statearr_26786_26830 = state_26777__$1;
                        statearr_26786_26830[1] = 19;
                      } else {
                        var statearr_26787_26831 = state_26777__$1;
                        statearr_26787_26831[1] = 20;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_26778 === 7) {
                        var inst_26773 = state_26777[2];
                        var state_26777__$1 = state_26777;
                        var statearr_26788_26832 = state_26777__$1;
                        statearr_26788_26832[2] = inst_26773;
                        statearr_26788_26832[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_26778 === 8) {
                          var inst_26718 = state_26777[8];
                          var inst_26719 = state_26777[10];
                          var inst_26721 = inst_26719 < inst_26718;
                          var inst_26722 = inst_26721;
                          var state_26777__$1 = state_26777;
                          if (cljs.core.truth_(inst_26722)) {
                            var statearr_26792_26833 = state_26777__$1;
                            statearr_26792_26833[1] = 10;
                          } else {
                            var statearr_26793_26834 = state_26777__$1;
                            statearr_26793_26834[1] = 11;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_26778 === 9) {
                            var inst_26752 = state_26777[2];
                            var state_26777__$1 = state_26777;
                            var statearr_26794_26835 = state_26777__$1;
                            statearr_26794_26835[2] = inst_26752;
                            statearr_26794_26835[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_26778 === 10) {
                              var inst_26718 = state_26777[8];
                              var inst_26717 = state_26777[9];
                              var inst_26719 = state_26777[10];
                              var inst_26716 = state_26777[11];
                              var inst_26724 = cljs.core._nth.call(null, inst_26717, inst_26719);
                              var inst_26725 = cljs.core.async.muxch_STAR_.call(null, inst_26724);
                              var inst_26726 = cljs.core.async.close_BANG_.call(null, inst_26725);
                              var inst_26727 = inst_26719 + 1;
                              var tmp26789 = inst_26718;
                              var tmp26790 = inst_26717;
                              var tmp26791 = inst_26716;
                              var inst_26716__$1 = tmp26791;
                              var inst_26717__$1 = tmp26790;
                              var inst_26718__$1 = tmp26789;
                              var inst_26719__$1 = inst_26727;
                              var state_26777__$1 = function() {
                                var statearr_26795 = state_26777;
                                statearr_26795[8] = inst_26718__$1;
                                statearr_26795[9] = inst_26717__$1;
                                statearr_26795[10] = inst_26719__$1;
                                statearr_26795[14] = inst_26726;
                                statearr_26795[11] = inst_26716__$1;
                                return statearr_26795;
                              }();
                              var statearr_26796_26836 = state_26777__$1;
                              statearr_26796_26836[2] = null;
                              statearr_26796_26836[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_26778 === 11) {
                                var inst_26730 = state_26777[15];
                                var inst_26716 = state_26777[11];
                                var inst_26730__$1 = cljs.core.seq.call(null, inst_26716);
                                var state_26777__$1 = function() {
                                  var statearr_26797 = state_26777;
                                  statearr_26797[15] = inst_26730__$1;
                                  return statearr_26797;
                                }();
                                if (inst_26730__$1) {
                                  var statearr_26798_26837 = state_26777__$1;
                                  statearr_26798_26837[1] = 13;
                                } else {
                                  var statearr_26799_26838 = state_26777__$1;
                                  statearr_26799_26838[1] = 14;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_26778 === 12) {
                                  var inst_26750 = state_26777[2];
                                  var state_26777__$1 = state_26777;
                                  var statearr_26800_26839 = state_26777__$1;
                                  statearr_26800_26839[2] = inst_26750;
                                  statearr_26800_26839[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_26778 === 13) {
                                    var inst_26730 = state_26777[15];
                                    var inst_26732 = cljs.core.chunked_seq_QMARK_.call(null, inst_26730);
                                    var state_26777__$1 = state_26777;
                                    if (inst_26732) {
                                      var statearr_26801_26840 = state_26777__$1;
                                      statearr_26801_26840[1] = 16;
                                    } else {
                                      var statearr_26802_26841 = state_26777__$1;
                                      statearr_26802_26841[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_26778 === 14) {
                                      var state_26777__$1 = state_26777;
                                      var statearr_26803_26842 = state_26777__$1;
                                      statearr_26803_26842[2] = null;
                                      statearr_26803_26842[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_26778 === 15) {
                                        var inst_26748 = state_26777[2];
                                        var state_26777__$1 = state_26777;
                                        var statearr_26804_26843 = state_26777__$1;
                                        statearr_26804_26843[2] = inst_26748;
                                        statearr_26804_26843[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_26778 === 16) {
                                          var inst_26730 = state_26777[15];
                                          var inst_26734 = cljs.core.chunk_first.call(null, inst_26730);
                                          var inst_26735 = cljs.core.chunk_rest.call(null, inst_26730);
                                          var inst_26736 = cljs.core.count.call(null, inst_26734);
                                          var inst_26716 = inst_26735;
                                          var inst_26717 = inst_26734;
                                          var inst_26718 = inst_26736;
                                          var inst_26719 = 0;
                                          var state_26777__$1 = function() {
                                            var statearr_26805 = state_26777;
                                            statearr_26805[8] = inst_26718;
                                            statearr_26805[9] = inst_26717;
                                            statearr_26805[10] = inst_26719;
                                            statearr_26805[11] = inst_26716;
                                            return statearr_26805;
                                          }();
                                          var statearr_26806_26844 = state_26777__$1;
                                          statearr_26806_26844[2] = null;
                                          statearr_26806_26844[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_26778 === 17) {
                                            var inst_26730 = state_26777[15];
                                            var inst_26739 = cljs.core.first.call(null, inst_26730);
                                            var inst_26740 = cljs.core.async.muxch_STAR_.call(null, inst_26739);
                                            var inst_26741 = cljs.core.async.close_BANG_.call(null, inst_26740);
                                            var inst_26742 = cljs.core.next.call(null, inst_26730);
                                            var inst_26716 = inst_26742;
                                            var inst_26717 = null;
                                            var inst_26718 = 0;
                                            var inst_26719 = 0;
                                            var state_26777__$1 = function() {
                                              var statearr_26807 = state_26777;
                                              statearr_26807[8] = inst_26718;
                                              statearr_26807[16] = inst_26741;
                                              statearr_26807[9] = inst_26717;
                                              statearr_26807[10] = inst_26719;
                                              statearr_26807[11] = inst_26716;
                                              return statearr_26807;
                                            }();
                                            var statearr_26808_26845 = state_26777__$1;
                                            statearr_26808_26845[2] = null;
                                            statearr_26808_26845[1] = 8;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_26778 === 18) {
                                              var inst_26745 = state_26777[2];
                                              var state_26777__$1 = state_26777;
                                              var statearr_26809_26846 = state_26777__$1;
                                              statearr_26809_26846[2] = inst_26745;
                                              statearr_26809_26846[1] = 15;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_26778 === 19) {
                                                var state_26777__$1 = state_26777;
                                                var statearr_26810_26847 = state_26777__$1;
                                                statearr_26810_26847[2] = null;
                                                statearr_26810_26847[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_26778 === 20) {
                                                  var state_26777__$1 = state_26777;
                                                  var statearr_26811_26848 = state_26777__$1;
                                                  statearr_26811_26848[2] = null;
                                                  statearr_26811_26848[1] = 21;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_26778 === 21) {
                                                    var inst_26770 = state_26777[2];
                                                    var state_26777__$1 = function() {
                                                      var statearr_26812 = state_26777;
                                                      statearr_26812[17] = inst_26770;
                                                      return statearr_26812;
                                                    }();
                                                    var statearr_26813_26849 = state_26777__$1;
                                                    statearr_26813_26849[2] = null;
                                                    statearr_26813_26849[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_26778 === 22) {
                                                      var inst_26767 = state_26777[2];
                                                      var state_26777__$1 = state_26777;
                                                      var statearr_26814_26850 = state_26777__$1;
                                                      statearr_26814_26850[2] = inst_26767;
                                                      statearr_26814_26850[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_26778 === 23) {
                                                        var inst_26754 = state_26777[13];
                                                        var inst_26758 = state_26777[2];
                                                        var inst_26759 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_26754);
                                                        var state_26777__$1 = function() {
                                                          var statearr_26815 = state_26777;
                                                          statearr_26815[18] = inst_26758;
                                                          return statearr_26815;
                                                        }();
                                                        var statearr_26816_26851 = state_26777__$1;
                                                        statearr_26816_26851[2] = inst_26759;
                                                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26777__$1);
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_26778 === 24) {
                                                          var inst_26756 = state_26777[12];
                                                          var inst_26706 = state_26777[7];
                                                          var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_26777, 23, Object, null, 22);
                                                          var inst_26763 = cljs.core.async.muxch_STAR_.call(null, inst_26756);
                                                          var state_26777__$1 = state_26777;
                                                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26777__$1, 25, inst_26763, inst_26706);
                                                        } else {
                                                          if (state_val_26778 === 25) {
                                                            var inst_26765 = state_26777[2];
                                                            var state_26777__$1 = state_26777;
                                                            var statearr_26817_26852 = state_26777__$1;
                                                            statearr_26817_26852[2] = inst_26765;
                                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26777__$1);
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5998__auto__) {
          return function() {
            var state_machine__5999__auto__ = null;
            var state_machine__5999__auto____0 = function() {
              var statearr_26821 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_26821[0] = state_machine__5999__auto__;
              statearr_26821[1] = 1;
              return statearr_26821;
            };
            var state_machine__5999__auto____1 = function(state_26777) {
              while (true) {
                var ret_value__6000__auto__ = function() {
                  try {
                    while (true) {
                      var result__6001__auto__ = switch__5998__auto__.call(null, state_26777);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6001__auto__;
                      }
                      break;
                    }
                  } catch (e26822) {
                    if (e26822 instanceof Object) {
                      var ex__6002__auto__ = e26822;
                      var statearr_26823_26853 = state_26777;
                      statearr_26823_26853[5] = ex__6002__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26777);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e26822;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__26854 = state_26777;
                  state_26777 = G__26854;
                  continue;
                } else {
                  return ret_value__6000__auto__;
                }
                break;
              }
            };
            state_machine__5999__auto__ = function(state_26777) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5999__auto____0.call(this);
                case 1:
                  return state_machine__5999__auto____1.call(this, state_26777);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
            return state_machine__5999__auto__;
          }();
        }(switch__5998__auto__);
      }();
      var state__6070__auto__ = function() {
        var statearr_26824 = f__6069__auto__.call(null);
        statearr_26824[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto___26825;
        return statearr_26824;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
    });
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6068__auto___26991 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6069__auto__ = function() {
        var switch__5998__auto__ = function(state_26961) {
          var state_val_26962 = state_26961[1];
          if (state_val_26962 === 1) {
            var state_26961__$1 = state_26961;
            var statearr_26963_26992 = state_26961__$1;
            statearr_26963_26992[2] = null;
            statearr_26963_26992[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_26962 === 2) {
              var inst_26924 = cljs.core.reset_BANG_.call(null, dctr, cnt);
              var inst_26925 = 0;
              var state_26961__$1 = function() {
                var statearr_26964 = state_26961;
                statearr_26964[7] = inst_26924;
                statearr_26964[8] = inst_26925;
                return statearr_26964;
              }();
              var statearr_26965_26993 = state_26961__$1;
              statearr_26965_26993[2] = null;
              statearr_26965_26993[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_26962 === 3) {
                var inst_26959 = state_26961[2];
                var state_26961__$1 = state_26961;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26961__$1, inst_26959);
              } else {
                if (state_val_26962 === 4) {
                  var inst_26925 = state_26961[8];
                  var inst_26927 = inst_26925 < cnt;
                  var state_26961__$1 = state_26961;
                  if (cljs.core.truth_(inst_26927)) {
                    var statearr_26966_26994 = state_26961__$1;
                    statearr_26966_26994[1] = 6;
                  } else {
                    var statearr_26967_26995 = state_26961__$1;
                    statearr_26967_26995[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_26962 === 5) {
                    var inst_26945 = state_26961[2];
                    var state_26961__$1 = function() {
                      var statearr_26968 = state_26961;
                      statearr_26968[9] = inst_26945;
                      return statearr_26968;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26961__$1, 12, dchan);
                  } else {
                    if (state_val_26962 === 6) {
                      var state_26961__$1 = state_26961;
                      var statearr_26969_26996 = state_26961__$1;
                      statearr_26969_26996[2] = null;
                      statearr_26969_26996[1] = 11;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_26962 === 7) {
                        var state_26961__$1 = state_26961;
                        var statearr_26970_26997 = state_26961__$1;
                        statearr_26970_26997[2] = null;
                        statearr_26970_26997[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_26962 === 8) {
                          var inst_26943 = state_26961[2];
                          var state_26961__$1 = state_26961;
                          var statearr_26971_26998 = state_26961__$1;
                          statearr_26971_26998[2] = inst_26943;
                          statearr_26971_26998[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_26962 === 9) {
                            var inst_26925 = state_26961[8];
                            var inst_26938 = state_26961[2];
                            var inst_26939 = inst_26925 + 1;
                            var inst_26925__$1 = inst_26939;
                            var state_26961__$1 = function() {
                              var statearr_26972 = state_26961;
                              statearr_26972[10] = inst_26938;
                              statearr_26972[8] = inst_26925__$1;
                              return statearr_26972;
                            }();
                            var statearr_26973_26999 = state_26961__$1;
                            statearr_26973_26999[2] = null;
                            statearr_26973_26999[1] = 4;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_26962 === 10) {
                              var inst_26929 = state_26961[2];
                              var inst_26930 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                              var state_26961__$1 = function() {
                                var statearr_26974 = state_26961;
                                statearr_26974[11] = inst_26929;
                                return statearr_26974;
                              }();
                              var statearr_26975_27000 = state_26961__$1;
                              statearr_26975_27000[2] = inst_26930;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26961__$1);
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_26962 === 11) {
                                var inst_26925 = state_26961[8];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_26961, 10, Object, null, 9);
                                var inst_26934 = chs__$1.call(null, inst_26925);
                                var inst_26935 = done.call(null, inst_26925);
                                var inst_26936 = cljs.core.async.take_BANG_.call(null, inst_26934, inst_26935);
                                var state_26961__$1 = state_26961;
                                var statearr_26976_27001 = state_26961__$1;
                                statearr_26976_27001[2] = inst_26936;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26961__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_26962 === 12) {
                                  var inst_26947 = state_26961[12];
                                  var inst_26947__$1 = state_26961[2];
                                  var inst_26948 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_26947__$1);
                                  var state_26961__$1 = function() {
                                    var statearr_26977 = state_26961;
                                    statearr_26977[12] = inst_26947__$1;
                                    return statearr_26977;
                                  }();
                                  if (cljs.core.truth_(inst_26948)) {
                                    var statearr_26978_27002 = state_26961__$1;
                                    statearr_26978_27002[1] = 13;
                                  } else {
                                    var statearr_26979_27003 = state_26961__$1;
                                    statearr_26979_27003[1] = 14;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_26962 === 13) {
                                    var inst_26950 = cljs.core.async.close_BANG_.call(null, out);
                                    var state_26961__$1 = state_26961;
                                    var statearr_26980_27004 = state_26961__$1;
                                    statearr_26980_27004[2] = inst_26950;
                                    statearr_26980_27004[1] = 15;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_26962 === 14) {
                                      var inst_26947 = state_26961[12];
                                      var inst_26952 = cljs.core.apply.call(null, f, inst_26947);
                                      var state_26961__$1 = state_26961;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26961__$1, 16, out, inst_26952);
                                    } else {
                                      if (state_val_26962 === 15) {
                                        var inst_26957 = state_26961[2];
                                        var state_26961__$1 = state_26961;
                                        var statearr_26981_27005 = state_26961__$1;
                                        statearr_26981_27005[2] = inst_26957;
                                        statearr_26981_27005[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_26962 === 16) {
                                          var inst_26954 = state_26961[2];
                                          var state_26961__$1 = function() {
                                            var statearr_26982 = state_26961;
                                            statearr_26982[13] = inst_26954;
                                            return statearr_26982;
                                          }();
                                          var statearr_26983_27006 = state_26961__$1;
                                          statearr_26983_27006[2] = null;
                                          statearr_26983_27006[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5998__auto__) {
          return function() {
            var state_machine__5999__auto__ = null;
            var state_machine__5999__auto____0 = function() {
              var statearr_26987 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_26987[0] = state_machine__5999__auto__;
              statearr_26987[1] = 1;
              return statearr_26987;
            };
            var state_machine__5999__auto____1 = function(state_26961) {
              while (true) {
                var ret_value__6000__auto__ = function() {
                  try {
                    while (true) {
                      var result__6001__auto__ = switch__5998__auto__.call(null, state_26961);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6001__auto__;
                      }
                      break;
                    }
                  } catch (e26988) {
                    if (e26988 instanceof Object) {
                      var ex__6002__auto__ = e26988;
                      var statearr_26989_27007 = state_26961;
                      statearr_26989_27007[5] = ex__6002__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26961);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e26988;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__27008 = state_26961;
                  state_26961 = G__27008;
                  continue;
                } else {
                  return ret_value__6000__auto__;
                }
                break;
              }
            };
            state_machine__5999__auto__ = function(state_26961) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5999__auto____0.call(this);
                case 1:
                  return state_machine__5999__auto____1.call(this, state_26961);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
            return state_machine__5999__auto__;
          }();
        }(switch__5998__auto__);
      }();
      var state__6070__auto__ = function() {
        var statearr_26990 = f__6069__auto__.call(null);
        statearr_26990[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto___26991;
        return statearr_26990;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
    });
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6068__auto___27116 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6069__auto__ = function() {
        var switch__5998__auto__ = function(state_27092) {
          var state_val_27093 = state_27092[1];
          if (state_val_27093 === 1) {
            var inst_27063 = cljs.core.vec.call(null, chs);
            var inst_27064 = inst_27063;
            var state_27092__$1 = function() {
              var statearr_27094 = state_27092;
              statearr_27094[7] = inst_27064;
              return statearr_27094;
            }();
            var statearr_27095_27117 = state_27092__$1;
            statearr_27095_27117[2] = null;
            statearr_27095_27117[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_27093 === 2) {
              var inst_27064 = state_27092[7];
              var inst_27066 = cljs.core.count.call(null, inst_27064);
              var inst_27067 = inst_27066 > 0;
              var state_27092__$1 = state_27092;
              if (cljs.core.truth_(inst_27067)) {
                var statearr_27096_27118 = state_27092__$1;
                statearr_27096_27118[1] = 4;
              } else {
                var statearr_27097_27119 = state_27092__$1;
                statearr_27097_27119[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_27093 === 3) {
                var inst_27090 = state_27092[2];
                var state_27092__$1 = state_27092;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27092__$1, inst_27090);
              } else {
                if (state_val_27093 === 4) {
                  var inst_27064 = state_27092[7];
                  var state_27092__$1 = state_27092;
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_27092__$1, 7, inst_27064);
                } else {
                  if (state_val_27093 === 5) {
                    var inst_27086 = cljs.core.async.close_BANG_.call(null, out);
                    var state_27092__$1 = state_27092;
                    var statearr_27098_27120 = state_27092__$1;
                    statearr_27098_27120[2] = inst_27086;
                    statearr_27098_27120[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_27093 === 6) {
                      var inst_27088 = state_27092[2];
                      var state_27092__$1 = state_27092;
                      var statearr_27099_27121 = state_27092__$1;
                      statearr_27099_27121[2] = inst_27088;
                      statearr_27099_27121[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_27093 === 7) {
                        var inst_27071 = state_27092[8];
                        var inst_27072 = state_27092[9];
                        var inst_27071__$1 = state_27092[2];
                        var inst_27072__$1 = cljs.core.nth.call(null, inst_27071__$1, 0, null);
                        var inst_27073 = cljs.core.nth.call(null, inst_27071__$1, 1, null);
                        var inst_27074 = inst_27072__$1 == null;
                        var state_27092__$1 = function() {
                          var statearr_27100 = state_27092;
                          statearr_27100[8] = inst_27071__$1;
                          statearr_27100[9] = inst_27072__$1;
                          statearr_27100[10] = inst_27073;
                          return statearr_27100;
                        }();
                        if (cljs.core.truth_(inst_27074)) {
                          var statearr_27101_27122 = state_27092__$1;
                          statearr_27101_27122[1] = 8;
                        } else {
                          var statearr_27102_27123 = state_27092__$1;
                          statearr_27102_27123[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_27093 === 8) {
                          var inst_27071 = state_27092[8];
                          var inst_27072 = state_27092[9];
                          var inst_27073 = state_27092[10];
                          var inst_27064 = state_27092[7];
                          var inst_27076 = function() {
                            var c = inst_27073;
                            var v = inst_27072;
                            var vec__27069 = inst_27071;
                            var cs = inst_27064;
                            return function(c, v, vec__27069, cs, inst_27071, inst_27072, inst_27073, inst_27064, state_val_27093) {
                              return function(p1__27009_SHARP_) {
                                return cljs.core.not_EQ_.call(null, c, p1__27009_SHARP_);
                              };
                            }(c, v, vec__27069, cs, inst_27071, inst_27072, inst_27073, inst_27064, state_val_27093);
                          }();
                          var inst_27077 = cljs.core.filterv.call(null, inst_27076, inst_27064);
                          var inst_27064__$1 = inst_27077;
                          var state_27092__$1 = function() {
                            var statearr_27103 = state_27092;
                            statearr_27103[7] = inst_27064__$1;
                            return statearr_27103;
                          }();
                          var statearr_27104_27124 = state_27092__$1;
                          statearr_27104_27124[2] = null;
                          statearr_27104_27124[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_27093 === 9) {
                            var inst_27072 = state_27092[9];
                            var state_27092__$1 = state_27092;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27092__$1, 11, out, inst_27072);
                          } else {
                            if (state_val_27093 === 10) {
                              var inst_27084 = state_27092[2];
                              var state_27092__$1 = state_27092;
                              var statearr_27106_27125 = state_27092__$1;
                              statearr_27106_27125[2] = inst_27084;
                              statearr_27106_27125[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_27093 === 11) {
                                var inst_27064 = state_27092[7];
                                var inst_27081 = state_27092[2];
                                var tmp27105 = inst_27064;
                                var inst_27064__$1 = tmp27105;
                                var state_27092__$1 = function() {
                                  var statearr_27107 = state_27092;
                                  statearr_27107[11] = inst_27081;
                                  statearr_27107[7] = inst_27064__$1;
                                  return statearr_27107;
                                }();
                                var statearr_27108_27126 = state_27092__$1;
                                statearr_27108_27126[2] = null;
                                statearr_27108_27126[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5998__auto__) {
          return function() {
            var state_machine__5999__auto__ = null;
            var state_machine__5999__auto____0 = function() {
              var statearr_27112 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_27112[0] = state_machine__5999__auto__;
              statearr_27112[1] = 1;
              return statearr_27112;
            };
            var state_machine__5999__auto____1 = function(state_27092) {
              while (true) {
                var ret_value__6000__auto__ = function() {
                  try {
                    while (true) {
                      var result__6001__auto__ = switch__5998__auto__.call(null, state_27092);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6001__auto__;
                      }
                      break;
                    }
                  } catch (e27113) {
                    if (e27113 instanceof Object) {
                      var ex__6002__auto__ = e27113;
                      var statearr_27114_27127 = state_27092;
                      statearr_27114_27127[5] = ex__6002__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27092);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e27113;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__27128 = state_27092;
                  state_27092 = G__27128;
                  continue;
                } else {
                  return ret_value__6000__auto__;
                }
                break;
              }
            };
            state_machine__5999__auto__ = function(state_27092) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5999__auto____0.call(this);
                case 1:
                  return state_machine__5999__auto____1.call(this, state_27092);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
            return state_machine__5999__auto__;
          }();
        }(switch__5998__auto__);
      }();
      var state__6070__auto__ = function() {
        var statearr_27115 = f__6069__auto__.call(null);
        statearr_27115[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto___27116;
        return statearr_27115;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
    });
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6068__auto___27221 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6069__auto__ = function() {
        var switch__5998__auto__ = function(state_27198) {
          var state_val_27199 = state_27198[1];
          if (state_val_27199 === 1) {
            var inst_27175 = 0;
            var state_27198__$1 = function() {
              var statearr_27200 = state_27198;
              statearr_27200[7] = inst_27175;
              return statearr_27200;
            }();
            var statearr_27201_27222 = state_27198__$1;
            statearr_27201_27222[2] = null;
            statearr_27201_27222[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_27199 === 2) {
              var inst_27175 = state_27198[7];
              var inst_27177 = inst_27175 < n;
              var state_27198__$1 = state_27198;
              if (cljs.core.truth_(inst_27177)) {
                var statearr_27202_27223 = state_27198__$1;
                statearr_27202_27223[1] = 4;
              } else {
                var statearr_27203_27224 = state_27198__$1;
                statearr_27203_27224[1] = 5;
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_27199 === 3) {
                var inst_27195 = state_27198[2];
                var inst_27196 = cljs.core.async.close_BANG_.call(null, out);
                var state_27198__$1 = function() {
                  var statearr_27204 = state_27198;
                  statearr_27204[8] = inst_27195;
                  return statearr_27204;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27198__$1, inst_27196);
              } else {
                if (state_val_27199 === 4) {
                  var state_27198__$1 = state_27198;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27198__$1, 7, ch);
                } else {
                  if (state_val_27199 === 5) {
                    var state_27198__$1 = state_27198;
                    var statearr_27205_27225 = state_27198__$1;
                    statearr_27205_27225[2] = null;
                    statearr_27205_27225[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_27199 === 6) {
                      var inst_27193 = state_27198[2];
                      var state_27198__$1 = state_27198;
                      var statearr_27206_27226 = state_27198__$1;
                      statearr_27206_27226[2] = inst_27193;
                      statearr_27206_27226[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_27199 === 7) {
                        var inst_27180 = state_27198[9];
                        var inst_27180__$1 = state_27198[2];
                        var inst_27181 = inst_27180__$1 == null;
                        var inst_27182 = cljs.core.not.call(null, inst_27181);
                        var state_27198__$1 = function() {
                          var statearr_27207 = state_27198;
                          statearr_27207[9] = inst_27180__$1;
                          return statearr_27207;
                        }();
                        if (inst_27182) {
                          var statearr_27208_27227 = state_27198__$1;
                          statearr_27208_27227[1] = 8;
                        } else {
                          var statearr_27209_27228 = state_27198__$1;
                          statearr_27209_27228[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_27199 === 8) {
                          var inst_27180 = state_27198[9];
                          var state_27198__$1 = state_27198;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27198__$1, 11, out, inst_27180);
                        } else {
                          if (state_val_27199 === 9) {
                            var state_27198__$1 = state_27198;
                            var statearr_27210_27229 = state_27198__$1;
                            statearr_27210_27229[2] = null;
                            statearr_27210_27229[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_27199 === 10) {
                              var inst_27190 = state_27198[2];
                              var state_27198__$1 = state_27198;
                              var statearr_27211_27230 = state_27198__$1;
                              statearr_27211_27230[2] = inst_27190;
                              statearr_27211_27230[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_27199 === 11) {
                                var inst_27175 = state_27198[7];
                                var inst_27185 = state_27198[2];
                                var inst_27186 = inst_27175 + 1;
                                var inst_27175__$1 = inst_27186;
                                var state_27198__$1 = function() {
                                  var statearr_27212 = state_27198;
                                  statearr_27212[7] = inst_27175__$1;
                                  statearr_27212[10] = inst_27185;
                                  return statearr_27212;
                                }();
                                var statearr_27213_27231 = state_27198__$1;
                                statearr_27213_27231[2] = null;
                                statearr_27213_27231[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5998__auto__) {
          return function() {
            var state_machine__5999__auto__ = null;
            var state_machine__5999__auto____0 = function() {
              var statearr_27217 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_27217[0] = state_machine__5999__auto__;
              statearr_27217[1] = 1;
              return statearr_27217;
            };
            var state_machine__5999__auto____1 = function(state_27198) {
              while (true) {
                var ret_value__6000__auto__ = function() {
                  try {
                    while (true) {
                      var result__6001__auto__ = switch__5998__auto__.call(null, state_27198);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6001__auto__;
                      }
                      break;
                    }
                  } catch (e27218) {
                    if (e27218 instanceof Object) {
                      var ex__6002__auto__ = e27218;
                      var statearr_27219_27232 = state_27198;
                      statearr_27219_27232[5] = ex__6002__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27198);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e27218;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__27233 = state_27198;
                  state_27198 = G__27233;
                  continue;
                } else {
                  return ret_value__6000__auto__;
                }
                break;
              }
            };
            state_machine__5999__auto__ = function(state_27198) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5999__auto____0.call(this);
                case 1:
                  return state_machine__5999__auto____1.call(this, state_27198);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
            return state_machine__5999__auto__;
          }();
        }(switch__5998__auto__);
      }();
      var state__6070__auto__ = function() {
        var statearr_27220 = f__6069__auto__.call(null);
        statearr_27220[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto___27221;
        return statearr_27220;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
    });
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6068__auto___27330 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6069__auto__ = function() {
        var switch__5998__auto__ = function(state_27305) {
          var state_val_27306 = state_27305[1];
          if (state_val_27306 === 1) {
            var inst_27282 = null;
            var state_27305__$1 = function() {
              var statearr_27307 = state_27305;
              statearr_27307[7] = inst_27282;
              return statearr_27307;
            }();
            var statearr_27308_27331 = state_27305__$1;
            statearr_27308_27331[2] = null;
            statearr_27308_27331[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_27306 === 2) {
              var state_27305__$1 = state_27305;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27305__$1, 4, ch);
            } else {
              if (state_val_27306 === 3) {
                var inst_27302 = state_27305[2];
                var inst_27303 = cljs.core.async.close_BANG_.call(null, out);
                var state_27305__$1 = function() {
                  var statearr_27309 = state_27305;
                  statearr_27309[8] = inst_27302;
                  return statearr_27309;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27305__$1, inst_27303);
              } else {
                if (state_val_27306 === 4) {
                  var inst_27285 = state_27305[9];
                  var inst_27285__$1 = state_27305[2];
                  var inst_27286 = inst_27285__$1 == null;
                  var inst_27287 = cljs.core.not.call(null, inst_27286);
                  var state_27305__$1 = function() {
                    var statearr_27310 = state_27305;
                    statearr_27310[9] = inst_27285__$1;
                    return statearr_27310;
                  }();
                  if (inst_27287) {
                    var statearr_27311_27332 = state_27305__$1;
                    statearr_27311_27332[1] = 5;
                  } else {
                    var statearr_27312_27333 = state_27305__$1;
                    statearr_27312_27333[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_27306 === 5) {
                    var inst_27285 = state_27305[9];
                    var inst_27282 = state_27305[7];
                    var inst_27289 = cljs.core._EQ_.call(null, inst_27285, inst_27282);
                    var state_27305__$1 = state_27305;
                    if (inst_27289) {
                      var statearr_27313_27334 = state_27305__$1;
                      statearr_27313_27334[1] = 8;
                    } else {
                      var statearr_27314_27335 = state_27305__$1;
                      statearr_27314_27335[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_27306 === 6) {
                      var state_27305__$1 = state_27305;
                      var statearr_27316_27336 = state_27305__$1;
                      statearr_27316_27336[2] = null;
                      statearr_27316_27336[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_27306 === 7) {
                        var inst_27300 = state_27305[2];
                        var state_27305__$1 = state_27305;
                        var statearr_27317_27337 = state_27305__$1;
                        statearr_27317_27337[2] = inst_27300;
                        statearr_27317_27337[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_27306 === 8) {
                          var inst_27282 = state_27305[7];
                          var tmp27315 = inst_27282;
                          var inst_27282__$1 = tmp27315;
                          var state_27305__$1 = function() {
                            var statearr_27318 = state_27305;
                            statearr_27318[7] = inst_27282__$1;
                            return statearr_27318;
                          }();
                          var statearr_27319_27338 = state_27305__$1;
                          statearr_27319_27338[2] = null;
                          statearr_27319_27338[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_27306 === 9) {
                            var inst_27285 = state_27305[9];
                            var state_27305__$1 = state_27305;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27305__$1, 11, out, inst_27285);
                          } else {
                            if (state_val_27306 === 10) {
                              var inst_27297 = state_27305[2];
                              var state_27305__$1 = state_27305;
                              var statearr_27320_27339 = state_27305__$1;
                              statearr_27320_27339[2] = inst_27297;
                              statearr_27320_27339[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_27306 === 11) {
                                var inst_27285 = state_27305[9];
                                var inst_27294 = state_27305[2];
                                var inst_27282 = inst_27285;
                                var state_27305__$1 = function() {
                                  var statearr_27321 = state_27305;
                                  statearr_27321[10] = inst_27294;
                                  statearr_27321[7] = inst_27282;
                                  return statearr_27321;
                                }();
                                var statearr_27322_27340 = state_27305__$1;
                                statearr_27322_27340[2] = null;
                                statearr_27322_27340[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5998__auto__) {
          return function() {
            var state_machine__5999__auto__ = null;
            var state_machine__5999__auto____0 = function() {
              var statearr_27326 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_27326[0] = state_machine__5999__auto__;
              statearr_27326[1] = 1;
              return statearr_27326;
            };
            var state_machine__5999__auto____1 = function(state_27305) {
              while (true) {
                var ret_value__6000__auto__ = function() {
                  try {
                    while (true) {
                      var result__6001__auto__ = switch__5998__auto__.call(null, state_27305);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6001__auto__;
                      }
                      break;
                    }
                  } catch (e27327) {
                    if (e27327 instanceof Object) {
                      var ex__6002__auto__ = e27327;
                      var statearr_27328_27341 = state_27305;
                      statearr_27328_27341[5] = ex__6002__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27305);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e27327;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__27342 = state_27305;
                  state_27305 = G__27342;
                  continue;
                } else {
                  return ret_value__6000__auto__;
                }
                break;
              }
            };
            state_machine__5999__auto__ = function(state_27305) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5999__auto____0.call(this);
                case 1:
                  return state_machine__5999__auto____1.call(this, state_27305);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
            return state_machine__5999__auto__;
          }();
        }(switch__5998__auto__);
      }();
      var state__6070__auto__ = function() {
        var statearr_27329 = f__6069__auto__.call(null);
        statearr_27329[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto___27330;
        return statearr_27329;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
    });
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6068__auto___27477 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6069__auto__ = function() {
        var switch__5998__auto__ = function(state_27447) {
          var state_val_27448 = state_27447[1];
          if (state_val_27448 === 1) {
            var inst_27410 = new Array(n);
            var inst_27411 = inst_27410;
            var inst_27412 = 0;
            var state_27447__$1 = function() {
              var statearr_27449 = state_27447;
              statearr_27449[7] = inst_27411;
              statearr_27449[8] = inst_27412;
              return statearr_27449;
            }();
            var statearr_27450_27478 = state_27447__$1;
            statearr_27450_27478[2] = null;
            statearr_27450_27478[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_27448 === 2) {
              var state_27447__$1 = state_27447;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27447__$1, 4, ch);
            } else {
              if (state_val_27448 === 3) {
                var inst_27445 = state_27447[2];
                var state_27447__$1 = state_27447;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27447__$1, inst_27445);
              } else {
                if (state_val_27448 === 4) {
                  var inst_27415 = state_27447[9];
                  var inst_27415__$1 = state_27447[2];
                  var inst_27416 = inst_27415__$1 == null;
                  var inst_27417 = cljs.core.not.call(null, inst_27416);
                  var state_27447__$1 = function() {
                    var statearr_27451 = state_27447;
                    statearr_27451[9] = inst_27415__$1;
                    return statearr_27451;
                  }();
                  if (inst_27417) {
                    var statearr_27452_27479 = state_27447__$1;
                    statearr_27452_27479[1] = 5;
                  } else {
                    var statearr_27453_27480 = state_27447__$1;
                    statearr_27453_27480[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_27448 === 5) {
                    var inst_27411 = state_27447[7];
                    var inst_27412 = state_27447[8];
                    var inst_27420 = state_27447[10];
                    var inst_27415 = state_27447[9];
                    var inst_27419 = inst_27411[inst_27412] = inst_27415;
                    var inst_27420__$1 = inst_27412 + 1;
                    var inst_27421 = inst_27420__$1 < n;
                    var state_27447__$1 = function() {
                      var statearr_27454 = state_27447;
                      statearr_27454[11] = inst_27419;
                      statearr_27454[10] = inst_27420__$1;
                      return statearr_27454;
                    }();
                    if (cljs.core.truth_(inst_27421)) {
                      var statearr_27455_27481 = state_27447__$1;
                      statearr_27455_27481[1] = 8;
                    } else {
                      var statearr_27456_27482 = state_27447__$1;
                      statearr_27456_27482[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_27448 === 6) {
                      var inst_27412 = state_27447[8];
                      var inst_27433 = inst_27412 > 0;
                      var state_27447__$1 = state_27447;
                      if (cljs.core.truth_(inst_27433)) {
                        var statearr_27458_27483 = state_27447__$1;
                        statearr_27458_27483[1] = 12;
                      } else {
                        var statearr_27459_27484 = state_27447__$1;
                        statearr_27459_27484[1] = 13;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_27448 === 7) {
                        var inst_27443 = state_27447[2];
                        var state_27447__$1 = state_27447;
                        var statearr_27460_27485 = state_27447__$1;
                        statearr_27460_27485[2] = inst_27443;
                        statearr_27460_27485[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_27448 === 8) {
                          var inst_27411 = state_27447[7];
                          var inst_27420 = state_27447[10];
                          var tmp27457 = inst_27411;
                          var inst_27411__$1 = tmp27457;
                          var inst_27412 = inst_27420;
                          var state_27447__$1 = function() {
                            var statearr_27461 = state_27447;
                            statearr_27461[7] = inst_27411__$1;
                            statearr_27461[8] = inst_27412;
                            return statearr_27461;
                          }();
                          var statearr_27462_27486 = state_27447__$1;
                          statearr_27462_27486[2] = null;
                          statearr_27462_27486[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_27448 === 9) {
                            var inst_27411 = state_27447[7];
                            var inst_27425 = cljs.core.vec.call(null, inst_27411);
                            var state_27447__$1 = state_27447;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27447__$1, 11, out, inst_27425);
                          } else {
                            if (state_val_27448 === 10) {
                              var inst_27431 = state_27447[2];
                              var state_27447__$1 = state_27447;
                              var statearr_27463_27487 = state_27447__$1;
                              statearr_27463_27487[2] = inst_27431;
                              statearr_27463_27487[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_27448 === 11) {
                                var inst_27427 = state_27447[2];
                                var inst_27428 = new Array(n);
                                var inst_27411 = inst_27428;
                                var inst_27412 = 0;
                                var state_27447__$1 = function() {
                                  var statearr_27464 = state_27447;
                                  statearr_27464[7] = inst_27411;
                                  statearr_27464[8] = inst_27412;
                                  statearr_27464[12] = inst_27427;
                                  return statearr_27464;
                                }();
                                var statearr_27465_27488 = state_27447__$1;
                                statearr_27465_27488[2] = null;
                                statearr_27465_27488[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_27448 === 12) {
                                  var inst_27411 = state_27447[7];
                                  var inst_27435 = cljs.core.vec.call(null, inst_27411);
                                  var state_27447__$1 = state_27447;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27447__$1, 15, out, inst_27435);
                                } else {
                                  if (state_val_27448 === 13) {
                                    var state_27447__$1 = state_27447;
                                    var statearr_27466_27489 = state_27447__$1;
                                    statearr_27466_27489[2] = null;
                                    statearr_27466_27489[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_27448 === 14) {
                                      var inst_27440 = state_27447[2];
                                      var inst_27441 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_27447__$1 = function() {
                                        var statearr_27467 = state_27447;
                                        statearr_27467[13] = inst_27440;
                                        return statearr_27467;
                                      }();
                                      var statearr_27468_27490 = state_27447__$1;
                                      statearr_27468_27490[2] = inst_27441;
                                      statearr_27468_27490[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_27448 === 15) {
                                        var inst_27437 = state_27447[2];
                                        var state_27447__$1 = state_27447;
                                        var statearr_27469_27491 = state_27447__$1;
                                        statearr_27469_27491[2] = inst_27437;
                                        statearr_27469_27491[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5998__auto__) {
          return function() {
            var state_machine__5999__auto__ = null;
            var state_machine__5999__auto____0 = function() {
              var statearr_27473 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_27473[0] = state_machine__5999__auto__;
              statearr_27473[1] = 1;
              return statearr_27473;
            };
            var state_machine__5999__auto____1 = function(state_27447) {
              while (true) {
                var ret_value__6000__auto__ = function() {
                  try {
                    while (true) {
                      var result__6001__auto__ = switch__5998__auto__.call(null, state_27447);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6001__auto__;
                      }
                      break;
                    }
                  } catch (e27474) {
                    if (e27474 instanceof Object) {
                      var ex__6002__auto__ = e27474;
                      var statearr_27475_27492 = state_27447;
                      statearr_27475_27492[5] = ex__6002__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27447);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e27474;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__27493 = state_27447;
                  state_27447 = G__27493;
                  continue;
                } else {
                  return ret_value__6000__auto__;
                }
                break;
              }
            };
            state_machine__5999__auto__ = function(state_27447) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5999__auto____0.call(this);
                case 1:
                  return state_machine__5999__auto____1.call(this, state_27447);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
            return state_machine__5999__auto__;
          }();
        }(switch__5998__auto__);
      }();
      var state__6070__auto__ = function() {
        var statearr_27476 = f__6069__auto__.call(null);
        statearr_27476[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto___27477;
        return statearr_27476;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
    });
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6068__auto___27636 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__6069__auto__ = function() {
        var switch__5998__auto__ = function(state_27606) {
          var state_val_27607 = state_27606[1];
          if (state_val_27607 === 1) {
            var inst_27565 = [];
            var inst_27566 = inst_27565;
            var inst_27567 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538);
            var state_27606__$1 = function() {
              var statearr_27608 = state_27606;
              statearr_27608[7] = inst_27567;
              statearr_27608[8] = inst_27566;
              return statearr_27608;
            }();
            var statearr_27609_27637 = state_27606__$1;
            statearr_27609_27637[2] = null;
            statearr_27609_27637[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_27607 === 2) {
              var state_27606__$1 = state_27606;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27606__$1, 4, ch);
            } else {
              if (state_val_27607 === 3) {
                var inst_27604 = state_27606[2];
                var state_27606__$1 = state_27606;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27606__$1, inst_27604);
              } else {
                if (state_val_27607 === 4) {
                  var inst_27570 = state_27606[9];
                  var inst_27570__$1 = state_27606[2];
                  var inst_27571 = inst_27570__$1 == null;
                  var inst_27572 = cljs.core.not.call(null, inst_27571);
                  var state_27606__$1 = function() {
                    var statearr_27610 = state_27606;
                    statearr_27610[9] = inst_27570__$1;
                    return statearr_27610;
                  }();
                  if (inst_27572) {
                    var statearr_27611_27638 = state_27606__$1;
                    statearr_27611_27638[1] = 5;
                  } else {
                    var statearr_27612_27639 = state_27606__$1;
                    statearr_27612_27639[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_27607 === 5) {
                    var inst_27567 = state_27606[7];
                    var inst_27574 = state_27606[10];
                    var inst_27570 = state_27606[9];
                    var inst_27574__$1 = f.call(null, inst_27570);
                    var inst_27575 = cljs.core._EQ_.call(null, inst_27574__$1, inst_27567);
                    var inst_27576 = cljs.core.keyword_identical_QMARK_.call(null, inst_27567, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", 4382193538));
                    var inst_27577 = inst_27575 || inst_27576;
                    var state_27606__$1 = function() {
                      var statearr_27613 = state_27606;
                      statearr_27613[10] = inst_27574__$1;
                      return statearr_27613;
                    }();
                    if (cljs.core.truth_(inst_27577)) {
                      var statearr_27614_27640 = state_27606__$1;
                      statearr_27614_27640[1] = 8;
                    } else {
                      var statearr_27615_27641 = state_27606__$1;
                      statearr_27615_27641[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_27607 === 6) {
                      var inst_27566 = state_27606[8];
                      var inst_27591 = inst_27566.length;
                      var inst_27592 = inst_27591 > 0;
                      var state_27606__$1 = state_27606;
                      if (cljs.core.truth_(inst_27592)) {
                        var statearr_27617_27642 = state_27606__$1;
                        statearr_27617_27642[1] = 12;
                      } else {
                        var statearr_27618_27643 = state_27606__$1;
                        statearr_27618_27643[1] = 13;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_27607 === 7) {
                        var inst_27602 = state_27606[2];
                        var state_27606__$1 = state_27606;
                        var statearr_27619_27644 = state_27606__$1;
                        statearr_27619_27644[2] = inst_27602;
                        statearr_27619_27644[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_27607 === 8) {
                          var inst_27566 = state_27606[8];
                          var inst_27574 = state_27606[10];
                          var inst_27570 = state_27606[9];
                          var inst_27579 = inst_27566.push(inst_27570);
                          var tmp27616 = inst_27566;
                          var inst_27566__$1 = tmp27616;
                          var inst_27567 = inst_27574;
                          var state_27606__$1 = function() {
                            var statearr_27620 = state_27606;
                            statearr_27620[7] = inst_27567;
                            statearr_27620[8] = inst_27566__$1;
                            statearr_27620[11] = inst_27579;
                            return statearr_27620;
                          }();
                          var statearr_27621_27645 = state_27606__$1;
                          statearr_27621_27645[2] = null;
                          statearr_27621_27645[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_27607 === 9) {
                            var inst_27566 = state_27606[8];
                            var inst_27582 = cljs.core.vec.call(null, inst_27566);
                            var state_27606__$1 = state_27606;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27606__$1, 11, out, inst_27582);
                          } else {
                            if (state_val_27607 === 10) {
                              var inst_27589 = state_27606[2];
                              var state_27606__$1 = state_27606;
                              var statearr_27622_27646 = state_27606__$1;
                              statearr_27622_27646[2] = inst_27589;
                              statearr_27622_27646[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_27607 === 11) {
                                var inst_27574 = state_27606[10];
                                var inst_27570 = state_27606[9];
                                var inst_27584 = state_27606[2];
                                var inst_27585 = [];
                                var inst_27586 = inst_27585.push(inst_27570);
                                var inst_27566 = inst_27585;
                                var inst_27567 = inst_27574;
                                var state_27606__$1 = function() {
                                  var statearr_27623 = state_27606;
                                  statearr_27623[7] = inst_27567;
                                  statearr_27623[8] = inst_27566;
                                  statearr_27623[12] = inst_27586;
                                  statearr_27623[13] = inst_27584;
                                  return statearr_27623;
                                }();
                                var statearr_27624_27647 = state_27606__$1;
                                statearr_27624_27647[2] = null;
                                statearr_27624_27647[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_27607 === 12) {
                                  var inst_27566 = state_27606[8];
                                  var inst_27594 = cljs.core.vec.call(null, inst_27566);
                                  var state_27606__$1 = state_27606;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27606__$1, 15, out, inst_27594);
                                } else {
                                  if (state_val_27607 === 13) {
                                    var state_27606__$1 = state_27606;
                                    var statearr_27625_27648 = state_27606__$1;
                                    statearr_27625_27648[2] = null;
                                    statearr_27625_27648[1] = 14;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_27607 === 14) {
                                      var inst_27599 = state_27606[2];
                                      var inst_27600 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_27606__$1 = function() {
                                        var statearr_27626 = state_27606;
                                        statearr_27626[14] = inst_27599;
                                        return statearr_27626;
                                      }();
                                      var statearr_27627_27649 = state_27606__$1;
                                      statearr_27627_27649[2] = inst_27600;
                                      statearr_27627_27649[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_27607 === 15) {
                                        var inst_27596 = state_27606[2];
                                        var state_27606__$1 = state_27606;
                                        var statearr_27628_27650 = state_27606__$1;
                                        statearr_27628_27650[2] = inst_27596;
                                        statearr_27628_27650[1] = 14;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5998__auto__) {
          return function() {
            var state_machine__5999__auto__ = null;
            var state_machine__5999__auto____0 = function() {
              var statearr_27632 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_27632[0] = state_machine__5999__auto__;
              statearr_27632[1] = 1;
              return statearr_27632;
            };
            var state_machine__5999__auto____1 = function(state_27606) {
              while (true) {
                var ret_value__6000__auto__ = function() {
                  try {
                    while (true) {
                      var result__6001__auto__ = switch__5998__auto__.call(null, state_27606);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                        continue;
                      } else {
                        return result__6001__auto__;
                      }
                      break;
                    }
                  } catch (e27633) {
                    if (e27633 instanceof Object) {
                      var ex__6002__auto__ = e27633;
                      var statearr_27634_27651 = state_27606;
                      statearr_27634_27651[5] = ex__6002__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27606);
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        throw e27633;
                      } else {
                        return null;
                      }
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  var G__27652 = state_27606;
                  state_27606 = G__27652;
                  continue;
                } else {
                  return ret_value__6000__auto__;
                }
                break;
              }
            };
            state_machine__5999__auto__ = function(state_27606) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5999__auto____0.call(this);
                case 1:
                  return state_machine__5999__auto____1.call(this, state_27606);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
            state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
            return state_machine__5999__auto__;
          }();
        }(switch__5998__auto__);
      }();
      var state__6070__auto__ = function() {
        var statearr_27635 = f__6069__auto__.call(null);
        statearr_27635[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto___27636;
        return statearr_27635;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
    });
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (opt_key) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CancelledError");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {
  this.sequence_ = [];
  this.onCancelFunction_ = opt_onCancelFunction;
  this.defaultScope_ = opt_defaultScope || null;
};
goog.async.Deferred.prototype.fired_ = false;
goog.async.Deferred.prototype.hadError_ = false;
goog.async.Deferred.prototype.result_;
goog.async.Deferred.prototype.blocked_ = false;
goog.async.Deferred.prototype.blocking_ = false;
goog.async.Deferred.prototype.silentlyCancelled_ = false;
goog.async.Deferred.prototype.unhandledExceptionTimeoutId_;
goog.async.Deferred.prototype.parent_;
goog.async.Deferred.prototype.branches_ = 0;
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if (!this.hasFired()) {
    if (this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if (opt_deepCancel) {
        parent.cancel(opt_deepCancel);
      } else {
        parent.branchCancel_();
      }
    }
    if (this.onCancelFunction_) {
      this.onCancelFunction_.call(this.defaultScope_, this);
    } else {
      this.silentlyCancelled_ = true;
    }
    if (!this.hasFired()) {
      this.errback(new goog.async.Deferred.CancelledError(this));
    }
  } else {
    if (this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel();
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if (this.branches_ <= 0) {
    this.cancel();
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.blocked_ = false;
  this.updateResult_(isSuccess, res);
};
goog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCancelled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCancelled_ = false;
  }
};
goog.async.Deferred.prototype.callback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(true, opt_result);
};
goog.async.Deferred.prototype.errback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(false, opt_result);
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.");
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope);
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope);
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope);
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([cb, eb, opt_scope]);
  if (this.hasFired()) {
    this.fire_();
  }
  return this;
};
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if (opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++;
  }
  return d;
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(sequenceRow) {
    return goog.isFunction(sequenceRow[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  if (this.unhandledExceptionTimeoutId_ && (this.hasFired() && this.hasErrback_())) {
    goog.global.clearTimeout(this.unhandledExceptionTimeoutId_);
    delete this.unhandledExceptionTimeoutId_;
  }
  if (this.parent_) {
    this.parent_.branches_--;
    delete this.parent_;
  }
  var res = this.result_;
  var unhandledException = false;
  var isNewlyBlocked = false;
  while (this.sequence_.length && !this.blocked_) {
    var sequenceEntry = this.sequence_.shift();
    var callback = sequenceEntry[0];
    var errback = sequenceEntry[1];
    var scope = sequenceEntry[2];
    var f = this.hadError_ ? errback : callback;
    if (f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if (goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret;
        }
        if (res instanceof goog.async.Deferred) {
          isNewlyBlocked = true;
          this.blocked_ = true;
        }
      } catch (ex) {
        res = ex;
        this.hadError_ = true;
        if (!this.hasErrback_()) {
          unhandledException = true;
        }
      }
    }
  }
  this.result_ = res;
  if (isNewlyBlocked) {
    res.addCallbacks(goog.bind(this.continue_, this, true), goog.bind(this.continue_, this, false));
    res.blocking_ = true;
  }
  if (unhandledException) {
    this.unhandledExceptionTimeoutId_ = goog.global.setTimeout(function() {
      throw res;
    }, 0);
  }
};
goog.async.Deferred.succeed = function(opt_result) {
  var d = new goog.async.Deferred;
  d.callback(opt_result);
  return d;
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d;
};
goog.async.Deferred.cancelled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d;
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if (value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope);
  } else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CancelledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.CancelledError, goog.debug.Error);
goog.async.Deferred.CancelledError.prototype.message = "Deferred was cancelled";
goog.async.Deferred.CancelledError.prototype.name = "CancelledError";
goog.provide("dommy.attrs");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
dommy.attrs.class_match_QMARK_ = function class_match_QMARK_(class_name, class$, idx) {
  var and__3431__auto__ = idx === 0 || " " === class_name.charAt(idx - 1);
  if (and__3431__auto__) {
    var total_len = class_name.length;
    var stop = idx + class$.length;
    if (stop <= total_len) {
      return stop === total_len || " " === class_name.charAt(stop);
    } else {
      return null;
    }
  } else {
    return and__3431__auto__;
  }
};
dommy.attrs.class_index = function class_index(class_name, class$) {
  var start_from = 0;
  while (true) {
    var i = class_name.indexOf(class$, start_from);
    if (i >= 0) {
      if (dommy.attrs.class_match_QMARK_.call(null, class_name, class$, i)) {
        return i;
      } else {
        var G__28554 = i + class$.length;
        start_from = G__28554;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
dommy.attrs.has_class_QMARK_ = function has_class_QMARK_(elem, class$) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var class$__$1 = cljs.core.name.call(null, class$);
  var temp__4090__auto__ = elem__$1.classList;
  if (cljs.core.truth_(temp__4090__auto__)) {
    var class_list = temp__4090__auto__;
    return class_list.contains(class$__$1);
  } else {
    var temp__4092__auto__ = elem__$1.className;
    if (cljs.core.truth_(temp__4092__auto__)) {
      var class_name = temp__4092__auto__;
      var temp__4092__auto____$1 = dommy.attrs.class_index.call(null, class_name, class$__$1);
      if (cljs.core.truth_(temp__4092__auto____$1)) {
        var i = temp__4092__auto____$1;
        return i >= 0;
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
dommy.attrs.add_class_BANG_ = function() {
  var add_class_BANG_ = null;
  var add_class_BANG___2 = function(elem, classes) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var classes__$1 = clojure.string.trim.call(null, cljs.core.name.call(null, classes));
    if (cljs.core.seq.call(null, classes__$1)) {
      var temp__4090__auto___28579 = elem__$1.classList;
      if (cljs.core.truth_(temp__4090__auto___28579)) {
        var class_list_28580 = temp__4090__auto___28579;
        var seq__28567_28581 = cljs.core.seq.call(null, classes__$1.split(/\s+/));
        var chunk__28568_28582 = null;
        var count__28569_28583 = 0;
        var i__28570_28584 = 0;
        while (true) {
          if (i__28570_28584 < count__28569_28583) {
            var class_28585 = cljs.core._nth.call(null, chunk__28568_28582, i__28570_28584);
            class_list_28580.add(class_28585);
            var G__28586 = seq__28567_28581;
            var G__28587 = chunk__28568_28582;
            var G__28588 = count__28569_28583;
            var G__28589 = i__28570_28584 + 1;
            seq__28567_28581 = G__28586;
            chunk__28568_28582 = G__28587;
            count__28569_28583 = G__28588;
            i__28570_28584 = G__28589;
            continue;
          } else {
            var temp__4092__auto___28590 = cljs.core.seq.call(null, seq__28567_28581);
            if (temp__4092__auto___28590) {
              var seq__28567_28591__$1 = temp__4092__auto___28590;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__28567_28591__$1)) {
                var c__4191__auto___28592 = cljs.core.chunk_first.call(null, seq__28567_28591__$1);
                var G__28593 = cljs.core.chunk_rest.call(null, seq__28567_28591__$1);
                var G__28594 = c__4191__auto___28592;
                var G__28595 = cljs.core.count.call(null, c__4191__auto___28592);
                var G__28596 = 0;
                seq__28567_28581 = G__28593;
                chunk__28568_28582 = G__28594;
                count__28569_28583 = G__28595;
                i__28570_28584 = G__28596;
                continue;
              } else {
                var class_28597 = cljs.core.first.call(null, seq__28567_28591__$1);
                class_list_28580.add(class_28597);
                var G__28598 = cljs.core.next.call(null, seq__28567_28591__$1);
                var G__28599 = null;
                var G__28600 = 0;
                var G__28601 = 0;
                seq__28567_28581 = G__28598;
                chunk__28568_28582 = G__28599;
                count__28569_28583 = G__28600;
                i__28570_28584 = G__28601;
                continue;
              }
            } else {
            }
          }
          break;
        }
      } else {
        var class_name_28602 = elem__$1.className;
        var seq__28571_28603 = cljs.core.seq.call(null, classes__$1.split(/\s+/));
        var chunk__28572_28604 = null;
        var count__28573_28605 = 0;
        var i__28574_28606 = 0;
        while (true) {
          if (i__28574_28606 < count__28573_28605) {
            var class_28607 = cljs.core._nth.call(null, chunk__28572_28604, i__28574_28606);
            if (cljs.core.truth_(dommy.attrs.class_index.call(null, class_name_28602, class_28607))) {
            } else {
              elem__$1.className = class_name_28602 === "" ? class_28607 : [cljs.core.str(class_name_28602), cljs.core.str(" "), cljs.core.str(class_28607)].join("");
            }
            var G__28608 = seq__28571_28603;
            var G__28609 = chunk__28572_28604;
            var G__28610 = count__28573_28605;
            var G__28611 = i__28574_28606 + 1;
            seq__28571_28603 = G__28608;
            chunk__28572_28604 = G__28609;
            count__28573_28605 = G__28610;
            i__28574_28606 = G__28611;
            continue;
          } else {
            var temp__4092__auto___28612 = cljs.core.seq.call(null, seq__28571_28603);
            if (temp__4092__auto___28612) {
              var seq__28571_28613__$1 = temp__4092__auto___28612;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__28571_28613__$1)) {
                var c__4191__auto___28614 = cljs.core.chunk_first.call(null, seq__28571_28613__$1);
                var G__28615 = cljs.core.chunk_rest.call(null, seq__28571_28613__$1);
                var G__28616 = c__4191__auto___28614;
                var G__28617 = cljs.core.count.call(null, c__4191__auto___28614);
                var G__28618 = 0;
                seq__28571_28603 = G__28615;
                chunk__28572_28604 = G__28616;
                count__28573_28605 = G__28617;
                i__28574_28606 = G__28618;
                continue;
              } else {
                var class_28619 = cljs.core.first.call(null, seq__28571_28613__$1);
                if (cljs.core.truth_(dommy.attrs.class_index.call(null, class_name_28602, class_28619))) {
                } else {
                  elem__$1.className = class_name_28602 === "" ? class_28619 : [cljs.core.str(class_name_28602), cljs.core.str(" "), cljs.core.str(class_28619)].join("");
                }
                var G__28620 = cljs.core.next.call(null, seq__28571_28613__$1);
                var G__28621 = null;
                var G__28622 = 0;
                var G__28623 = 0;
                seq__28571_28603 = G__28620;
                chunk__28572_28604 = G__28621;
                count__28573_28605 = G__28622;
                i__28574_28606 = G__28623;
                continue;
              }
            } else {
            }
          }
          break;
        }
      }
    } else {
    }
    return elem__$1;
  };
  var add_class_BANG___3 = function() {
    var G__28624__delegate = function(elem, classes, more_classes) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__28575_28625 = cljs.core.seq.call(null, cljs.core.conj.call(null, more_classes, classes));
      var chunk__28576_28626 = null;
      var count__28577_28627 = 0;
      var i__28578_28628 = 0;
      while (true) {
        if (i__28578_28628 < count__28577_28627) {
          var c_28629 = cljs.core._nth.call(null, chunk__28576_28626, i__28578_28628);
          add_class_BANG_.call(null, elem__$1, c_28629);
          var G__28630 = seq__28575_28625;
          var G__28631 = chunk__28576_28626;
          var G__28632 = count__28577_28627;
          var G__28633 = i__28578_28628 + 1;
          seq__28575_28625 = G__28630;
          chunk__28576_28626 = G__28631;
          count__28577_28627 = G__28632;
          i__28578_28628 = G__28633;
          continue;
        } else {
          var temp__4092__auto___28634 = cljs.core.seq.call(null, seq__28575_28625);
          if (temp__4092__auto___28634) {
            var seq__28575_28635__$1 = temp__4092__auto___28634;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__28575_28635__$1)) {
              var c__4191__auto___28636 = cljs.core.chunk_first.call(null, seq__28575_28635__$1);
              var G__28637 = cljs.core.chunk_rest.call(null, seq__28575_28635__$1);
              var G__28638 = c__4191__auto___28636;
              var G__28639 = cljs.core.count.call(null, c__4191__auto___28636);
              var G__28640 = 0;
              seq__28575_28625 = G__28637;
              chunk__28576_28626 = G__28638;
              count__28577_28627 = G__28639;
              i__28578_28628 = G__28640;
              continue;
            } else {
              var c_28641 = cljs.core.first.call(null, seq__28575_28635__$1);
              add_class_BANG_.call(null, elem__$1, c_28641);
              var G__28642 = cljs.core.next.call(null, seq__28575_28635__$1);
              var G__28643 = null;
              var G__28644 = 0;
              var G__28645 = 0;
              seq__28575_28625 = G__28642;
              chunk__28576_28626 = G__28643;
              count__28577_28627 = G__28644;
              i__28578_28628 = G__28645;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return elem__$1;
    };
    var G__28624 = function(elem, classes, var_args) {
      var more_classes = null;
      if (arguments.length > 2) {
        more_classes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__28624__delegate.call(this, elem, classes, more_classes);
    };
    G__28624.cljs$lang$maxFixedArity = 2;
    G__28624.cljs$lang$applyTo = function(arglist__28646) {
      var elem = cljs.core.first(arglist__28646);
      arglist__28646 = cljs.core.next(arglist__28646);
      var classes = cljs.core.first(arglist__28646);
      var more_classes = cljs.core.rest(arglist__28646);
      return G__28624__delegate(elem, classes, more_classes);
    };
    G__28624.cljs$core$IFn$_invoke$arity$variadic = G__28624__delegate;
    return G__28624;
  }();
  add_class_BANG_ = function(elem, classes, var_args) {
    var more_classes = var_args;
    switch(arguments.length) {
      case 2:
        return add_class_BANG___2.call(this, elem, classes);
      default:
        return add_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, classes, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_class_BANG_.cljs$lang$maxFixedArity = 2;
  add_class_BANG_.cljs$lang$applyTo = add_class_BANG___3.cljs$lang$applyTo;
  add_class_BANG_.cljs$core$IFn$_invoke$arity$2 = add_class_BANG___2;
  add_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = add_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return add_class_BANG_;
}();
dommy.attrs.remove_class_str = function remove_class_str(init_class_name, class$) {
  var class_name = init_class_name;
  while (true) {
    var class_len = class_name.length;
    var temp__4090__auto__ = dommy.attrs.class_index.call(null, class_name, class$);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var i = temp__4090__auto__;
      var G__28647 = function() {
        var end = i + class$.length;
        return[cljs.core.str(end < class_len ? [cljs.core.str(class_name.substring(0, i)), cljs.core.str(class_name.substr(end + 1))].join("") : class_name.substring(0, i - 1))].join("");
      }();
      class_name = G__28647;
      continue;
    } else {
      return class_name;
    }
    break;
  }
};
dommy.attrs.remove_class_BANG_ = function() {
  var remove_class_BANG_ = null;
  var remove_class_BANG___2 = function(elem, class$) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var class$__$1 = cljs.core.name.call(null, class$);
    var temp__4090__auto___28656 = elem__$1.classList;
    if (cljs.core.truth_(temp__4090__auto___28656)) {
      var class_list_28657 = temp__4090__auto___28656;
      class_list_28657.remove(class$__$1);
    } else {
      var class_name_28658 = elem__$1.className;
      var new_class_name_28659 = dommy.attrs.remove_class_str.call(null, class_name_28658, class$__$1);
      if (class_name_28658 === new_class_name_28659) {
      } else {
        elem__$1.className = new_class_name_28659;
      }
    }
    return elem__$1;
  };
  var remove_class_BANG___3 = function() {
    var G__28660__delegate = function(elem, class$, classes) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__28652 = cljs.core.seq.call(null, cljs.core.conj.call(null, classes, class$));
      var chunk__28653 = null;
      var count__28654 = 0;
      var i__28655 = 0;
      while (true) {
        if (i__28655 < count__28654) {
          var c = cljs.core._nth.call(null, chunk__28653, i__28655);
          remove_class_BANG_.call(null, elem__$1, c);
          var G__28661 = seq__28652;
          var G__28662 = chunk__28653;
          var G__28663 = count__28654;
          var G__28664 = i__28655 + 1;
          seq__28652 = G__28661;
          chunk__28653 = G__28662;
          count__28654 = G__28663;
          i__28655 = G__28664;
          continue;
        } else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__28652);
          if (temp__4092__auto__) {
            var seq__28652__$1 = temp__4092__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__28652__$1)) {
              var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__28652__$1);
              var G__28665 = cljs.core.chunk_rest.call(null, seq__28652__$1);
              var G__28666 = c__4191__auto__;
              var G__28667 = cljs.core.count.call(null, c__4191__auto__);
              var G__28668 = 0;
              seq__28652 = G__28665;
              chunk__28653 = G__28666;
              count__28654 = G__28667;
              i__28655 = G__28668;
              continue;
            } else {
              var c = cljs.core.first.call(null, seq__28652__$1);
              remove_class_BANG_.call(null, elem__$1, c);
              var G__28669 = cljs.core.next.call(null, seq__28652__$1);
              var G__28670 = null;
              var G__28671 = 0;
              var G__28672 = 0;
              seq__28652 = G__28669;
              chunk__28653 = G__28670;
              count__28654 = G__28671;
              i__28655 = G__28672;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    };
    var G__28660 = function(elem, class$, var_args) {
      var classes = null;
      if (arguments.length > 2) {
        classes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__28660__delegate.call(this, elem, class$, classes);
    };
    G__28660.cljs$lang$maxFixedArity = 2;
    G__28660.cljs$lang$applyTo = function(arglist__28673) {
      var elem = cljs.core.first(arglist__28673);
      arglist__28673 = cljs.core.next(arglist__28673);
      var class$ = cljs.core.first(arglist__28673);
      var classes = cljs.core.rest(arglist__28673);
      return G__28660__delegate(elem, class$, classes);
    };
    G__28660.cljs$core$IFn$_invoke$arity$variadic = G__28660__delegate;
    return G__28660;
  }();
  remove_class_BANG_ = function(elem, class$, var_args) {
    var classes = var_args;
    switch(arguments.length) {
      case 2:
        return remove_class_BANG___2.call(this, elem, class$);
      default:
        return remove_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, class$, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_class_BANG_.cljs$lang$maxFixedArity = 2;
  remove_class_BANG_.cljs$lang$applyTo = remove_class_BANG___3.cljs$lang$applyTo;
  remove_class_BANG_.cljs$core$IFn$_invoke$arity$2 = remove_class_BANG___2;
  remove_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = remove_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return remove_class_BANG_;
}();
dommy.attrs.toggle_class_BANG_ = function() {
  var toggle_class_BANG_ = null;
  var toggle_class_BANG___2 = function(elem, class$) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var class$__$1 = cljs.core.name.call(null, class$);
    var temp__4090__auto___28674 = elem__$1.classList;
    if (cljs.core.truth_(temp__4090__auto___28674)) {
      var class_list_28675 = temp__4090__auto___28674;
      class_list_28675.toggle(class$__$1);
    } else {
      toggle_class_BANG_.call(null, elem__$1, class$__$1, !dommy.attrs.has_class_QMARK_.call(null, elem__$1, class$__$1));
    }
    return elem__$1;
  };
  var toggle_class_BANG___3 = function(elem, class$, add_QMARK_) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if (add_QMARK_) {
      dommy.attrs.add_class_BANG_.call(null, elem__$1, class$);
    } else {
      dommy.attrs.remove_class_BANG_.call(null, elem__$1, class$);
    }
    return elem__$1;
  };
  toggle_class_BANG_ = function(elem, class$, add_QMARK_) {
    switch(arguments.length) {
      case 2:
        return toggle_class_BANG___2.call(this, elem, class$);
      case 3:
        return toggle_class_BANG___3.call(this, elem, class$, add_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_class_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_class_BANG___2;
  toggle_class_BANG_.cljs$core$IFn$_invoke$arity$3 = toggle_class_BANG___3;
  return toggle_class_BANG_;
}();
dommy.attrs.style_str = function style_str(x) {
  if (typeof x === "string") {
    return x;
  } else {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, function(p__28678) {
      var vec__28679 = p__28678;
      var k = cljs.core.nth.call(null, vec__28679, 0, null);
      var v = cljs.core.nth.call(null, vec__28679, 1, null);
      return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str(":"), cljs.core.str(cljs.core.name.call(null, v)), cljs.core.str(";")].join("");
    }, x));
  }
};
dommy.attrs.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(elem, kvs) {
    if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
    }
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var style = elem__$1.style;
    var seq__28686_28692 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
    var chunk__28687_28693 = null;
    var count__28688_28694 = 0;
    var i__28689_28695 = 0;
    while (true) {
      if (i__28689_28695 < count__28688_28694) {
        var vec__28690_28696 = cljs.core._nth.call(null, chunk__28687_28693, i__28689_28695);
        var k_28697 = cljs.core.nth.call(null, vec__28690_28696, 0, null);
        var v_28698 = cljs.core.nth.call(null, vec__28690_28696, 1, null);
        style[cljs.core.name.call(null, k_28697)] = v_28698;
        var G__28699 = seq__28686_28692;
        var G__28700 = chunk__28687_28693;
        var G__28701 = count__28688_28694;
        var G__28702 = i__28689_28695 + 1;
        seq__28686_28692 = G__28699;
        chunk__28687_28693 = G__28700;
        count__28688_28694 = G__28701;
        i__28689_28695 = G__28702;
        continue;
      } else {
        var temp__4092__auto___28703 = cljs.core.seq.call(null, seq__28686_28692);
        if (temp__4092__auto___28703) {
          var seq__28686_28704__$1 = temp__4092__auto___28703;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28686_28704__$1)) {
            var c__4191__auto___28705 = cljs.core.chunk_first.call(null, seq__28686_28704__$1);
            var G__28706 = cljs.core.chunk_rest.call(null, seq__28686_28704__$1);
            var G__28707 = c__4191__auto___28705;
            var G__28708 = cljs.core.count.call(null, c__4191__auto___28705);
            var G__28709 = 0;
            seq__28686_28692 = G__28706;
            chunk__28687_28693 = G__28707;
            count__28688_28694 = G__28708;
            i__28689_28695 = G__28709;
            continue;
          } else {
            var vec__28691_28710 = cljs.core.first.call(null, seq__28686_28704__$1);
            var k_28711 = cljs.core.nth.call(null, vec__28691_28710, 0, null);
            var v_28712 = cljs.core.nth.call(null, vec__28691_28710, 1, null);
            style[cljs.core.name.call(null, k_28711)] = v_28712;
            var G__28713 = cljs.core.next.call(null, seq__28686_28704__$1);
            var G__28714 = null;
            var G__28715 = 0;
            var G__28716 = 0;
            seq__28686_28692 = G__28713;
            chunk__28687_28693 = G__28714;
            count__28688_28694 = G__28715;
            i__28689_28695 = G__28716;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return elem__$1;
  };
  var set_style_BANG_ = function(elem, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return set_style_BANG___delegate.call(this, elem, kvs);
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 1;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__28717) {
    var elem = cljs.core.first(arglist__28717);
    var kvs = cljs.core.rest(arglist__28717);
    return set_style_BANG___delegate(elem, kvs);
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_;
}();
dommy.attrs.style = function style(elem, k) {
  if (cljs.core.truth_(k)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "k", "k", -1640531420, null)))].join(""));
  }
  return window.getComputedStyle(dommy.template.__GT_node_like.call(null, elem))[cljs.core.name.call(null, k)];
};
dommy.attrs.set_px_BANG_ = function() {
  var set_px_BANG___delegate = function(elem, kvs) {
    if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
    }
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var seq__28724_28730 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
    var chunk__28725_28731 = null;
    var count__28726_28732 = 0;
    var i__28727_28733 = 0;
    while (true) {
      if (i__28727_28733 < count__28726_28732) {
        var vec__28728_28734 = cljs.core._nth.call(null, chunk__28725_28731, i__28727_28733);
        var k_28735 = cljs.core.nth.call(null, vec__28728_28734, 0, null);
        var v_28736 = cljs.core.nth.call(null, vec__28728_28734, 1, null);
        dommy.attrs.set_style_BANG_.call(null, elem__$1, k_28735, [cljs.core.str(v_28736), cljs.core.str("px")].join(""));
        var G__28737 = seq__28724_28730;
        var G__28738 = chunk__28725_28731;
        var G__28739 = count__28726_28732;
        var G__28740 = i__28727_28733 + 1;
        seq__28724_28730 = G__28737;
        chunk__28725_28731 = G__28738;
        count__28726_28732 = G__28739;
        i__28727_28733 = G__28740;
        continue;
      } else {
        var temp__4092__auto___28741 = cljs.core.seq.call(null, seq__28724_28730);
        if (temp__4092__auto___28741) {
          var seq__28724_28742__$1 = temp__4092__auto___28741;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28724_28742__$1)) {
            var c__4191__auto___28743 = cljs.core.chunk_first.call(null, seq__28724_28742__$1);
            var G__28744 = cljs.core.chunk_rest.call(null, seq__28724_28742__$1);
            var G__28745 = c__4191__auto___28743;
            var G__28746 = cljs.core.count.call(null, c__4191__auto___28743);
            var G__28747 = 0;
            seq__28724_28730 = G__28744;
            chunk__28725_28731 = G__28745;
            count__28726_28732 = G__28746;
            i__28727_28733 = G__28747;
            continue;
          } else {
            var vec__28729_28748 = cljs.core.first.call(null, seq__28724_28742__$1);
            var k_28749 = cljs.core.nth.call(null, vec__28729_28748, 0, null);
            var v_28750 = cljs.core.nth.call(null, vec__28729_28748, 1, null);
            dommy.attrs.set_style_BANG_.call(null, elem__$1, k_28749, [cljs.core.str(v_28750), cljs.core.str("px")].join(""));
            var G__28751 = cljs.core.next.call(null, seq__28724_28742__$1);
            var G__28752 = null;
            var G__28753 = 0;
            var G__28754 = 0;
            seq__28724_28730 = G__28751;
            chunk__28725_28731 = G__28752;
            count__28726_28732 = G__28753;
            i__28727_28733 = G__28754;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return elem__$1;
  };
  var set_px_BANG_ = function(elem, var_args) {
    var kvs = null;
    if (arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return set_px_BANG___delegate.call(this, elem, kvs);
  };
  set_px_BANG_.cljs$lang$maxFixedArity = 1;
  set_px_BANG_.cljs$lang$applyTo = function(arglist__28755) {
    var elem = cljs.core.first(arglist__28755);
    var kvs = cljs.core.rest(arglist__28755);
    return set_px_BANG___delegate(elem, kvs);
  };
  set_px_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_px_BANG___delegate;
  return set_px_BANG_;
}();
dommy.attrs.px = function px(elem, k) {
  var pixels = dommy.attrs.style.call(null, dommy.template.__GT_node_like.call(null, elem), k);
  if (cljs.core.seq.call(null, pixels)) {
    return parseInt(pixels);
  } else {
    return null;
  }
};
dommy.attrs.set_attr_BANG_ = function() {
  var set_attr_BANG_ = null;
  var set_attr_BANG___2 = function(elem, k) {
    return set_attr_BANG_.call(null, dommy.template.__GT_node_like.call(null, elem), k, "true");
  };
  var set_attr_BANG___3 = function(elem, k, v) {
    if (cljs.core.truth_(v)) {
      if (cljs.core.fn_QMARK_.call(null, v)) {
        var G__28764 = dommy.template.__GT_node_like.call(null, elem);
        G__28764[cljs.core.name.call(null, k)] = v;
        return G__28764;
      } else {
        var G__28765 = dommy.template.__GT_node_like.call(null, elem);
        G__28765.setAttribute(cljs.core.name.call(null, k), k === new cljs.core.Keyword(null, "style", "style", 1123684643) ? dommy.attrs.style_str.call(null, v) : v);
        return G__28765;
      }
    } else {
      return null;
    }
  };
  var set_attr_BANG___4 = function() {
    var G__28772__delegate = function(elem, k, v, kvs) {
      if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
      }
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__28766_28773 = cljs.core.seq.call(null, cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), cljs.core.partition.call(null, 2, kvs)));
      var chunk__28767_28774 = null;
      var count__28768_28775 = 0;
      var i__28769_28776 = 0;
      while (true) {
        if (i__28769_28776 < count__28768_28775) {
          var vec__28770_28777 = cljs.core._nth.call(null, chunk__28767_28774, i__28769_28776);
          var k_28778__$1 = cljs.core.nth.call(null, vec__28770_28777, 0, null);
          var v_28779__$1 = cljs.core.nth.call(null, vec__28770_28777, 1, null);
          set_attr_BANG_.call(null, elem__$1, k_28778__$1, v_28779__$1);
          var G__28780 = seq__28766_28773;
          var G__28781 = chunk__28767_28774;
          var G__28782 = count__28768_28775;
          var G__28783 = i__28769_28776 + 1;
          seq__28766_28773 = G__28780;
          chunk__28767_28774 = G__28781;
          count__28768_28775 = G__28782;
          i__28769_28776 = G__28783;
          continue;
        } else {
          var temp__4092__auto___28784 = cljs.core.seq.call(null, seq__28766_28773);
          if (temp__4092__auto___28784) {
            var seq__28766_28785__$1 = temp__4092__auto___28784;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__28766_28785__$1)) {
              var c__4191__auto___28786 = cljs.core.chunk_first.call(null, seq__28766_28785__$1);
              var G__28787 = cljs.core.chunk_rest.call(null, seq__28766_28785__$1);
              var G__28788 = c__4191__auto___28786;
              var G__28789 = cljs.core.count.call(null, c__4191__auto___28786);
              var G__28790 = 0;
              seq__28766_28773 = G__28787;
              chunk__28767_28774 = G__28788;
              count__28768_28775 = G__28789;
              i__28769_28776 = G__28790;
              continue;
            } else {
              var vec__28771_28791 = cljs.core.first.call(null, seq__28766_28785__$1);
              var k_28792__$1 = cljs.core.nth.call(null, vec__28771_28791, 0, null);
              var v_28793__$1 = cljs.core.nth.call(null, vec__28771_28791, 1, null);
              set_attr_BANG_.call(null, elem__$1, k_28792__$1, v_28793__$1);
              var G__28794 = cljs.core.next.call(null, seq__28766_28785__$1);
              var G__28795 = null;
              var G__28796 = 0;
              var G__28797 = 0;
              seq__28766_28773 = G__28794;
              chunk__28767_28774 = G__28795;
              count__28768_28775 = G__28796;
              i__28769_28776 = G__28797;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return elem__$1;
    };
    var G__28772 = function(elem, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__28772__delegate.call(this, elem, k, v, kvs);
    };
    G__28772.cljs$lang$maxFixedArity = 3;
    G__28772.cljs$lang$applyTo = function(arglist__28798) {
      var elem = cljs.core.first(arglist__28798);
      arglist__28798 = cljs.core.next(arglist__28798);
      var k = cljs.core.first(arglist__28798);
      arglist__28798 = cljs.core.next(arglist__28798);
      var v = cljs.core.first(arglist__28798);
      var kvs = cljs.core.rest(arglist__28798);
      return G__28772__delegate(elem, k, v, kvs);
    };
    G__28772.cljs$core$IFn$_invoke$arity$variadic = G__28772__delegate;
    return G__28772;
  }();
  set_attr_BANG_ = function(elem, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 2:
        return set_attr_BANG___2.call(this, elem, k);
      case 3:
        return set_attr_BANG___3.call(this, elem, k, v);
      default:
        return set_attr_BANG___4.cljs$core$IFn$_invoke$arity$variadic(elem, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 3;
  set_attr_BANG_.cljs$lang$applyTo = set_attr_BANG___4.cljs$lang$applyTo;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_attr_BANG___2;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_attr_BANG___3;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return set_attr_BANG_;
}();
dommy.attrs.remove_attr_BANG_ = function() {
  var remove_attr_BANG_ = null;
  var remove_attr_BANG___2 = function(elem, k) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", 1108647146), null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), null], null), null)).call(null, k))) {
      elem__$1.className = "";
    } else {
      elem__$1.removeAttribute(cljs.core.name.call(null, k));
    }
    return elem__$1;
  };
  var remove_attr_BANG___3 = function() {
    var G__28807__delegate = function(elem, k, ks) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__28803_28808 = cljs.core.seq.call(null, cljs.core.cons.call(null, k, ks));
      var chunk__28804_28809 = null;
      var count__28805_28810 = 0;
      var i__28806_28811 = 0;
      while (true) {
        if (i__28806_28811 < count__28805_28810) {
          var k_28812__$1 = cljs.core._nth.call(null, chunk__28804_28809, i__28806_28811);
          remove_attr_BANG_.call(null, elem__$1, k_28812__$1);
          var G__28813 = seq__28803_28808;
          var G__28814 = chunk__28804_28809;
          var G__28815 = count__28805_28810;
          var G__28816 = i__28806_28811 + 1;
          seq__28803_28808 = G__28813;
          chunk__28804_28809 = G__28814;
          count__28805_28810 = G__28815;
          i__28806_28811 = G__28816;
          continue;
        } else {
          var temp__4092__auto___28817 = cljs.core.seq.call(null, seq__28803_28808);
          if (temp__4092__auto___28817) {
            var seq__28803_28818__$1 = temp__4092__auto___28817;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__28803_28818__$1)) {
              var c__4191__auto___28819 = cljs.core.chunk_first.call(null, seq__28803_28818__$1);
              var G__28820 = cljs.core.chunk_rest.call(null, seq__28803_28818__$1);
              var G__28821 = c__4191__auto___28819;
              var G__28822 = cljs.core.count.call(null, c__4191__auto___28819);
              var G__28823 = 0;
              seq__28803_28808 = G__28820;
              chunk__28804_28809 = G__28821;
              count__28805_28810 = G__28822;
              i__28806_28811 = G__28823;
              continue;
            } else {
              var k_28824__$1 = cljs.core.first.call(null, seq__28803_28818__$1);
              remove_attr_BANG_.call(null, elem__$1, k_28824__$1);
              var G__28825 = cljs.core.next.call(null, seq__28803_28818__$1);
              var G__28826 = null;
              var G__28827 = 0;
              var G__28828 = 0;
              seq__28803_28808 = G__28825;
              chunk__28804_28809 = G__28826;
              count__28805_28810 = G__28827;
              i__28806_28811 = G__28828;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return elem__$1;
    };
    var G__28807 = function(elem, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__28807__delegate.call(this, elem, k, ks);
    };
    G__28807.cljs$lang$maxFixedArity = 2;
    G__28807.cljs$lang$applyTo = function(arglist__28829) {
      var elem = cljs.core.first(arglist__28829);
      arglist__28829 = cljs.core.next(arglist__28829);
      var k = cljs.core.first(arglist__28829);
      var ks = cljs.core.rest(arglist__28829);
      return G__28807__delegate(elem, k, ks);
    };
    G__28807.cljs$core$IFn$_invoke$arity$variadic = G__28807__delegate;
    return G__28807;
  }();
  remove_attr_BANG_ = function(elem, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return remove_attr_BANG___2.call(this, elem, k);
      default:
        return remove_attr_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_attr_BANG_.cljs$lang$maxFixedArity = 2;
  remove_attr_BANG_.cljs$lang$applyTo = remove_attr_BANG___3.cljs$lang$applyTo;
  remove_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = remove_attr_BANG___2;
  remove_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = remove_attr_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return remove_attr_BANG_;
}();
dommy.attrs.attr = function attr(elem, k) {
  if (cljs.core.truth_(k)) {
    return dommy.template.__GT_node_like.call(null, elem).getAttribute(cljs.core.name.call(null, k));
  } else {
    return null;
  }
};
dommy.attrs.toggle_attr_BANG_ = function() {
  var toggle_attr_BANG_ = null;
  var toggle_attr_BANG___2 = function(elem, k) {
    return toggle_attr_BANG_.call(null, elem, k, cljs.core.boolean$.call(null, dommy.attrs.attr.call(null, elem, k)));
  };
  var toggle_attr_BANG___3 = function(elem, k, add_QMARK_) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if (add_QMARK_) {
      return dommy.attrs.set_attr_BANG_.call(null, elem__$1, k);
    } else {
      return dommy.attrs.remove_attr_BANG_.call(null, elem__$1, k);
    }
  };
  toggle_attr_BANG_ = function(elem, k, add_QMARK_) {
    switch(arguments.length) {
      case 2:
        return toggle_attr_BANG___2.call(this, elem, k);
      case 3:
        return toggle_attr_BANG___3.call(this, elem, k, add_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_attr_BANG___2;
  toggle_attr_BANG_.cljs$core$IFn$_invoke$arity$3 = toggle_attr_BANG___3;
  return toggle_attr_BANG_;
}();
dommy.attrs.hidden_QMARK_ = function hidden_QMARK_(elem) {
  return "none" === dommy.template.__GT_node_like.call(null, elem).style.display;
};
dommy.attrs.toggle_BANG_ = function() {
  var toggle_BANG_ = null;
  var toggle_BANG___1 = function(elem) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    toggle_BANG_.call(null, elem__$1, dommy.attrs.hidden_QMARK_.call(null, elem__$1));
    return elem__$1;
  };
  var toggle_BANG___2 = function(elem, show_QMARK_) {
    var G__28831 = dommy.template.__GT_node_like.call(null, elem);
    G__28831.style.display = show_QMARK_ ? "" : "none";
    return G__28831;
  };
  toggle_BANG_ = function(elem, show_QMARK_) {
    switch(arguments.length) {
      case 1:
        return toggle_BANG___1.call(this, elem);
      case 2:
        return toggle_BANG___2.call(this, elem, show_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_BANG_.cljs$core$IFn$_invoke$arity$1 = toggle_BANG___1;
  toggle_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_BANG___2;
  return toggle_BANG_;
}();
dommy.attrs.hide_BANG_ = function hide_BANG_(elem) {
  var G__28833 = dommy.template.__GT_node_like.call(null, elem);
  dommy.attrs.toggle_BANG_.call(null, G__28833, false);
  return G__28833;
};
dommy.attrs.show_BANG_ = function show_BANG_(elem) {
  var G__28835 = dommy.template.__GT_node_like.call(null, elem);
  dommy.attrs.toggle_BANG_.call(null, G__28835, true);
  return G__28835;
};
dommy.attrs.bounding_client_rect = function bounding_client_rect(elem) {
  return cljs.core.js__GT_clj.call(null, function() {
    var G__28837 = dommy.template.__GT_node_like.call(null, elem).getBoundingClientRect();
    G__28837["constructor"] = Object;
    return G__28837;
  }(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), true);
};
dommy.attrs.scroll_into_view = function scroll_into_view(elem, align_with_top_QMARK_) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var top = (new cljs.core.Keyword(null, "top", "top", 1014019271)).cljs$core$IFn$_invoke$arity$1(dommy.attrs.bounding_client_rect.call(null, elem__$1));
  if (window.innerHeight < top + elem__$1.offsetHeight) {
    return elem__$1.scrollIntoView(align_with_top_QMARK_);
  } else {
    return null;
  }
};
goog.provide("dommy.template");
goog.require("cljs.core");
goog.require("dommy.attrs");
goog.require("dommy.attrs");
goog.require("clojure.string");
goog.require("clojure.string");
dommy.template._PLUS_svg_ns_PLUS_ = "http://www.w3.org/2000/svg";
dommy.template._PLUS_svg_tags_PLUS_ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["svg", null, "line", null], null), null);
dommy.template.PElement = function() {
  var obj28401 = {};
  return obj28401;
}();
dommy.template._elem = function _elem(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.dommy$template$PElement$_elem$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.dommy$template$PElement$_elem$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = dommy.template._elem[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = dommy.template._elem["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PElement.-elem", this$);
        }
      }
    }().call(null, this$);
  }
};
dommy.template.next_css_index = function next_css_index(s, start_idx) {
  var id_idx = s.indexOf("#", start_idx);
  var class_idx = s.indexOf(".", start_idx);
  var idx = Math.min(id_idx, class_idx);
  if (idx < 0) {
    return Math.max(id_idx, class_idx);
  } else {
    return idx;
  }
};
dommy.template.base_element = function base_element(node_key) {
  var node_str = cljs.core.name.call(null, node_key);
  var base_idx = dommy.template.next_css_index.call(null, node_str, 0);
  var tag = base_idx > 0 ? node_str.substring(0, base_idx) : base_idx === 0 ? "div" : new cljs.core.Keyword(null, "else", "else", 1017020587) ? node_str : null;
  var node = cljs.core.truth_(dommy.template._PLUS_svg_tags_PLUS_.call(null, tag)) ? document.createElementNS(dommy.template._PLUS_svg_ns_PLUS_, tag) : document.createElement(tag);
  if (base_idx >= 0) {
    var str_28404 = node_str.substring(base_idx);
    while (true) {
      var next_idx_28405 = dommy.template.next_css_index.call(null, str_28404, 1);
      var frag_28406 = next_idx_28405 >= 0 ? str_28404.substring(0, next_idx_28405) : str_28404;
      var G__28403_28407 = frag_28406.charAt(0);
      if (cljs.core._EQ_.call(null, "#", G__28403_28407)) {
        node.setAttribute("id", frag_28406.substring(1));
      } else {
        if (cljs.core._EQ_.call(null, ".", G__28403_28407)) {
          dommy.attrs.add_class_BANG_.call(null, node, frag_28406.substring(1));
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(frag_28406.charAt(0))].join(""));
          } else {
          }
        }
      }
      if (next_idx_28405 >= 0) {
        var G__28408 = str_28404.substring(next_idx_28405);
        str_28404 = G__28408;
        continue;
      } else {
      }
      break;
    }
  } else {
  }
  return node;
};
dommy.template.throw_unable_to_make_node = function throw_unable_to_make_node(node_data) {
  throw[cljs.core.str("Don't know how to make node from: "), cljs.core.str(cljs.core.pr_str.call(null, node_data))].join("");
};
dommy.template.__GT_document_fragment = function() {
  var __GT_document_fragment = null;
  var __GT_document_fragment__1 = function(data) {
    return __GT_document_fragment.call(null, document.createDocumentFragment(), data);
  };
  var __GT_document_fragment__2 = function(result_frag, data) {
    if (function() {
      var G__28414 = data;
      if (G__28414) {
        var bit__4093__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3443__auto__ = bit__4093__auto__;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return G__28414.dommy$template$PElement$;
          }
        }())) {
          return true;
        } else {
          if (!G__28414.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__28414);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__28414);
      }
    }()) {
      result_frag.appendChild(dommy.template._elem.call(null, data));
      return result_frag;
    } else {
      if (cljs.core.seq_QMARK_.call(null, data)) {
        var seq__28415_28419 = cljs.core.seq.call(null, data);
        var chunk__28416_28420 = null;
        var count__28417_28421 = 0;
        var i__28418_28422 = 0;
        while (true) {
          if (i__28418_28422 < count__28417_28421) {
            var child_28423 = cljs.core._nth.call(null, chunk__28416_28420, i__28418_28422);
            __GT_document_fragment.call(null, result_frag, child_28423);
            var G__28424 = seq__28415_28419;
            var G__28425 = chunk__28416_28420;
            var G__28426 = count__28417_28421;
            var G__28427 = i__28418_28422 + 1;
            seq__28415_28419 = G__28424;
            chunk__28416_28420 = G__28425;
            count__28417_28421 = G__28426;
            i__28418_28422 = G__28427;
            continue;
          } else {
            var temp__4092__auto___28428 = cljs.core.seq.call(null, seq__28415_28419);
            if (temp__4092__auto___28428) {
              var seq__28415_28429__$1 = temp__4092__auto___28428;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__28415_28429__$1)) {
                var c__4191__auto___28430 = cljs.core.chunk_first.call(null, seq__28415_28429__$1);
                var G__28431 = cljs.core.chunk_rest.call(null, seq__28415_28429__$1);
                var G__28432 = c__4191__auto___28430;
                var G__28433 = cljs.core.count.call(null, c__4191__auto___28430);
                var G__28434 = 0;
                seq__28415_28419 = G__28431;
                chunk__28416_28420 = G__28432;
                count__28417_28421 = G__28433;
                i__28418_28422 = G__28434;
                continue;
              } else {
                var child_28435 = cljs.core.first.call(null, seq__28415_28429__$1);
                __GT_document_fragment.call(null, result_frag, child_28435);
                var G__28436 = cljs.core.next.call(null, seq__28415_28429__$1);
                var G__28437 = null;
                var G__28438 = 0;
                var G__28439 = 0;
                seq__28415_28419 = G__28436;
                chunk__28416_28420 = G__28437;
                count__28417_28421 = G__28438;
                i__28418_28422 = G__28439;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return result_frag;
      } else {
        if (data == null) {
          return result_frag;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return dommy.template.throw_unable_to_make_node.call(null, data);
          } else {
            return null;
          }
        }
      }
    }
  };
  __GT_document_fragment = function(result_frag, data) {
    switch(arguments.length) {
      case 1:
        return __GT_document_fragment__1.call(this, result_frag);
      case 2:
        return __GT_document_fragment__2.call(this, result_frag, data);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_document_fragment.cljs$core$IFn$_invoke$arity$1 = __GT_document_fragment__1;
  __GT_document_fragment.cljs$core$IFn$_invoke$arity$2 = __GT_document_fragment__2;
  return __GT_document_fragment;
}();
dommy.template.__GT_node_like = function __GT_node_like(data) {
  if (function() {
    var G__28441 = data;
    if (G__28441) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__28441.dommy$template$PElement$;
        }
      }())) {
        return true;
      } else {
        if (!G__28441.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__28441);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__28441);
    }
  }()) {
    return dommy.template._elem.call(null, data);
  } else {
    return dommy.template.__GT_document_fragment.call(null, data);
  }
};
dommy.template.compound_element = function compound_element(p__28442) {
  var vec__28462 = p__28442;
  var tag_name = cljs.core.nth.call(null, vec__28462, 0, null);
  var maybe_attrs = cljs.core.nth.call(null, vec__28462, 1, null);
  var children = cljs.core.nthnext.call(null, vec__28462, 2);
  var n = dommy.template.base_element.call(null, tag_name);
  var attrs = cljs.core.map_QMARK_.call(null, maybe_attrs) && !function() {
    var G__28464 = maybe_attrs;
    if (G__28464) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__28464.dommy$template$PElement$;
        }
      }())) {
        return true;
      } else {
        if (!G__28464.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__28464);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__28464);
    }
  }() ? maybe_attrs : null;
  var children__$1 = cljs.core.truth_(attrs) ? children : cljs.core.cons.call(null, maybe_attrs, children);
  var seq__28465_28481 = cljs.core.seq.call(null, attrs);
  var chunk__28466_28482 = null;
  var count__28467_28483 = 0;
  var i__28468_28484 = 0;
  while (true) {
    if (i__28468_28484 < count__28467_28483) {
      var vec__28469_28485 = cljs.core._nth.call(null, chunk__28466_28482, i__28468_28484);
      var k_28486 = cljs.core.nth.call(null, vec__28469_28485, 0, null);
      var v_28487 = cljs.core.nth.call(null, vec__28469_28485, 1, null);
      var G__28470_28488 = k_28486;
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), G__28470_28488)) {
        var seq__28471_28489 = cljs.core.seq.call(null, v_28487);
        var chunk__28472_28490 = null;
        var count__28473_28491 = 0;
        var i__28474_28492 = 0;
        while (true) {
          if (i__28474_28492 < count__28473_28491) {
            var c_28493 = cljs.core._nth.call(null, chunk__28472_28490, i__28474_28492);
            dommy.attrs.add_class_BANG_.call(null, n, c_28493);
            var G__28494 = seq__28471_28489;
            var G__28495 = chunk__28472_28490;
            var G__28496 = count__28473_28491;
            var G__28497 = i__28474_28492 + 1;
            seq__28471_28489 = G__28494;
            chunk__28472_28490 = G__28495;
            count__28473_28491 = G__28496;
            i__28474_28492 = G__28497;
            continue;
          } else {
            var temp__4092__auto___28498 = cljs.core.seq.call(null, seq__28471_28489);
            if (temp__4092__auto___28498) {
              var seq__28471_28499__$1 = temp__4092__auto___28498;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__28471_28499__$1)) {
                var c__4191__auto___28500 = cljs.core.chunk_first.call(null, seq__28471_28499__$1);
                var G__28501 = cljs.core.chunk_rest.call(null, seq__28471_28499__$1);
                var G__28502 = c__4191__auto___28500;
                var G__28503 = cljs.core.count.call(null, c__4191__auto___28500);
                var G__28504 = 0;
                seq__28471_28489 = G__28501;
                chunk__28472_28490 = G__28502;
                count__28473_28491 = G__28503;
                i__28474_28492 = G__28504;
                continue;
              } else {
                var c_28505 = cljs.core.first.call(null, seq__28471_28499__$1);
                dommy.attrs.add_class_BANG_.call(null, n, c_28505);
                var G__28506 = cljs.core.next.call(null, seq__28471_28499__$1);
                var G__28507 = null;
                var G__28508 = 0;
                var G__28509 = 0;
                seq__28471_28489 = G__28506;
                chunk__28472_28490 = G__28507;
                count__28473_28491 = G__28508;
                i__28474_28492 = G__28509;
                continue;
              }
            } else {
            }
          }
          break;
        }
      } else {
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "class", "class", 1108647146), G__28470_28488)) {
          dommy.attrs.add_class_BANG_.call(null, n, v_28487);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            dommy.attrs.set_attr_BANG_.call(null, n, k_28486, v_28487);
          } else {
          }
        }
      }
      var G__28510 = seq__28465_28481;
      var G__28511 = chunk__28466_28482;
      var G__28512 = count__28467_28483;
      var G__28513 = i__28468_28484 + 1;
      seq__28465_28481 = G__28510;
      chunk__28466_28482 = G__28511;
      count__28467_28483 = G__28512;
      i__28468_28484 = G__28513;
      continue;
    } else {
      var temp__4092__auto___28514 = cljs.core.seq.call(null, seq__28465_28481);
      if (temp__4092__auto___28514) {
        var seq__28465_28515__$1 = temp__4092__auto___28514;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__28465_28515__$1)) {
          var c__4191__auto___28516 = cljs.core.chunk_first.call(null, seq__28465_28515__$1);
          var G__28517 = cljs.core.chunk_rest.call(null, seq__28465_28515__$1);
          var G__28518 = c__4191__auto___28516;
          var G__28519 = cljs.core.count.call(null, c__4191__auto___28516);
          var G__28520 = 0;
          seq__28465_28481 = G__28517;
          chunk__28466_28482 = G__28518;
          count__28467_28483 = G__28519;
          i__28468_28484 = G__28520;
          continue;
        } else {
          var vec__28475_28521 = cljs.core.first.call(null, seq__28465_28515__$1);
          var k_28522 = cljs.core.nth.call(null, vec__28475_28521, 0, null);
          var v_28523 = cljs.core.nth.call(null, vec__28475_28521, 1, null);
          var G__28476_28524 = k_28522;
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), G__28476_28524)) {
            var seq__28477_28525 = cljs.core.seq.call(null, v_28523);
            var chunk__28478_28526 = null;
            var count__28479_28527 = 0;
            var i__28480_28528 = 0;
            while (true) {
              if (i__28480_28528 < count__28479_28527) {
                var c_28529 = cljs.core._nth.call(null, chunk__28478_28526, i__28480_28528);
                dommy.attrs.add_class_BANG_.call(null, n, c_28529);
                var G__28530 = seq__28477_28525;
                var G__28531 = chunk__28478_28526;
                var G__28532 = count__28479_28527;
                var G__28533 = i__28480_28528 + 1;
                seq__28477_28525 = G__28530;
                chunk__28478_28526 = G__28531;
                count__28479_28527 = G__28532;
                i__28480_28528 = G__28533;
                continue;
              } else {
                var temp__4092__auto___28534__$1 = cljs.core.seq.call(null, seq__28477_28525);
                if (temp__4092__auto___28534__$1) {
                  var seq__28477_28535__$1 = temp__4092__auto___28534__$1;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__28477_28535__$1)) {
                    var c__4191__auto___28536 = cljs.core.chunk_first.call(null, seq__28477_28535__$1);
                    var G__28537 = cljs.core.chunk_rest.call(null, seq__28477_28535__$1);
                    var G__28538 = c__4191__auto___28536;
                    var G__28539 = cljs.core.count.call(null, c__4191__auto___28536);
                    var G__28540 = 0;
                    seq__28477_28525 = G__28537;
                    chunk__28478_28526 = G__28538;
                    count__28479_28527 = G__28539;
                    i__28480_28528 = G__28540;
                    continue;
                  } else {
                    var c_28541 = cljs.core.first.call(null, seq__28477_28535__$1);
                    dommy.attrs.add_class_BANG_.call(null, n, c_28541);
                    var G__28542 = cljs.core.next.call(null, seq__28477_28535__$1);
                    var G__28543 = null;
                    var G__28544 = 0;
                    var G__28545 = 0;
                    seq__28477_28525 = G__28542;
                    chunk__28478_28526 = G__28543;
                    count__28479_28527 = G__28544;
                    i__28480_28528 = G__28545;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "class", "class", 1108647146), G__28476_28524)) {
              dommy.attrs.add_class_BANG_.call(null, n, v_28523);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                dommy.attrs.set_attr_BANG_.call(null, n, k_28522, v_28523);
              } else {
              }
            }
          }
          var G__28546 = cljs.core.next.call(null, seq__28465_28515__$1);
          var G__28547 = null;
          var G__28548 = 0;
          var G__28549 = 0;
          seq__28465_28481 = G__28546;
          chunk__28466_28482 = G__28547;
          count__28467_28483 = G__28548;
          i__28468_28484 = G__28549;
          continue;
        }
      } else {
      }
    }
    break;
  }
  n.appendChild(dommy.template.__GT_node_like.call(null, children__$1));
  return n;
};
dommy.template.PElement["string"] = true;
dommy.template._elem["string"] = function(this$) {
  if (this$ instanceof cljs.core.Keyword) {
    return dommy.template.base_element.call(null, this$);
  } else {
    return document.createTextNode([cljs.core.str(this$)].join(""));
  }
};
dommy.template.PElement["number"] = true;
dommy.template._elem["number"] = function(this$) {
  return document.createTextNode([cljs.core.str(this$)].join(""));
};
cljs.core.PersistentVector.prototype.dommy$template$PElement$ = true;
cljs.core.PersistentVector.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return dommy.template.compound_element.call(null, this$__$1);
};
SVGElement.prototype.dommy$template$PElement$ = true;
SVGElement.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1;
};
Document.prototype.dommy$template$PElement$ = true;
Document.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1;
};
Text.prototype.dommy$template$PElement$ = true;
Text.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1;
};
DocumentFragment.prototype.dommy$template$PElement$ = true;
DocumentFragment.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1;
};
HTMLElement.prototype.dommy$template$PElement$ = true;
HTMLElement.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1;
};
try {
  Window.prototype.dommy$template$PElement$ = true;
  Window.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
    var this$__$1 = this;
    return this$__$1;
  };
} catch (e28550) {
  if (e28550 instanceof ReferenceError) {
    var __28551 = e28550;
    console.log("PElement: js/Window not defined by browser, skipping it... (running on phantomjs?)");
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      throw e28550;
    } else {
    }
  }
}
dommy.template.node = function node(data) {
  if (function() {
    var G__28553 = data;
    if (G__28553) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__28553.dommy$template$PElement$;
        }
      }())) {
        return true;
      } else {
        if (!G__28553.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__28553);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__28553);
    }
  }()) {
    return dommy.template._elem.call(null, data);
  } else {
    return dommy.template.throw_unable_to_make_node.call(null, data);
  }
};
dommy.template.html__GT_nodes = function html__GT_nodes(html) {
  var parent = document.createElement("div");
  parent.insertAdjacentHTML("beforeend", html);
  return cljs.core.seq.call(null, Array.prototype.slice.call(parent.childNodes));
};
goog.provide("dommy.utils");
goog.require("cljs.core");
dommy.utils.dissoc_in = function dissoc_in(m, p__28397) {
  var vec__28399 = p__28397;
  var k = cljs.core.nth.call(null, vec__28399, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__28399, 1);
  if (cljs.core.truth_(m)) {
    var temp__4090__auto__ = function() {
      var and__3431__auto__ = ks;
      if (and__3431__auto__) {
        return dissoc_in.call(null, m.call(null, k), ks);
      } else {
        return and__3431__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var res = temp__4090__auto__;
      return cljs.core.assoc.call(null, m, k, res);
    } else {
      var res = cljs.core.dissoc.call(null, m, k);
      if (cljs.core.empty_QMARK_.call(null, res)) {
        return null;
      } else {
        return res;
      }
    }
  } else {
    return null;
  }
};
dommy.utils.__GT_Array = function __GT_Array(array_like) {
  return Array.prototype.slice.call(array_like);
};
goog.provide("dommy.core");
goog.require("cljs.core");
goog.require("dommy.template");
goog.require("dommy.template");
goog.require("dommy.attrs");
goog.require("dommy.attrs");
goog.require("dommy.utils");
goog.require("dommy.utils");
goog.require("clojure.string");
goog.require("clojure.string");
dommy.core.has_class_QMARK_ = dommy.attrs.has_class_QMARK_;
dommy.core.add_class_BANG_ = dommy.attrs.add_class_BANG_;
dommy.core.remove_class_BANG_ = dommy.attrs.remove_class_BANG_;
dommy.core.toggle_class_BANG_ = dommy.attrs.toggle_class_BANG_;
dommy.core.set_attr_BANG_ = dommy.attrs.set_attr_BANG_;
dommy.core.set_style_BANG_ = dommy.attrs.set_style_BANG_;
dommy.core.set_px_BANG_ = dommy.attrs.set_px_BANG_;
dommy.core.px = dommy.attrs.px;
dommy.core.style_str = dommy.attrs.style_str;
dommy.core.style = dommy.attrs.style;
dommy.core.remove_attr_BANG_ = dommy.attrs.remove_attr_BANG_;
dommy.core.toggle_attr_BANG_ = dommy.attrs.toggle_attr_BANG_;
dommy.core.attr = dommy.attrs.attr;
dommy.core.hidden_QMARK_ = dommy.attrs.hidden_QMARK_;
dommy.core.toggle_BANG_ = dommy.attrs.toggle_BANG_;
dommy.core.hide_BANG_ = dommy.attrs.hide_BANG_;
dommy.core.show_BANG_ = dommy.attrs.show_BANG_;
dommy.core.bounding_client_rect = dommy.attrs.bounding_client_rect;
dommy.core.scroll_into_view = dommy.attrs.scroll_into_view;
dommy.core.dissoc_in = dommy.utils.dissoc_in;
dommy.core.__GT_Array = dommy.utils.__GT_Array;
dommy.core.set_html_BANG_ = function set_html_BANG_(elem, html) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  elem__$1.innerHTML = html;
  return elem__$1;
};
dommy.core.html = function html(elem) {
  return dommy.template.__GT_node_like.call(null, elem).innerHTML;
};
dommy.core.set_text_BANG_ = function set_text_BANG_(elem, text) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var prop = cljs.core.truth_(elem__$1.textContent) ? "textContent" : "innerText";
  elem__$1[prop] = text;
  return elem__$1;
};
dommy.core.text = function text(elem) {
  var or__3443__auto__ = elem.textContent;
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    return elem.innerText;
  }
};
dommy.core.value = function value(elem) {
  return dommy.template.__GT_node_like.call(null, elem).value;
};
dommy.core.set_value_BANG_ = function set_value_BANG_(elem, value) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  elem__$1.value = value;
  return elem__$1;
};
dommy.core.append_BANG_ = function() {
  var append_BANG_ = null;
  var append_BANG___2 = function(parent, child) {
    var G__28007 = dommy.template.__GT_node_like.call(null, parent);
    G__28007.appendChild(dommy.template.__GT_node_like.call(null, child));
    return G__28007;
  };
  var append_BANG___3 = function() {
    var G__28012__delegate = function(parent, child, more_children) {
      var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
      var seq__28008_28013 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
      var chunk__28009_28014 = null;
      var count__28010_28015 = 0;
      var i__28011_28016 = 0;
      while (true) {
        if (i__28011_28016 < count__28010_28015) {
          var c_28017 = cljs.core._nth.call(null, chunk__28009_28014, i__28011_28016);
          append_BANG_.call(null, parent__$1, c_28017);
          var G__28018 = seq__28008_28013;
          var G__28019 = chunk__28009_28014;
          var G__28020 = count__28010_28015;
          var G__28021 = i__28011_28016 + 1;
          seq__28008_28013 = G__28018;
          chunk__28009_28014 = G__28019;
          count__28010_28015 = G__28020;
          i__28011_28016 = G__28021;
          continue;
        } else {
          var temp__4092__auto___28022 = cljs.core.seq.call(null, seq__28008_28013);
          if (temp__4092__auto___28022) {
            var seq__28008_28023__$1 = temp__4092__auto___28022;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__28008_28023__$1)) {
              var c__4191__auto___28024 = cljs.core.chunk_first.call(null, seq__28008_28023__$1);
              var G__28025 = cljs.core.chunk_rest.call(null, seq__28008_28023__$1);
              var G__28026 = c__4191__auto___28024;
              var G__28027 = cljs.core.count.call(null, c__4191__auto___28024);
              var G__28028 = 0;
              seq__28008_28013 = G__28025;
              chunk__28009_28014 = G__28026;
              count__28010_28015 = G__28027;
              i__28011_28016 = G__28028;
              continue;
            } else {
              var c_28029 = cljs.core.first.call(null, seq__28008_28023__$1);
              append_BANG_.call(null, parent__$1, c_28029);
              var G__28030 = cljs.core.next.call(null, seq__28008_28023__$1);
              var G__28031 = null;
              var G__28032 = 0;
              var G__28033 = 0;
              seq__28008_28013 = G__28030;
              chunk__28009_28014 = G__28031;
              count__28010_28015 = G__28032;
              i__28011_28016 = G__28033;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return parent__$1;
    };
    var G__28012 = function(parent, child, var_args) {
      var more_children = null;
      if (arguments.length > 2) {
        more_children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__28012__delegate.call(this, parent, child, more_children);
    };
    G__28012.cljs$lang$maxFixedArity = 2;
    G__28012.cljs$lang$applyTo = function(arglist__28034) {
      var parent = cljs.core.first(arglist__28034);
      arglist__28034 = cljs.core.next(arglist__28034);
      var child = cljs.core.first(arglist__28034);
      var more_children = cljs.core.rest(arglist__28034);
      return G__28012__delegate(parent, child, more_children);
    };
    G__28012.cljs$core$IFn$_invoke$arity$variadic = G__28012__delegate;
    return G__28012;
  }();
  append_BANG_ = function(parent, child, var_args) {
    var more_children = var_args;
    switch(arguments.length) {
      case 2:
        return append_BANG___2.call(this, parent, child);
      default:
        return append_BANG___3.cljs$core$IFn$_invoke$arity$variadic(parent, child, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  append_BANG_.cljs$lang$maxFixedArity = 2;
  append_BANG_.cljs$lang$applyTo = append_BANG___3.cljs$lang$applyTo;
  append_BANG_.cljs$core$IFn$_invoke$arity$2 = append_BANG___2;
  append_BANG_.cljs$core$IFn$_invoke$arity$variadic = append_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return append_BANG_;
}();
dommy.core.prepend_BANG_ = function() {
  var prepend_BANG_ = null;
  var prepend_BANG___2 = function(parent, child) {
    var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
    return parent__$1.insertBefore(dommy.template.__GT_node_like.call(null, child), parent__$1.firstChild);
  };
  var prepend_BANG___3 = function() {
    var G__28043__delegate = function(parent, child, more_children) {
      var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
      var seq__28039_28044 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
      var chunk__28040_28045 = null;
      var count__28041_28046 = 0;
      var i__28042_28047 = 0;
      while (true) {
        if (i__28042_28047 < count__28041_28046) {
          var c_28048 = cljs.core._nth.call(null, chunk__28040_28045, i__28042_28047);
          prepend_BANG_.call(null, parent__$1, c_28048);
          var G__28049 = seq__28039_28044;
          var G__28050 = chunk__28040_28045;
          var G__28051 = count__28041_28046;
          var G__28052 = i__28042_28047 + 1;
          seq__28039_28044 = G__28049;
          chunk__28040_28045 = G__28050;
          count__28041_28046 = G__28051;
          i__28042_28047 = G__28052;
          continue;
        } else {
          var temp__4092__auto___28053 = cljs.core.seq.call(null, seq__28039_28044);
          if (temp__4092__auto___28053) {
            var seq__28039_28054__$1 = temp__4092__auto___28053;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__28039_28054__$1)) {
              var c__4191__auto___28055 = cljs.core.chunk_first.call(null, seq__28039_28054__$1);
              var G__28056 = cljs.core.chunk_rest.call(null, seq__28039_28054__$1);
              var G__28057 = c__4191__auto___28055;
              var G__28058 = cljs.core.count.call(null, c__4191__auto___28055);
              var G__28059 = 0;
              seq__28039_28044 = G__28056;
              chunk__28040_28045 = G__28057;
              count__28041_28046 = G__28058;
              i__28042_28047 = G__28059;
              continue;
            } else {
              var c_28060 = cljs.core.first.call(null, seq__28039_28054__$1);
              prepend_BANG_.call(null, parent__$1, c_28060);
              var G__28061 = cljs.core.next.call(null, seq__28039_28054__$1);
              var G__28062 = null;
              var G__28063 = 0;
              var G__28064 = 0;
              seq__28039_28044 = G__28061;
              chunk__28040_28045 = G__28062;
              count__28041_28046 = G__28063;
              i__28042_28047 = G__28064;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return parent__$1;
    };
    var G__28043 = function(parent, child, var_args) {
      var more_children = null;
      if (arguments.length > 2) {
        more_children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__28043__delegate.call(this, parent, child, more_children);
    };
    G__28043.cljs$lang$maxFixedArity = 2;
    G__28043.cljs$lang$applyTo = function(arglist__28065) {
      var parent = cljs.core.first(arglist__28065);
      arglist__28065 = cljs.core.next(arglist__28065);
      var child = cljs.core.first(arglist__28065);
      var more_children = cljs.core.rest(arglist__28065);
      return G__28043__delegate(parent, child, more_children);
    };
    G__28043.cljs$core$IFn$_invoke$arity$variadic = G__28043__delegate;
    return G__28043;
  }();
  prepend_BANG_ = function(parent, child, var_args) {
    var more_children = var_args;
    switch(arguments.length) {
      case 2:
        return prepend_BANG___2.call(this, parent, child);
      default:
        return prepend_BANG___3.cljs$core$IFn$_invoke$arity$variadic(parent, child, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prepend_BANG_.cljs$lang$maxFixedArity = 2;
  prepend_BANG_.cljs$lang$applyTo = prepend_BANG___3.cljs$lang$applyTo;
  prepend_BANG_.cljs$core$IFn$_invoke$arity$2 = prepend_BANG___2;
  prepend_BANG_.cljs$core$IFn$_invoke$arity$variadic = prepend_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return prepend_BANG_;
}();
dommy.core.insert_before_BANG_ = function insert_before_BANG_(elem, other) {
  var actual_node = dommy.template.__GT_node_like.call(null, elem);
  var other__$1 = dommy.template.__GT_node_like.call(null, other);
  if (cljs.core.truth_(other__$1.parentNode)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ".-parentNode", ".-parentNode", 499016324, null), new cljs.core.Symbol(null, "other", "other", -1534461751, null))))].join(""));
  }
  other__$1.parentNode.insertBefore(actual_node, other__$1);
  return actual_node;
};
dommy.core.insert_after_BANG_ = function insert_after_BANG_(elem, other) {
  var actual_node = dommy.template.__GT_node_like.call(null, elem);
  var other__$1 = dommy.template.__GT_node_like.call(null, other);
  var parent = other__$1.parentNode;
  var temp__4090__auto___28066 = other__$1.nextSibling;
  if (cljs.core.truth_(temp__4090__auto___28066)) {
    var next_28067 = temp__4090__auto___28066;
    parent.insertBefore(actual_node, next_28067);
  } else {
    parent.appendChild(actual_node);
  }
  return actual_node;
};
dommy.core.replace_BANG_ = function replace_BANG_(elem, new$) {
  var new$__$1 = dommy.template.__GT_node_like.call(null, new$);
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  if (cljs.core.truth_(elem__$1.parentNode)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ".-parentNode", ".-parentNode", 499016324, null), new cljs.core.Symbol(null, "elem", "elem", -1637415608, null))))].join(""));
  }
  elem__$1.parentNode.replaceChild(new$__$1, elem__$1);
  return new$__$1;
};
dommy.core.replace_contents_BANG_ = function replace_contents_BANG_(parent, node_like) {
  var G__28069 = dommy.template.__GT_node_like.call(null, parent);
  G__28069.innerHTML = "";
  dommy.core.append_BANG_.call(null, G__28069, node_like);
  return G__28069;
};
dommy.core.remove_BANG_ = function remove_BANG_(elem) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var G__28071 = elem__$1.parentNode;
  G__28071.removeChild(elem__$1);
  return G__28071;
};
dommy.core.clear_BANG_ = function clear_BANG_(elem) {
  return dommy.template.__GT_node_like.call(null, elem).innerHTML = "";
};
dommy.core.selector = function selector(data) {
  if (cljs.core.coll_QMARK_.call(null, data)) {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, selector, data));
  } else {
    if (typeof data === "string" || data instanceof cljs.core.Keyword) {
      return cljs.core.name.call(null, data);
    } else {
      return null;
    }
  }
};
dommy.core.selector_map = function selector_map(template, key_selectors_map) {
  var container = dommy.template.__GT_node_like.call(null, template);
  if (!cljs.core.contains_QMARK_.call(null, key_selectors_map, new cljs.core.Keyword(null, "container", "container", 602947571))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "contains?", "contains?", -2051487815, null), new cljs.core.Symbol(null, "key-selectors-map", "key-selectors-map", 19054414, null), new cljs.core.Keyword(null, "container", "container", 602947571)))))].join(""));
  }
  return cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "container", "container", 602947571), container], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__28077) {
    var vec__28078 = p__28077;
    var k = cljs.core.nth.call(null, vec__28078, 0, null);
    var v = cljs.core.nth.call(null, vec__28078, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.truth_((new cljs.core.Keyword(null, "live", "live", 1017226334)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v))) ? function() {
      if (typeof dommy.core.t28079 !== "undefined") {
      } else {
        dommy.core.t28079 = function(v, k, vec__28078, p__28077, container, key_selectors_map, template, selector_map, meta28080) {
          this.v = v;
          this.k = k;
          this.vec__28078 = vec__28078;
          this.p__28077 = p__28077;
          this.container = container;
          this.key_selectors_map = key_selectors_map;
          this.template = template;
          this.selector_map = selector_map;
          this.meta28080 = meta28080;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 425984;
        };
        dommy.core.t28079.cljs$lang$type = true;
        dommy.core.t28079.cljs$lang$ctorStr = "dommy.core/t28079";
        dommy.core.t28079.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
          return cljs.core._write.call(null, writer__4011__auto__, "dommy.core/t28079");
        };
        dommy.core.t28079.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, self__.container).querySelectorAll(dommy.core.selector.call(null, self__.v)));
        };
        dommy.core.t28079.prototype.cljs$core$IMeta$_meta$arity$1 = function(_28081) {
          var self__ = this;
          var _28081__$1 = this;
          return self__.meta28080;
        };
        dommy.core.t28079.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_28081, meta28080__$1) {
          var self__ = this;
          var _28081__$1 = this;
          return new dommy.core.t28079(self__.v, self__.k, self__.vec__28078, self__.p__28077, self__.container, self__.key_selectors_map, self__.template, self__.selector_map, meta28080__$1);
        };
        dommy.core.__GT_t28079 = function __GT_t28079(v__$1, k__$1, vec__28078__$1, p__28077__$1, container__$1, key_selectors_map__$1, template__$1, selector_map__$1, meta28080) {
          return new dommy.core.t28079(v__$1, k__$1, vec__28078__$1, p__28077__$1, container__$1, key_selectors_map__$1, template__$1, selector_map__$1, meta28080);
        };
      }
      return new dommy.core.t28079(v, k, vec__28078, p__28077, container, key_selectors_map, template, selector_map, null);
    }() : dommy.template.__GT_node_like.call(null, container).querySelector(dommy.core.selector.call(null, v))], null);
  }, key_selectors_map)));
};
dommy.core.ancestor_nodes = function ancestor_nodes(elem) {
  return cljs.core.take_while.call(null, cljs.core.identity, cljs.core.iterate.call(null, function(p1__28082_SHARP_) {
    return p1__28082_SHARP_.parentNode;
  }, dommy.template.__GT_node_like.call(null, elem)));
};
dommy.core.matches_pred = function() {
  var matches_pred = null;
  var matches_pred__1 = function(selector) {
    return matches_pred.call(null, document, selector);
  };
  var matches_pred__2 = function(base, selector) {
    var matches = dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, dommy.template.__GT_node_like.call(null, base)).querySelectorAll(dommy.core.selector.call(null, selector)));
    return function(elem) {
      return matches.indexOf(elem) >= 0;
    };
  };
  matches_pred = function(base, selector) {
    switch(arguments.length) {
      case 1:
        return matches_pred__1.call(this, base);
      case 2:
        return matches_pred__2.call(this, base, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  matches_pred.cljs$core$IFn$_invoke$arity$1 = matches_pred__1;
  matches_pred.cljs$core$IFn$_invoke$arity$2 = matches_pred__2;
  return matches_pred;
}();
dommy.core.closest = function() {
  var closest = null;
  var closest__2 = function(elem, selector) {
    return cljs.core.first.call(null, cljs.core.filter.call(null, dommy.core.matches_pred.call(null, selector), dommy.core.ancestor_nodes.call(null, dommy.template.__GT_node_like.call(null, elem))));
  };
  var closest__3 = function(base, elem, selector) {
    var base__$1 = dommy.template.__GT_node_like.call(null, base);
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    return cljs.core.first.call(null, cljs.core.filter.call(null, dommy.core.matches_pred.call(null, base__$1, selector), cljs.core.take_while.call(null, function(p1__28083_SHARP_) {
      return!(p1__28083_SHARP_ === base__$1);
    }, dommy.core.ancestor_nodes.call(null, elem__$1))));
  };
  closest = function(base, elem, selector) {
    switch(arguments.length) {
      case 2:
        return closest__2.call(this, base, elem);
      case 3:
        return closest__3.call(this, base, elem, selector);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  closest.cljs$core$IFn$_invoke$arity$2 = closest__2;
  closest.cljs$core$IFn$_invoke$arity$3 = closest__3;
  return closest;
}();
dommy.core.descendant_QMARK_ = function descendant_QMARK_(descendant, ancestor) {
  var descendant__$1 = dommy.template.__GT_node_like.call(null, descendant);
  var ancestor__$1 = dommy.template.__GT_node_like.call(null, ancestor);
  if (cljs.core.truth_(ancestor__$1.contains)) {
    return ancestor__$1.contains(descendant__$1);
  } else {
    if (cljs.core.truth_(ancestor__$1.compareDocumentPosition)) {
      return(ancestor__$1.compareDocumentPosition(descendant__$1) & 1 << 4) != 0;
    } else {
      return null;
    }
  }
};
dommy.core.special_listener_makers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__28084) {
  var vec__28085 = p__28084;
  var special_mouse_event = cljs.core.nth.call(null, vec__28085, 0, null);
  var real_mouse_event = cljs.core.nth.call(null, vec__28085, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [special_mouse_event, new cljs.core.PersistentArrayMap.fromArray([real_mouse_event, function(f) {
    return function(event) {
      var related_target = event.relatedTarget;
      var listener_target = function() {
        var or__3443__auto__ = event.selectedTarget;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return event.currentTarget;
        }
      }();
      if (cljs.core.truth_(function() {
        var and__3431__auto__ = related_target;
        if (cljs.core.truth_(and__3431__auto__)) {
          return dommy.core.descendant_QMARK_.call(null, related_target, listener_target);
        } else {
          return and__3431__auto__;
        }
      }())) {
        return null;
      } else {
        return f.call(null, event);
      }
    };
  }], true, false)], null);
}, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "mouseenter", "mouseenter", 2027084997), new cljs.core.Keyword(null, "mouseover", "mouseover", 1601081963), new cljs.core.Keyword(null, "mouseleave", "mouseleave", 2033263780), new cljs.core.Keyword(null, "mouseout", "mouseout", 894298107)], null)));
dommy.core.live_listener = function live_listener(elem, selector, f) {
  return function(event) {
    var selected_target = dommy.core.closest.call(null, dommy.template.__GT_node_like.call(null, elem), event.target, selector);
    if (cljs.core.truth_(function() {
      var and__3431__auto__ = selected_target;
      if (cljs.core.truth_(and__3431__auto__)) {
        return cljs.core.not.call(null, dommy.core.attr.call(null, selected_target, new cljs.core.Keyword(null, "disabled", "disabled", 1284845038)));
      } else {
        return and__3431__auto__;
      }
    }())) {
      event.selectedTarget = selected_target;
      return f.call(null, event);
    } else {
      return null;
    }
  };
};
dommy.core.event_listeners = function event_listeners(elem) {
  var or__3443__auto__ = dommy.template.__GT_node_like.call(null, elem).dommyEventListeners;
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    return cljs.core.PersistentArrayMap.EMPTY;
  }
};
dommy.core.update_event_listeners_BANG_ = function() {
  var update_event_listeners_BANG___delegate = function(elem, f, args) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    return elem__$1.dommyEventListeners = cljs.core.apply.call(null, f, dommy.core.event_listeners.call(null, elem__$1), args);
  };
  var update_event_listeners_BANG_ = function(elem, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return update_event_listeners_BANG___delegate.call(this, elem, f, args);
  };
  update_event_listeners_BANG_.cljs$lang$maxFixedArity = 2;
  update_event_listeners_BANG_.cljs$lang$applyTo = function(arglist__28086) {
    var elem = cljs.core.first(arglist__28086);
    arglist__28086 = cljs.core.next(arglist__28086);
    var f = cljs.core.first(arglist__28086);
    var args = cljs.core.rest(arglist__28086);
    return update_event_listeners_BANG___delegate(elem, f, args);
  };
  update_event_listeners_BANG_.cljs$core$IFn$_invoke$arity$variadic = update_event_listeners_BANG___delegate;
  return update_event_listeners_BANG_;
}();
dommy.core.elem_and_selector = function elem_and_selector(elem_sel) {
  if (cljs.core.sequential_QMARK_.call(null, elem_sel)) {
    return cljs.core.juxt.call(null, function(p1__28087_SHARP_) {
      return dommy.template.__GT_node_like.call(null, cljs.core.first.call(null, p1__28087_SHARP_));
    }, cljs.core.rest).call(null, elem_sel);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [dommy.template.__GT_node_like.call(null, elem_sel), null], null);
  }
};
dommy.core.listen_BANG_ = function() {
  var listen_BANG___delegate = function(elem_sel, type_fs) {
    if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__28111_28134 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_28135 = cljs.core.nth.call(null, vec__28111_28134, 0, null);
    var selector_28136 = cljs.core.nth.call(null, vec__28111_28134, 1, null);
    var seq__28112_28137 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__28119_28138 = null;
    var count__28120_28139 = 0;
    var i__28121_28140 = 0;
    while (true) {
      if (i__28121_28140 < count__28120_28139) {
        var vec__28128_28141 = cljs.core._nth.call(null, chunk__28119_28138, i__28121_28140);
        var orig_type_28142 = cljs.core.nth.call(null, vec__28128_28141, 0, null);
        var f_28143 = cljs.core.nth.call(null, vec__28128_28141, 1, null);
        var seq__28122_28144 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_28142, new cljs.core.PersistentArrayMap.fromArray([orig_type_28142, cljs.core.identity], true, false)));
        var chunk__28124_28145 = null;
        var count__28125_28146 = 0;
        var i__28126_28147 = 0;
        while (true) {
          if (i__28126_28147 < count__28125_28146) {
            var vec__28129_28148 = cljs.core._nth.call(null, chunk__28124_28145, i__28126_28147);
            var actual_type_28149 = cljs.core.nth.call(null, vec__28129_28148, 0, null);
            var factory_28150 = cljs.core.nth.call(null, vec__28129_28148, 1, null);
            var canonical_f_28151 = (cljs.core.truth_(selector_28136) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_28135, selector_28136) : cljs.core.identity).call(null, factory_28150.call(null, f_28143));
            dommy.core.update_event_listeners_BANG_.call(null, elem_28135, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_28136, actual_type_28149, f_28143], null), canonical_f_28151);
            if (cljs.core.truth_(elem_28135.addEventListener)) {
              elem_28135.addEventListener(cljs.core.name.call(null, actual_type_28149), canonical_f_28151);
            } else {
              elem_28135.attachEvent(cljs.core.name.call(null, actual_type_28149), canonical_f_28151);
            }
            var G__28152 = seq__28122_28144;
            var G__28153 = chunk__28124_28145;
            var G__28154 = count__28125_28146;
            var G__28155 = i__28126_28147 + 1;
            seq__28122_28144 = G__28152;
            chunk__28124_28145 = G__28153;
            count__28125_28146 = G__28154;
            i__28126_28147 = G__28155;
            continue;
          } else {
            var temp__4092__auto___28156 = cljs.core.seq.call(null, seq__28122_28144);
            if (temp__4092__auto___28156) {
              var seq__28122_28157__$1 = temp__4092__auto___28156;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__28122_28157__$1)) {
                var c__4191__auto___28158 = cljs.core.chunk_first.call(null, seq__28122_28157__$1);
                var G__28159 = cljs.core.chunk_rest.call(null, seq__28122_28157__$1);
                var G__28160 = c__4191__auto___28158;
                var G__28161 = cljs.core.count.call(null, c__4191__auto___28158);
                var G__28162 = 0;
                seq__28122_28144 = G__28159;
                chunk__28124_28145 = G__28160;
                count__28125_28146 = G__28161;
                i__28126_28147 = G__28162;
                continue;
              } else {
                var vec__28130_28163 = cljs.core.first.call(null, seq__28122_28157__$1);
                var actual_type_28164 = cljs.core.nth.call(null, vec__28130_28163, 0, null);
                var factory_28165 = cljs.core.nth.call(null, vec__28130_28163, 1, null);
                var canonical_f_28166 = (cljs.core.truth_(selector_28136) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_28135, selector_28136) : cljs.core.identity).call(null, factory_28165.call(null, f_28143));
                dommy.core.update_event_listeners_BANG_.call(null, elem_28135, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_28136, actual_type_28164, f_28143], null), canonical_f_28166);
                if (cljs.core.truth_(elem_28135.addEventListener)) {
                  elem_28135.addEventListener(cljs.core.name.call(null, actual_type_28164), canonical_f_28166);
                } else {
                  elem_28135.attachEvent(cljs.core.name.call(null, actual_type_28164), canonical_f_28166);
                }
                var G__28167 = cljs.core.next.call(null, seq__28122_28157__$1);
                var G__28168 = null;
                var G__28169 = 0;
                var G__28170 = 0;
                seq__28122_28144 = G__28167;
                chunk__28124_28145 = G__28168;
                count__28125_28146 = G__28169;
                i__28126_28147 = G__28170;
                continue;
              }
            } else {
            }
          }
          break;
        }
        var G__28171 = seq__28112_28137;
        var G__28172 = chunk__28119_28138;
        var G__28173 = count__28120_28139;
        var G__28174 = i__28121_28140 + 1;
        seq__28112_28137 = G__28171;
        chunk__28119_28138 = G__28172;
        count__28120_28139 = G__28173;
        i__28121_28140 = G__28174;
        continue;
      } else {
        var temp__4092__auto___28175 = cljs.core.seq.call(null, seq__28112_28137);
        if (temp__4092__auto___28175) {
          var seq__28112_28176__$1 = temp__4092__auto___28175;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28112_28176__$1)) {
            var c__4191__auto___28177 = cljs.core.chunk_first.call(null, seq__28112_28176__$1);
            var G__28178 = cljs.core.chunk_rest.call(null, seq__28112_28176__$1);
            var G__28179 = c__4191__auto___28177;
            var G__28180 = cljs.core.count.call(null, c__4191__auto___28177);
            var G__28181 = 0;
            seq__28112_28137 = G__28178;
            chunk__28119_28138 = G__28179;
            count__28120_28139 = G__28180;
            i__28121_28140 = G__28181;
            continue;
          } else {
            var vec__28131_28182 = cljs.core.first.call(null, seq__28112_28176__$1);
            var orig_type_28183 = cljs.core.nth.call(null, vec__28131_28182, 0, null);
            var f_28184 = cljs.core.nth.call(null, vec__28131_28182, 1, null);
            var seq__28113_28185 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_28183, new cljs.core.PersistentArrayMap.fromArray([orig_type_28183, cljs.core.identity], true, false)));
            var chunk__28115_28186 = null;
            var count__28116_28187 = 0;
            var i__28117_28188 = 0;
            while (true) {
              if (i__28117_28188 < count__28116_28187) {
                var vec__28132_28189 = cljs.core._nth.call(null, chunk__28115_28186, i__28117_28188);
                var actual_type_28190 = cljs.core.nth.call(null, vec__28132_28189, 0, null);
                var factory_28191 = cljs.core.nth.call(null, vec__28132_28189, 1, null);
                var canonical_f_28192 = (cljs.core.truth_(selector_28136) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_28135, selector_28136) : cljs.core.identity).call(null, factory_28191.call(null, f_28184));
                dommy.core.update_event_listeners_BANG_.call(null, elem_28135, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_28136, actual_type_28190, f_28184], null), canonical_f_28192);
                if (cljs.core.truth_(elem_28135.addEventListener)) {
                  elem_28135.addEventListener(cljs.core.name.call(null, actual_type_28190), canonical_f_28192);
                } else {
                  elem_28135.attachEvent(cljs.core.name.call(null, actual_type_28190), canonical_f_28192);
                }
                var G__28193 = seq__28113_28185;
                var G__28194 = chunk__28115_28186;
                var G__28195 = count__28116_28187;
                var G__28196 = i__28117_28188 + 1;
                seq__28113_28185 = G__28193;
                chunk__28115_28186 = G__28194;
                count__28116_28187 = G__28195;
                i__28117_28188 = G__28196;
                continue;
              } else {
                var temp__4092__auto___28197__$1 = cljs.core.seq.call(null, seq__28113_28185);
                if (temp__4092__auto___28197__$1) {
                  var seq__28113_28198__$1 = temp__4092__auto___28197__$1;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__28113_28198__$1)) {
                    var c__4191__auto___28199 = cljs.core.chunk_first.call(null, seq__28113_28198__$1);
                    var G__28200 = cljs.core.chunk_rest.call(null, seq__28113_28198__$1);
                    var G__28201 = c__4191__auto___28199;
                    var G__28202 = cljs.core.count.call(null, c__4191__auto___28199);
                    var G__28203 = 0;
                    seq__28113_28185 = G__28200;
                    chunk__28115_28186 = G__28201;
                    count__28116_28187 = G__28202;
                    i__28117_28188 = G__28203;
                    continue;
                  } else {
                    var vec__28133_28204 = cljs.core.first.call(null, seq__28113_28198__$1);
                    var actual_type_28205 = cljs.core.nth.call(null, vec__28133_28204, 0, null);
                    var factory_28206 = cljs.core.nth.call(null, vec__28133_28204, 1, null);
                    var canonical_f_28207 = (cljs.core.truth_(selector_28136) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_28135, selector_28136) : cljs.core.identity).call(null, factory_28206.call(null, f_28184));
                    dommy.core.update_event_listeners_BANG_.call(null, elem_28135, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_28136, actual_type_28205, f_28184], null), canonical_f_28207);
                    if (cljs.core.truth_(elem_28135.addEventListener)) {
                      elem_28135.addEventListener(cljs.core.name.call(null, actual_type_28205), canonical_f_28207);
                    } else {
                      elem_28135.attachEvent(cljs.core.name.call(null, actual_type_28205), canonical_f_28207);
                    }
                    var G__28208 = cljs.core.next.call(null, seq__28113_28198__$1);
                    var G__28209 = null;
                    var G__28210 = 0;
                    var G__28211 = 0;
                    seq__28113_28185 = G__28208;
                    chunk__28115_28186 = G__28209;
                    count__28116_28187 = G__28210;
                    i__28117_28188 = G__28211;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            var G__28212 = cljs.core.next.call(null, seq__28112_28176__$1);
            var G__28213 = null;
            var G__28214 = 0;
            var G__28215 = 0;
            seq__28112_28137 = G__28212;
            chunk__28119_28138 = G__28213;
            count__28120_28139 = G__28214;
            i__28121_28140 = G__28215;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return elem_sel;
  };
  var listen_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if (arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return listen_BANG___delegate.call(this, elem_sel, type_fs);
  };
  listen_BANG_.cljs$lang$maxFixedArity = 1;
  listen_BANG_.cljs$lang$applyTo = function(arglist__28216) {
    var elem_sel = cljs.core.first(arglist__28216);
    var type_fs = cljs.core.rest(arglist__28216);
    return listen_BANG___delegate(elem_sel, type_fs);
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$variadic = listen_BANG___delegate;
  return listen_BANG_;
}();
dommy.core.unlisten_BANG_ = function() {
  var unlisten_BANG___delegate = function(elem_sel, type_fs) {
    if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__28240_28263 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_28264 = cljs.core.nth.call(null, vec__28240_28263, 0, null);
    var selector_28265 = cljs.core.nth.call(null, vec__28240_28263, 1, null);
    var seq__28241_28266 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__28248_28267 = null;
    var count__28249_28268 = 0;
    var i__28250_28269 = 0;
    while (true) {
      if (i__28250_28269 < count__28249_28268) {
        var vec__28257_28270 = cljs.core._nth.call(null, chunk__28248_28267, i__28250_28269);
        var orig_type_28271 = cljs.core.nth.call(null, vec__28257_28270, 0, null);
        var f_28272 = cljs.core.nth.call(null, vec__28257_28270, 1, null);
        var seq__28251_28273 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_28271, new cljs.core.PersistentArrayMap.fromArray([orig_type_28271, cljs.core.identity], true, false)));
        var chunk__28253_28274 = null;
        var count__28254_28275 = 0;
        var i__28255_28276 = 0;
        while (true) {
          if (i__28255_28276 < count__28254_28275) {
            var vec__28258_28277 = cljs.core._nth.call(null, chunk__28253_28274, i__28255_28276);
            var actual_type_28278 = cljs.core.nth.call(null, vec__28258_28277, 0, null);
            var __28279 = cljs.core.nth.call(null, vec__28258_28277, 1, null);
            var keys_28280 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_28265, actual_type_28278, f_28272], null);
            var canonical_f_28281 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_28264), keys_28280);
            dommy.core.update_event_listeners_BANG_.call(null, elem_28264, dommy.utils.dissoc_in, keys_28280);
            if (cljs.core.truth_(elem_28264.removeEventListener)) {
              elem_28264.removeEventListener(cljs.core.name.call(null, actual_type_28278), canonical_f_28281);
            } else {
              elem_28264.detachEvent(cljs.core.name.call(null, actual_type_28278), canonical_f_28281);
            }
            var G__28282 = seq__28251_28273;
            var G__28283 = chunk__28253_28274;
            var G__28284 = count__28254_28275;
            var G__28285 = i__28255_28276 + 1;
            seq__28251_28273 = G__28282;
            chunk__28253_28274 = G__28283;
            count__28254_28275 = G__28284;
            i__28255_28276 = G__28285;
            continue;
          } else {
            var temp__4092__auto___28286 = cljs.core.seq.call(null, seq__28251_28273);
            if (temp__4092__auto___28286) {
              var seq__28251_28287__$1 = temp__4092__auto___28286;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__28251_28287__$1)) {
                var c__4191__auto___28288 = cljs.core.chunk_first.call(null, seq__28251_28287__$1);
                var G__28289 = cljs.core.chunk_rest.call(null, seq__28251_28287__$1);
                var G__28290 = c__4191__auto___28288;
                var G__28291 = cljs.core.count.call(null, c__4191__auto___28288);
                var G__28292 = 0;
                seq__28251_28273 = G__28289;
                chunk__28253_28274 = G__28290;
                count__28254_28275 = G__28291;
                i__28255_28276 = G__28292;
                continue;
              } else {
                var vec__28259_28293 = cljs.core.first.call(null, seq__28251_28287__$1);
                var actual_type_28294 = cljs.core.nth.call(null, vec__28259_28293, 0, null);
                var __28295 = cljs.core.nth.call(null, vec__28259_28293, 1, null);
                var keys_28296 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_28265, actual_type_28294, f_28272], null);
                var canonical_f_28297 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_28264), keys_28296);
                dommy.core.update_event_listeners_BANG_.call(null, elem_28264, dommy.utils.dissoc_in, keys_28296);
                if (cljs.core.truth_(elem_28264.removeEventListener)) {
                  elem_28264.removeEventListener(cljs.core.name.call(null, actual_type_28294), canonical_f_28297);
                } else {
                  elem_28264.detachEvent(cljs.core.name.call(null, actual_type_28294), canonical_f_28297);
                }
                var G__28298 = cljs.core.next.call(null, seq__28251_28287__$1);
                var G__28299 = null;
                var G__28300 = 0;
                var G__28301 = 0;
                seq__28251_28273 = G__28298;
                chunk__28253_28274 = G__28299;
                count__28254_28275 = G__28300;
                i__28255_28276 = G__28301;
                continue;
              }
            } else {
            }
          }
          break;
        }
        var G__28302 = seq__28241_28266;
        var G__28303 = chunk__28248_28267;
        var G__28304 = count__28249_28268;
        var G__28305 = i__28250_28269 + 1;
        seq__28241_28266 = G__28302;
        chunk__28248_28267 = G__28303;
        count__28249_28268 = G__28304;
        i__28250_28269 = G__28305;
        continue;
      } else {
        var temp__4092__auto___28306 = cljs.core.seq.call(null, seq__28241_28266);
        if (temp__4092__auto___28306) {
          var seq__28241_28307__$1 = temp__4092__auto___28306;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28241_28307__$1)) {
            var c__4191__auto___28308 = cljs.core.chunk_first.call(null, seq__28241_28307__$1);
            var G__28309 = cljs.core.chunk_rest.call(null, seq__28241_28307__$1);
            var G__28310 = c__4191__auto___28308;
            var G__28311 = cljs.core.count.call(null, c__4191__auto___28308);
            var G__28312 = 0;
            seq__28241_28266 = G__28309;
            chunk__28248_28267 = G__28310;
            count__28249_28268 = G__28311;
            i__28250_28269 = G__28312;
            continue;
          } else {
            var vec__28260_28313 = cljs.core.first.call(null, seq__28241_28307__$1);
            var orig_type_28314 = cljs.core.nth.call(null, vec__28260_28313, 0, null);
            var f_28315 = cljs.core.nth.call(null, vec__28260_28313, 1, null);
            var seq__28242_28316 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_28314, new cljs.core.PersistentArrayMap.fromArray([orig_type_28314, cljs.core.identity], true, false)));
            var chunk__28244_28317 = null;
            var count__28245_28318 = 0;
            var i__28246_28319 = 0;
            while (true) {
              if (i__28246_28319 < count__28245_28318) {
                var vec__28261_28320 = cljs.core._nth.call(null, chunk__28244_28317, i__28246_28319);
                var actual_type_28321 = cljs.core.nth.call(null, vec__28261_28320, 0, null);
                var __28322 = cljs.core.nth.call(null, vec__28261_28320, 1, null);
                var keys_28323 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_28265, actual_type_28321, f_28315], null);
                var canonical_f_28324 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_28264), keys_28323);
                dommy.core.update_event_listeners_BANG_.call(null, elem_28264, dommy.utils.dissoc_in, keys_28323);
                if (cljs.core.truth_(elem_28264.removeEventListener)) {
                  elem_28264.removeEventListener(cljs.core.name.call(null, actual_type_28321), canonical_f_28324);
                } else {
                  elem_28264.detachEvent(cljs.core.name.call(null, actual_type_28321), canonical_f_28324);
                }
                var G__28325 = seq__28242_28316;
                var G__28326 = chunk__28244_28317;
                var G__28327 = count__28245_28318;
                var G__28328 = i__28246_28319 + 1;
                seq__28242_28316 = G__28325;
                chunk__28244_28317 = G__28326;
                count__28245_28318 = G__28327;
                i__28246_28319 = G__28328;
                continue;
              } else {
                var temp__4092__auto___28329__$1 = cljs.core.seq.call(null, seq__28242_28316);
                if (temp__4092__auto___28329__$1) {
                  var seq__28242_28330__$1 = temp__4092__auto___28329__$1;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__28242_28330__$1)) {
                    var c__4191__auto___28331 = cljs.core.chunk_first.call(null, seq__28242_28330__$1);
                    var G__28332 = cljs.core.chunk_rest.call(null, seq__28242_28330__$1);
                    var G__28333 = c__4191__auto___28331;
                    var G__28334 = cljs.core.count.call(null, c__4191__auto___28331);
                    var G__28335 = 0;
                    seq__28242_28316 = G__28332;
                    chunk__28244_28317 = G__28333;
                    count__28245_28318 = G__28334;
                    i__28246_28319 = G__28335;
                    continue;
                  } else {
                    var vec__28262_28336 = cljs.core.first.call(null, seq__28242_28330__$1);
                    var actual_type_28337 = cljs.core.nth.call(null, vec__28262_28336, 0, null);
                    var __28338 = cljs.core.nth.call(null, vec__28262_28336, 1, null);
                    var keys_28339 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_28265, actual_type_28337, f_28315], null);
                    var canonical_f_28340 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_28264), keys_28339);
                    dommy.core.update_event_listeners_BANG_.call(null, elem_28264, dommy.utils.dissoc_in, keys_28339);
                    if (cljs.core.truth_(elem_28264.removeEventListener)) {
                      elem_28264.removeEventListener(cljs.core.name.call(null, actual_type_28337), canonical_f_28340);
                    } else {
                      elem_28264.detachEvent(cljs.core.name.call(null, actual_type_28337), canonical_f_28340);
                    }
                    var G__28341 = cljs.core.next.call(null, seq__28242_28330__$1);
                    var G__28342 = null;
                    var G__28343 = 0;
                    var G__28344 = 0;
                    seq__28242_28316 = G__28341;
                    chunk__28244_28317 = G__28342;
                    count__28245_28318 = G__28343;
                    i__28246_28319 = G__28344;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            var G__28345 = cljs.core.next.call(null, seq__28241_28307__$1);
            var G__28346 = null;
            var G__28347 = 0;
            var G__28348 = 0;
            seq__28241_28266 = G__28345;
            chunk__28248_28267 = G__28346;
            count__28249_28268 = G__28347;
            i__28250_28269 = G__28348;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return elem_sel;
  };
  var unlisten_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if (arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return unlisten_BANG___delegate.call(this, elem_sel, type_fs);
  };
  unlisten_BANG_.cljs$lang$maxFixedArity = 1;
  unlisten_BANG_.cljs$lang$applyTo = function(arglist__28349) {
    var elem_sel = cljs.core.first(arglist__28349);
    var type_fs = cljs.core.rest(arglist__28349);
    return unlisten_BANG___delegate(elem_sel, type_fs);
  };
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$variadic = unlisten_BANG___delegate;
  return unlisten_BANG_;
}();
dommy.core.listen_once_BANG_ = function() {
  var listen_once_BANG___delegate = function(elem_sel, type_fs) {
    if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__28357_28364 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_28365 = cljs.core.nth.call(null, vec__28357_28364, 0, null);
    var selector_28366 = cljs.core.nth.call(null, vec__28357_28364, 1, null);
    var seq__28358_28367 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__28359_28368 = null;
    var count__28360_28369 = 0;
    var i__28361_28370 = 0;
    while (true) {
      if (i__28361_28370 < count__28360_28369) {
        var vec__28362_28371 = cljs.core._nth.call(null, chunk__28359_28368, i__28361_28370);
        var type_28372 = cljs.core.nth.call(null, vec__28362_28371, 0, null);
        var f_28373 = cljs.core.nth.call(null, vec__28362_28371, 1, null);
        dommy.core.listen_BANG_.call(null, elem_sel, type_28372, function(seq__28358_28367, chunk__28359_28368, count__28360_28369, i__28361_28370, vec__28362_28371, type_28372, f_28373) {
          return function this_fn(e) {
            dommy.core.unlisten_BANG_.call(null, elem_sel, type_28372, this_fn);
            return f_28373.call(null, e);
          };
        }(seq__28358_28367, chunk__28359_28368, count__28360_28369, i__28361_28370, vec__28362_28371, type_28372, f_28373));
        var G__28374 = seq__28358_28367;
        var G__28375 = chunk__28359_28368;
        var G__28376 = count__28360_28369;
        var G__28377 = i__28361_28370 + 1;
        seq__28358_28367 = G__28374;
        chunk__28359_28368 = G__28375;
        count__28360_28369 = G__28376;
        i__28361_28370 = G__28377;
        continue;
      } else {
        var temp__4092__auto___28378 = cljs.core.seq.call(null, seq__28358_28367);
        if (temp__4092__auto___28378) {
          var seq__28358_28379__$1 = temp__4092__auto___28378;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__28358_28379__$1)) {
            var c__4191__auto___28380 = cljs.core.chunk_first.call(null, seq__28358_28379__$1);
            var G__28381 = cljs.core.chunk_rest.call(null, seq__28358_28379__$1);
            var G__28382 = c__4191__auto___28380;
            var G__28383 = cljs.core.count.call(null, c__4191__auto___28380);
            var G__28384 = 0;
            seq__28358_28367 = G__28381;
            chunk__28359_28368 = G__28382;
            count__28360_28369 = G__28383;
            i__28361_28370 = G__28384;
            continue;
          } else {
            var vec__28363_28385 = cljs.core.first.call(null, seq__28358_28379__$1);
            var type_28386 = cljs.core.nth.call(null, vec__28363_28385, 0, null);
            var f_28387 = cljs.core.nth.call(null, vec__28363_28385, 1, null);
            dommy.core.listen_BANG_.call(null, elem_sel, type_28386, function(seq__28358_28367, chunk__28359_28368, count__28360_28369, i__28361_28370, vec__28363_28385, type_28386, f_28387, seq__28358_28379__$1, temp__4092__auto___28378) {
              return function this_fn(e) {
                dommy.core.unlisten_BANG_.call(null, elem_sel, type_28386, this_fn);
                return f_28387.call(null, e);
              };
            }(seq__28358_28367, chunk__28359_28368, count__28360_28369, i__28361_28370, vec__28363_28385, type_28386, f_28387, seq__28358_28379__$1, temp__4092__auto___28378));
            var G__28388 = cljs.core.next.call(null, seq__28358_28379__$1);
            var G__28389 = null;
            var G__28390 = 0;
            var G__28391 = 0;
            seq__28358_28367 = G__28388;
            chunk__28359_28368 = G__28389;
            count__28360_28369 = G__28390;
            i__28361_28370 = G__28391;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return elem_sel;
  };
  var listen_once_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if (arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return listen_once_BANG___delegate.call(this, elem_sel, type_fs);
  };
  listen_once_BANG_.cljs$lang$maxFixedArity = 1;
  listen_once_BANG_.cljs$lang$applyTo = function(arglist__28392) {
    var elem_sel = cljs.core.first(arglist__28392);
    var type_fs = cljs.core.rest(arglist__28392);
    return listen_once_BANG___delegate(elem_sel, type_fs);
  };
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$variadic = listen_once_BANG___delegate;
  return listen_once_BANG_;
}();
dommy.core.fire_BANG_ = function() {
  var fire_BANG___delegate = function(node, event_type, p__28393) {
    var vec__28395 = p__28393;
    var update_event_BANG_ = cljs.core.nth.call(null, vec__28395, 0, null);
    if (dommy.core.descendant_QMARK_.call(null, node, document.documentElement)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "descendant?", "descendant?", -1886221157, null), new cljs.core.Symbol(null, "node", "node", -1637144645, null), new cljs.core.Symbol("js", "document.documentElement", "js/document.documentElement", -1449696112, null))))].join(""));
    }
    var update_event_BANG___$1 = function() {
      var or__3443__auto__ = update_event_BANG_;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return cljs.core.identity;
      }
    }();
    if (cljs.core.truth_(document.createEvent)) {
      var event = document.createEvent("Event");
      event.initEvent(cljs.core.name.call(null, event_type), true, true);
      return node.dispatchEvent(update_event_BANG___$1.call(null, event));
    } else {
      return node.fireEvent([cljs.core.str("on"), cljs.core.str(cljs.core.name.call(null, event_type))].join(""), update_event_BANG___$1.call(null, document.createEventObject()));
    }
  };
  var fire_BANG_ = function(node, event_type, var_args) {
    var p__28393 = null;
    if (arguments.length > 2) {
      p__28393 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return fire_BANG___delegate.call(this, node, event_type, p__28393);
  };
  fire_BANG_.cljs$lang$maxFixedArity = 2;
  fire_BANG_.cljs$lang$applyTo = function(arglist__28396) {
    var node = cljs.core.first(arglist__28396);
    arglist__28396 = cljs.core.next(arglist__28396);
    var event_type = cljs.core.first(arglist__28396);
    var p__28393 = cljs.core.rest(arglist__28396);
    return fire_BANG___delegate(node, event_type, p__28393);
  };
  fire_BANG_.cljs$core$IFn$_invoke$arity$variadic = fire_BANG___delegate;
  return fire_BANG_;
}();
goog.provide("omchaya.utils");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("goog.i18n.NumberFormat.Format");
goog.require("cljs.core.async");
goog.require("goog.async.Deferred");
goog.require("goog.crypt");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("goog.i18n.NumberFormat.Format");
goog.require("clojure.string");
goog.require("goog.events");
goog.require("clojure.string");
goog.require("goog.crypt.Md5");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("goog.crypt");
goog.require("goog.net.EventType");
goog.require("goog.events");
goog.require("goog.Uri");
goog.require("dommy.core");
omchaya.utils.uuid = function uuid() {
  var r = cljs.core.repeatedly.call(null, 30, function() {
    return cljs.core.rand_int.call(null, 16).toString(16);
  });
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.concat.call(null, cljs.core.take.call(null, 8, r), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-"], null), cljs.core.take.call(null, 4, cljs.core.drop.call(null, 8, r)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-4"], null), cljs.core.take.call(null, 3, cljs.core.drop.call(null, 12, r)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  ["-"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(8 | 3 & cljs.core.rand_int.call(null, 15)).toString(16)], null), cljs.core.take.call(null, 3, cljs.core.drop.call(null, 15, r)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-"], null), cljs.core.take.call(null, 12, cljs.core.drop.call(null, 18, r))));
};
omchaya.utils.parsed_uri = new goog.Uri(window.location.href);
omchaya.utils.initial_query_map = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "kandan-channels", "kandan-channels", 2776703958), clojure.string.split.call(null, function() {
  var or__3443__auto__ = omchaya.utils.parsed_uri.getParameterValue("kandan-channels");
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    return "1";
  }
}(), /,/), new cljs.core.Keyword(null, "kandan-api-key", "kandan-api-key", 3548116106), omchaya.utils.parsed_uri.getParameterValue("kandan-api-key"), new cljs.core.Keyword(null, "kandan-client?", "kandan-client?", 915311154), cljs.core.seq.call(null, omchaya.utils.parsed_uri.getParameterValue("kandan-api-key")), new cljs.core.Keyword(null, "log-channels?", "log-channels?", 1640598168), function() {
  var or__3443__auto__ = omchaya.utils.parsed_uri.getParameterValue("log-channels");
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    return false;
  }
}(), new cljs.core.Keyword(null, "logging-enabled?", "logging-enabled?", 4574339902), cljs.core._EQ_.call(null, omchaya.utils.parsed_uri.getParameterValue("logging-enabled"), "true"), new cljs.core.Keyword(null, "restore-state?", "restore-state?", 3703635295), cljs.core._EQ_.call(null, omchaya.utils.parsed_uri.getParameterValue("restore-state"), "true")], null);
omchaya.utils.logging_enabled_QMARK_ = (new cljs.core.Keyword(null, "logging-enabled?", "logging-enabled?", 4574339902)).cljs$core$IFn$_invoke$arity$1(omchaya.utils.initial_query_map);
omchaya.utils.mprint = function() {
  var mprint__delegate = function(message) {
    if (cljs.core.truth_(omchaya.utils.logging_enabled_QMARK_)) {
      return cljs.core.apply.call(null, cljs.core.print, message);
    } else {
      return null;
    }
  };
  var mprint = function(var_args) {
    var message = null;
    if (arguments.length > 0) {
      message = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return mprint__delegate.call(this, message);
  };
  mprint.cljs$lang$maxFixedArity = 0;
  mprint.cljs$lang$applyTo = function(arglist__23851) {
    var message = cljs.core.seq(arglist__23851);
    return mprint__delegate(message);
  };
  mprint.cljs$core$IFn$_invoke$arity$variadic = mprint__delegate;
  return mprint;
}();
omchaya.utils.safe_sel = function safe_sel(s) {
  return[cljs.core.str(clojure.string.replace.call(null, clojure.string.lower_case.call(null, [cljs.core.str(s)].join("")), /[\W]/, "-"))].join("");
};
omchaya.utils.email__GT_gravatar_url = function email__GT_gravatar_url(email) {
  var email__$1 = function() {
    var or__3443__auto__ = email;
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return "unknown-email@unknown-domain.com";
    }
  }();
  var container = function() {
    var G__23853 = new goog.crypt.Md5;
    G__23853.update(email__$1);
    return G__23853;
  }();
  var hash = goog.crypt.byteArrayToHex(container.digest());
  return[cljs.core.str("http://gravatar.com/avatar/"), cljs.core.str(hash), cljs.core.str("?s\x3d30\x26d\x3didenticon")].join("");
};
omchaya.utils.gravatar_for = function gravatar_for(email) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img.avatar", "img.avatar", 2296123734), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", 1014018390), omchaya.utils.email__GT_gravatar_url.call(null, email)], null)], null);
};
omchaya.utils.set_window_href_BANG_ = function set_window_href_BANG_(path) {
  return window.history.pushState({}, "", path);
};
omchaya.utils.ajax = function() {
  var ajax__delegate = function(url, method, data_string, success, p__23855) {
    var vec__23857 = p__23855;
    var error = cljs.core.nth.call(null, vec__23857, 0, null);
    var headers = cljs.core.nth.call(null, vec__23857, 1, null);
    var request = new goog.net.XhrIo;
    var d = new goog.async.Deferred;
    var listener_id = goog.events.listen(request, goog.net.EventType.COMPLETE, function(request, d) {
      return function(response) {
        var target = response.target;
        var data = cljs.core._EQ_.call(null, method, "DELETE") ? null : target.getResponseJson();
        return d.callback(data);
      };
    }(request, d));
    d.addErrback(function(error__$1) {
      return console.log("Error on ajax: ", error__$1);
    });
    if (cljs.core.truth_(success)) {
      d.addCallback(function(p1__23854_SHARP_) {
        return success.call(null, cljs.core.js__GT_clj.call(null, p1__23854_SHARP_, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), true));
      });
    } else {
    }
    if (cljs.core.truth_(error)) {
      d.addErrback(error);
    } else {
    }
    d.addBoth(function(value) {
      goog.events.unlistenByKey(listener_id);
      return request.dispose();
    });
    omchaya.utils.mprint.call(null, [cljs.core.str("Firing request to "), cljs.core.str(url), cljs.core.str(" via "), cljs.core.str(method), cljs.core.str(" and data - : "), cljs.core.str(data_string)].join(""));
    request.send(url, method, data_string, headers);
    return request;
  };
  var ajax = function(url, method, data_string, success, var_args) {
    var p__23855 = null;
    if (arguments.length > 4) {
      p__23855 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
    }
    return ajax__delegate.call(this, url, method, data_string, success, p__23855);
  };
  ajax.cljs$lang$maxFixedArity = 4;
  ajax.cljs$lang$applyTo = function(arglist__23858) {
    var url = cljs.core.first(arglist__23858);
    arglist__23858 = cljs.core.next(arglist__23858);
    var method = cljs.core.first(arglist__23858);
    arglist__23858 = cljs.core.next(arglist__23858);
    var data_string = cljs.core.first(arglist__23858);
    arglist__23858 = cljs.core.next(arglist__23858);
    var success = cljs.core.first(arglist__23858);
    var p__23855 = cljs.core.rest(arglist__23858);
    return ajax__delegate(url, method, data_string, success, p__23855);
  };
  ajax.cljs$core$IFn$_invoke$arity$variadic = ajax__delegate;
  return ajax;
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || (goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1")), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || (goog.userAgent.OPERA || goog.userAgent.WEBKIT), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0;i < args.length;i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0;i < classes.length;i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "));
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  goog.dom.classes.set(element, classes.join(" "));
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length1;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return Math.sqrt(variance);
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  } else {
    if (parent.getElementsByClassName) {
      return parent.getElementsByClassName(className);
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || (goog.global || window);
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && (attributes && (attributes.name || attributes.type))) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes));
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    return element.parentElement;
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(element, text) {
  if ("textContent" in element) {
    element.textContent = text;
  } else {
    if (element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while (element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild);
      }
      element.firstChild.data = text;
    } else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(String(text)));
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if (attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && (index >= 0 && index < 32768);
  }
  return false;
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || (goog.global.document || document);
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if (goog.isString(element)) {
    return this.document_.getElementById(element);
  } else {
    return element;
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat";
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return outer.call(null, form);
      } else {
        return null;
      }
    }
  }
};
clojure.walk.postwalk = function postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, postwalk, f), f, form);
};
clojure.walk.prewalk = function prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function keywordize_keys(m) {
  var f = function(p__28979) {
    var vec__28980 = p__28979;
    var k = cljs.core.nth.call(null, vec__28980, 0, null);
    var v = cljs.core.nth.call(null, vec__28980, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.map_QMARK_.call(null, x)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
    } else {
      return x;
    }
  }, m);
};
clojure.walk.stringify_keys = function stringify_keys(m) {
  var f = function(p__28983) {
    var vec__28984 = p__28983;
    var k = cljs.core.nth.call(null, vec__28984, 0, null);
    var v = cljs.core.nth.call(null, vec__28984, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.map_QMARK_.call(null, x)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
    } else {
      return x;
    }
  }, m);
};
clojure.walk.prewalk_replace = function prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(p1__28943_SHARP_) {
    return max === p1__28943_SHARP_;
  }, coll));
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var union__1 = function(s1) {
    return s1;
  };
  var union__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
    }
  };
  var union__3 = function() {
    var G__28944__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__28944 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__28944__delegate.call(this, s1, s2, sets);
    };
    G__28944.cljs$lang$maxFixedArity = 2;
    G__28944.cljs$lang$applyTo = function(arglist__28945) {
      var s1 = cljs.core.first(arglist__28945);
      arglist__28945 = cljs.core.next(arglist__28945);
      var s2 = cljs.core.first(arglist__28945);
      var sets = cljs.core.rest(arglist__28945);
      return G__28944__delegate(s1, s2, sets);
    };
    G__28944.cljs$core$IFn$_invoke$arity$variadic = G__28944__delegate;
    return G__28944;
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union;
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1;
  };
  var intersection__2 = function(s1, s2) {
    while (true) {
      if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__28947 = s2;
        var G__28948 = s1;
        s1 = G__28947;
        s2 = G__28948;
        continue;
      } else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if (cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result;
            } else {
              return cljs.core.disj.call(null, result, item);
            }
          };
        }(s1, s2), s1, s1);
      }
      break;
    }
  };
  var intersection__3 = function() {
    var G__28949__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__28946_SHARP_) {
        return-cljs.core.count.call(null, p1__28946_SHARP_);
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
    };
    var G__28949 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__28949__delegate.call(this, s1, s2, sets);
    };
    G__28949.cljs$lang$maxFixedArity = 2;
    G__28949.cljs$lang$applyTo = function(arglist__28950) {
      var s1 = cljs.core.first(arglist__28950);
      arglist__28950 = cljs.core.next(arglist__28950);
      var s2 = cljs.core.first(arglist__28950);
      var sets = cljs.core.rest(arglist__28950);
      return G__28949__delegate(s1, s2, sets);
    };
    G__28949.cljs$core$IFn$_invoke$arity$variadic = G__28949__delegate;
    return G__28949;
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection;
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1;
  };
  var difference__2 = function(s1, s2) {
    if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if (cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item);
        } else {
          return result;
        }
      }, s1, s1);
    } else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
    }
  };
  var difference__3 = function() {
    var G__28951__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2));
    };
    var G__28951 = function(s1, s2, var_args) {
      var sets = null;
      if (arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__28951__delegate.call(this, s1, s2, sets);
    };
    G__28951.cljs$lang$maxFixedArity = 2;
    G__28951.cljs$lang$applyTo = function(arglist__28952) {
      var s1 = cljs.core.first(arglist__28952);
      arglist__28952 = cljs.core.next(arglist__28952);
      var s2 = cljs.core.first(arglist__28952);
      var sets = cljs.core.rest(arglist__28952);
      return G__28951__delegate(s1, s2, sets);
    };
    G__28951.cljs$core$IFn$_invoke$arity$variadic = G__28951__delegate;
    return G__28951;
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference;
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__28953_SHARP_) {
    return cljs.core.select_keys.call(null, p1__28953_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__28956) {
    var vec__28957 = p__28956;
    var old = cljs.core.nth.call(null, vec__28957, 0, null);
    var new$ = cljs.core.nth.call(null, vec__28957, 1, null);
    if (cljs.core.not_EQ_.call(null, old, new$) && cljs.core.contains_QMARK_.call(null, m, old)) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, m, old)), old);
    } else {
      return m;
    }
  }, map, kmap);
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__28958_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__28958_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__28961) {
    var vec__28962 = p__28961;
    var k = cljs.core.nth.call(null, vec__28962, 0, null);
    var v = cljs.core.nth.call(null, vec__28962, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__28969 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
      var r = cljs.core.nth.call(null, vec__28969, 0, null);
      var s = cljs.core.nth.call(null, vec__28969, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(p1__28963_SHARP_, p2__28964_SHARP_) {
            return cljs.core.conj.call(null, p1__28963_SHARP_, cljs.core.merge.call(null, p2__28964_SHARP_, x));
          }, ret, found);
        } else {
          return ret;
        }
      }, cljs.core.PersistentHashSet.EMPTY, s);
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__28970 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
    var r = cljs.core.nth.call(null, vec__28970, 0, null);
    var s = cljs.core.nth.call(null, vec__28970, 1, null);
    var k = cljs.core.nth.call(null, vec__28970, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if (cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(p1__28965_SHARP_, p2__28966_SHARP_) {
          return cljs.core.conj.call(null, p1__28965_SHARP_, cljs.core.merge.call(null, p2__28966_SHARP_, x));
        }, ret, found);
      } else {
        return ret;
      }
    }, cljs.core.PersistentHashSet.EMPTY, s);
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join;
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__28971_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__28971_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__28972_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__28972_SHARP_);
  }, set2);
};
goog.provide("sablono.util");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("goog.Uri");
sablono.util._STAR_base_url_STAR_ = null;
sablono.util.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
sablono.util.ToString = function() {
  var obj28930 = {};
  return obj28930;
}();
sablono.util.to_str = function to_str(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.sablono$util$ToString$to_str$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.sablono$util$ToString$to_str$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = sablono.util.to_str[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = sablono.util.to_str["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToString.to-str", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.ToURI = function() {
  var obj28932 = {};
  return obj28932;
}();
sablono.util.to_uri = function to_uri(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.sablono$util$ToURI$to_uri$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.sablono$util$ToURI$to_uri$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = sablono.util.to_uri[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = sablono.util.to_uri["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ToURI.to-uri", x);
        }
      }
    }().call(null, x);
  }
};
sablono.util.as_str = function() {
  var as_str__delegate = function(xs) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, sablono.util.to_str, xs));
  };
  var as_str = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return as_str__delegate.call(this, xs);
  };
  as_str.cljs$lang$maxFixedArity = 0;
  as_str.cljs$lang$applyTo = function(arglist__28933) {
    var xs = cljs.core.seq(arglist__28933);
    return as_str__delegate(xs);
  };
  as_str.cljs$core$IFn$_invoke$arity$variadic = as_str__delegate;
  return as_str;
}();
sablono.util.camelcase_key = function camelcase_key(k) {
  if (cljs.core.truth_(k)) {
    var vec__28935 = clojure.string.split.call(null, cljs.core.name.call(null, k), /-/);
    var first_word = cljs.core.nth.call(null, vec__28935, 0, null);
    var words = cljs.core.nthnext.call(null, vec__28935, 1);
    if (cljs.core.empty_QMARK_.call(null, words) || (cljs.core._EQ_.call(null, "aria", first_word) || cljs.core._EQ_.call(null, "data", first_word))) {
      return k;
    } else {
      return cljs.core.keyword.call(null, clojure.string.join.call(null, cljs.core.conj.call(null, cljs.core.map.call(null, clojure.string.capitalize, words), first_word)));
    }
  } else {
    return null;
  }
};
sablono.util.html_to_dom_attrs = function html_to_dom_attrs(attrs) {
  var dom_attrs = cljs.core.merge.call(null, cljs.core.zipmap.call(null, cljs.core.keys.call(null, attrs), cljs.core.map.call(null, sablono.util.camelcase_key, cljs.core.keys.call(null, attrs))), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.Keyword(null, "className", "className", 1004015509), new cljs.core.Keyword(null, "for", "for", 1014005819), new cljs.core.Keyword(null, "htmlFor", "htmlFor", 2249940112)], null));
  return clojure.set.rename_keys.call(null, attrs, dom_attrs);
};
sablono.util.compact_map = function compact_map(m) {
  return cljs.core.reduce.call(null, function(m__$1, k) {
    var temp__4090__auto__ = cljs.core.get.call(null, m__$1, k);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var v = temp__4090__auto__;
      return m__$1;
    } else {
      return cljs.core.dissoc.call(null, m__$1, k);
    }
  }, m, cljs.core.keys.call(null, m));
};
sablono.util.merge_with_class = function() {
  var merge_with_class__delegate = function(maps) {
    var classes = cljs.core.vec.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.mapcat.call(null, function(p1__28936_SHARP_) {
      if (cljs.core.list_QMARK_.call(null, p1__28936_SHARP_)) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__28936_SHARP_], null);
      } else {
        if (cljs.core.vector_QMARK_.call(null, p1__28936_SHARP_)) {
          return p1__28936_SHARP_;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__28936_SHARP_], null);
          } else {
            return null;
          }
        }
      }
    }, cljs.core.map.call(null, new cljs.core.Keyword(null, "class", "class", 1108647146), maps))));
    var maps__$1 = cljs.core.apply.call(null, cljs.core.merge, maps);
    if (cljs.core.empty_QMARK_.call(null, classes)) {
      return maps__$1;
    } else {
      return cljs.core.assoc.call(null, maps__$1, new cljs.core.Keyword(null, "class", "class", 1108647146), classes);
    }
  };
  var merge_with_class = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge_with_class__delegate.call(this, maps);
  };
  merge_with_class.cljs$lang$maxFixedArity = 0;
  merge_with_class.cljs$lang$applyTo = function(arglist__28937) {
    var maps = cljs.core.seq(arglist__28937);
    return merge_with_class__delegate(maps);
  };
  merge_with_class.cljs$core$IFn$_invoke$arity$variadic = merge_with_class__delegate;
  return merge_with_class;
}();
sablono.util.normalize_element = function normalize_element(p__28938) {
  var vec__28941 = p__28938;
  var tag = cljs.core.nth.call(null, vec__28941, 0, null);
  var content = cljs.core.nthnext.call(null, vec__28941, 1);
  if (!(tag instanceof cljs.core.Keyword || (tag instanceof cljs.core.Symbol || typeof tag === "string"))) {
    throw cljs.core.ex_info.call(null, [cljs.core.str(tag), cljs.core.str(" is not a valid element name.")].join(""), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), tag, new cljs.core.Keyword(null, "content", "content", 1965434859), content], null));
  } else {
  }
  var vec__28942 = cljs.core.re_matches.call(null, sablono.util.re_tag, cljs.core.name.call(null, tag));
  var _ = cljs.core.nth.call(null, vec__28942, 0, null);
  var tag__$1 = cljs.core.nth.call(null, vec__28942, 1, null);
  var id = cljs.core.nth.call(null, vec__28942, 2, null);
  var class$ = cljs.core.nth.call(null, vec__28942, 3, null);
  var tag_attrs = sablono.util.compact_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), id, new cljs.core.Keyword(null, "class", "class", 1108647146), cljs.core.truth_(class$) ? clojure.string.split.call(null, class$, /\./) : null], null));
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, sablono.util.merge_with_class.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
sablono.util.join_classes = function join_classes(classes) {
  return clojure.string.join.call(null, " ", cljs.core.flatten.call(null, classes));
};
sablono.util.react_symbol = function react_symbol(tag) {
  return cljs.core.symbol.call(null, "js", [cljs.core.str("React.DOM."), cljs.core.str(cljs.core.name.call(null, tag))].join(""));
};
sablono.util.react_fn = function react_fn(tag) {
  var dom_fn = sablono.util.react_symbol.call(null, tag);
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "textarea", "textarea", 4305627820), null, new cljs.core.Keyword(null, "input", "input", 1114262332), null], null), null), cljs.core.keyword.call(null, tag))) {
    return cljs.core.symbol.call(null, "sablono.interpreter", cljs.core.name.call(null, tag));
  } else {
    return dom_fn;
  }
};
sablono.util.attr_pattern = function attr_pattern(attr) {
  return cljs.core.re_pattern.call(null, [cljs.core.str("\\s+"), cljs.core.str(cljs.core.name.call(null, attr)), cljs.core.str("\\s*\x3d\\s*['\"][^\"']+['\"]")].join(""));
};
sablono.util.strip_attr = function strip_attr(s, attr) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, s, sablono.util.attr_pattern.call(null, attr), "");
  } else {
    return null;
  }
};
sablono.util.strip_outer = function strip_outer(s) {
  if (cljs.core.truth_(s)) {
    return clojure.string.replace.call(null, clojure.string.replace.call(null, s, /^\s*<[^>]+>\s*/, ""), /\s*<\/[^>]+>\s*$/, "");
  } else {
    return null;
  }
};
sablono.util.ToString["_"] = true;
sablono.util.to_str["_"] = function(x) {
  return[cljs.core.str(x)].join("");
};
sablono.util.ToString["number"] = true;
sablono.util.to_str["number"] = function(x) {
  return[cljs.core.str(x)].join("");
};
sablono.util.ToString["null"] = true;
sablono.util.to_str["null"] = function(_) {
  return "";
};
goog.Uri.prototype.sablono$util$ToString$ = true;
goog.Uri.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  if (cljs.core.truth_(function() {
    var or__3443__auto__ = x__$1.hasDomain();
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return x__$1.getPath() == null || cljs.core.not.call(null, cljs.core.re_matches.call(null, /^\/.*/, x__$1.getPath()));
    }
  }())) {
    return[cljs.core.str(x__$1)].join("");
  } else {
    var base = [cljs.core.str(sablono.util._STAR_base_url_STAR_)].join("");
    if (cljs.core.truth_(cljs.core.re_matches.call(null, /.*\/$/, base))) {
      return[cljs.core.str(cljs.core.subs.call(null, base, 0, cljs.core.count.call(null, base) - 1)), cljs.core.str(x__$1)].join("");
    } else {
      return[cljs.core.str(base), cljs.core.str(x__$1)].join("");
    }
  }
};
cljs.core.Keyword.prototype.sablono$util$ToString$ = true;
cljs.core.Keyword.prototype.sablono$util$ToString$to_str$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.name.call(null, x__$1);
};
sablono.util.ToURI["_"] = true;
sablono.util.to_uri["_"] = function(x) {
  return new goog.Uri([cljs.core.str(x)].join(""));
};
goog.Uri.prototype.sablono$util$ToURI$ = true;
goog.Uri.prototype.sablono$util$ToURI$to_uri$arity$1 = function(x) {
  var x__$1 = this;
  return x__$1;
};
goog.provide("sablono.interpreter");
goog.require("cljs.core");
goog.require("sablono.util");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("clojure.string");
sablono.interpreter.IInterpreter = function() {
  var obj28974 = {};
  return obj28974;
}();
sablono.interpreter.interpret = function interpret(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.sablono$interpreter$IInterpreter$interpret$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.sablono$interpreter$IInterpreter$interpret$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = sablono.interpreter.interpret[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = sablono.interpreter.interpret["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInterpreter.interpret", this$);
        }
      }
    }().call(null, this$);
  }
};
sablono.interpreter.wrap_form_element = function wrap_form_element(ctor) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }});
};
sablono.interpreter.input = sablono.interpreter.wrap_form_element.call(null, React.DOM.input);
sablono.interpreter.textarea = sablono.interpreter.wrap_form_element.call(null, React.DOM.textarea);
sablono.interpreter.dom_fn = function dom_fn(tag) {
  var temp__4090__auto__ = React.DOM[cljs.core.name.call(null, tag)];
  if (cljs.core.truth_(temp__4090__auto__)) {
    var dom_fn__$1 = temp__4090__auto__;
    return cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "input", "input", 1114262332), sablono.interpreter.input, new cljs.core.Keyword(null, "textarea", "textarea", 4305627820), sablono.interpreter.textarea], null), cljs.core.keyword.call(null, tag), dom_fn__$1);
  } else {
    throw cljs.core.ex_info.call(null, [cljs.core.str("Unsupported HTML tag: "), cljs.core.str(cljs.core.name.call(null, tag))].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), tag], null));
  }
};
sablono.interpreter.attributes = function attributes(attrs) {
  var attrs__$1 = cljs.core.clj__GT_js.call(null, sablono.util.html_to_dom_attrs.call(null, attrs));
  var class$ = clojure.string.join.call(null, " ", cljs.core.flatten.call(null, cljs.core.seq.call(null, attrs__$1.className)));
  if (cljs.core.not.call(null, clojure.string.blank_QMARK_.call(null, class$))) {
    attrs__$1.className = class$;
  } else {
  }
  return attrs__$1;
};
sablono.interpreter.element = function element(element__$1) {
  var vec__28976 = sablono.util.normalize_element.call(null, element__$1);
  var tag = cljs.core.nth.call(null, vec__28976, 0, null);
  var attrs = cljs.core.nth.call(null, vec__28976, 1, null);
  var content = cljs.core.nth.call(null, vec__28976, 2, null);
  return sablono.interpreter.dom_fn.call(null, tag).call(null, sablono.interpreter.attributes.call(null, attrs), cljs.core.sequential_QMARK_.call(null, content) && (typeof cljs.core.first.call(null, content) === "string" && cljs.core.empty_QMARK_.call(null, cljs.core.rest.call(null, content))) ? sablono.interpreter.interpret.call(null, cljs.core.first.call(null, content)) : cljs.core.truth_(content) ? sablono.interpreter.interpret.call(null, content) : new cljs.core.Keyword(null, "else", "else", 
  1017020587) ? null : null);
};
sablono.interpreter.interpret_seq = function interpret_seq(s) {
  return cljs.core.into_array.call(null, cljs.core.map.call(null, sablono.interpreter.interpret, s));
};
sablono.interpreter.IInterpreter["null"] = true;
sablono.interpreter.interpret["null"] = function(this$) {
  return null;
};
sablono.interpreter.IInterpreter["_"] = true;
sablono.interpreter.interpret["_"] = function(this$) {
  return this$;
};
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.PersistentVector.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.element.call(null, this$__$1);
};
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.IndexedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.List.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.List.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.LazySeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.ChunkedSeq.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$ = true;
cljs.core.Cons.prototype.sablono$interpreter$IInterpreter$interpret$arity$1 = function(this$) {
  var this$__$1 = this;
  return sablono.interpreter.interpret_seq.call(null, this$__$1);
};
goog.provide("sablono.core");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.string");
goog.require("sablono.util");
goog.require("goog.dom");
goog.require("goog.dom");
goog.require("sablono.interpreter");
goog.require("sablono.interpreter");
goog.require("sablono.util");
goog.require("clojure.walk");
goog.require("clojure.string");
sablono.core.wrap_attrs = function wrap_attrs(func) {
  return function() {
    var G__28840__delegate = function(args) {
      if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__28839 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag = cljs.core.nth.call(null, vec__28839, 0, null);
        var body = cljs.core.nthnext.call(null, vec__28839, 1);
        if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.merge.call(null, cljs.core.first.call(null, body), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body));
        } else {
          return cljs.core.apply.call(null, cljs.core.vector, tag, cljs.core.first.call(null, args), body);
        }
      } else {
        return cljs.core.apply.call(null, func, args);
      }
    };
    var G__28840 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__28840__delegate.call(this, args);
    };
    G__28840.cljs$lang$maxFixedArity = 0;
    G__28840.cljs$lang$applyTo = function(arglist__28841) {
      var args = cljs.core.seq(arglist__28841);
      return G__28840__delegate(args);
    };
    G__28840.cljs$core$IFn$_invoke$arity$variadic = G__28840__delegate;
    return G__28840;
  }();
};
sablono.core.update_arglists = function update_arglists(arglists) {
  var iter__4160__auto__ = function iter__28846(s__28847) {
    return new cljs.core.LazySeq(null, function() {
      var s__28847__$1 = s__28847;
      while (true) {
        var temp__4092__auto__ = cljs.core.seq.call(null, s__28847__$1);
        if (temp__4092__auto__) {
          var s__28847__$2 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__28847__$2)) {
            var c__4158__auto__ = cljs.core.chunk_first.call(null, s__28847__$2);
            var size__4159__auto__ = cljs.core.count.call(null, c__4158__auto__);
            var b__28849 = cljs.core.chunk_buffer.call(null, size__4159__auto__);
            if (function() {
              var i__28848 = 0;
              while (true) {
                if (i__28848 < size__4159__auto__) {
                  var args = cljs.core._nth.call(null, c__4158__auto__, i__28848);
                  cljs.core.chunk_append.call(null, b__28849, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", -1682549128, null), args)));
                  var G__28850 = i__28848 + 1;
                  i__28848 = G__28850;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28849), iter__28846.call(null, cljs.core.chunk_rest.call(null, s__28847__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28849), null);
            }
          } else {
            var args = cljs.core.first.call(null, s__28847__$2);
            return cljs.core.cons.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "attr-map?", "attr-map?", -1682549128, null), args)), iter__28846.call(null, cljs.core.rest.call(null, s__28847__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__4160__auto__.call(null, arglists);
};
sablono.core.render = function render(component) {
  var html = cljs.core.atom.call(null, null);
  React.renderComponentToString(component, function(p1__28851_SHARP_) {
    return cljs.core.reset_BANG_.call(null, html, p1__28851_SHARP_);
  });
  return cljs.core.deref.call(null, html);
};
sablono.core.include_css = function() {
  var include_css__delegate = function(styles) {
    var iter__4160__auto__ = function iter__28856(s__28857) {
      return new cljs.core.LazySeq(null, function() {
        var s__28857__$1 = s__28857;
        while (true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__28857__$1);
          if (temp__4092__auto__) {
            var s__28857__$2 = temp__4092__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__28857__$2)) {
              var c__4158__auto__ = cljs.core.chunk_first.call(null, s__28857__$2);
              var size__4159__auto__ = cljs.core.count.call(null, c__4158__auto__);
              var b__28859 = cljs.core.chunk_buffer.call(null, size__4159__auto__);
              if (function() {
                var i__28858 = 0;
                while (true) {
                  if (i__28858 < size__4159__auto__) {
                    var style = cljs.core._nth.call(null, c__4158__auto__, i__28858);
                    cljs.core.chunk_append.call(null, b__28859, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", 1017226092), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), "text/css", new cljs.core.Keyword(null, "href", "href", 1017115293), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1014017035), "stylesheet"], null)], null));
                    var G__28860 = i__28858 + 1;
                    i__28858 = G__28860;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28859), iter__28856.call(null, cljs.core.chunk_rest.call(null, s__28857__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28859), null);
              }
            } else {
              var style = cljs.core.first.call(null, s__28857__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "link", "link", 1017226092), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1017479852), "text/css", new cljs.core.Keyword(null, "href", "href", 1017115293), sablono.util.as_str.call(null, style), new cljs.core.Keyword(null, "rel", "rel", 1014017035), "stylesheet"], null)], null), iter__28856.call(null, 
              cljs.core.rest.call(null, s__28857__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4160__auto__.call(null, styles);
  };
  var include_css = function(var_args) {
    var styles = null;
    if (arguments.length > 0) {
      styles = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return include_css__delegate.call(this, styles);
  };
  include_css.cljs$lang$maxFixedArity = 0;
  include_css.cljs$lang$applyTo = function(arglist__28861) {
    var styles = cljs.core.seq(arglist__28861);
    return include_css__delegate(styles);
  };
  include_css.cljs$core$IFn$_invoke$arity$variadic = include_css__delegate;
  return include_css;
}();
sablono.core.include_js = function include_js(src) {
  return goog.dom.appendChild(goog.dom.getDocument().body, goog.dom.createDom("script", {"src":src}));
};
sablono.core.include_react = function include_react() {
  return sablono.core.include_js.call(null, "http://fb.me/react-0.8.0.js");
};
sablono.core.link_to28862 = function() {
  var link_to28862__delegate = function(url, content) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", 1017115293), sablono.util.as_str.call(null, url)], null), content], null);
  };
  var link_to28862 = function(url, var_args) {
    var content = null;
    if (arguments.length > 1) {
      content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link_to28862__delegate.call(this, url, content);
  };
  link_to28862.cljs$lang$maxFixedArity = 1;
  link_to28862.cljs$lang$applyTo = function(arglist__28863) {
    var url = cljs.core.first(arglist__28863);
    var content = cljs.core.rest(arglist__28863);
    return link_to28862__delegate(url, content);
  };
  link_to28862.cljs$core$IFn$_invoke$arity$variadic = link_to28862__delegate;
  return link_to28862;
}();
sablono.core.link_to = sablono.core.wrap_attrs.call(null, sablono.core.link_to28862);
sablono.core.mail_to28864 = function() {
  var mail_to28864__delegate = function(e_mail, p__28865) {
    var vec__28867 = p__28865;
    var content = cljs.core.nth.call(null, vec__28867, 0, null);
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "href", "href", 1017115293), [cljs.core.str("mailto:"), cljs.core.str(e_mail)].join("")], null), function() {
      var or__3443__auto__ = content;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return e_mail;
      }
    }()], null);
  };
  var mail_to28864 = function(e_mail, var_args) {
    var p__28865 = null;
    if (arguments.length > 1) {
      p__28865 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mail_to28864__delegate.call(this, e_mail, p__28865);
  };
  mail_to28864.cljs$lang$maxFixedArity = 1;
  mail_to28864.cljs$lang$applyTo = function(arglist__28868) {
    var e_mail = cljs.core.first(arglist__28868);
    var p__28865 = cljs.core.rest(arglist__28868);
    return mail_to28864__delegate(e_mail, p__28865);
  };
  mail_to28864.cljs$core$IFn$_invoke$arity$variadic = mail_to28864__delegate;
  return mail_to28864;
}();
sablono.core.mail_to = sablono.core.wrap_attrs.call(null, sablono.core.mail_to28864);
sablono.core.unordered_list28869 = function unordered_list28869(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", 1013907977), function() {
    var iter__4160__auto__ = function iter__28874(s__28875) {
      return new cljs.core.LazySeq(null, function() {
        var s__28875__$1 = s__28875;
        while (true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__28875__$1);
          if (temp__4092__auto__) {
            var s__28875__$2 = temp__4092__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__28875__$2)) {
              var c__4158__auto__ = cljs.core.chunk_first.call(null, s__28875__$2);
              var size__4159__auto__ = cljs.core.count.call(null, c__4158__auto__);
              var b__28877 = cljs.core.chunk_buffer.call(null, size__4159__auto__);
              if (function() {
                var i__28876 = 0;
                while (true) {
                  if (i__28876 < size__4159__auto__) {
                    var x = cljs.core._nth.call(null, c__4158__auto__, i__28876);
                    cljs.core.chunk_append.call(null, b__28877, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), x], null));
                    var G__28878 = i__28876 + 1;
                    i__28876 = G__28878;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28877), iter__28874.call(null, cljs.core.chunk_rest.call(null, s__28875__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28877), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__28875__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), x], null), iter__28874.call(null, cljs.core.rest.call(null, s__28875__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4160__auto__.call(null, coll);
  }()], null);
};
sablono.core.unordered_list = sablono.core.wrap_attrs.call(null, sablono.core.unordered_list28869);
sablono.core.ordered_list28879 = function ordered_list28879(coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ol", "ol", 1013907791), function() {
    var iter__4160__auto__ = function iter__28884(s__28885) {
      return new cljs.core.LazySeq(null, function() {
        var s__28885__$1 = s__28885;
        while (true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__28885__$1);
          if (temp__4092__auto__) {
            var s__28885__$2 = temp__4092__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__28885__$2)) {
              var c__4158__auto__ = cljs.core.chunk_first.call(null, s__28885__$2);
              var size__4159__auto__ = cljs.core.count.call(null, c__4158__auto__);
              var b__28887 = cljs.core.chunk_buffer.call(null, size__4159__auto__);
              if (function() {
                var i__28886 = 0;
                while (true) {
                  if (i__28886 < size__4159__auto__) {
                    var x = cljs.core._nth.call(null, c__4158__auto__, i__28886);
                    cljs.core.chunk_append.call(null, b__28887, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), x], null));
                    var G__28888 = i__28886 + 1;
                    i__28886 = G__28888;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28887), iter__28884.call(null, cljs.core.chunk_rest.call(null, s__28885__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28887), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__28885__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), x], null), iter__28884.call(null, cljs.core.rest.call(null, s__28885__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4160__auto__.call(null, coll);
  }()], null);
};
sablono.core.ordered_list = sablono.core.wrap_attrs.call(null, sablono.core.ordered_list28879);
sablono.core.image28889 = function() {
  var image28889 = null;
  var image28889__1 = function(src) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1014008629), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", 1014018390), sablono.util.as_str.call(null, src)], null)], null);
  };
  var image28889__2 = function(src, alt) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1014008629), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", 1014018390), sablono.util.as_str.call(null, src), new cljs.core.Keyword(null, "alt", "alt", 1014000923), alt], null)], null);
  };
  image28889 = function(src, alt) {
    switch(arguments.length) {
      case 1:
        return image28889__1.call(this, src);
      case 2:
        return image28889__2.call(this, src, alt);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  image28889.cljs$core$IFn$_invoke$arity$1 = image28889__1;
  image28889.cljs$core$IFn$_invoke$arity$2 = image28889__2;
  return image28889;
}();
sablono.core.image = sablono.core.wrap_attrs.call(null, sablono.core.image28889);
sablono.core._STAR_group_STAR_ = cljs.core.PersistentVector.EMPTY;
sablono.core.make_name = function make_name(name) {
  return cljs.core.reduce.call(null, function(p1__28890_SHARP_, p2__28891_SHARP_) {
    return[cljs.core.str(p1__28890_SHARP_), cljs.core.str("["), cljs.core.str(p2__28891_SHARP_), cljs.core.str("]")].join("");
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.make_id = function make_id(name) {
  return cljs.core.reduce.call(null, function(p1__28892_SHARP_, p2__28893_SHARP_) {
    return[cljs.core.str(p1__28892_SHARP_), cljs.core.str("-"), cljs.core.str(p2__28893_SHARP_)].join("");
  }, cljs.core.conj.call(null, sablono.core._STAR_group_STAR_, sablono.util.as_str.call(null, name)));
};
sablono.core.input_field = function input_field(type, name, value) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 1114262332), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1017479852), type, new cljs.core.Keyword(null, "name", "name", 1017277949), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", 1013907597), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 1125876963), 
  value], null)], null);
};
sablono.core.hidden_field28894 = function() {
  var hidden_field28894 = null;
  var hidden_field28894__1 = function(name) {
    return hidden_field28894.call(null, name, null);
  };
  var hidden_field28894__2 = function(name, value) {
    return sablono.core.input_field.call(null, "hidden", name, value);
  };
  hidden_field28894 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return hidden_field28894__1.call(this, name);
      case 2:
        return hidden_field28894__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hidden_field28894.cljs$core$IFn$_invoke$arity$1 = hidden_field28894__1;
  hidden_field28894.cljs$core$IFn$_invoke$arity$2 = hidden_field28894__2;
  return hidden_field28894;
}();
sablono.core.hidden_field = sablono.core.wrap_attrs.call(null, sablono.core.hidden_field28894);
sablono.core.text_field28895 = function() {
  var text_field28895 = null;
  var text_field28895__1 = function(name) {
    return text_field28895.call(null, name, null);
  };
  var text_field28895__2 = function(name, value) {
    return sablono.core.input_field.call(null, "text", name, value);
  };
  text_field28895 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return text_field28895__1.call(this, name);
      case 2:
        return text_field28895__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_field28895.cljs$core$IFn$_invoke$arity$1 = text_field28895__1;
  text_field28895.cljs$core$IFn$_invoke$arity$2 = text_field28895__2;
  return text_field28895;
}();
sablono.core.text_field = sablono.core.wrap_attrs.call(null, sablono.core.text_field28895);
sablono.core.password_field28896 = function() {
  var password_field28896 = null;
  var password_field28896__1 = function(name) {
    return password_field28896.call(null, name, null);
  };
  var password_field28896__2 = function(name, value) {
    return sablono.core.input_field.call(null, "password", name, value);
  };
  password_field28896 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return password_field28896__1.call(this, name);
      case 2:
        return password_field28896__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  password_field28896.cljs$core$IFn$_invoke$arity$1 = password_field28896__1;
  password_field28896.cljs$core$IFn$_invoke$arity$2 = password_field28896__2;
  return password_field28896;
}();
sablono.core.password_field = sablono.core.wrap_attrs.call(null, sablono.core.password_field28896);
sablono.core.email_field28897 = function() {
  var email_field28897 = null;
  var email_field28897__1 = function(name) {
    return email_field28897.call(null, name, null);
  };
  var email_field28897__2 = function(name, value) {
    return sablono.core.input_field.call(null, "email", name, value);
  };
  email_field28897 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return email_field28897__1.call(this, name);
      case 2:
        return email_field28897__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  email_field28897.cljs$core$IFn$_invoke$arity$1 = email_field28897__1;
  email_field28897.cljs$core$IFn$_invoke$arity$2 = email_field28897__2;
  return email_field28897;
}();
sablono.core.email_field = sablono.core.wrap_attrs.call(null, sablono.core.email_field28897);
sablono.core.check_box28898 = function() {
  var check_box28898 = null;
  var check_box28898__1 = function(name) {
    return check_box28898.call(null, name, null);
  };
  var check_box28898__2 = function(name, checked_QMARK_) {
    return check_box28898.call(null, name, checked_QMARK_, "true");
  };
  var check_box28898__3 = function(name, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 1114262332), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1017479852), "checkbox", new cljs.core.Keyword(null, "name", "name", 1017277949), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", 1013907597), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 
    1125876963), value, new cljs.core.Keyword(null, "checked", "checked", 1756218137), checked_QMARK_], null)], null);
  };
  check_box28898 = function(name, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return check_box28898__1.call(this, name);
      case 2:
        return check_box28898__2.call(this, name, checked_QMARK_);
      case 3:
        return check_box28898__3.call(this, name, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  check_box28898.cljs$core$IFn$_invoke$arity$1 = check_box28898__1;
  check_box28898.cljs$core$IFn$_invoke$arity$2 = check_box28898__2;
  check_box28898.cljs$core$IFn$_invoke$arity$3 = check_box28898__3;
  return check_box28898;
}();
sablono.core.check_box = sablono.core.wrap_attrs.call(null, sablono.core.check_box28898);
sablono.core.radio_button28899 = function() {
  var radio_button28899 = null;
  var radio_button28899__1 = function(group) {
    return radio_button28899.call(null, group, null);
  };
  var radio_button28899__2 = function(group, checked_QMARK_) {
    return radio_button28899.call(null, group, checked_QMARK_, "true");
  };
  var radio_button28899__3 = function(group, checked_QMARK_, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 1114262332), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1017479852), "radio", new cljs.core.Keyword(null, "name", "name", 1017277949), sablono.core.make_name.call(null, group), new cljs.core.Keyword(null, "id", "id", 1013907597), sablono.core.make_id.call(null, [cljs.core.str(sablono.util.as_str.call(null, group)), 
    cljs.core.str("-"), cljs.core.str(sablono.util.as_str.call(null, value))].join("")), new cljs.core.Keyword(null, "value", "value", 1125876963), value, new cljs.core.Keyword(null, "checked", "checked", 1756218137), checked_QMARK_], null)], null);
  };
  radio_button28899 = function(group, checked_QMARK_, value) {
    switch(arguments.length) {
      case 1:
        return radio_button28899__1.call(this, group);
      case 2:
        return radio_button28899__2.call(this, group, checked_QMARK_);
      case 3:
        return radio_button28899__3.call(this, group, checked_QMARK_, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  radio_button28899.cljs$core$IFn$_invoke$arity$1 = radio_button28899__1;
  radio_button28899.cljs$core$IFn$_invoke$arity$2 = radio_button28899__2;
  radio_button28899.cljs$core$IFn$_invoke$arity$3 = radio_button28899__3;
  return radio_button28899;
}();
sablono.core.radio_button = sablono.core.wrap_attrs.call(null, sablono.core.radio_button28899);
sablono.core.select_options28900 = function() {
  var select_options28900 = null;
  var select_options28900__1 = function(coll) {
    return select_options28900.call(null, coll, null);
  };
  var select_options28900__2 = function(coll, selected) {
    var iter__4160__auto__ = function iter__28909(s__28910) {
      return new cljs.core.LazySeq(null, function() {
        var s__28910__$1 = s__28910;
        while (true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__28910__$1);
          if (temp__4092__auto__) {
            var s__28910__$2 = temp__4092__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__28910__$2)) {
              var c__4158__auto__ = cljs.core.chunk_first.call(null, s__28910__$2);
              var size__4159__auto__ = cljs.core.count.call(null, c__4158__auto__);
              var b__28912 = cljs.core.chunk_buffer.call(null, size__4159__auto__);
              if (function() {
                var i__28911 = 0;
                while (true) {
                  if (i__28911 < size__4159__auto__) {
                    var x = cljs.core._nth.call(null, c__4158__auto__, i__28911);
                    cljs.core.chunk_append.call(null, b__28912, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                      var vec__28915 = x;
                      var text = cljs.core.nth.call(null, vec__28915, 0, null);
                      var val = cljs.core.nth.call(null, vec__28915, 1, null);
                      if (cljs.core.sequential_QMARK_.call(null, val)) {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 933131038), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1116631654), text], null), select_options28900.call(null, val, selected)], null);
                      } else {
                        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 4298734567), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 1125876963), val, new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, val, selected)], null), text], null);
                      }
                    }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 4298734567), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, x, selected)], null), x], null));
                    var G__28917 = i__28911 + 1;
                    i__28911 = G__28917;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28912), iter__28909.call(null, cljs.core.chunk_rest.call(null, s__28910__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__28912), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__28910__$2);
              return cljs.core.cons.call(null, cljs.core.sequential_QMARK_.call(null, x) ? function() {
                var vec__28916 = x;
                var text = cljs.core.nth.call(null, vec__28916, 0, null);
                var val = cljs.core.nth.call(null, vec__28916, 1, null);
                if (cljs.core.sequential_QMARK_.call(null, val)) {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "optgroup", "optgroup", 933131038), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "label", "label", 1116631654), text], null), select_options28900.call(null, val, selected)], null);
                } else {
                  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 4298734567), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 1125876963), val, new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, val, selected)], null), text], null);
                }
              }() : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "option", "option", 4298734567), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected", "selected", 2205476365), cljs.core._EQ_.call(null, x, selected)], null), x], null), iter__28909.call(null, cljs.core.rest.call(null, s__28910__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4160__auto__.call(null, coll);
  };
  select_options28900 = function(coll, selected) {
    switch(arguments.length) {
      case 1:
        return select_options28900__1.call(this, coll);
      case 2:
        return select_options28900__2.call(this, coll, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  select_options28900.cljs$core$IFn$_invoke$arity$1 = select_options28900__1;
  select_options28900.cljs$core$IFn$_invoke$arity$2 = select_options28900__2;
  return select_options28900;
}();
sablono.core.select_options = sablono.core.wrap_attrs.call(null, sablono.core.select_options28900);
sablono.core.drop_down28918 = function() {
  var drop_down28918 = null;
  var drop_down28918__2 = function(name, options) {
    return drop_down28918.call(null, name, options, null);
  };
  var drop_down28918__3 = function(name, options, selected) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "select", "select", 4402849902), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", 1013907597), sablono.core.make_id.call(null, name)], null), sablono.core.select_options.call(null, options, selected)], null);
  };
  drop_down28918 = function(name, options, selected) {
    switch(arguments.length) {
      case 2:
        return drop_down28918__2.call(this, name, options);
      case 3:
        return drop_down28918__3.call(this, name, options, selected);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_down28918.cljs$core$IFn$_invoke$arity$2 = drop_down28918__2;
  drop_down28918.cljs$core$IFn$_invoke$arity$3 = drop_down28918__3;
  return drop_down28918;
}();
sablono.core.drop_down = sablono.core.wrap_attrs.call(null, sablono.core.drop_down28918);
sablono.core.text_area28919 = function() {
  var text_area28919 = null;
  var text_area28919__1 = function(name) {
    return text_area28919.call(null, name, null);
  };
  var text_area28919__2 = function(name, value) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea", "textarea", 4305627820), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "name", "name", 1017277949), sablono.core.make_name.call(null, name), new cljs.core.Keyword(null, "id", "id", 1013907597), sablono.core.make_id.call(null, name), new cljs.core.Keyword(null, "value", "value", 1125876963), value], null)], null);
  };
  text_area28919 = function(name, value) {
    switch(arguments.length) {
      case 1:
        return text_area28919__1.call(this, name);
      case 2:
        return text_area28919__2.call(this, name, value);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  text_area28919.cljs$core$IFn$_invoke$arity$1 = text_area28919__1;
  text_area28919.cljs$core$IFn$_invoke$arity$2 = text_area28919__2;
  return text_area28919;
}();
sablono.core.text_area = sablono.core.wrap_attrs.call(null, sablono.core.text_area28919);
sablono.core.file_upload28920 = function file_upload28920(name) {
  return sablono.core.input_field.call(null, "file", name, null);
};
sablono.core.file_upload = sablono.core.wrap_attrs.call(null, sablono.core.file_upload28920);
sablono.core.label28921 = function label28921(name, text) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "label", "label", 1116631654), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "htmlFor", "htmlFor", 2249940112), sablono.core.make_id.call(null, name)], null), text], null);
};
sablono.core.label = sablono.core.wrap_attrs.call(null, sablono.core.label28921);
sablono.core.submit_button28922 = function submit_button28922(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 1114262332), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "submit", new cljs.core.Keyword(null, "value", "value", 1125876963), text], null)], null);
};
sablono.core.submit_button = sablono.core.wrap_attrs.call(null, sablono.core.submit_button28922);
sablono.core.reset_button28923 = function reset_button28923(text) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 1114262332), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1017479852), "reset", new cljs.core.Keyword(null, "value", "value", 1125876963), text], null)], null);
};
sablono.core.reset_button = sablono.core.wrap_attrs.call(null, sablono.core.reset_button28923);
sablono.core.form_to28924 = function() {
  var form_to28924__delegate = function(p__28925, body) {
    var vec__28927 = p__28925;
    var method = cljs.core.nth.call(null, vec__28927, 0, null);
    var action = cljs.core.nth.call(null, vec__28927, 1, null);
    var method_str = clojure.string.upper_case.call(null, cljs.core.name.call(null, method));
    var action_uri = sablono.util.to_uri.call(null, action);
    return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "get", "get", 1014006472), null, new cljs.core.Keyword(null, "post", "post", 1017351186), null], null), null), method) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", 1017053238), new cljs.core.PersistentArrayMap(null, 
    2, [new cljs.core.Keyword(null, "method", "method", 4231316563), method_str, new cljs.core.Keyword(null, "action", "action", 3885920680), action_uri], null)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form", "form", 1017053238), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "method", "method", 4231316563), "POST", new cljs.core.Keyword(null, "action", "action", 3885920680), action_uri], null), 
    sablono.core.hidden_field.call(null, "_method", method_str)], null), body));
  };
  var form_to28924 = function(p__28925, var_args) {
    var body = null;
    if (arguments.length > 1) {
      body = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form_to28924__delegate.call(this, p__28925, body);
  };
  form_to28924.cljs$lang$maxFixedArity = 1;
  form_to28924.cljs$lang$applyTo = function(arglist__28928) {
    var p__28925 = cljs.core.first(arglist__28928);
    var body = cljs.core.rest(arglist__28928);
    return form_to28924__delegate(p__28925, body);
  };
  form_to28924.cljs$core$IFn$_invoke$arity$variadic = form_to28924__delegate;
  return form_to28924;
}();
sablono.core.form_to = sablono.core.wrap_attrs.call(null, sablono.core.form_to28924);
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var a = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__27888) {
    var opts__9507__auto__ = cljs.core.first(arglist__27888);
    var children__9508__auto__ = cljs.core.rest(arglist__27888);
    return a__delegate(opts__9507__auto__, children__9508__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var abbr = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__27889) {
    var opts__9507__auto__ = cljs.core.first(arglist__27889);
    var children__9508__auto__ = cljs.core.rest(arglist__27889);
    return abbr__delegate(opts__9507__auto__, children__9508__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var address = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__27890) {
    var opts__9507__auto__ = cljs.core.first(arglist__27890);
    var children__9508__auto__ = cljs.core.rest(arglist__27890);
    return address__delegate(opts__9507__auto__, children__9508__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var area = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__27891) {
    var opts__9507__auto__ = cljs.core.first(arglist__27891);
    var children__9508__auto__ = cljs.core.rest(arglist__27891);
    return area__delegate(opts__9507__auto__, children__9508__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var article = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__27892) {
    var opts__9507__auto__ = cljs.core.first(arglist__27892);
    var children__9508__auto__ = cljs.core.rest(arglist__27892);
    return article__delegate(opts__9507__auto__, children__9508__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var aside = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__27893) {
    var opts__9507__auto__ = cljs.core.first(arglist__27893);
    var children__9508__auto__ = cljs.core.rest(arglist__27893);
    return aside__delegate(opts__9507__auto__, children__9508__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var audio = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__27894) {
    var opts__9507__auto__ = cljs.core.first(arglist__27894);
    var children__9508__auto__ = cljs.core.rest(arglist__27894);
    return audio__delegate(opts__9507__auto__, children__9508__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var b = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__27895) {
    var opts__9507__auto__ = cljs.core.first(arglist__27895);
    var children__9508__auto__ = cljs.core.rest(arglist__27895);
    return b__delegate(opts__9507__auto__, children__9508__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var base = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__27896) {
    var opts__9507__auto__ = cljs.core.first(arglist__27896);
    var children__9508__auto__ = cljs.core.rest(arglist__27896);
    return base__delegate(opts__9507__auto__, children__9508__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var bdi = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__27897) {
    var opts__9507__auto__ = cljs.core.first(arglist__27897);
    var children__9508__auto__ = cljs.core.rest(arglist__27897);
    return bdi__delegate(opts__9507__auto__, children__9508__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var bdo = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__27898) {
    var opts__9507__auto__ = cljs.core.first(arglist__27898);
    var children__9508__auto__ = cljs.core.rest(arglist__27898);
    return bdo__delegate(opts__9507__auto__, children__9508__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var big = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__27899) {
    var opts__9507__auto__ = cljs.core.first(arglist__27899);
    var children__9508__auto__ = cljs.core.rest(arglist__27899);
    return big__delegate(opts__9507__auto__, children__9508__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var blockquote = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__27900) {
    var opts__9507__auto__ = cljs.core.first(arglist__27900);
    var children__9508__auto__ = cljs.core.rest(arglist__27900);
    return blockquote__delegate(opts__9507__auto__, children__9508__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var body = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__27901) {
    var opts__9507__auto__ = cljs.core.first(arglist__27901);
    var children__9508__auto__ = cljs.core.rest(arglist__27901);
    return body__delegate(opts__9507__auto__, children__9508__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var br = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__27902) {
    var opts__9507__auto__ = cljs.core.first(arglist__27902);
    var children__9508__auto__ = cljs.core.rest(arglist__27902);
    return br__delegate(opts__9507__auto__, children__9508__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var button = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__27903) {
    var opts__9507__auto__ = cljs.core.first(arglist__27903);
    var children__9508__auto__ = cljs.core.rest(arglist__27903);
    return button__delegate(opts__9507__auto__, children__9508__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var canvas = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__27904) {
    var opts__9507__auto__ = cljs.core.first(arglist__27904);
    var children__9508__auto__ = cljs.core.rest(arglist__27904);
    return canvas__delegate(opts__9507__auto__, children__9508__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var caption = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__27905) {
    var opts__9507__auto__ = cljs.core.first(arglist__27905);
    var children__9508__auto__ = cljs.core.rest(arglist__27905);
    return caption__delegate(opts__9507__auto__, children__9508__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var cite = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__27906) {
    var opts__9507__auto__ = cljs.core.first(arglist__27906);
    var children__9508__auto__ = cljs.core.rest(arglist__27906);
    return cite__delegate(opts__9507__auto__, children__9508__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var code = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__27907) {
    var opts__9507__auto__ = cljs.core.first(arglist__27907);
    var children__9508__auto__ = cljs.core.rest(arglist__27907);
    return code__delegate(opts__9507__auto__, children__9508__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var col = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__27908) {
    var opts__9507__auto__ = cljs.core.first(arglist__27908);
    var children__9508__auto__ = cljs.core.rest(arglist__27908);
    return col__delegate(opts__9507__auto__, children__9508__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var colgroup = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__27909) {
    var opts__9507__auto__ = cljs.core.first(arglist__27909);
    var children__9508__auto__ = cljs.core.rest(arglist__27909);
    return colgroup__delegate(opts__9507__auto__, children__9508__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var data = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__27910) {
    var opts__9507__auto__ = cljs.core.first(arglist__27910);
    var children__9508__auto__ = cljs.core.rest(arglist__27910);
    return data__delegate(opts__9507__auto__, children__9508__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var datalist = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__27911) {
    var opts__9507__auto__ = cljs.core.first(arglist__27911);
    var children__9508__auto__ = cljs.core.rest(arglist__27911);
    return datalist__delegate(opts__9507__auto__, children__9508__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var dd = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__27912) {
    var opts__9507__auto__ = cljs.core.first(arglist__27912);
    var children__9508__auto__ = cljs.core.rest(arglist__27912);
    return dd__delegate(opts__9507__auto__, children__9508__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var del = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__27913) {
    var opts__9507__auto__ = cljs.core.first(arglist__27913);
    var children__9508__auto__ = cljs.core.rest(arglist__27913);
    return del__delegate(opts__9507__auto__, children__9508__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var dfn = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__27914) {
    var opts__9507__auto__ = cljs.core.first(arglist__27914);
    var children__9508__auto__ = cljs.core.rest(arglist__27914);
    return dfn__delegate(opts__9507__auto__, children__9508__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var div = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__27915) {
    var opts__9507__auto__ = cljs.core.first(arglist__27915);
    var children__9508__auto__ = cljs.core.rest(arglist__27915);
    return div__delegate(opts__9507__auto__, children__9508__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var dl = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__27916) {
    var opts__9507__auto__ = cljs.core.first(arglist__27916);
    var children__9508__auto__ = cljs.core.rest(arglist__27916);
    return dl__delegate(opts__9507__auto__, children__9508__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var dt = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__27917) {
    var opts__9507__auto__ = cljs.core.first(arglist__27917);
    var children__9508__auto__ = cljs.core.rest(arglist__27917);
    return dt__delegate(opts__9507__auto__, children__9508__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var em = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__27918) {
    var opts__9507__auto__ = cljs.core.first(arglist__27918);
    var children__9508__auto__ = cljs.core.rest(arglist__27918);
    return em__delegate(opts__9507__auto__, children__9508__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var embed = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__27919) {
    var opts__9507__auto__ = cljs.core.first(arglist__27919);
    var children__9508__auto__ = cljs.core.rest(arglist__27919);
    return embed__delegate(opts__9507__auto__, children__9508__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var fieldset = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__27920) {
    var opts__9507__auto__ = cljs.core.first(arglist__27920);
    var children__9508__auto__ = cljs.core.rest(arglist__27920);
    return fieldset__delegate(opts__9507__auto__, children__9508__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var figcaption = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__27921) {
    var opts__9507__auto__ = cljs.core.first(arglist__27921);
    var children__9508__auto__ = cljs.core.rest(arglist__27921);
    return figcaption__delegate(opts__9507__auto__, children__9508__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var figure = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__27922) {
    var opts__9507__auto__ = cljs.core.first(arglist__27922);
    var children__9508__auto__ = cljs.core.rest(arglist__27922);
    return figure__delegate(opts__9507__auto__, children__9508__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var footer = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__27923) {
    var opts__9507__auto__ = cljs.core.first(arglist__27923);
    var children__9508__auto__ = cljs.core.rest(arglist__27923);
    return footer__delegate(opts__9507__auto__, children__9508__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var form = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__27924) {
    var opts__9507__auto__ = cljs.core.first(arglist__27924);
    var children__9508__auto__ = cljs.core.rest(arglist__27924);
    return form__delegate(opts__9507__auto__, children__9508__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var h1 = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__27925) {
    var opts__9507__auto__ = cljs.core.first(arglist__27925);
    var children__9508__auto__ = cljs.core.rest(arglist__27925);
    return h1__delegate(opts__9507__auto__, children__9508__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var h2 = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__27926) {
    var opts__9507__auto__ = cljs.core.first(arglist__27926);
    var children__9508__auto__ = cljs.core.rest(arglist__27926);
    return h2__delegate(opts__9507__auto__, children__9508__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var h3 = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__27927) {
    var opts__9507__auto__ = cljs.core.first(arglist__27927);
    var children__9508__auto__ = cljs.core.rest(arglist__27927);
    return h3__delegate(opts__9507__auto__, children__9508__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var h4 = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__27928) {
    var opts__9507__auto__ = cljs.core.first(arglist__27928);
    var children__9508__auto__ = cljs.core.rest(arglist__27928);
    return h4__delegate(opts__9507__auto__, children__9508__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var h5 = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__27929) {
    var opts__9507__auto__ = cljs.core.first(arglist__27929);
    var children__9508__auto__ = cljs.core.rest(arglist__27929);
    return h5__delegate(opts__9507__auto__, children__9508__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var h6 = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__27930) {
    var opts__9507__auto__ = cljs.core.first(arglist__27930);
    var children__9508__auto__ = cljs.core.rest(arglist__27930);
    return h6__delegate(opts__9507__auto__, children__9508__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var head = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__27931) {
    var opts__9507__auto__ = cljs.core.first(arglist__27931);
    var children__9508__auto__ = cljs.core.rest(arglist__27931);
    return head__delegate(opts__9507__auto__, children__9508__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var header = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__27932) {
    var opts__9507__auto__ = cljs.core.first(arglist__27932);
    var children__9508__auto__ = cljs.core.rest(arglist__27932);
    return header__delegate(opts__9507__auto__, children__9508__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var hr = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__27933) {
    var opts__9507__auto__ = cljs.core.first(arglist__27933);
    var children__9508__auto__ = cljs.core.rest(arglist__27933);
    return hr__delegate(opts__9507__auto__, children__9508__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var html = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__27934) {
    var opts__9507__auto__ = cljs.core.first(arglist__27934);
    var children__9508__auto__ = cljs.core.rest(arglist__27934);
    return html__delegate(opts__9507__auto__, children__9508__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var i = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__27935) {
    var opts__9507__auto__ = cljs.core.first(arglist__27935);
    var children__9508__auto__ = cljs.core.rest(arglist__27935);
    return i__delegate(opts__9507__auto__, children__9508__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var iframe = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__27936) {
    var opts__9507__auto__ = cljs.core.first(arglist__27936);
    var children__9508__auto__ = cljs.core.rest(arglist__27936);
    return iframe__delegate(opts__9507__auto__, children__9508__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var img = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__27937) {
    var opts__9507__auto__ = cljs.core.first(arglist__27937);
    var children__9508__auto__ = cljs.core.rest(arglist__27937);
    return img__delegate(opts__9507__auto__, children__9508__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var ins = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__27938) {
    var opts__9507__auto__ = cljs.core.first(arglist__27938);
    var children__9508__auto__ = cljs.core.rest(arglist__27938);
    return ins__delegate(opts__9507__auto__, children__9508__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var kbd = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__27939) {
    var opts__9507__auto__ = cljs.core.first(arglist__27939);
    var children__9508__auto__ = cljs.core.rest(arglist__27939);
    return kbd__delegate(opts__9507__auto__, children__9508__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var keygen = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__27940) {
    var opts__9507__auto__ = cljs.core.first(arglist__27940);
    var children__9508__auto__ = cljs.core.rest(arglist__27940);
    return keygen__delegate(opts__9507__auto__, children__9508__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var label = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__27941) {
    var opts__9507__auto__ = cljs.core.first(arglist__27941);
    var children__9508__auto__ = cljs.core.rest(arglist__27941);
    return label__delegate(opts__9507__auto__, children__9508__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var legend = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__27942) {
    var opts__9507__auto__ = cljs.core.first(arglist__27942);
    var children__9508__auto__ = cljs.core.rest(arglist__27942);
    return legend__delegate(opts__9507__auto__, children__9508__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var li = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__27943) {
    var opts__9507__auto__ = cljs.core.first(arglist__27943);
    var children__9508__auto__ = cljs.core.rest(arglist__27943);
    return li__delegate(opts__9507__auto__, children__9508__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var link = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__27944) {
    var opts__9507__auto__ = cljs.core.first(arglist__27944);
    var children__9508__auto__ = cljs.core.rest(arglist__27944);
    return link__delegate(opts__9507__auto__, children__9508__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var main = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__27945) {
    var opts__9507__auto__ = cljs.core.first(arglist__27945);
    var children__9508__auto__ = cljs.core.rest(arglist__27945);
    return main__delegate(opts__9507__auto__, children__9508__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var map = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__27946) {
    var opts__9507__auto__ = cljs.core.first(arglist__27946);
    var children__9508__auto__ = cljs.core.rest(arglist__27946);
    return map__delegate(opts__9507__auto__, children__9508__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var mark = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__27947) {
    var opts__9507__auto__ = cljs.core.first(arglist__27947);
    var children__9508__auto__ = cljs.core.rest(arglist__27947);
    return mark__delegate(opts__9507__auto__, children__9508__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var menu = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__27948) {
    var opts__9507__auto__ = cljs.core.first(arglist__27948);
    var children__9508__auto__ = cljs.core.rest(arglist__27948);
    return menu__delegate(opts__9507__auto__, children__9508__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var menuitem = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__27949) {
    var opts__9507__auto__ = cljs.core.first(arglist__27949);
    var children__9508__auto__ = cljs.core.rest(arglist__27949);
    return menuitem__delegate(opts__9507__auto__, children__9508__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var meta = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__27950) {
    var opts__9507__auto__ = cljs.core.first(arglist__27950);
    var children__9508__auto__ = cljs.core.rest(arglist__27950);
    return meta__delegate(opts__9507__auto__, children__9508__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var meter = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__27951) {
    var opts__9507__auto__ = cljs.core.first(arglist__27951);
    var children__9508__auto__ = cljs.core.rest(arglist__27951);
    return meter__delegate(opts__9507__auto__, children__9508__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var nav = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__27952) {
    var opts__9507__auto__ = cljs.core.first(arglist__27952);
    var children__9508__auto__ = cljs.core.rest(arglist__27952);
    return nav__delegate(opts__9507__auto__, children__9508__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var noscript = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__27953) {
    var opts__9507__auto__ = cljs.core.first(arglist__27953);
    var children__9508__auto__ = cljs.core.rest(arglist__27953);
    return noscript__delegate(opts__9507__auto__, children__9508__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var object = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__27954) {
    var opts__9507__auto__ = cljs.core.first(arglist__27954);
    var children__9508__auto__ = cljs.core.rest(arglist__27954);
    return object__delegate(opts__9507__auto__, children__9508__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var ol = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__27955) {
    var opts__9507__auto__ = cljs.core.first(arglist__27955);
    var children__9508__auto__ = cljs.core.rest(arglist__27955);
    return ol__delegate(opts__9507__auto__, children__9508__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var optgroup = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__27956) {
    var opts__9507__auto__ = cljs.core.first(arglist__27956);
    var children__9508__auto__ = cljs.core.rest(arglist__27956);
    return optgroup__delegate(opts__9507__auto__, children__9508__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var output = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__27957) {
    var opts__9507__auto__ = cljs.core.first(arglist__27957);
    var children__9508__auto__ = cljs.core.rest(arglist__27957);
    return output__delegate(opts__9507__auto__, children__9508__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var p = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__27958) {
    var opts__9507__auto__ = cljs.core.first(arglist__27958);
    var children__9508__auto__ = cljs.core.rest(arglist__27958);
    return p__delegate(opts__9507__auto__, children__9508__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var param = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__27959) {
    var opts__9507__auto__ = cljs.core.first(arglist__27959);
    var children__9508__auto__ = cljs.core.rest(arglist__27959);
    return param__delegate(opts__9507__auto__, children__9508__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var pre = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__27960) {
    var opts__9507__auto__ = cljs.core.first(arglist__27960);
    var children__9508__auto__ = cljs.core.rest(arglist__27960);
    return pre__delegate(opts__9507__auto__, children__9508__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var progress = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__27961) {
    var opts__9507__auto__ = cljs.core.first(arglist__27961);
    var children__9508__auto__ = cljs.core.rest(arglist__27961);
    return progress__delegate(opts__9507__auto__, children__9508__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var q = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__27962) {
    var opts__9507__auto__ = cljs.core.first(arglist__27962);
    var children__9508__auto__ = cljs.core.rest(arglist__27962);
    return q__delegate(opts__9507__auto__, children__9508__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var rp = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__27963) {
    var opts__9507__auto__ = cljs.core.first(arglist__27963);
    var children__9508__auto__ = cljs.core.rest(arglist__27963);
    return rp__delegate(opts__9507__auto__, children__9508__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var rt = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__27964) {
    var opts__9507__auto__ = cljs.core.first(arglist__27964);
    var children__9508__auto__ = cljs.core.rest(arglist__27964);
    return rt__delegate(opts__9507__auto__, children__9508__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var ruby = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__27965) {
    var opts__9507__auto__ = cljs.core.first(arglist__27965);
    var children__9508__auto__ = cljs.core.rest(arglist__27965);
    return ruby__delegate(opts__9507__auto__, children__9508__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var s = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__27966) {
    var opts__9507__auto__ = cljs.core.first(arglist__27966);
    var children__9508__auto__ = cljs.core.rest(arglist__27966);
    return s__delegate(opts__9507__auto__, children__9508__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var samp = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__27967) {
    var opts__9507__auto__ = cljs.core.first(arglist__27967);
    var children__9508__auto__ = cljs.core.rest(arglist__27967);
    return samp__delegate(opts__9507__auto__, children__9508__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var script = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__27968) {
    var opts__9507__auto__ = cljs.core.first(arglist__27968);
    var children__9508__auto__ = cljs.core.rest(arglist__27968);
    return script__delegate(opts__9507__auto__, children__9508__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var section = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__27969) {
    var opts__9507__auto__ = cljs.core.first(arglist__27969);
    var children__9508__auto__ = cljs.core.rest(arglist__27969);
    return section__delegate(opts__9507__auto__, children__9508__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var select = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__27970) {
    var opts__9507__auto__ = cljs.core.first(arglist__27970);
    var children__9508__auto__ = cljs.core.rest(arglist__27970);
    return select__delegate(opts__9507__auto__, children__9508__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var small = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__27971) {
    var opts__9507__auto__ = cljs.core.first(arglist__27971);
    var children__9508__auto__ = cljs.core.rest(arglist__27971);
    return small__delegate(opts__9507__auto__, children__9508__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var source = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__27972) {
    var opts__9507__auto__ = cljs.core.first(arglist__27972);
    var children__9508__auto__ = cljs.core.rest(arglist__27972);
    return source__delegate(opts__9507__auto__, children__9508__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var span = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__27973) {
    var opts__9507__auto__ = cljs.core.first(arglist__27973);
    var children__9508__auto__ = cljs.core.rest(arglist__27973);
    return span__delegate(opts__9507__auto__, children__9508__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var strong = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__27974) {
    var opts__9507__auto__ = cljs.core.first(arglist__27974);
    var children__9508__auto__ = cljs.core.rest(arglist__27974);
    return strong__delegate(opts__9507__auto__, children__9508__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var style = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__27975) {
    var opts__9507__auto__ = cljs.core.first(arglist__27975);
    var children__9508__auto__ = cljs.core.rest(arglist__27975);
    return style__delegate(opts__9507__auto__, children__9508__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var sub = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__27976) {
    var opts__9507__auto__ = cljs.core.first(arglist__27976);
    var children__9508__auto__ = cljs.core.rest(arglist__27976);
    return sub__delegate(opts__9507__auto__, children__9508__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var summary = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__27977) {
    var opts__9507__auto__ = cljs.core.first(arglist__27977);
    var children__9508__auto__ = cljs.core.rest(arglist__27977);
    return summary__delegate(opts__9507__auto__, children__9508__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var sup = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__27978) {
    var opts__9507__auto__ = cljs.core.first(arglist__27978);
    var children__9508__auto__ = cljs.core.rest(arglist__27978);
    return sup__delegate(opts__9507__auto__, children__9508__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var table = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__27979) {
    var opts__9507__auto__ = cljs.core.first(arglist__27979);
    var children__9508__auto__ = cljs.core.rest(arglist__27979);
    return table__delegate(opts__9507__auto__, children__9508__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var tbody = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__27980) {
    var opts__9507__auto__ = cljs.core.first(arglist__27980);
    var children__9508__auto__ = cljs.core.rest(arglist__27980);
    return tbody__delegate(opts__9507__auto__, children__9508__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var td = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__27981) {
    var opts__9507__auto__ = cljs.core.first(arglist__27981);
    var children__9508__auto__ = cljs.core.rest(arglist__27981);
    return td__delegate(opts__9507__auto__, children__9508__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var tfoot = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__27982) {
    var opts__9507__auto__ = cljs.core.first(arglist__27982);
    var children__9508__auto__ = cljs.core.rest(arglist__27982);
    return tfoot__delegate(opts__9507__auto__, children__9508__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var th = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__27983) {
    var opts__9507__auto__ = cljs.core.first(arglist__27983);
    var children__9508__auto__ = cljs.core.rest(arglist__27983);
    return th__delegate(opts__9507__auto__, children__9508__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var thead = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__27984) {
    var opts__9507__auto__ = cljs.core.first(arglist__27984);
    var children__9508__auto__ = cljs.core.rest(arglist__27984);
    return thead__delegate(opts__9507__auto__, children__9508__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var time = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__27985) {
    var opts__9507__auto__ = cljs.core.first(arglist__27985);
    var children__9508__auto__ = cljs.core.rest(arglist__27985);
    return time__delegate(opts__9507__auto__, children__9508__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var title = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__27986) {
    var opts__9507__auto__ = cljs.core.first(arglist__27986);
    var children__9508__auto__ = cljs.core.rest(arglist__27986);
    return title__delegate(opts__9507__auto__, children__9508__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var tr = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__27987) {
    var opts__9507__auto__ = cljs.core.first(arglist__27987);
    var children__9508__auto__ = cljs.core.rest(arglist__27987);
    return tr__delegate(opts__9507__auto__, children__9508__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var track = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__27988) {
    var opts__9507__auto__ = cljs.core.first(arglist__27988);
    var children__9508__auto__ = cljs.core.rest(arglist__27988);
    return track__delegate(opts__9507__auto__, children__9508__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var u = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__27989) {
    var opts__9507__auto__ = cljs.core.first(arglist__27989);
    var children__9508__auto__ = cljs.core.rest(arglist__27989);
    return u__delegate(opts__9507__auto__, children__9508__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var ul = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__27990) {
    var opts__9507__auto__ = cljs.core.first(arglist__27990);
    var children__9508__auto__ = cljs.core.rest(arglist__27990);
    return ul__delegate(opts__9507__auto__, children__9508__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var var$ = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__27991) {
    var opts__9507__auto__ = cljs.core.first(arglist__27991);
    var children__9508__auto__ = cljs.core.rest(arglist__27991);
    return var$__delegate(opts__9507__auto__, children__9508__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var video = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__27992) {
    var opts__9507__auto__ = cljs.core.first(arglist__27992);
    var children__9508__auto__ = cljs.core.rest(arglist__27992);
    return video__delegate(opts__9507__auto__, children__9508__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var wbr = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__27993) {
    var opts__9507__auto__ = cljs.core.first(arglist__27993);
    var children__9508__auto__ = cljs.core.rest(arglist__27993);
    return wbr__delegate(opts__9507__auto__, children__9508__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var circle = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__27994) {
    var opts__9507__auto__ = cljs.core.first(arglist__27994);
    var children__9508__auto__ = cljs.core.rest(arglist__27994);
    return circle__delegate(opts__9507__auto__, children__9508__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.g = function() {
  var g__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var g = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__27995) {
    var opts__9507__auto__ = cljs.core.first(arglist__27995);
    var children__9508__auto__ = cljs.core.rest(arglist__27995);
    return g__delegate(opts__9507__auto__, children__9508__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var line = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__27996) {
    var opts__9507__auto__ = cljs.core.first(arglist__27996);
    var children__9508__auto__ = cljs.core.rest(arglist__27996);
    return line__delegate(opts__9507__auto__, children__9508__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var path = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__27997) {
    var opts__9507__auto__ = cljs.core.first(arglist__27997);
    var children__9508__auto__ = cljs.core.rest(arglist__27997);
    return path__delegate(opts__9507__auto__, children__9508__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var polyline = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__27998) {
    var opts__9507__auto__ = cljs.core.first(arglist__27998);
    var children__9508__auto__ = cljs.core.rest(arglist__27998);
    return polyline__delegate(opts__9507__auto__, children__9508__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var rect = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__27999) {
    var opts__9507__auto__ = cljs.core.first(arglist__27999);
    var children__9508__auto__ = cljs.core.rest(arglist__27999);
    return rect__delegate(opts__9507__auto__, children__9508__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var svg = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__28000) {
    var opts__9507__auto__ = cljs.core.first(arglist__28000);
    var children__9508__auto__ = cljs.core.rest(arglist__28000);
    return svg__delegate(opts__9507__auto__, children__9508__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__9507__auto__, children__9508__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__9507__auto__, children__9508__auto__)));
  };
  var text = function(opts__9507__auto__, var_args) {
    var children__9508__auto__ = null;
    if (arguments.length > 1) {
      children__9508__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__9507__auto__, children__9508__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__28001) {
    var opts__9507__auto__ = cljs.core.first(arglist__28001);
    var children__9508__auto__ = cljs.core.rest(arglist__28001);
    return text__delegate(opts__9507__auto__, children__9508__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input);
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea);
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option);
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.ui.IdGenerator.instance = goog.ui.IdGenerator.getInstance();
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core.IDisplayName = function() {
  var obj27757 = {};
  return obj27757;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.display_name[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.display_name["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj27759 = {};
  return obj27759;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.init_state[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.init_state["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj27761 = {};
  return obj27761;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.should_update[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.should_update["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj27763 = {};
  return obj27763;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.will_mount[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.will_mount["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj27765 = {};
  return obj27765;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.did_mount[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.did_mount["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj27767 = {};
  return obj27767;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.will_unmount[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.will_unmount["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj27769 = {};
  return obj27769;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.will_update[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.will_update["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj27771 = {};
  return obj27771;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.did_update[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.did_update["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj27773 = {};
  return obj27773;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.will_receive_props[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.will_receive_props["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj27775 = {};
  return obj27775;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.render[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.render["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj27777 = {};
  return obj27777;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core.render_state[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core.render_state["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj27779 = {};
  return obj27779;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IValue = function() {
  var obj27781 = {};
  return obj27781;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = om.core._value[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._value["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj27783 = {};
  return obj27783;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3431__auto__ = cursor;
    if (and__3431__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4070__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3443__auto__ = om.core._path[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._path["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3431__auto__ = cursor;
    if (and__3431__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4070__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3443__auto__ = om.core._state[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._state["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj27785 = {};
  return obj27785;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3431__auto__ = value;
      if (and__3431__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4070__auto__ = value == null ? null : value;
      return function() {
        var or__3443__auto__ = om.core._to_cursor[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = om.core._to_cursor["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3431__auto__ = value;
      if (and__3431__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4070__auto__ = value == null ? null : value;
      return function() {
        var or__3443__auto__ = om.core._to_cursor[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = om.core._to_cursor["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj27787 = {};
  return obj27787;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3431__auto__ = cursor;
    if (and__3431__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4070__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3443__auto__ = om.core._transact_BANG_[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj27789 = {};
  return obj27789;
}();
om.core._notify = function _notify(x, tx_data, root_cursor) {
  if (function() {
    var and__3431__auto__ = x;
    if (and__3431__auto__) {
      return x.om$core$INotify$_notify$arity$3;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4070__auto__ = x == null ? null : x;
    return function() {
      var or__3443__auto__ = om.core._notify[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = om.core._notify["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__27791 = state;
    if (G__27791) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__27791.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__27791.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__27791);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__27791);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f) : null;
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", 3145885106))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", 1017337751), path, new cljs.core.Keyword(null, "old-value", "old-value", 1451216317), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 3626601078), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1449001181), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    3624385942), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", 1014018828), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_27793 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27793;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    var state = owner.state;
    var or__3443__auto__ = state["__om_pending_state"];
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return state["__om_state"];
    }
  };
  var get_state__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_state.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_state.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_state.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4092__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4092__auto__)) {
    var pending_state = temp__4092__auto__;
    var G__27795 = state;
    G__27795["__om_prev_state"] = state["__om_state"];
    G__27795["__om_state"] = pending_state;
    G__27795["__om_pending_state"] = null;
    return G__27795;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3443__auto__ = props;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4092__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4092__auto__)) {
      var props_state = temp__4092__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3443__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.Pure = React.createClass({"componentWillUpdate":function(next_props, next_state) {
  var this$ = this;
  var c_27821 = om.core.children.call(null, this$);
  if (function() {
    var G__27796 = c_27821;
    if (G__27796) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__27796.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__27796.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__27796);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__27796);
    }
  }()) {
    var state_27822 = this$.state;
    var _STAR_read_enabled_STAR_27797_27823 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_27821, om.core.get_props.call(null, {"props":next_props}), function() {
        var or__3443__auto__ = state_27822["__om_pending_state"];
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return state_27822["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27797_27823;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, "componentDidUpdate":function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__27798 = c;
    if (G__27798) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__27798.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__27798.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__27798);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__27798);
    }
  }()) {
    var state_27824 = this$.state;
    var _STAR_read_enabled_STAR_27799_27825 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3443__auto__ = state_27824["__om_prev_state"];
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return state_27824["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27799_27825;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, "render":function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_27800 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__27801 = c;
      if (G__27801) {
        var bit__4093__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3443__auto__ = bit__4093__auto__;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return G__27801.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__27801.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__27801);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__27801);
      }
    }()) {
      var _STAR_parent_STAR_27802 = om.core._STAR_parent_STAR_;
      var _STAR_instrument_STAR_27803 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_27803;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_27802;
      }
    } else {
      if (function() {
        var G__27804 = c;
        if (G__27804) {
          var bit__4093__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3443__auto__ = bit__4093__auto__;
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return G__27804.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__27804.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__27804);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__27804);
        }
      }()) {
        var _STAR_parent_STAR_27805 = om.core._STAR_parent_STAR_;
        var _STAR_instrument_STAR_27806 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_27806;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_27805;
        }
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return c;
        } else {
          return null;
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27800;
  }
}, "componentWillReceiveProps":function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__27807 = c;
    if (G__27807) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__27807.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__27807.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__27807);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__27807);
    }
  }()) {
    var _STAR_read_enabled_STAR_27808 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27808;
    }
  } else {
    return null;
  }
}, "getDisplayName":function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__27809 = c;
    if (G__27809) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__27809.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__27809.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__27809);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__27809);
    }
  }()) {
    var _STAR_read_enabled_STAR_27810 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27810;
    }
  } else {
    return null;
  }
}, "componentWillUnmount":function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__27811 = c;
    if (G__27811) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__27811.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__27811.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__27811);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__27811);
    }
  }()) {
    var _STAR_read_enabled_STAR_27812 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27812;
    }
  } else {
    return null;
  }
}, "componentWillMount":function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_27826 = om.core.children.call(null, this$);
  if (function() {
    var G__27813 = c_27826;
    if (G__27813) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__27813.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__27813.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__27813);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__27813);
    }
  }()) {
    var _STAR_read_enabled_STAR_27814_27827 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_27826);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27814_27827;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, "componentDidMount":function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__27815 = c;
    if (G__27815) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__27815.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__27815.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__27815);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__27815);
    }
  }()) {
    var _STAR_read_enabled_STAR_27816 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27816;
    }
  } else {
    return null;
  }
}, "getInitialState":function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3443__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var ret = {"__om_state":cljs.core.merge.call(null, istate, function() {
    var G__27817 = c;
    if (G__27817) {
      var bit__4093__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3443__auto__ = bit__4093__auto__;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return G__27817.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__27817.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__27817);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__27817);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_27818 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27818;
    }
  }() : null), "__om_id":goog.ui.IdGenerator.getInstance().getNextUniqueId()};
  props["__om_init_state"] = null;
  return ret;
}, "shouldComponentUpdate":function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_27819 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__27820 = c;
      if (G__27820) {
        var bit__4093__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3443__auto__ = bit__4093__auto__;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return G__27820.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__27820.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__27820);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__27820);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), function() {
        var or__3443__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return state["__om_state"];
        }
      }());
    } else {
      if (!(om.core._value.call(null, props["__om_cursor"]) === om.core._value.call(null, next_props["__om_cursor"]))) {
        return true;
      } else {
        if (!(state["__om_pending_state"] == null)) {
          return true;
        } else {
          if (!(props["__om_index"] === next_props["__om_index"])) {
            return true;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false;
            } else {
              return null;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27819;
  }
}});
om.core.pure = function pure(obj) {
  return new om.core.Pure(obj);
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__27829 = x;
  if (G__27829) {
    var bit__4093__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3443__auto__ = bit__4093__auto__;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return G__27829.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__27829.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__27829);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__27829);
  }
};
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2158397195;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(_, k, not_found) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__27833 = null;
  var G__27833__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__27833__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__27833 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27833__2.call(this, self__, k);
      case 3:
        return G__27833__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__27833;
}();
om.core.MapCursor.prototype.apply = function(self__, args27830) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args27830)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(p__27831) {
        var vec__27832 = p__27831;
        var k = cljs.core.nth.call(null, vec__27832, 0, null);
        var v = cljs.core.nth.call(null, vec__27832, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
      }, self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2175181595;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, n, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__27835 = null;
  var G__27835__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__27835__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__27835 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__27835__2.call(this, self__, k);
      case 3:
        return G__27835__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__27835;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args27834) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args27834)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(v, i) {
        return om.core.to_cursor.call(null, v, self__.state, cljs.core.conj.call(null, self__.path, i));
      }, self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(_, n) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core.to_cursor.call(null, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(_, n, not_found) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core.to_cursor.call(null, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x27837 = cljs.core.clone.call(null, val);
  x27837.cljs$core$IEquiv$ = true;
  x27837.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
    var ___$1 = this;
    if (om.core._STAR_read_enabled_STAR_) {
      if (om.core.cursor_QMARK_.call(null, other)) {
        return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
      } else {
        return cljs.core._EQ_.call(null, val, other);
      }
    } else {
      throw new Error([cljs.core.str("Cannot manipulate cursor outside of render phase, only "), cljs.core.str("om.core/transact!, om.core/update!, and cljs.core/deref operations allowed")].join(""));
    }
  };
  x27837.om$core$ITransact$ = true;
  x27837.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
    var this$__$1 = this;
    return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
  };
  x27837.om$core$ICursor$ = true;
  x27837.om$core$ICursor$_path$arity$1 = function(_) {
    var ___$1 = this;
    return path;
  };
  x27837.om$core$ICursor$_state$arity$1 = function(_) {
    var ___$1 = this;
    return state;
  };
  x27837.cljs$core$IDeref$ = true;
  x27837.cljs$core$IDeref$_deref$arity$1 = function(this$) {
    var this$__$1 = this;
    if (!om.core._STAR_read_enabled_STAR_) {
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
    } else {
      throw new Error([cljs.core.str("Cannot deref cursor during render phase: "), cljs.core.str(this$__$1)].join(""));
    }
  };
  return x27837;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__27840 = val;
        if (G__27840) {
          var bit__4093__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3443__auto__ = bit__4093__auto__;
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              return G__27840.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__27840.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__27840);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__27840);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__27841 = val;
              if (G__27841) {
                var bit__4093__auto__ = G__27841.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4093__auto__ || G__27841.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__27841.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__27841);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__27841);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return val;
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__27846 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__27847 = null;
  var count__27848 = 0;
  var i__27849 = 0;
  while (true) {
    if (i__27849 < count__27848) {
      var f = cljs.core._nth.call(null, chunk__27847, i__27849);
      f.call(null);
      var G__27850 = seq__27846;
      var G__27851 = chunk__27847;
      var G__27852 = count__27848;
      var G__27853 = i__27849 + 1;
      seq__27846 = G__27850;
      chunk__27847 = G__27851;
      count__27848 = G__27852;
      i__27849 = G__27853;
      continue;
    } else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__27846);
      if (temp__4092__auto__) {
        var seq__27846__$1 = temp__4092__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27846__$1)) {
          var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__27846__$1);
          var G__27854 = cljs.core.chunk_rest.call(null, seq__27846__$1);
          var G__27855 = c__4191__auto__;
          var G__27856 = cljs.core.count.call(null, c__4191__auto__);
          var G__27857 = 0;
          seq__27846 = G__27854;
          chunk__27847 = G__27855;
          count__27848 = G__27856;
          i__27849 = G__27857;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__27846__$1);
          f.call(null);
          var G__27858 = cljs.core.next.call(null, seq__27846__$1);
          var G__27859 = null;
          var G__27860 = 0;
          var G__27861 = 0;
          seq__27846 = G__27858;
          chunk__27847 = G__27859;
          count__27848 = G__27860;
          i__27849 = G__27861;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "init-state", "init-state", 4479067398), null, new cljs.core.Keyword(null, "ctor", "ctor", 1016968582), null, new cljs.core.Keyword(null, "state", "state", 1123661827), null, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563), null, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), null, new cljs.core.Keyword(null, 
  "key", "key", 1014010321), null, new cljs.core.Keyword(null, "instrument", "instrument", 2409387865), null, new cljs.core.Keyword(null, "shared", "shared", 4405305303), null, new cljs.core.Keyword(null, "opts", "opts", 1017322386), null, new cljs.core.Keyword(null, "fn", "fn", 1013907514), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1830611324, null), new cljs.core.Symbol(null, "m", "m", -1640531418, null))))].join(""));
    }
    if (m == null) {
      var shared = function() {
        var or__3443__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = function() {
        var or__3443__auto__ = (new cljs.core.Keyword(null, "ctor", "ctor", 1016968582)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return om.core.pure;
        }
      }();
      var pure__9541__auto__ = ctor.call(null, {"children":function(this$) {
        var _STAR_read_enabled_STAR_27866 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return f.call(null, cursor, this$);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27866;
        }
      }, "__om_instrument":om.core._STAR_instrument_STAR_, "__om_shared":shared, "__om_cursor":cursor});
      pure__9541__auto__.constructor = goog.getUid(f);
      return pure__9541__auto__;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var map__27867 = m;
        var map__27867__$1 = cljs.core.seq_QMARK_.call(null, map__27867) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27867) : map__27867;
        var opts = cljs.core.get.call(null, map__27867__$1, new cljs.core.Keyword(null, "opts", "opts", 1017322386));
        var init_state = cljs.core.get.call(null, map__27867__$1, new cljs.core.Keyword(null, "init-state", "init-state", 4479067398));
        var state = cljs.core.get.call(null, map__27867__$1, new cljs.core.Keyword(null, "state", "state", 1123661827));
        var key = cljs.core.get.call(null, map__27867__$1, new cljs.core.Keyword(null, "key", "key", 1014010321));
        var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", 1013907514));
        var cursor_SINGLEQUOTE_ = !(dataf == null) ? dataf.call(null, cursor) : cursor;
        var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 4184082563));
        var shared = function() {
          var or__3443__auto__ = (new cljs.core.Keyword(null, "shared", "shared", 4405305303)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
          }
        }();
        var ctor = function() {
          var or__3443__auto__ = (new cljs.core.Keyword(null, "ctor", "ctor", 1016968582)).cljs$core$IFn$_invoke$arity$1(m);
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return om.core.pure;
          }
        }();
        var pure__9541__auto__ = ctor.call(null, {"children":opts == null ? function(this$) {
          var _STAR_read_enabled_STAR_27868 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            return f.call(null, cursor_SINGLEQUOTE_, this$);
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27868;
          }
        } : function(this$) {
          var _STAR_read_enabled_STAR_27869 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            return f.call(null, cursor_SINGLEQUOTE_, this$, opts);
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27869;
          }
        }, "key":rkey, "__om_instrument":om.core._STAR_instrument_STAR_, "__om_shared":shared, "__om_state":state, "__om_init_state":init_state, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_});
        pure__9541__auto__.constructor = goog.getUid(f);
        return pure__9541__auto__;
      } else {
        return null;
      }
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_27871 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27871;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", 2667619603))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", 3166146514), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.root = function root(f, value, p__27872) {
  var map__27878 = p__27872;
  var map__27878__$1 = cljs.core.seq_QMARK_.call(null, map__27878) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27878) : map__27878;
  var options = map__27878__$1;
  var instrument = cljs.core.get.call(null, map__27878__$1, new cljs.core.Keyword(null, "instrument", "instrument", 2409387865));
  var path = cljs.core.get.call(null, map__27878__$1, new cljs.core.Keyword(null, "path", "path", 1017337751));
  var tx_listen = cljs.core.get.call(null, map__27878__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114));
  var shared = cljs.core.get.call(null, map__27878__$1, new cljs.core.Keyword(null, "shared", "shared", 4405305303));
  var target = cljs.core.get.call(null, map__27878__$1, new cljs.core.Keyword(null, "target", "target", 4427965699));
  if (!(target == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No target specified to om.core/root"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "target", "target", 1773529930, null)))))].join(""));
  }
  var roots_SINGLEQUOTE__27883 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__27883, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__27883, target).call(null);
  } else {
  }
  var state = function() {
    var G__27879 = value;
    if (G__27879) {
      var bit__4093__auto__ = G__27879.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4093__auto__ || G__27879.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__27879.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__27879);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__27879);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = function() {
    var x27880 = state;
    x27880.om$core$INotify$ = true;
    x27880.om$core$INotify$_notify$arity$3 = function(x27880, state) {
      return function(_, tx_data, root_cursor) {
        var ___$1 = this;
        if (tx_listen == null) {
          return null;
        } else {
          return tx_listen.call(null, tx_data, root_cursor);
        }
      };
    }(x27880, state);
    return x27880;
  }();
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 666878114), new cljs.core.Keyword(null, "path", "path", 1017337751));
  var rootf = function(state, state__$1, m) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      return om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_27882 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_27882;
        }
      }(), target);
    };
  }(state, state__$1, m);
  var watch_key = cljs.core.gensym.call(null);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(_, ___$1, ___$2, ___$3) {
    if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
    } else {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
    }
    if (cljs.core.truth_(om.core.refresh_queued)) {
      return null;
    } else {
      om.core.refresh_queued = true;
      if (typeof requestAnimationFrame !== "undefined") {
        return requestAnimationFrame(om.core.render_all);
      } else {
        return setTimeout(om.core.render_all, 16);
      }
    }
  });
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function() {
    cljs.core.remove_watch.call(null, state__$1, watch_key);
    cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
    return React.unmountComponentAtNode(target);
  });
  return rootf.call(null);
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.Keyword(null, "else", "else", 1017020587) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null) : null;
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4092__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4092__auto__)) {
      var refs = temp__4092__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function set_state_BANG_(owner, korks, v) {
  var _STAR_read_enabled_STAR_27885 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = owner.props;
    var state = owner.state;
    var cursor = props["__om_cursor"];
    var path = om.core._path.call(null, cursor);
    var pstate = function() {
      var or__3443__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return state["__om_state"];
      }
    }();
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      state["__om_pending_state"] = cljs.core.assoc.call(null, pstate, korks, v);
    } else {
      state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, korks, v);
    }
    if (cljs.core.empty_QMARK_.call(null, path)) {
      return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.clone);
    } else {
      return cljs.core.swap_BANG_.call(null, om.core._state.call(null, cursor), cljs.core.update_in, path, cljs.core.clone);
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_27885;
  }
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return owner.state["__om_state"];
  };
  var get_render_state__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_render_state.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_render_state.call(null, owner);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get_in.call(null, get_render_state.call(null, owner), korks);
        } else {
          return null;
        }
      }
    }
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.graft = function graft(value, cursor) {
  var state = om.core._state.call(null, cursor);
  var path = om.core._path.call(null, cursor);
  if (om.core.cursor_QMARK_.call(null, value)) {
    throw new Error([cljs.core.str(value), cljs.core.str(" is already a cursor.")].join(""));
  } else {
    var x27887 = cljs.core.clone.call(null, value);
    x27887.om$core$ICursor$ = true;
    x27887.om$core$ICursor$_state$arity$1 = function(_) {
      var ___$1 = this;
      return state;
    };
    x27887.om$core$ICursor$_path$arity$1 = function(_) {
      var ___$1 = this;
      return path;
    };
    x27887.om$core$ITransact$ = true;
    x27887.om$core$ITransact$_transact_BANG_$arity$3 = function(_, ___$1, ___$2) {
      var ___$3 = this;
      throw new Error("Cannot transact on graft");
    };
    return x27887;
  }
};
goog.provide("secretary.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
secretary.core.IRouteMatches = function() {
  var obj29140 = {};
  return obj29140;
}();
secretary.core.route_matches = function route_matches(this$, route) {
  if (function() {
    var and__3431__auto__ = this$;
    if (and__3431__auto__) {
      return this$.secretary$core$IRouteMatches$route_matches$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteMatches$route_matches$arity$2(this$, route);
  } else {
    var x__4070__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3443__auto__ = secretary.core.route_matches[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = secretary.core.route_matches["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteMatches.route-matches", this$);
        }
      }
    }().call(null, this$, route);
  }
};
secretary.core.IRenderRoute = function() {
  var obj29142 = {};
  return obj29142;
}();
secretary.core.render_route = function() {
  var render_route = null;
  var render_route__1 = function(this$) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$1;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$1(this$);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = secretary.core.render_route[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = secretary.core.render_route["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var render_route__2 = function(this$, params) {
    if (function() {
      var and__3431__auto__ = this$;
      if (and__3431__auto__) {
        return this$.secretary$core$IRenderRoute$render_route$arity$2;
      } else {
        return and__3431__auto__;
      }
    }()) {
      return this$.secretary$core$IRenderRoute$render_route$arity$2(this$, params);
    } else {
      var x__4070__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3443__auto__ = secretary.core.render_route[goog.typeOf(x__4070__auto__)];
        if (or__3443__auto__) {
          return or__3443__auto__;
        } else {
          var or__3443__auto____$1 = secretary.core.render_route["_"];
          if (or__3443__auto____$1) {
            return or__3443__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
          }
        }
      }().call(null, this$, params);
    }
  };
  render_route = function(this$, params) {
    switch(arguments.length) {
      case 1:
        return render_route__1.call(this, this$);
      case 2:
        return render_route__2.call(this, this$, params);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render_route.cljs$core$IFn$_invoke$arity$1 = render_route__1;
  render_route.cljs$core$IFn$_invoke$arity$2 = render_route__2;
  return render_route;
}();
secretary.core._STAR_config_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prefix", "prefix", 4328760836), ""], null));
secretary.core.get_config = function get_config(path) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, secretary.core._STAR_config_STAR_), path__$1);
};
secretary.core.set_config_BANG_ = function set_config_BANG_(path, val) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_config_STAR_, cljs.core.assoc_in, path__$1, val);
};
secretary.core.encode = encodeURIComponent;
secretary.core.decode = decodeURIComponent;
secretary.core.encode_query_params = function encode_query_params(query_params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, function(p__29145) {
    var vec__29146 = p__29145;
    var k = cljs.core.nth.call(null, vec__29146, 0, null);
    var v = cljs.core.nth.call(null, vec__29146, 1, null);
    return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("\x3d"), cljs.core.str(secretary.core.encode.call(null, v instanceof cljs.core.Keyword ? cljs.core.name.call(null, v) : [cljs.core.str(v)].join("")))].join("");
  }, query_params));
};
secretary.core.decode_query_params = function decode_query_params(query_string) {
  return cljs.core.reduce.call(null, function(m, param) {
    var vec__29148 = clojure.string.split.call(null, param, /=/, 2);
    var k = cljs.core.nth.call(null, vec__29148, 0, null);
    var v = cljs.core.nth.call(null, vec__29148, 1, null);
    var v__$1 = secretary.core.decode.call(null, v);
    return cljs.core.assoc.call(null, m, k, v__$1);
  }, cljs.core.PersistentArrayMap.EMPTY, clojure.string.split.call(null, query_string, /&/));
};
secretary.core.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var ms = cljs.core.re_matches.call(null, re, s);
  if (cljs.core.truth_(ms)) {
    if (cljs.core.sequential_QMARK_.call(null, ms)) {
      return ms;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ms, ms], null);
    }
  } else {
    return null;
  }
};
secretary.core.re_escape_chars = cljs.core.set.call(null, "\\.*+|?()[]{}$^");
secretary.core.re_escape = function re_escape(s) {
  return cljs.core.reduce.call(null, function(s__$1, c) {
    if (cljs.core.truth_(secretary.core.re_escape_chars.call(null, c))) {
      return[cljs.core.str(s__$1), cljs.core.str("\\"), cljs.core.str(c)].join("");
    } else {
      return[cljs.core.str(s__$1), cljs.core.str(c)].join("");
    }
  }, "", s);
};
secretary.core.lex_STAR_ = function lex_STAR_(s, clauses) {
  return cljs.core.some.call(null, function(p__29152) {
    var vec__29153 = p__29152;
    var re = cljs.core.nth.call(null, vec__29153, 0, null);
    var action = cljs.core.nth.call(null, vec__29153, 1, null);
    var temp__4092__auto__ = cljs.core.re_find.call(null, re, s);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var vec__29154 = temp__4092__auto__;
      var m = cljs.core.nth.call(null, vec__29154, 0, null);
      var c = cljs.core.nth.call(null, vec__29154, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, cljs.core.count.call(null, m)), action.call(null, c)], null);
    } else {
      return null;
    }
  }, clauses);
};
secretary.core.lex_route = function lex_route(s, clauses) {
  var s__$1 = s;
  var pattern = "";
  var params = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      var vec__29157 = secretary.core.lex_STAR_.call(null, s__$1, clauses);
      var s__$2 = cljs.core.nth.call(null, vec__29157, 0, null);
      var vec__29158 = cljs.core.nth.call(null, vec__29157, 1, null);
      var r = cljs.core.nth.call(null, vec__29158, 0, null);
      var p = cljs.core.nth.call(null, vec__29158, 1, null);
      var G__29159 = s__$2;
      var G__29160 = [cljs.core.str(pattern), cljs.core.str(r)].join("");
      var G__29161 = cljs.core.conj.call(null, params, p);
      s__$1 = G__29159;
      pattern = G__29160;
      params = G__29161;
      continue;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(pattern), cljs.core.str("$")].join("")), cljs.core.remove.call(null, cljs.core.nil_QMARK_, params)], null);
    }
    break;
  }
};
secretary.core.compile_route = function compile_route(route) {
  var clauses = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\*([^\s.:*\/]*)/, function(v) {
    var r = "(.*?)";
    var p = cljs.core.seq.call(null, v) ? cljs.core.keyword.call(null, v) : new cljs.core.Keyword(null, "*", "*", 1013904284);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\:([^\s.:*\/]+)/, function(v) {
    var r = "([^,;/]+)";
    var p = cljs.core.keyword.call(null, v);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^([^:*]+)/, function(v) {
    var r = secretary.core.re_escape.call(null, v);
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
  }], null)], null);
  var vec__29167 = secretary.core.lex_route.call(null, route, clauses);
  var re = cljs.core.nth.call(null, vec__29167, 0, null);
  var params = cljs.core.nth.call(null, vec__29167, 1, null);
  if (typeof secretary.core.t29168 !== "undefined") {
  } else {
    secretary.core.t29168 = function(params, re, vec__29167, clauses, route, compile_route, meta29169) {
      this.params = params;
      this.re = re;
      this.vec__29167 = vec__29167;
      this.clauses = clauses;
      this.route = route;
      this.compile_route = compile_route;
      this.meta29169 = meta29169;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    secretary.core.t29168.cljs$lang$type = true;
    secretary.core.t29168.cljs$lang$ctorStr = "secretary.core/t29168";
    secretary.core.t29168.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "secretary.core/t29168");
    };
    secretary.core.t29168.prototype.secretary$core$IRouteMatches$ = true;
    secretary.core.t29168.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(_, route__$2) {
      var self__ = this;
      var ___$1 = this;
      var temp__4092__auto__ = secretary.core.re_matches_STAR_.call(null, self__.re, secretary.core.decode.call(null, route__$2));
      if (cljs.core.truth_(temp__4092__auto__)) {
        var vec__29171 = temp__4092__auto__;
        var ___$2 = cljs.core.nth.call(null, vec__29171, 0, null);
        var ms = cljs.core.nthnext.call(null, vec__29171, 1);
        return cljs.core.merge_with.call(null, cljs.core.vector, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, self__.params, ms)));
      } else {
        return null;
      }
    };
    secretary.core.t29168.prototype.cljs$core$IMeta$_meta$arity$1 = function(_29170) {
      var self__ = this;
      var _29170__$1 = this;
      return self__.meta29169;
    };
    secretary.core.t29168.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_29170, meta29169__$1) {
      var self__ = this;
      var _29170__$1 = this;
      return new secretary.core.t29168(self__.params, self__.re, self__.vec__29167, self__.clauses, self__.route, self__.compile_route, meta29169__$1);
    };
    secretary.core.__GT_t29168 = function __GT_t29168(params__$1, re__$1, vec__29167__$1, clauses__$1, route__$1, compile_route__$1, meta29169) {
      return new secretary.core.t29168(params__$1, re__$1, vec__29167__$1, clauses__$1, route__$1, compile_route__$1, meta29169);
    };
  }
  return new secretary.core.t29168(params, re, vec__29167, clauses, route, compile_route, null);
};
secretary.core.render_route_STAR_ = function() {
  var render_route_STAR___delegate = function(obj, args) {
    if (function() {
      var G__29173 = obj;
      if (G__29173) {
        var bit__4093__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3443__auto__ = bit__4093__auto__;
          if (cljs.core.truth_(or__3443__auto__)) {
            return or__3443__auto__;
          } else {
            return G__29173.secretary$core$IRenderRoute$;
          }
        }())) {
          return true;
        } else {
          if (!G__29173.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__29173);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__29173);
      }
    }()) {
      return cljs.core.apply.call(null, secretary.core.render_route, obj, args);
    } else {
      return null;
    }
  };
  var render_route_STAR_ = function(obj, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return render_route_STAR___delegate.call(this, obj, args);
  };
  render_route_STAR_.cljs$lang$maxFixedArity = 1;
  render_route_STAR_.cljs$lang$applyTo = function(arglist__29174) {
    var obj = cljs.core.first(arglist__29174);
    var args = cljs.core.rest(arglist__29174);
    return render_route_STAR___delegate(obj, args);
  };
  render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic = render_route_STAR___delegate;
  return render_route_STAR_;
}();
secretary.core._STAR_routes_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
secretary.core.add_route_BANG_ = function add_route_BANG_(obj, action) {
  var obj__$1 = typeof obj === "string" ? secretary.core.compile_route.call(null, obj) : obj;
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj__$1, action], null));
};
secretary.core.remove_route_BANG_ = function remove_route_BANG_(obj) {
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, function(rs) {
    return cljs.core.filterv.call(null, function(p__29177) {
      var vec__29178 = p__29177;
      var x = cljs.core.nth.call(null, vec__29178, 0, null);
      var _ = cljs.core.nth.call(null, vec__29178, 1, null);
      return cljs.core.not_EQ_.call(null, x, obj);
    }, rs);
  });
};
secretary.core.reset_routes_BANG_ = function reset_routes_BANG_() {
  return cljs.core.reset_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.PersistentVector.EMPTY);
};
secretary.core.locate_route = function locate_route(route) {
  return cljs.core.some.call(null, function(p__29181) {
    var vec__29182 = p__29181;
    var compiled_route = cljs.core.nth.call(null, vec__29182, 0, null);
    var action = cljs.core.nth.call(null, vec__29182, 1, null);
    var temp__4092__auto__ = secretary.core.route_matches.call(null, compiled_route, route);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var params = temp__4092__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [action, secretary.core.route_matches.call(null, compiled_route, route)], null);
    } else {
      return null;
    }
  }, cljs.core.deref.call(null, secretary.core._STAR_routes_STAR_));
};
secretary.core.dispatch_BANG_ = function dispatch_BANG_(uri) {
  var vec__29185 = clojure.string.split.call(null, uri, /\?/);
  var uri_path = cljs.core.nth.call(null, vec__29185, 0, null);
  var query_string = cljs.core.nth.call(null, vec__29185, 1, null);
  var query_params = cljs.core.truth_(query_string) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "query-params", "query-params", 1080249757), secretary.core.decode_query_params.call(null, query_string)], null) : null;
  var vec__29186 = secretary.core.locate_route.call(null, uri_path);
  var action = cljs.core.nth.call(null, vec__29186, 0, null);
  var params = cljs.core.nth.call(null, vec__29186, 1, null);
  var action__$1 = function() {
    var or__3443__auto__ = action;
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var params__$1 = cljs.core.merge.call(null, params, query_params);
  return action__$1.call(null, params__$1);
};
RegExp.prototype.secretary$core$IRouteMatches$ = true;
RegExp.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(this$, route) {
  var this$__$1 = this;
  var temp__4092__auto__ = secretary.core.re_matches_STAR_.call(null, this$__$1, route);
  if (cljs.core.truth_(temp__4092__auto__)) {
    var vec__29187 = temp__4092__auto__;
    var _ = cljs.core.nth.call(null, vec__29187, 0, null);
    var ms = cljs.core.nthnext.call(null, vec__29187, 1);
    return cljs.core.vec.call(null, ms);
  } else {
    return null;
  }
};
secretary.core.IRouteMatches["string"] = true;
secretary.core.route_matches["string"] = function(this$, route) {
  return secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, this$), secretary.core.decode.call(null, route));
};
secretary.core.IRenderRoute["string"] = true;
secretary.core.render_route["string"] = function(this$) {
  return secretary.core.render_route.call(null, this$, cljs.core.PersistentArrayMap.EMPTY);
};
secretary.core.render_route["string"] = function(this$, params) {
  var map__29188 = params;
  var map__29188__$1 = cljs.core.seq_QMARK_.call(null, map__29188) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29188) : map__29188;
  var m = map__29188__$1;
  var query_params = cljs.core.get.call(null, map__29188__$1, new cljs.core.Keyword(null, "query-params", "query-params", 1080249757));
  var a = cljs.core.atom.call(null, m);
  var path = this$.replace(new RegExp(":[^\\s.:*/]+|\\*[^\\s.:*/]*", "g"), function(map__29188, map__29188__$1, m, query_params, a) {
    return function($1) {
      var lookup = cljs.core.keyword.call(null, cljs.core.subs.call(null, $1, 1));
      var v = cljs.core.deref.call(null, a).call(null, lookup);
      if (cljs.core.sequential_QMARK_.call(null, v)) {
        cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, lookup, cljs.core.next.call(null, v));
        return cljs.core.first.call(null, v);
      } else {
        var or__3443__auto__ = v;
        if (cljs.core.truth_(or__3443__auto__)) {
          return or__3443__auto__;
        } else {
          return $1;
        }
      }
    };
  }(map__29188, map__29188__$1, m, query_params, a));
  var path__$1 = [cljs.core.str(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", 4328760836)], null))), cljs.core.str(path)].join("");
  var temp__4090__auto__ = function() {
    var and__3431__auto__ = query_params;
    if (cljs.core.truth_(and__3431__auto__)) {
      return secretary.core.encode_query_params.call(null, query_params);
    } else {
      return and__3431__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4090__auto__)) {
    var query_string = temp__4090__auto__;
    return[cljs.core.str(path__$1), cljs.core.str("?"), cljs.core.str(query_string)].join("");
  } else {
    return path__$1;
  }
};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = [];
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = (type);
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var key = (goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || (this.handler_ || this)));
    this.keys_.push(key);
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler);
    }
  } else {
    var key = (goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || (this.handler_ || this)));
    this.keys_.push(key);
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || (this.handler_ || this));
    if (listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key);
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || (this.handler_ || this), this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0;
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.history.EventType");
goog.history.EventType = {NAVIGATE:"navigate"};
goog.provide("goog.history.Event");
goog.require("goog.events.Event");
goog.require("goog.history.EventType");
goog.history.Event = function(token, isNavigation) {
  goog.events.Event.call(this, goog.history.EventType.NAVIGATE);
  this.token = token;
  this.isNavigation = isNavigation;
};
goog.inherits(goog.history.Event, goog.events.Event);
goog.provide("goog.History");
goog.provide("goog.History.Event");
goog.provide("goog.History.EventType");
goog.require("goog.Timer");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.history.Event");
goog.require("goog.history.EventType");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.History = function(opt_invisible, opt_blankPageUrl, opt_input, opt_iframe) {
  goog.events.EventTarget.call(this);
  if (opt_invisible && !opt_blankPageUrl) {
    throw Error("Can't use invisible history without providing a blank page.");
  }
  var input;
  if (opt_input) {
    input = opt_input;
  } else {
    var inputId = "history_state" + goog.History.historyCount_;
    document.write(goog.string.subs(goog.History.INPUT_TEMPLATE_, inputId, inputId));
    input = goog.dom.getElement(inputId);
  }
  this.hiddenInput_ = (input);
  this.window_ = opt_input ? goog.dom.getWindow(goog.dom.getOwnerDocument(opt_input)) : window;
  this.baseUrl_ = this.window_.location.href.split("#")[0];
  this.iframeSrc_ = opt_blankPageUrl;
  if (goog.userAgent.IE && !opt_blankPageUrl) {
    this.iframeSrc_ = window.location.protocol == "https" ? "https:///" : 'javascript:""';
  }
  this.timer_ = new goog.Timer(goog.History.PollingType.NORMAL);
  this.registerDisposable(this.timer_);
  this.userVisible_ = !opt_invisible;
  this.eventHandler_ = new goog.events.EventHandler(this);
  if (opt_invisible || goog.History.LEGACY_IE) {
    var iframe;
    if (opt_iframe) {
      iframe = opt_iframe;
    } else {
      var iframeId = "history_iframe" + goog.History.historyCount_;
      var srcAttribute = this.iframeSrc_ ? 'src\x3d"' + goog.string.htmlEscape(this.iframeSrc_) + '"' : "";
      document.write(goog.string.subs(goog.History.IFRAME_TEMPLATE_, iframeId, srcAttribute));
      iframe = goog.dom.getElement(iframeId);
    }
    this.iframe_ = (iframe);
    this.unsetIframe_ = true;
  }
  if (goog.History.LEGACY_IE) {
    this.eventHandler_.listen(this.window_, goog.events.EventType.LOAD, this.onDocumentLoaded);
    this.documentLoaded = false;
    this.shouldEnable_ = false;
  }
  if (this.userVisible_) {
    this.setHash_(this.getToken(), true);
  } else {
    this.setIframeToken_(this.hiddenInput_.value);
  }
  goog.History.historyCount_++;
};
goog.inherits(goog.History, goog.events.EventTarget);
goog.History.prototype.enabled_ = false;
goog.History.prototype.longerPolling_ = false;
goog.History.prototype.lastToken_ = null;
goog.History.HAS_ONHASHCHANGE = goog.userAgent.IE && goog.userAgent.isDocumentMode(8) || (goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.2") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("532.1"));
goog.History.LEGACY_IE = goog.userAgent.IE && !goog.userAgent.isDocumentMode(8);
goog.History.HASH_ALWAYS_REQUIRED = goog.History.LEGACY_IE;
goog.History.prototype.lockedToken_ = null;
goog.History.prototype.disposeInternal = function() {
  goog.History.superClass_.disposeInternal.call(this);
  this.eventHandler_.dispose();
  this.setEnabled(false);
};
goog.History.prototype.setEnabled = function(enable) {
  if (enable == this.enabled_) {
    return;
  }
  if (goog.History.LEGACY_IE && !this.documentLoaded) {
    this.shouldEnable_ = enable;
    return;
  }
  if (enable) {
    if (goog.userAgent.OPERA) {
      this.eventHandler_.listen(this.window_.document, goog.History.INPUT_EVENTS_, this.operaDefibrillator_);
    } else {
      if (goog.userAgent.GECKO) {
        this.eventHandler_.listen(this.window_, "pageshow", this.onShow_);
      }
    }
    if (goog.History.HAS_ONHASHCHANGE && this.userVisible_) {
      this.eventHandler_.listen(this.window_, goog.events.EventType.HASHCHANGE, this.onHashChange_);
      this.enabled_ = true;
      this.dispatchEvent(new goog.history.Event(this.getToken(), false));
    } else {
      if (!goog.userAgent.IE || this.documentLoaded) {
        this.eventHandler_.listen(this.timer_, goog.Timer.TICK, goog.bind(this.check_, this, true));
        this.enabled_ = true;
        if (!goog.History.LEGACY_IE) {
          this.lastToken_ = this.getToken();
          this.dispatchEvent(new goog.history.Event(this.getToken(), false));
        }
        this.timer_.start();
      }
    }
  } else {
    this.enabled_ = false;
    this.eventHandler_.removeAll();
    this.timer_.stop();
  }
};
goog.History.prototype.onDocumentLoaded = function() {
  this.documentLoaded = true;
  if (this.hiddenInput_.value) {
    this.setIframeToken_(this.hiddenInput_.value, true);
  }
  this.setEnabled(this.shouldEnable_);
};
goog.History.prototype.onShow_ = function(e) {
  if (e.getBrowserEvent()["persisted"]) {
    this.setEnabled(false);
    this.setEnabled(true);
  }
};
goog.History.prototype.onHashChange_ = function(e) {
  var hash = this.getLocationFragment_(this.window_);
  if (hash != this.lastToken_) {
    this.update_(hash, true);
  }
};
goog.History.prototype.getToken = function() {
  if (this.lockedToken_ != null) {
    return this.lockedToken_;
  } else {
    if (this.userVisible_) {
      return this.getLocationFragment_(this.window_);
    } else {
      return this.getIframeToken_() || "";
    }
  }
};
goog.History.prototype.setToken = function(token, opt_title) {
  this.setHistoryState_(token, false, opt_title);
};
goog.History.prototype.replaceToken = function(token, opt_title) {
  this.setHistoryState_(token, true, opt_title);
};
goog.History.prototype.getLocationFragment_ = function(win) {
  var href = win.location.href;
  var index = href.indexOf("#");
  return index < 0 ? "" : href.substring(index + 1);
};
goog.History.prototype.setHistoryState_ = function(token, replace, opt_title) {
  if (this.getToken() != token) {
    if (this.userVisible_) {
      this.setHash_(token, replace);
      if (!goog.History.HAS_ONHASHCHANGE) {
        if (goog.userAgent.IE) {
          this.setIframeToken_(token, replace, opt_title);
        }
      }
      if (this.enabled_) {
        this.check_(false);
      }
    } else {
      this.setIframeToken_(token, replace);
      this.lockedToken_ = this.lastToken_ = this.hiddenInput_.value = token;
      this.dispatchEvent(new goog.history.Event(token, false));
    }
  }
};
goog.History.prototype.setHash_ = function(token, opt_replace) {
  var loc = this.window_.location;
  var url = this.baseUrl_;
  var hasHash = goog.string.contains(loc.href, "#");
  if (goog.History.HASH_ALWAYS_REQUIRED || (hasHash || token)) {
    url += "#" + token;
  }
  if (url != loc.href) {
    if (opt_replace) {
      loc.replace(url);
    } else {
      loc.href = url;
    }
  }
};
goog.History.prototype.setIframeToken_ = function(token, opt_replace, opt_title) {
  if (this.unsetIframe_ || token != this.getIframeToken_()) {
    this.unsetIframe_ = false;
    token = goog.string.urlEncode(token);
    if (goog.userAgent.IE) {
      var doc = goog.dom.getFrameContentDocument(this.iframe_);
      doc.open("text/html", opt_replace ? "replace" : undefined);
      doc.write(goog.string.subs(goog.History.IFRAME_SOURCE_TEMPLATE_, goog.string.htmlEscape((opt_title || this.window_.document.title)), token));
      doc.close();
    } else {
      var url = this.iframeSrc_ + "#" + token;
      var contentWindow = this.iframe_.contentWindow;
      if (contentWindow) {
        if (opt_replace) {
          contentWindow.location.replace(url);
        } else {
          contentWindow.location.href = url;
        }
      }
    }
  }
};
goog.History.prototype.getIframeToken_ = function() {
  if (goog.userAgent.IE) {
    var doc = goog.dom.getFrameContentDocument(this.iframe_);
    return doc.body ? goog.string.urlDecode(doc.body.innerHTML) : null;
  } else {
    var contentWindow = this.iframe_.contentWindow;
    if (contentWindow) {
      var hash;
      try {
        hash = goog.string.urlDecode(this.getLocationFragment_(contentWindow));
      } catch (e) {
        if (!this.longerPolling_) {
          this.setLongerPolling_(true);
        }
        return null;
      }
      if (this.longerPolling_) {
        this.setLongerPolling_(false);
      }
      return hash || null;
    } else {
      return null;
    }
  }
};
goog.History.prototype.check_ = function(isNavigation) {
  if (this.userVisible_) {
    var hash = this.getLocationFragment_(this.window_);
    if (hash != this.lastToken_) {
      this.update_(hash, isNavigation);
    }
  }
  if (!this.userVisible_ || goog.History.LEGACY_IE) {
    var token = this.getIframeToken_() || "";
    if (this.lockedToken_ == null || token == this.lockedToken_) {
      this.lockedToken_ = null;
      if (token != this.lastToken_) {
        this.update_(token, isNavigation);
      }
    }
  }
};
goog.History.prototype.update_ = function(token, isNavigation) {
  this.lastToken_ = this.hiddenInput_.value = token;
  if (this.userVisible_) {
    if (goog.History.LEGACY_IE) {
      this.setIframeToken_(token);
    }
    this.setHash_(token);
  } else {
    this.setIframeToken_(token);
  }
  this.dispatchEvent(new goog.history.Event(this.getToken(), isNavigation));
};
goog.History.prototype.setLongerPolling_ = function(longerPolling) {
  if (this.longerPolling_ != longerPolling) {
    this.timer_.setInterval(longerPolling ? goog.History.PollingType.LONG : goog.History.PollingType.NORMAL);
  }
  this.longerPolling_ = longerPolling;
};
goog.History.prototype.operaDefibrillator_ = function() {
  this.timer_.stop();
  this.timer_.start();
};
goog.History.INPUT_EVENTS_ = [goog.events.EventType.MOUSEDOWN, goog.events.EventType.KEYDOWN, goog.events.EventType.MOUSEMOVE];
goog.History.IFRAME_SOURCE_TEMPLATE_ = "\x3ctitle\x3e%s\x3c/title\x3e\x3cbody\x3e%s\x3c/body\x3e";
goog.History.IFRAME_TEMPLATE_ = '\x3ciframe id\x3d"%s" style\x3d"display:none" %s\x3e\x3c/iframe\x3e';
goog.History.INPUT_TEMPLATE_ = '\x3cinput type\x3d"text" name\x3d"%s" id\x3d"%s" style\x3d"display:none"\x3e';
goog.History.historyCount_ = 0;
goog.History.PollingType = {NORMAL:150, LONG:1E4};
goog.History.EventType = goog.history.EventType;
goog.History.Event = goog.history.Event;
goog.provide("omchaya.routes");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("goog.History");
goog.require("omchaya.utils");
goog.require("omchaya.utils");
goog.require("secretary.core");
goog.require("secretary.core");
goog.require("goog.events");
goog.require("goog.events");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
secretary.core.set_config_BANG_.call(null, new cljs.core.Keyword(null, "prefix", "prefix", 4328760836), "#");
omchaya.routes.listen_once_for_app_BANG_ = function listen_once_for_app_BANG_(app, pred, on_loaded) {
  var listener_id = cljs.core.keyword.call(null, omchaya.utils.uuid.call(null));
  var sentinel = function(listener_id) {
    return function(_, ___$1, ___$2, new_state) {
      if (cljs.core.truth_(pred.call(null, new_state))) {
        cljs.core.remove_watch.call(null, app, listener_id);
        return on_loaded.call(null, new_state);
      } else {
        return null;
      }
    };
  }(listener_id);
  if (cljs.core.truth_(pred.call(null, cljs.core.deref.call(null, app)))) {
    return on_loaded.call(null, cljs.core.deref.call(null, app));
  } else {
    return cljs.core.add_watch.call(null, app, listener_id, sentinel);
  }
};
omchaya.routes.open_to_channel_BANG_ = function open_to_channel_BANG_(app, controls_ch, channel_id) {
  return omchaya.routes.listen_once_for_app_BANG_.call(null, app, function(p1__23803_SHARP_) {
    return cljs.core.get_in.call(null, p1__23803_SHARP_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), channel_id], null));
  }, function() {
    return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tab-selected", "tab-selected", 4274020677), channel_id], null));
  });
};
omchaya.routes.define_routes_BANG_ = function define_routes_BANG_(app, history_el) {
  var controls_ch_23811 = cljs.core.get_in.call(null, cljs.core.deref.call(null, app), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
  var api_ch_23812 = cljs.core.get_in.call(null, cljs.core.deref.call(null, app), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "api", "api", 1014001036)], null));
  var action__10943__auto___23813 = function(params__10944__auto__) {
    if (cljs.core.map_QMARK_.call(null, params__10944__auto__)) {
      var map__23808 = params__10944__auto__;
      var map__23808__$1 = cljs.core.seq_QMARK_.call(null, map__23808) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23808) : map__23808;
      var channel_id = cljs.core.get.call(null, map__23808__$1, new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615));
      return omchaya.routes.open_to_channel_BANG_.call(null, app, controls_ch_23811, omchaya.utils.safe_sel.call(null, channel_id));
    } else {
      if (cljs.core.vector_QMARK_.call(null, params__10944__auto__)) {
        var vec__23809 = params__10944__auto__;
        var channel_id = cljs.core.nth.call(null, vec__23809, 0, null);
        return omchaya.routes.open_to_channel_BANG_.call(null, app, controls_ch_23811, omchaya.utils.safe_sel.call(null, channel_id));
      } else {
        return null;
      }
    }
  };
  secretary.core.add_route_BANG_.call(null, "/v1/channels/:channel-id", action__10943__auto___23813);
  omchaya.routes.v1_channel_link = function() {
    var v1_channel_link__delegate = function(args__10942__auto__) {
      return cljs.core.apply.call(null, secretary.core.render_route_STAR_, "/v1/channels/:channel-id", args__10942__auto__);
    };
    var v1_channel_link = function(var_args) {
      var args__10942__auto__ = null;
      if (arguments.length > 0) {
        args__10942__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return v1_channel_link__delegate.call(this, args__10942__auto__);
    };
    v1_channel_link.cljs$lang$maxFixedArity = 0;
    v1_channel_link.cljs$lang$applyTo = function(arglist__23814) {
      var args__10942__auto__ = cljs.core.seq(arglist__23814);
      return v1_channel_link__delegate(args__10942__auto__);
    };
    v1_channel_link.cljs$core$IFn$_invoke$arity$variadic = v1_channel_link__delegate;
    return v1_channel_link;
  }();
  var history_el__$1 = new goog.History(false, null, history_el);
  goog.events.listen(history_el__$1, "navigate", function(p1__23804_SHARP_) {
    return secretary.core.dispatch_BANG_.call(null, p1__23804_SHARP_.token);
  });
  var G__23810 = history_el__$1;
  G__23810.setEnabled(true);
  return G__23810;
};
goog.provide("omchaya.components.navbar");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("omchaya.routes");
goog.require("omchaya.utils");
goog.require("sablono.core");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("om.core");
goog.require("om.core");
goog.require("omchaya.utils");
goog.require("omchaya.routes");
goog.require("cljs.core.async");
omchaya.components.navbar.tab = function tab(comm, channel) {
  var id = (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(channel);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li.protected", "li.protected", 1310377967), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "key", "key", 1014010321), (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(channel), new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), function() {
    return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tab-selected", "tab-selected", 4274020677), id], null));
  }, new cljs.core.Keyword(null, "class", "class", 1108647146), [cljs.core.str(omchaya.utils.safe_sel.call(null, (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(channel))), cljs.core.str(cljs.core.truth_((new cljs.core.Keyword(null, "selected", "selected", 2205476365)).cljs$core$IFn$_invoke$arity$1(channel)) ? " active" : null)].join("")], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a.show_channel", 
  "a.show_channel", 788280736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), cljs.core.comp.call(null, cljs.core.constantly.call(null, false), function() {
    return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tab-selected", "tab-selected", 4274020677), id], null));
  })], null), (new cljs.core.Keyword(null, "title", "title", 1124275658)).cljs$core$IFn$_invoke$arity$1(channel), cljs.core.truth_((new cljs.core.Keyword(null, "loading", "loading", 1350554798)).cljs$core$IFn$_invoke$arity$1(channel)) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-spinner.icon-spin", "i.icon-spinner.icon-spin", 2369388996)], null) : null], null)], null);
};
omchaya.components.navbar.navbar = function navbar(data, owner, opts) {
  if (typeof omchaya.components.navbar.t22625 !== "undefined") {
  } else {
    omchaya.components.navbar.t22625 = function(opts, owner, data, navbar, meta22626) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.navbar = navbar;
      this.meta22626 = meta22626;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    omchaya.components.navbar.t22625.cljs$lang$type = true;
    omchaya.components.navbar.t22625.cljs$lang$ctorStr = "omchaya.components.navbar/t22625";
    omchaya.components.navbar.t22625.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "omchaya.components.navbar/t22625");
    };
    omchaya.components.navbar.t22625.prototype.om$core$IRender$ = true;
    omchaya.components.navbar.t22625.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return sablono.interpreter.interpret.call(null, function() {
        var comm = cljs.core.get_in.call(null, self__.opts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
        var settings = (new cljs.core.Keyword(null, "settings", "settings", 2448535445)).cljs$core$IFn$_invoke$arity$1(self__.data);
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "nav.nav", "nav.nav", 2742543690), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), cljs.core.truth_(cljs.core.get_in.call(null, settings, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "search", "search", 
        4402534682), new cljs.core.Keyword(null, "focused", "focused", 4617830121)], null))) ? "search-focus" : null], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "form.search", "form.search", 4430810500), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "action", "action", 3885920680), "/search", new cljs.core.Keyword(null, "method", "method", 4231316563), "get", new cljs.core.Keyword(null, "on-submit", 
        "on-submit", 1076954936), cljs.core.constantly.call(null, false)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input.query", "input.query", 3940929814), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "name", "name", 1017277949), "query", new cljs.core.Keyword(null, "type", "type", 1017479852), "text", new cljs.core.Keyword(null, "on-focus", "on-focus", 1419396828), function() {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "search-form-focused", "search-form-focused", 1124244197)], null));
        }, new cljs.core.Keyword(null, "on-blur", "on-blur", 3936357127), function() {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "search-form-blurred", "search-form-blurred", 1799842360)], null));
        }, new cljs.core.Keyword(null, "on-key-up", "on-key-up", 833769449), function(p1__22621_SHARP_) {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "search-form-updated", "search-form-updated", 1580855337), p1__22621_SHARP_.target.value], null));
        }], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input.submit", "input.submit", 1614547502), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 1125876963), "Search", new cljs.core.Keyword(null, "type", "type", 1017479852), "submit"], null)], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul#channel_nav", 
        "ul#channel_nav", 867733357), cljs.core.map.call(null, cljs.core.partial.call(null, omchaya.components.navbar.tab, comm), cljs.core.sort_by.call(null, new cljs.core.Keyword(null, "order", "order", 1119910592), cljs.core.vals.call(null, (new cljs.core.Keyword(null, "channels", "channels", 2446530370)).cljs$core$IFn$_invoke$arity$1(self__.data)))), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), new cljs.core.PersistentArrayMap(null, 
        2, [new cljs.core.Keyword(null, "key", "key", 1014010321), "new-tab", new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), function() {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "create-channel-menu-opened", "create-channel-menu-opened", 2552968174)], null));
        }], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a#create_channel", "a#create_channel", 3916534932), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", 1017115293), "#", new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), cljs.core.comp.call(null, cljs.core.constantly.call(null, false), function() {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "create-channel-menu-opened", "create-channel-menu-opened", 2552968174)], null));
        })], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 4416891401), " + "], null)], null)], null)], null)], null);
      }());
    };
    omchaya.components.navbar.t22625.prototype.om$core$IDisplayName$ = true;
    omchaya.components.navbar.t22625.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var or__3443__auto__ = (new cljs.core.Keyword(null, "react-name", "react-name", 4800236939)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return "Navbar";
      }
    };
    omchaya.components.navbar.t22625.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22627) {
      var self__ = this;
      var _22627__$1 = this;
      return self__.meta22626;
    };
    omchaya.components.navbar.t22625.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22627, meta22626__$1) {
      var self__ = this;
      var _22627__$1 = this;
      return new omchaya.components.navbar.t22625(self__.opts, self__.owner, self__.data, self__.navbar, meta22626__$1);
    };
    omchaya.components.navbar.__GT_t22625 = function __GT_t22625(opts__$1, owner__$1, data__$1, navbar__$1, meta22626) {
      return new omchaya.components.navbar.t22625(opts__$1, owner__$1, data__$1, navbar__$1, meta22626);
    };
  }
  return new omchaya.components.navbar.t22625(opts, owner, data, navbar, null);
};
goog.provide("omchaya.components.draggable_window");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("omchaya.utils");
goog.require("sablono.core");
goog.require("cljs.core.async");
goog.require("goog.events");
goog.require("sablono.core");
goog.require("om.core");
goog.require("clojure.string");
goog.require("om.core");
goog.require("clojure.string");
goog.require("omchaya.utils");
goog.require("goog.events.EventType");
goog.require("cljs.core.async");
goog.require("goog.events");
omchaya.components.draggable_window.local_dragging_QMARK_ = cljs.core.atom.call(null, false);
omchaya.components.draggable_window.listen = function listen(el, type) {
  var out = cljs.core.async.chan.call(null);
  goog.events.listen(el, type, function(event) {
    if (cljs.core.truth_(cljs.core.deref.call(null, omchaya.components.draggable_window.local_dragging_QMARK_))) {
      event.preventDefault();
    } else {
    }
    return cljs.core.async.put_BANG_.call(null, out, event);
  });
  return out;
};
omchaya.components.draggable_window.draggable_window = function draggable_window(data, owner, opts) {
  if (typeof omchaya.components.draggable_window.t22121 !== "undefined") {
  } else {
    omchaya.components.draggable_window.t22121 = function(opts, owner, data, draggable_window, meta22122) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.draggable_window = draggable_window;
      this.meta22122 = meta22122;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    omchaya.components.draggable_window.t22121.cljs$lang$type = true;
    omchaya.components.draggable_window.t22121.cljs$lang$ctorStr = "omchaya.components.draggable-window/t22121";
    omchaya.components.draggable_window.t22121.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "omchaya.components.draggable-window/t22121");
    };
    omchaya.components.draggable_window.t22121.prototype.om$core$IRender$ = true;
    omchaya.components.draggable_window.t22121.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return sablono.interpreter.interpret.call(null, function() {
        var map__22124 = self__.data;
        var map__22124__$1 = cljs.core.seq_QMARK_.call(null, map__22124) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22124) : map__22124;
        var window = cljs.core.get.call(null, map__22124__$1, new cljs.core.Keyword(null, "window", "window", 4521119586));
        var name = cljs.core.get.call(null, map__22124__$1, new cljs.core.Keyword(null, "name", "name", 1017277949));
        var comm = cljs.core.get.call(null, map__22124__$1, new cljs.core.Keyword(null, "comm", "comm", 1016963710));
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.draggable-window", "div.draggable-window", 2251704159), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", 1123684643), function() {
          var temp__4092__auto__ = (new cljs.core.Keyword(null, "position", "position", 1761709211)).cljs$core$IFn$_invoke$arity$1(window);
          if (cljs.core.truth_(temp__4092__auto__)) {
            var pos = temp__4092__auto__;
            return{"left":cljs.core.first.call(null, pos), "top":cljs.core.last.call(null, pos), "position":"fixed"};
          } else {
            return null;
          }
        }()], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.row.modal-header", "div.row.modal-header", 3055554672), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.col-lg-12", "div.col-lg-12", 4751944571), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", 1123684643), cljs.core.clj__GT_js.call(null, 
        cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "background-color", "background-color", 1619226998), cljs.core.truth_((new cljs.core.Keyword(null, "dragging?", "dragging?", 709673026)).cljs$core$IFn$_invoke$arity$1(window)) ? "#050" : "#500", new cljs.core.Keyword(null, "color", "color", 1108746965), "white", new cljs.core.Keyword(null, "text-align", "text-align", 1760136663), "center"], null))), new cljs.core.Keyword(null, "onMouseDown", 
        "onMouseDown", 1569008442), function(p1__22030_SHARP_) {
          cljs.core.reset_BANG_.call(null, omchaya.components.draggable_window.local_dragging_QMARK_, true);
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "draggable", "draggable", 709423359), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "grabbed", "grabbed", 1293824551), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1017277949), name, new cljs.core.Keyword(null, "position", 
          "position", 1761709211), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__22030_SHARP_.clientX, p1__22030_SHARP_.clientY], null)], null)], null)], null));
        }], null)), (new cljs.core.Keyword(null, "title", "title", 1124275658)).cljs$core$IFn$_invoke$arity$1(self__.data)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.row", "div.row", 2686478959), om.core.build.call(null, (new cljs.core.Keyword(null, "content-com", "content-com", 623589791)).cljs$core$IFn$_invoke$arity$1(self__.data), (new cljs.core.Keyword(null, "content-data", "content-data", 1799074800)).cljs$core$IFn$_invoke$arity$1(self__.data), 
        (new cljs.core.Keyword(null, "content-opts", "content-opts", 1799416934)).cljs$core$IFn$_invoke$arity$1(self__.data))], null)], null);
      }());
    };
    omchaya.components.draggable_window.t22121.prototype.om$core$IWillMount$ = true;
    omchaya.components.draggable_window.t22121.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var mouse_move_chan = cljs.core.async.map.call(null, function(e) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e.clientX, e.clientY], null);
      }, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [omchaya.components.draggable_window.listen.call(null, window, "mousemove")], null));
      var mouse_up_chan = cljs.core.async.map.call(null, function(mouse_move_chan) {
        return function(e) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e.clientX, e.clientY], null);
        };
      }(mouse_move_chan), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [omchaya.components.draggable_window.listen.call(null, window, "mouseup")], null));
      var comm = (new cljs.core.Keyword(null, "comm", "comm", 1016963710)).cljs$core$IFn$_invoke$arity$1(self__.data);
      var name = (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(self__.data);
      var c__6068__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function() {
        var f__6069__auto__ = function() {
          var switch__5998__auto__ = function(state_22181) {
            var state_val_22182 = state_22181[1];
            if (state_val_22182 === 1) {
              var state_22181__$1 = state_22181;
              var statearr_22183_22211 = state_22181__$1;
              statearr_22183_22211[2] = null;
              statearr_22183_22211[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_22182 === 2) {
                var state_22181__$1 = state_22181;
                if (true) {
                  var statearr_22184_22212 = state_22181__$1;
                  statearr_22184_22212[1] = 4;
                } else {
                  var statearr_22185_22213 = state_22181__$1;
                  statearr_22185_22213[1] = 5;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_22182 === 3) {
                  var inst_22179 = state_22181[2];
                  var state_22181__$1 = state_22181;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22181__$1, inst_22179);
                } else {
                  if (state_val_22182 === 4) {
                    var inst_22132 = [mouse_move_chan, mouse_up_chan];
                    var inst_22133 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_22132, null);
                    var state_22181__$1 = state_22181;
                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_22181__$1, 7, inst_22133);
                  } else {
                    if (state_val_22182 === 5) {
                      var state_22181__$1 = state_22181;
                      var statearr_22186_22214 = state_22181__$1;
                      statearr_22186_22214[2] = null;
                      statearr_22186_22214[1] = 6;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_22182 === 6) {
                        var inst_22177 = state_22181[2];
                        var state_22181__$1 = state_22181;
                        var statearr_22187_22215 = state_22181__$1;
                        statearr_22187_22215[2] = inst_22177;
                        statearr_22187_22215[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_22182 === 7) {
                          var inst_22137 = state_22181[7];
                          var inst_22135 = state_22181[8];
                          var inst_22135__$1 = state_22181[2];
                          var inst_22136 = cljs.core.nth.call(null, inst_22135__$1, 0, null);
                          var inst_22137__$1 = cljs.core.nth.call(null, inst_22135__$1, 1, null);
                          var inst_22138 = cljs.core._EQ_.call(null, inst_22137__$1, mouse_move_chan);
                          var state_22181__$1 = function() {
                            var statearr_22188 = state_22181;
                            statearr_22188[7] = inst_22137__$1;
                            statearr_22188[9] = inst_22136;
                            statearr_22188[8] = inst_22135__$1;
                            return statearr_22188;
                          }();
                          if (inst_22138) {
                            var statearr_22189_22216 = state_22181__$1;
                            statearr_22189_22216[1] = 8;
                          } else {
                            var statearr_22190_22217 = state_22181__$1;
                            statearr_22190_22217[1] = 9;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_22182 === 8) {
                            var inst_22135 = state_22181[8];
                            var inst_22141 = cljs.core.nth.call(null, inst_22135, 0, null);
                            var inst_22142 = [new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Keyword(null, "position", "position", 1761709211)];
                            var inst_22143 = [name, inst_22141];
                            var inst_22144 = cljs.core.PersistentHashMap.fromArrays.call(null, inst_22142, inst_22143);
                            var inst_22145 = [new cljs.core.Keyword(null, "mouse-moved", "mouse-moved", 753447677), inst_22144];
                            var inst_22146 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_22145, null);
                            var inst_22147 = [new cljs.core.Keyword(null, "draggable", "draggable", 709423359), inst_22146];
                            var inst_22148 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_22147, null);
                            var inst_22149 = cljs.core.async.put_BANG_.call(null, comm, inst_22148);
                            var state_22181__$1 = state_22181;
                            var statearr_22191_22218 = state_22181__$1;
                            statearr_22191_22218[2] = inst_22149;
                            statearr_22191_22218[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_22182 === 9) {
                              var inst_22137 = state_22181[7];
                              var inst_22151 = cljs.core._EQ_.call(null, inst_22137, mouse_up_chan);
                              var state_22181__$1 = state_22181;
                              if (inst_22151) {
                                var statearr_22192_22219 = state_22181__$1;
                                statearr_22192_22219[1] = 11;
                              } else {
                                var statearr_22193_22220 = state_22181__$1;
                                statearr_22193_22220[1] = 12;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_22182 === 10) {
                                var inst_22173 = state_22181[2];
                                var state_22181__$1 = function() {
                                  var statearr_22194 = state_22181;
                                  statearr_22194[10] = inst_22173;
                                  return statearr_22194;
                                }();
                                var statearr_22195_22221 = state_22181__$1;
                                statearr_22195_22221[2] = null;
                                statearr_22195_22221[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_22182 === 11) {
                                  var inst_22135 = state_22181[8];
                                  var inst_22154 = cljs.core.nth.call(null, inst_22135, 0, null);
                                  var inst_22155 = [new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Keyword(null, "position", "position", 1761709211)];
                                  var inst_22156 = [name, inst_22154];
                                  var inst_22157 = cljs.core.PersistentHashMap.fromArrays.call(null, inst_22155, inst_22156);
                                  var inst_22158 = [new cljs.core.Keyword(null, "released", "released", 4757572783), inst_22157];
                                  var inst_22159 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_22158, null);
                                  var inst_22160 = [new cljs.core.Keyword(null, "draggable", "draggable", 709423359), inst_22159];
                                  var inst_22161 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_22160, null);
                                  var inst_22162 = cljs.core.async.put_BANG_.call(null, comm, inst_22161);
                                  var inst_22163 = cljs.core.reset_BANG_.call(null, omchaya.components.draggable_window.local_dragging_QMARK_, false);
                                  var state_22181__$1 = function() {
                                    var statearr_22196 = state_22181;
                                    statearr_22196[11] = inst_22162;
                                    return statearr_22196;
                                  }();
                                  var statearr_22197_22222 = state_22181__$1;
                                  statearr_22197_22222[2] = inst_22163;
                                  statearr_22197_22222[1] = 13;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_22182 === 12) {
                                    var inst_22137 = state_22181[7];
                                    var inst_22165 = cljs.core._EQ_.call(null, inst_22137, new cljs.core.Keyword(null, "default", "default", 2558708147));
                                    var state_22181__$1 = state_22181;
                                    if (inst_22165) {
                                      var statearr_22198_22223 = state_22181__$1;
                                      statearr_22198_22223[1] = 14;
                                    } else {
                                      var statearr_22199_22224 = state_22181__$1;
                                      statearr_22199_22224[1] = 15;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_22182 === 13) {
                                      var inst_22171 = state_22181[2];
                                      var state_22181__$1 = state_22181;
                                      var statearr_22200_22225 = state_22181__$1;
                                      statearr_22200_22225[2] = inst_22171;
                                      statearr_22200_22225[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_22182 === 14) {
                                        var inst_22136 = state_22181[9];
                                        var state_22181__$1 = state_22181;
                                        var statearr_22201_22226 = state_22181__$1;
                                        statearr_22201_22226[2] = inst_22136;
                                        statearr_22201_22226[1] = 16;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_22182 === 15) {
                                          var state_22181__$1 = state_22181;
                                          var statearr_22202_22227 = state_22181__$1;
                                          statearr_22202_22227[2] = null;
                                          statearr_22202_22227[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_22182 === 16) {
                                            var inst_22169 = state_22181[2];
                                            var state_22181__$1 = state_22181;
                                            var statearr_22203_22228 = state_22181__$1;
                                            statearr_22203_22228[2] = inst_22169;
                                            statearr_22203_22228[1] = 13;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
          return function(switch__5998__auto__) {
            return function() {
              var state_machine__5999__auto__ = null;
              var state_machine__5999__auto____0 = function() {
                var statearr_22207 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_22207[0] = state_machine__5999__auto__;
                statearr_22207[1] = 1;
                return statearr_22207;
              };
              var state_machine__5999__auto____1 = function(state_22181) {
                while (true) {
                  var ret_value__6000__auto__ = function() {
                    try {
                      while (true) {
                        var result__6001__auto__ = switch__5998__auto__.call(null, state_22181);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6001__auto__;
                        }
                        break;
                      }
                    } catch (e22208) {
                      if (e22208 instanceof Object) {
                        var ex__6002__auto__ = e22208;
                        var statearr_22209_22229 = state_22181;
                        statearr_22209_22229[5] = ex__6002__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22181);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e22208;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__22230 = state_22181;
                    state_22181 = G__22230;
                    continue;
                  } else {
                    return ret_value__6000__auto__;
                  }
                  break;
                }
              };
              state_machine__5999__auto__ = function(state_22181) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5999__auto____0.call(this);
                  case 1:
                    return state_machine__5999__auto____1.call(this, state_22181);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
              state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
              return state_machine__5999__auto__;
            }();
          }(switch__5998__auto__);
        }();
        var state__6070__auto__ = function() {
          var statearr_22210 = f__6069__auto__.call(null);
          statearr_22210[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto__;
          return statearr_22210;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
      });
      return c__6068__auto__;
    };
    omchaya.components.draggable_window.t22121.prototype.om$core$IDisplayName$ = true;
    omchaya.components.draggable_window.t22121.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var or__3443__auto__ = (new cljs.core.Keyword(null, "react-name", "react-name", 4800236939)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return "DraggableWindow";
      }
    };
    omchaya.components.draggable_window.t22121.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22123) {
      var self__ = this;
      var _22123__$1 = this;
      return self__.meta22122;
    };
    omchaya.components.draggable_window.t22121.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22123, meta22122__$1) {
      var self__ = this;
      var _22123__$1 = this;
      return new omchaya.components.draggable_window.t22121(self__.opts, self__.owner, self__.data, self__.draggable_window, meta22122__$1);
    };
    omchaya.components.draggable_window.__GT_t22121 = function __GT_t22121(opts__$1, owner__$1, data__$1, draggable_window__$1, meta22122) {
      return new omchaya.components.draggable_window.t22121(opts__$1, owner__$1, data__$1, draggable_window__$1, meta22122);
    };
  }
  return new omchaya.components.draggable_window.t22121(opts, owner, data, draggable_window, null);
};
goog.provide("goog.date.DateLike");
goog.date.DateLike;
goog.provide("goog.i18n.TimeZone");
goog.require("goog.array");
goog.require("goog.date.DateLike");
goog.require("goog.string");
goog.i18n.TimeZone = function() {
  this.timeZoneId_;
  this.standardOffset_;
  this.tzNames_;
  this.transitions_;
};
goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_ = 3600 * 1E3;
goog.i18n.TimeZone.NameType = {STD_SHORT_NAME:0, STD_LONG_NAME:1, DLT_SHORT_NAME:2, DLT_LONG_NAME:3};
goog.i18n.TimeZone.createTimeZone = function(timeZoneData) {
  if (typeof timeZoneData == "number") {
    return goog.i18n.TimeZone.createSimpleTimeZone_(timeZoneData);
  }
  var tz = new goog.i18n.TimeZone;
  tz.timeZoneId_ = timeZoneData["id"];
  tz.standardOffset_ = -timeZoneData["std_offset"];
  tz.tzNames_ = timeZoneData["names"];
  tz.transitions_ = timeZoneData["transitions"];
  return tz;
};
goog.i18n.TimeZone.createSimpleTimeZone_ = function(timeZoneOffsetInMinutes) {
  var tz = new goog.i18n.TimeZone;
  tz.standardOffset_ = timeZoneOffsetInMinutes;
  tz.timeZoneId_ = goog.i18n.TimeZone.composePosixTimeZoneID_(timeZoneOffsetInMinutes);
  var str = goog.i18n.TimeZone.composeUTCString_(timeZoneOffsetInMinutes);
  tz.tzNames_ = [str, str];
  tz.transitions_ = [];
  return tz;
};
goog.i18n.TimeZone.composeGMTString_ = function(offset) {
  var parts = ["GMT"];
  parts.push(offset <= 0 ? "+" : "-");
  offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), ":", goog.string.padNumber(offset % 60, 2));
  return parts.join("");
};
goog.i18n.TimeZone.composePosixTimeZoneID_ = function(offset) {
  if (offset == 0) {
    return "Etc/GMT";
  }
  var parts = ["Etc/GMT", offset < 0 ? "-" : "+"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset = offset % 60;
  if (offset != 0) {
    parts.push(":", goog.string.padNumber(offset, 2));
  }
  return parts.join("");
};
goog.i18n.TimeZone.composeUTCString_ = function(offset) {
  if (offset == 0) {
    return "UTC";
  }
  var parts = ["UTC", offset < 0 ? "+" : "-"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset = offset % 60;
  if (offset != 0) {
    parts.push(":", offset);
  }
  return parts.join("");
};
goog.i18n.TimeZone.prototype.getTimeZoneData = function() {
  return{"id":this.timeZoneId_, "std_offset":-this.standardOffset_, "names":goog.array.clone(this.tzNames_), "transitions":goog.array.clone(this.transitions_)};
};
goog.i18n.TimeZone.prototype.getDaylightAdjustment = function(date) {
  var timeInMs = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes());
  var timeInHours = timeInMs / goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_;
  var index = 0;
  while (index < this.transitions_.length && timeInHours >= this.transitions_[index]) {
    index += 2;
  }
  return index == 0 ? 0 : this.transitions_[index - 1];
};
goog.i18n.TimeZone.prototype.getGMTString = function(date) {
  return goog.i18n.TimeZone.composeGMTString_(this.getOffset(date));
};
goog.i18n.TimeZone.prototype.getLongName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_LONG_NAME : goog.i18n.TimeZone.NameType.STD_LONG_NAME];
};
goog.i18n.TimeZone.prototype.getOffset = function(date) {
  return this.standardOffset_ - this.getDaylightAdjustment(date);
};
goog.i18n.TimeZone.prototype.getRFCTimeZoneString = function(date) {
  var offset = -this.getOffset(date);
  var parts = [offset < 0 ? "-" : "+"];
  offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), goog.string.padNumber(offset % 60, 2));
  return parts.join("");
};
goog.i18n.TimeZone.prototype.getShortName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_SHORT_NAME : goog.i18n.TimeZone.NameType.STD_SHORT_NAME];
};
goog.i18n.TimeZone.prototype.getTimeZoneId = function() {
  return this.timeZoneId_;
};
goog.i18n.TimeZone.prototype.isDaylightTime = function(date) {
  return this.getDaylightAdjustment(date) > 0;
};
goog.provide("goog.i18n.DateTimeFormat");
goog.provide("goog.i18n.DateTimeFormat.Format");
goog.require("goog.asserts");
goog.require("goog.date.DateLike");
goog.require("goog.i18n.DateTimeSymbols");
goog.require("goog.i18n.TimeZone");
goog.require("goog.string");
goog.i18n.DateTimeFormat = function(pattern) {
  goog.asserts.assert(goog.isDef(pattern), "Pattern must be defined");
  this.patternParts_ = [];
  if (typeof pattern == "number") {
    this.applyStandardPattern_(pattern);
  } else {
    this.applyPattern_(pattern);
  }
};
goog.i18n.DateTimeFormat.Format = {FULL_DATE:0, LONG_DATE:1, MEDIUM_DATE:2, SHORT_DATE:3, FULL_TIME:4, LONG_TIME:5, MEDIUM_TIME:6, SHORT_TIME:7, FULL_DATETIME:8, LONG_DATETIME:9, MEDIUM_DATETIME:10, SHORT_DATETIME:11};
goog.i18n.DateTimeFormat.TOKENS_ = [/^\'(?:[^\']|\'\')*\'/, /^(?:G+|y+|M+|k+|S+|E+|a+|h+|K+|H+|c+|L+|Q+|d+|m+|s+|v+|z+|Z+)/, /^[^\'GyMkSEahKHcLQdmsvzZ]+/];
goog.i18n.DateTimeFormat.PartTypes_ = {QUOTED_STRING:0, FIELD:1, LITERAL:2};
goog.i18n.DateTimeFormat.prototype.applyPattern_ = function(pattern) {
  while (pattern) {
    for (var i = 0;i < goog.i18n.DateTimeFormat.TOKENS_.length;++i) {
      var m = pattern.match(goog.i18n.DateTimeFormat.TOKENS_[i]);
      if (m) {
        var part = m[0];
        pattern = pattern.substring(part.length);
        if (i == goog.i18n.DateTimeFormat.PartTypes_.QUOTED_STRING) {
          if (part == "''") {
            part = "'";
          } else {
            part = part.substring(1, part.length - 1);
            part = part.replace(/\'\'/, "'");
          }
        }
        this.patternParts_.push({text:part, type:i});
        break;
      }
    }
  }
};
goog.i18n.DateTimeFormat.prototype.format = function(date, opt_timeZone) {
  var diff = opt_timeZone ? (date.getTimezoneOffset() - opt_timeZone.getOffset(date)) * 6E4 : 0;
  var dateForDate = diff ? new Date(date.getTime() + diff) : date;
  var dateForTime = dateForDate;
  if (opt_timeZone && dateForDate.getTimezoneOffset() != date.getTimezoneOffset()) {
    diff += diff > 0 ? -24 * 60 * 6E4 : 24 * 60 * 6E4;
    dateForTime = new Date(date.getTime() + diff);
  }
  var out = [];
  for (var i = 0;i < this.patternParts_.length;++i) {
    var text = this.patternParts_[i].text;
    if (goog.i18n.DateTimeFormat.PartTypes_.FIELD == this.patternParts_[i].type) {
      out.push(this.formatField_(text, date, dateForDate, dateForTime, opt_timeZone));
    } else {
      out.push(text);
    }
  }
  return out.join("");
};
goog.i18n.DateTimeFormat.prototype.applyStandardPattern_ = function(formatType) {
  var pattern;
  if (formatType < 4) {
    pattern = goog.i18n.DateTimeSymbols.DATEFORMATS[formatType];
  } else {
    if (formatType < 8) {
      pattern = goog.i18n.DateTimeSymbols.TIMEFORMATS[formatType - 4];
    } else {
      if (formatType < 12) {
        pattern = goog.i18n.DateTimeSymbols.DATEFORMATS[formatType - 8] + " " + goog.i18n.DateTimeSymbols.TIMEFORMATS[formatType - 8];
      } else {
        this.applyStandardPattern_(goog.i18n.DateTimeFormat.Format.MEDIUM_DATETIME);
        return;
      }
    }
  }
  this.applyPattern_(pattern);
};
goog.i18n.DateTimeFormat.prototype.localizeNumbers_ = function(input) {
  if (goog.i18n.DateTimeSymbols.ZERODIGIT === undefined) {
    return input;
  }
  var parts = [];
  for (var i = 0;i < input.length;i++) {
    var c = input.charCodeAt(i);
    parts.push(48 <= c && c <= 57 ? String.fromCharCode(goog.i18n.DateTimeSymbols.ZERODIGIT + c - 48) : input.charAt(i));
  }
  return parts.join("");
};
goog.i18n.DateTimeFormat.prototype.formatEra_ = function(count, date) {
  var value = date.getFullYear() > 0 ? 1 : 0;
  return count >= 4 ? goog.i18n.DateTimeSymbols.ERANAMES[value] : goog.i18n.DateTimeSymbols.ERAS[value];
};
goog.i18n.DateTimeFormat.prototype.formatYear_ = function(count, date) {
  var value = date.getFullYear();
  if (value < 0) {
    value = -value;
  }
  return this.localizeNumbers_(count == 2 ? goog.string.padNumber(value % 100, 2) : String(value));
};
goog.i18n.DateTimeFormat.prototype.formatMonth_ = function(count, date) {
  var value = date.getMonth();
  switch(count) {
    case 5:
      return goog.i18n.DateTimeSymbols.NARROWMONTHS[value];
    case 4:
      return goog.i18n.DateTimeSymbols.MONTHS[value];
    case 3:
      return goog.i18n.DateTimeSymbols.SHORTMONTHS[value];
    default:
      return this.localizeNumbers_(goog.string.padNumber(value + 1, count));
  }
};
goog.i18n.DateTimeFormat.prototype.format24Hours_ = function(count, date) {
  return this.localizeNumbers_(goog.string.padNumber(date.getHours() || 24, count));
};
goog.i18n.DateTimeFormat.prototype.formatFractionalSeconds_ = function(count, date) {
  var value = date.getTime() % 1E3 / 1E3;
  return this.localizeNumbers_(value.toFixed(Math.min(3, count)).substr(2) + (count > 3 ? goog.string.padNumber(0, count - 3) : ""));
};
goog.i18n.DateTimeFormat.prototype.formatDayOfWeek_ = function(count, date) {
  var value = date.getDay();
  return count >= 4 ? goog.i18n.DateTimeSymbols.WEEKDAYS[value] : goog.i18n.DateTimeSymbols.SHORTWEEKDAYS[value];
};
goog.i18n.DateTimeFormat.prototype.formatAmPm_ = function(count, date) {
  var hours = date.getHours();
  return goog.i18n.DateTimeSymbols.AMPMS[hours >= 12 && hours < 24 ? 1 : 0];
};
goog.i18n.DateTimeFormat.prototype.format1To12Hours_ = function(count, date) {
  return this.localizeNumbers_(goog.string.padNumber(date.getHours() % 12 || 12, count));
};
goog.i18n.DateTimeFormat.prototype.format0To11Hours_ = function(count, date) {
  return this.localizeNumbers_(goog.string.padNumber(date.getHours() % 12, count));
};
goog.i18n.DateTimeFormat.prototype.format0To23Hours_ = function(count, date) {
  return this.localizeNumbers_(goog.string.padNumber(date.getHours(), count));
};
goog.i18n.DateTimeFormat.prototype.formatStandaloneDay_ = function(count, date) {
  var value = date.getDay();
  switch(count) {
    case 5:
      return goog.i18n.DateTimeSymbols.STANDALONENARROWWEEKDAYS[value];
    case 4:
      return goog.i18n.DateTimeSymbols.STANDALONEWEEKDAYS[value];
    case 3:
      return goog.i18n.DateTimeSymbols.STANDALONESHORTWEEKDAYS[value];
    default:
      return this.localizeNumbers_(goog.string.padNumber(value, 1));
  }
};
goog.i18n.DateTimeFormat.prototype.formatStandaloneMonth_ = function(count, date) {
  var value = date.getMonth();
  switch(count) {
    case 5:
      return goog.i18n.DateTimeSymbols.STANDALONENARROWMONTHS[value];
    case 4:
      return goog.i18n.DateTimeSymbols.STANDALONEMONTHS[value];
    case 3:
      return goog.i18n.DateTimeSymbols.STANDALONESHORTMONTHS[value];
    default:
      return this.localizeNumbers_(goog.string.padNumber(value + 1, count));
  }
};
goog.i18n.DateTimeFormat.prototype.formatQuarter_ = function(count, date) {
  var value = Math.floor(date.getMonth() / 3);
  return count < 4 ? goog.i18n.DateTimeSymbols.SHORTQUARTERS[value] : goog.i18n.DateTimeSymbols.QUARTERS[value];
};
goog.i18n.DateTimeFormat.prototype.formatDate_ = function(count, date) {
  return this.localizeNumbers_(goog.string.padNumber(date.getDate(), count));
};
goog.i18n.DateTimeFormat.prototype.formatMinutes_ = function(count, date) {
  return this.localizeNumbers_(goog.string.padNumber(date.getMinutes(), count));
};
goog.i18n.DateTimeFormat.prototype.formatSeconds_ = function(count, date) {
  return this.localizeNumbers_(goog.string.padNumber(date.getSeconds(), count));
};
goog.i18n.DateTimeFormat.prototype.formatTimeZoneRFC_ = function(count, date, opt_timeZone) {
  opt_timeZone = opt_timeZone || goog.i18n.TimeZone.createTimeZone(date.getTimezoneOffset());
  return count < 4 ? opt_timeZone.getRFCTimeZoneString(date) : this.localizeNumbers_(opt_timeZone.getGMTString(date));
};
goog.i18n.DateTimeFormat.prototype.formatTimeZone_ = function(count, date, opt_timeZone) {
  opt_timeZone = opt_timeZone || goog.i18n.TimeZone.createTimeZone(date.getTimezoneOffset());
  return count < 4 ? opt_timeZone.getShortName(date) : opt_timeZone.getLongName(date);
};
goog.i18n.DateTimeFormat.prototype.formatTimeZoneId_ = function(date, opt_timeZone) {
  opt_timeZone = opt_timeZone || goog.i18n.TimeZone.createTimeZone(date.getTimezoneOffset());
  return opt_timeZone.getTimeZoneId();
};
goog.i18n.DateTimeFormat.prototype.formatField_ = function(patternStr, date, dateForDate, dateForTime, opt_timeZone) {
  var count = patternStr.length;
  switch(patternStr.charAt(0)) {
    case "G":
      return this.formatEra_(count, dateForDate);
    case "y":
      return this.formatYear_(count, dateForDate);
    case "M":
      return this.formatMonth_(count, dateForDate);
    case "k":
      return this.format24Hours_(count, dateForTime);
    case "S":
      return this.formatFractionalSeconds_(count, dateForTime);
    case "E":
      return this.formatDayOfWeek_(count, dateForDate);
    case "a":
      return this.formatAmPm_(count, dateForTime);
    case "h":
      return this.format1To12Hours_(count, dateForTime);
    case "K":
      return this.format0To11Hours_(count, dateForTime);
    case "H":
      return this.format0To23Hours_(count, dateForTime);
    case "c":
      return this.formatStandaloneDay_(count, dateForDate);
    case "L":
      return this.formatStandaloneMonth_(count, dateForDate);
    case "Q":
      return this.formatQuarter_(count, dateForDate);
    case "d":
      return this.formatDate_(count, dateForDate);
    case "m":
      return this.formatMinutes_(count, dateForTime);
    case "s":
      return this.formatSeconds_(count, dateForTime);
    case "v":
      return this.formatTimeZoneId_(date, opt_timeZone);
    case "z":
      return this.formatTimeZone_(count, date, opt_timeZone);
    case "Z":
      return this.formatTimeZoneRFC_(count, date, opt_timeZone);
    default:
      return "";
  }
};
goog.provide("omchaya.datetime");
goog.require("cljs.core");
goog.require("goog.i18n.DateTimeFormat.Format");
goog.require("goog.i18n.DateTimeFormat.Format");
omchaya.datetime.full_date_format = new goog.i18n.DateTimeFormat(goog.i18n.DateTimeFormat.Format.FULL_DATE);
omchaya.datetime.full_datetime_format = new goog.i18n.DateTimeFormat(goog.i18n.DateTimeFormat.Format.FULL_DATETIME);
omchaya.datetime.full_time_format = new goog.i18n.DateTimeFormat(goog.i18n.DateTimeFormat.Format.FULL_TIME);
omchaya.datetime.long_date_format = new goog.i18n.DateTimeFormat(goog.i18n.DateTimeFormat.Format.LONG_DATE);
omchaya.datetime.long_datetime_format = new goog.i18n.DateTimeFormat(goog.i18n.DateTimeFormat.Format.LONG_DATETIME);
omchaya.datetime.long_time_format = new goog.i18n.DateTimeFormat(goog.i18n.DateTimeFormat.Format.LONG_TIME);
omchaya.datetime.medium_date_format = new goog.i18n.DateTimeFormat(goog.i18n.DateTimeFormat.Format.MEDIUM_DATE);
omchaya.datetime.medium_datetime_format = new goog.i18n.DateTimeFormat(goog.i18n.DateTimeFormat.Format.MEDIUM_DATETIME);
omchaya.datetime.medium_time_format = new goog.i18n.DateTimeFormat(goog.i18n.DateTimeFormat.Format.MEDIUM_TIME);
omchaya.datetime.short_date_format = new goog.i18n.DateTimeFormat(goog.i18n.DateTimeFormat.Format.SHORT_DATE);
omchaya.datetime.short_datetime_format = new goog.i18n.DateTimeFormat(goog.i18n.DateTimeFormat.Format.SHORT_DATETIME);
omchaya.datetime.short_time_format = new goog.i18n.DateTimeFormat(goog.i18n.DateTimeFormat.Format.SHORT_TIME);
omchaya.datetime.format_date = function format_date(date_format, date) {
  return date_format.format(new Date(date));
};
omchaya.datetime.full_date = cljs.core.partial.call(null, omchaya.datetime.format_date, omchaya.datetime.full_date_format);
omchaya.datetime.full_datetime_format = cljs.core.partial.call(null, omchaya.datetime.format_date, omchaya.datetime.full_datetime_format);
omchaya.datetime.full_time = cljs.core.partial.call(null, omchaya.datetime.format_date, omchaya.datetime.full_time_format);
omchaya.datetime.long_date = cljs.core.partial.call(null, omchaya.datetime.format_date, omchaya.datetime.long_date_format);
omchaya.datetime.long_datetime = cljs.core.partial.call(null, omchaya.datetime.format_date, omchaya.datetime.long_datetime_format);
omchaya.datetime.long_time = cljs.core.partial.call(null, omchaya.datetime.format_date, omchaya.datetime.long_time_format);
omchaya.datetime.medium_date = cljs.core.partial.call(null, omchaya.datetime.format_date, omchaya.datetime.medium_date_format);
omchaya.datetime.medium_datetime = cljs.core.partial.call(null, omchaya.datetime.format_date, omchaya.datetime.medium_datetime_format);
omchaya.datetime.medium_time = cljs.core.partial.call(null, omchaya.datetime.format_date, omchaya.datetime.medium_time_format);
omchaya.datetime.short_date = cljs.core.partial.call(null, omchaya.datetime.format_date, omchaya.datetime.short_date_format);
omchaya.datetime.short_datetime = cljs.core.partial.call(null, omchaya.datetime.format_date, omchaya.datetime.short_datetime_format);
omchaya.datetime.short_time = cljs.core.partial.call(null, omchaya.datetime.format_date, omchaya.datetime.short_time_format);
omchaya.datetime.medium_consistent_date_format = new goog.i18n.DateTimeFormat("MMM dd, yyyy");
omchaya.datetime.medium_consistent_date = cljs.core.partial.call(null, omchaya.datetime.format_date, omchaya.datetime.medium_consistent_date_format);
omchaya.datetime.calendar_date_format = new goog.i18n.DateTimeFormat("EEE, MMM dd, yyyy 'at' hh:mma");
omchaya.datetime.calendar_date = cljs.core.partial.call(null, omchaya.datetime.format_date, omchaya.datetime.calendar_date_format);
omchaya.datetime.date_in_ms = function date_in_ms(date) {
  var vec__23410 = cljs.core.map.call(null, parseInt, cljs.core.name.call(null, date).split(/-/));
  var y = cljs.core.nth.call(null, vec__23410, 0, null);
  var m = cljs.core.nth.call(null, vec__23410, 1, null);
  var d = cljs.core.nth.call(null, vec__23410, 2, null);
  return(new Date(Date.UTC(y, m - 1, d - 1, 0, 0, 0))).getTime();
};
omchaya.datetime.day_in_ms = 1E3 * 3600 * 24;
omchaya.datetime.minute = 60;
omchaya.datetime.hour = omchaya.datetime.minute * 60;
omchaya.datetime.day = omchaya.datetime.hour * 24;
omchaya.datetime.month = omchaya.datetime.day * 30;
omchaya.datetime.year = omchaya.datetime.month * 12;
omchaya.datetime.time_ago = function time_ago(time) {
  var now = (new Date).getTime();
  var ago = Math.floor((now - time) / 1E3);
  var interval = ago < omchaya.datetime.hour ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "divisor", "divisor", 2688237584), omchaya.datetime.minute, new cljs.core.Keyword(null, "unit", "unit", 1017498870), "minute"], null) : ago < omchaya.datetime.day ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "divisor", "divisor", 2688237584), omchaya.datetime.hour, new cljs.core.Keyword(null, "unit", "unit", 1017498870), "hour"], null) : ago < omchaya.datetime.month ? 
  new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "divisor", "divisor", 2688237584), omchaya.datetime.day, new cljs.core.Keyword(null, "unit", "unit", 1017498870), "day"], null) : ago < omchaya.datetime.year ? new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "divisor", "divisor", 2688237584), omchaya.datetime.month, new cljs.core.Keyword(null, "unit", "unit", 1017498870), "month"], null) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? new cljs.core.PersistentArrayMap(null, 
  2, [new cljs.core.Keyword(null, "divisor", "divisor", 2688237584), omchaya.datetime.year, new cljs.core.Keyword(null, "unit", "unit", 1017498870), "year"], null) : null;
  var count = Math.round(ago / (new cljs.core.Keyword(null, "divisor", "divisor", 2688237584)).cljs$core$IFn$_invoke$arity$1(interval));
  return[cljs.core.str(count), cljs.core.str(" "), cljs.core.str((new cljs.core.Keyword(null, "unit", "unit", 1017498870)).cljs$core$IFn$_invoke$arity$1(interval)), cljs.core.str(cljs.core._EQ_.call(null, 1, count) ? null : "s")].join("");
};
goog.provide("omchaya.components.history_player");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("omchaya.utils");
goog.require("sablono.core");
goog.require("cljs.core.async");
goog.require("goog.events");
goog.require("sablono.core");
goog.require("om.core");
goog.require("clojure.string");
goog.require("om.core");
goog.require("clojure.string");
goog.require("omchaya.utils");
goog.require("goog.events.EventType");
goog.require("cljs.core.async");
goog.require("goog.events");
omchaya.components.history_player.local_dragging_QMARK_ = cljs.core.atom.call(null, false);
omchaya.components.history_player.listen = function listen(el, type) {
  var out = cljs.core.async.chan.call(null);
  goog.events.listen(el, type, function(p1__22231_SHARP_) {
    if (cljs.core.truth_(cljs.core.deref.call(null, omchaya.components.history_player.local_dragging_QMARK_))) {
      p1__22231_SHARP_.preventDefault();
    } else {
    }
    return cljs.core.async.put_BANG_.call(null, out, p1__22231_SHARP_);
  });
  return out;
};
omchaya.components.history_player.player_step = function() {
  var method_table__4301__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4302__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4303__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4304__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4305__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("player-step", function(format_version, active_step_number, step_number, step) {
    return format_version;
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4305__auto__, method_table__4301__auto__, prefer_table__4302__auto__, method_cache__4303__auto__, cached_hierarchy__4304__auto__);
}();
cljs.core._add_method.call(null, omchaya.components.history_player.player_step, 1, function(format_version, active_step_number, comm, step_number, step) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.replay-step", "div.replay-step", 2291439239), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "class", "class", 1108647146), cljs.core._EQ_.call(null, active_step_number, step_number) ? "active" : null, new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), function() {
    return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "step-selected", "step-selected", 3543353326), step_number], null));
  }, new cljs.core.Keyword(null, "style", "style", 1123684643), {"cursor":"pointer"}], null), cljs.core.pr_str.call(null, step)], null);
});
omchaya.components.history_player.playlist_entry = function playlist_entry(comm, replay_number, replay) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.playlist-entry", "div.playlist-entry", 3364629286), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), function() {
    return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "replay-selected", "replay-selected", 760550707), replay_number], null));
  }, new cljs.core.Keyword(null, "style", "style", 1123684643), {"cursor":"pointer"}], null), function() {
    var or__3443__auto__ = (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(replay);
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return "No name for recording";
    }
  }()], null);
};
omchaya.components.history_player.player = function player(app, owner, opts) {
  if (typeof omchaya.components.history_player.t22313 !== "undefined") {
  } else {
    omchaya.components.history_player.t22313 = function(opts, owner, app, player, meta22314) {
      this.opts = opts;
      this.owner = owner;
      this.app = app;
      this.player = player;
      this.meta22314 = meta22314;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    omchaya.components.history_player.t22313.cljs$lang$type = true;
    omchaya.components.history_player.t22313.cljs$lang$ctorStr = "omchaya.components.history-player/t22313";
    omchaya.components.history_player.t22313.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "omchaya.components.history-player/t22313");
    };
    omchaya.components.history_player.t22313.prototype.om$core$IRender$ = true;
    omchaya.components.history_player.t22313.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return sablono.interpreter.interpret.call(null, function() {
        var comm = cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "player-comms", "player-comms", 3952961645), new cljs.core.Keyword(null, "player-control", "player-control", 3655689699)], null));
        var drag_comm = cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "player-comms", "player-comms", 3952961645), new cljs.core.Keyword(null, "player-drag", "player-drag", 1524386834)], null));
        var replays = cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "replays", "replays", 2108401886), new cljs.core.Keyword(null, "replay-list", "replay-list", 2022921782)], null));
        var queued_replay = cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "replays", "replays", 2108401886), new cljs.core.Keyword(null, "queued-replay", "queued-replay", 2482676979)], null));
        var map__22316 = queued_replay;
        var map__22316__$1 = cljs.core.seq_QMARK_.call(null, map__22316) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22316) : map__22316;
        var active_step = cljs.core.get.call(null, map__22316__$1, new cljs.core.Keyword(null, "active-step", "active-step", 4211347621));
        var history = cljs.core.get.call(null, map__22316__$1, new cljs.core.Keyword(null, "history", "history", 1940838406));
        var format_version = cljs.core.get.call(null, map__22316__$1, new cljs.core.Keyword(null, "format_version", "format_version", 3631466498));
        return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.history-player", "div.history-player", 3648865449), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", 1123684643), function() {
          var temp__4092__auto__ = cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "position", "position", 1761709211)], null));
          if (cljs.core.truth_(temp__4092__auto__)) {
            var pos = temp__4092__auto__;
            return{"left":cljs.core.first.call(null, pos), "top":cljs.core.last.call(null, pos), "position":"fixed"};
          } else {
            return null;
          }
        }()], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.row.modal-header", "div.row.modal-header", 3055554672), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.col-lg-12", "div.col-lg-12", 4751944571), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", 1123684643), cljs.core.clj__GT_js.call(null, 
        cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "background-color", "background-color", 1619226998), cljs.core.truth_(cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "dragging?", "dragging?", 709673026)], null))) ? "#050" : "#500", new cljs.core.Keyword(null, "color", "color", 1108746965), 
        "white", new cljs.core.Keyword(null, "text-align", "text-align", 1760136663), "center"], null))), new cljs.core.Keyword(null, "onMouseDown", "onMouseDown", 1569008442), function(p1__22232_SHARP_) {
          cljs.core.reset_BANG_.call(null, omchaya.components.history_player.local_dragging_QMARK_, true);
          return cljs.core.async.put_BANG_.call(null, drag_comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "history-player-grabbed", "history-player-grabbed", 1379847572), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__22232_SHARP_.clientX, p1__22232_SHARP_.clientY], null)], null));
        }], null)), "[History Player]"], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.row", "div.row", 2686478959), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.col-lg-4", "div.col-lg-4", 1688675518), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 3931183780), 
        new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "state", "state", 1123661827)).cljs$core$IFn$_invoke$arity$1(self__.app), new cljs.core.Keyword(null, "playing", "playing", 520340384)) ? function() {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "player-stopped", "player-stopped", 819827283)], null));
        } : function() {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "player-started", "player-started", 806961415)], null));
        }], null), cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "state", "state", 1123661827)).cljs$core$IFn$_invoke$arity$1(self__.app), new cljs.core.Keyword(null, "playing", "playing", 520340384)) ? cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, " Pause"), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.fa.fa-pause", "i.fa.fa-pause", 3144543140)], null)) : cljs.core._conj.call(null, cljs.core._conj.call(null, 
        cljs.core.List.EMPTY, " Play"), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.fa.fa-play", "i.fa.fa-play", 4546327786)], null))], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.col-lg-4", "div.col-lg-4", 1688675518), cljs.core.truth_(queued_replay) ? [cljs.core.str("Recording format v"), cljs.core.str(format_version), cljs.core.str(", recorded on "), 
        cljs.core.str((new cljs.core.Keyword(null, "created_at", "created_at", 2383584348)).cljs$core$IFn$_invoke$arity$1(queued_replay))].join("") : [cljs.core.str("No recording loaded")].join("")], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.row", "div.row", 2686478959), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.col-lg-4.col-md-4.col-sm-8.col-xs-8", 
        "div.col-lg-4.col-md-4.col-sm-8.col-xs-8", 4362351264), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.playlist-entries", "div.playlist-entries", 907861700), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h4", "h4", 1013907518), "Replays"], null), cljs.core.map.call(null, cljs.core.partial.call(null, omchaya.components.history_player.playlist_entry, comm), 
        cljs.core.range.call(null), replays)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.col-lg-8.col-md-8.col-sm-8.col-xs-8", "div.col-lg-8.col-md-8.col-sm-8.col-xs-8", 4260484896), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.playlist-steps", "div.playlist-steps", 3377722843), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
        [new cljs.core.Keyword(null, "h4", "h4", 1013907518), "Steps"], null), cljs.core.map.call(null, cljs.core.partial.call(null, omchaya.components.history_player.player_step, format_version, active_step, comm), cljs.core.range.call(null), history)], null)], null)], null)], null);
      }());
    };
    omchaya.components.history_player.t22313.prototype.om$core$IWillMount$ = true;
    omchaya.components.history_player.t22313.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var mouse_move_chan = cljs.core.async.map.call(null, function(e) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e.clientX, e.clientY], null);
      }, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [omchaya.components.history_player.listen.call(null, window, "mousemove")], null));
      var mouse_up_chan = cljs.core.async.map.call(null, function(mouse_move_chan) {
        return function(e) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [e.clientX, e.clientY], null);
        };
      }(mouse_move_chan), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [omchaya.components.history_player.listen.call(null, window, "mouseup")], null));
      var comm = cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "player-comms", "player-comms", 3952961645), new cljs.core.Keyword(null, "player-drag", "player-drag", 1524386834)], null));
      var c__6068__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function() {
        var f__6069__auto__ = function() {
          var switch__5998__auto__ = function(state_22363) {
            var state_val_22364 = state_22363[1];
            if (state_val_22364 === 1) {
              var state_22363__$1 = state_22363;
              var statearr_22365_22393 = state_22363__$1;
              statearr_22365_22393[2] = null;
              statearr_22365_22393[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_22364 === 2) {
                var state_22363__$1 = state_22363;
                if (true) {
                  var statearr_22366_22394 = state_22363__$1;
                  statearr_22366_22394[1] = 4;
                } else {
                  var statearr_22367_22395 = state_22363__$1;
                  statearr_22367_22395[1] = 5;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_22364 === 3) {
                  var inst_22361 = state_22363[2];
                  var state_22363__$1 = state_22363;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22363__$1, inst_22361);
                } else {
                  if (state_val_22364 === 4) {
                    var inst_22324 = [mouse_move_chan, mouse_up_chan];
                    var inst_22325 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_22324, null);
                    var state_22363__$1 = state_22363;
                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_22363__$1, 7, inst_22325);
                  } else {
                    if (state_val_22364 === 5) {
                      var state_22363__$1 = state_22363;
                      var statearr_22368_22396 = state_22363__$1;
                      statearr_22368_22396[2] = null;
                      statearr_22368_22396[1] = 6;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_22364 === 6) {
                        var inst_22359 = state_22363[2];
                        var state_22363__$1 = state_22363;
                        var statearr_22369_22397 = state_22363__$1;
                        statearr_22369_22397[2] = inst_22359;
                        statearr_22369_22397[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_22364 === 7) {
                          var inst_22329 = state_22363[7];
                          var inst_22327 = state_22363[8];
                          var inst_22327__$1 = state_22363[2];
                          var inst_22328 = cljs.core.nth.call(null, inst_22327__$1, 0, null);
                          var inst_22329__$1 = cljs.core.nth.call(null, inst_22327__$1, 1, null);
                          var inst_22330 = cljs.core._EQ_.call(null, inst_22329__$1, mouse_move_chan);
                          var state_22363__$1 = function() {
                            var statearr_22370 = state_22363;
                            statearr_22370[7] = inst_22329__$1;
                            statearr_22370[9] = inst_22328;
                            statearr_22370[8] = inst_22327__$1;
                            return statearr_22370;
                          }();
                          if (inst_22330) {
                            var statearr_22371_22398 = state_22363__$1;
                            statearr_22371_22398[1] = 8;
                          } else {
                            var statearr_22372_22399 = state_22363__$1;
                            statearr_22372_22399[1] = 9;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_22364 === 8) {
                            var inst_22327 = state_22363[8];
                            var inst_22333 = cljs.core.nth.call(null, inst_22327, 0, null);
                            var inst_22334 = [new cljs.core.Keyword(null, "mouse-moved", "mouse-moved", 753447677), inst_22333];
                            var inst_22335 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_22334, null);
                            var inst_22336 = cljs.core.async.put_BANG_.call(null, comm, inst_22335);
                            var state_22363__$1 = state_22363;
                            var statearr_22373_22400 = state_22363__$1;
                            statearr_22373_22400[2] = inst_22336;
                            statearr_22373_22400[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_22364 === 9) {
                              var inst_22329 = state_22363[7];
                              var inst_22338 = cljs.core._EQ_.call(null, inst_22329, mouse_up_chan);
                              var state_22363__$1 = state_22363;
                              if (inst_22338) {
                                var statearr_22374_22401 = state_22363__$1;
                                statearr_22374_22401[1] = 11;
                              } else {
                                var statearr_22375_22402 = state_22363__$1;
                                statearr_22375_22402[1] = 12;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_22364 === 10) {
                                var inst_22355 = state_22363[2];
                                var state_22363__$1 = function() {
                                  var statearr_22376 = state_22363;
                                  statearr_22376[10] = inst_22355;
                                  return statearr_22376;
                                }();
                                var statearr_22377_22403 = state_22363__$1;
                                statearr_22377_22403[2] = null;
                                statearr_22377_22403[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_22364 === 11) {
                                  var inst_22327 = state_22363[8];
                                  var inst_22341 = cljs.core.nth.call(null, inst_22327, 0, null);
                                  var inst_22342 = [new cljs.core.Keyword(null, "history-player-released", "history-player-released", 3129319138), inst_22341];
                                  var inst_22343 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_22342, null);
                                  var inst_22344 = cljs.core.async.put_BANG_.call(null, comm, inst_22343);
                                  var inst_22345 = cljs.core.reset_BANG_.call(null, omchaya.components.history_player.local_dragging_QMARK_, false);
                                  var state_22363__$1 = function() {
                                    var statearr_22378 = state_22363;
                                    statearr_22378[11] = inst_22344;
                                    return statearr_22378;
                                  }();
                                  var statearr_22379_22404 = state_22363__$1;
                                  statearr_22379_22404[2] = inst_22345;
                                  statearr_22379_22404[1] = 13;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_22364 === 12) {
                                    var inst_22329 = state_22363[7];
                                    var inst_22347 = cljs.core._EQ_.call(null, inst_22329, new cljs.core.Keyword(null, "default", "default", 2558708147));
                                    var state_22363__$1 = state_22363;
                                    if (inst_22347) {
                                      var statearr_22380_22405 = state_22363__$1;
                                      statearr_22380_22405[1] = 14;
                                    } else {
                                      var statearr_22381_22406 = state_22363__$1;
                                      statearr_22381_22406[1] = 15;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_22364 === 13) {
                                      var inst_22353 = state_22363[2];
                                      var state_22363__$1 = state_22363;
                                      var statearr_22382_22407 = state_22363__$1;
                                      statearr_22382_22407[2] = inst_22353;
                                      statearr_22382_22407[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_22364 === 14) {
                                        var inst_22328 = state_22363[9];
                                        var state_22363__$1 = state_22363;
                                        var statearr_22383_22408 = state_22363__$1;
                                        statearr_22383_22408[2] = inst_22328;
                                        statearr_22383_22408[1] = 16;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_22364 === 15) {
                                          var state_22363__$1 = state_22363;
                                          var statearr_22384_22409 = state_22363__$1;
                                          statearr_22384_22409[2] = null;
                                          statearr_22384_22409[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_22364 === 16) {
                                            var inst_22351 = state_22363[2];
                                            var state_22363__$1 = state_22363;
                                            var statearr_22385_22410 = state_22363__$1;
                                            statearr_22385_22410[2] = inst_22351;
                                            statearr_22385_22410[1] = 13;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
          return function(switch__5998__auto__) {
            return function() {
              var state_machine__5999__auto__ = null;
              var state_machine__5999__auto____0 = function() {
                var statearr_22389 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_22389[0] = state_machine__5999__auto__;
                statearr_22389[1] = 1;
                return statearr_22389;
              };
              var state_machine__5999__auto____1 = function(state_22363) {
                while (true) {
                  var ret_value__6000__auto__ = function() {
                    try {
                      while (true) {
                        var result__6001__auto__ = switch__5998__auto__.call(null, state_22363);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6001__auto__;
                        }
                        break;
                      }
                    } catch (e22390) {
                      if (e22390 instanceof Object) {
                        var ex__6002__auto__ = e22390;
                        var statearr_22391_22411 = state_22363;
                        statearr_22391_22411[5] = ex__6002__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22363);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e22390;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__22412 = state_22363;
                    state_22363 = G__22412;
                    continue;
                  } else {
                    return ret_value__6000__auto__;
                  }
                  break;
                }
              };
              state_machine__5999__auto__ = function(state_22363) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5999__auto____0.call(this);
                  case 1:
                    return state_machine__5999__auto____1.call(this, state_22363);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
              state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
              return state_machine__5999__auto__;
            }();
          }(switch__5998__auto__);
        }();
        var state__6070__auto__ = function() {
          var statearr_22392 = f__6069__auto__.call(null);
          statearr_22392[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto__;
          return statearr_22392;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
      });
      return c__6068__auto__;
    };
    omchaya.components.history_player.t22313.prototype.om$core$IDisplayName$ = true;
    omchaya.components.history_player.t22313.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var or__3443__auto__ = (new cljs.core.Keyword(null, "react-name", "react-name", 4800236939)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return "HistoryPlayer";
      }
    };
    omchaya.components.history_player.t22313.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22315) {
      var self__ = this;
      var _22315__$1 = this;
      return self__.meta22314;
    };
    omchaya.components.history_player.t22313.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22315, meta22314__$1) {
      var self__ = this;
      var _22315__$1 = this;
      return new omchaya.components.history_player.t22313(self__.opts, self__.owner, self__.app, self__.player, meta22314__$1);
    };
    omchaya.components.history_player.__GT_t22313 = function __GT_t22313(opts__$1, owner__$1, app__$1, player__$1, meta22314) {
      return new omchaya.components.history_player.t22313(opts__$1, owner__$1, app__$1, player__$1, meta22314);
    };
  }
  return new omchaya.components.history_player.t22313(opts, owner, app, player, null);
};
goog.provide("omchaya.api.kandan.callbacks");
goog.require("cljs.core");
goog.require("omchaya.utils");
goog.require("omchaya.utils");
goog.require("goog.json");
goog.require("goog.json");
omchaya.api.kandan.callbacks.send_user_message_BANG_ = function send_user_message_BANG_(api_key, activity, cb) {
  return omchaya.utils.ajax.call(null, [cljs.core.str("http://localhost:3000/channels/"), cljs.core.str((new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615)).cljs$core$IFn$_invoke$arity$1(activity)), cljs.core.str("/activities")].join(""), "POST", goog.json.serialize(cljs.core.clj__GT_js.call(null, cljs.core.merge.call(null, activity, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "user_id", "user_id", 866771329), 1, new cljs.core.Keyword(null, "authentication_token", 
  "authentication_token", 4056168676), api_key, new cljs.core.Keyword(null, "auth_token", "auth_token", 3352104980), api_key, new cljs.core.Keyword(null, "api_key", "api_key", 4508786220), api_key, new cljs.core.Keyword(null, "action", "action", 3885920680), "message"], null)))), cb, cb, {"Content-Type":"application/json"});
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj28986 = {};
  return obj28986;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3431__auto__ = reader;
    if (and__3431__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4070__auto__ = reader == null ? null : reader;
    return function() {
      var or__3443__auto__ = cljs.reader.read_char[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.reader.read_char["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3431__auto__ = reader;
    if (and__3431__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3431__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4070__auto__ = reader == null ? null : reader;
    return function() {
      var or__3443__auto__ = cljs.reader.unread[goog.typeOf(x__4070__auto__)];
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.reader.unread["_"];
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
  return cljs.core._write.call(null, writer__4011__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3443__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3443__auto__)) {
    return or__3443__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__28987) {
    var rdr = cljs.core.first(arglist__28987);
    var msg = cljs.core.rest(arglist__28987);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3431__auto__ = !(ch === "#");
  if (and__3431__auto__) {
    var and__3431__auto____$1 = !(ch === "'");
    if (and__3431__auto____$1) {
      var and__3431__auto____$2 = !(ch === ":");
      if (and__3431__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3431__auto____$2;
      }
    } else {
      return and__3431__auto____$1;
    }
  } else {
    return and__3431__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || (cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch))) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__28988 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__28989 = cljs.reader.read_char.call(null, rdr);
      sb = G__28988;
      ch = G__28989;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || (ch === "\r" || ch == null)) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches = re.exec(s);
  if (matches == null) {
    return null;
  } else {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3 = groups[2];
  if (!(group3 == null || group3.length < 1)) {
    return 0;
  } else {
    var negate = "-" === groups[1] ? -1 : 1;
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[7]) ? [groups[7], parseInt(groups[7])] : new cljs.core.Keyword(null, "default", "default", 2558708147) ? [null, null] : null;
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      return negate * parseInt(n, radix);
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator) / parseInt(denominator);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                  return null;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__28990 = cljs.reader.read_char.call(null, rdr);
      ch = G__28990;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4090__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4090__auto__)) {
        var macrofn = temp__4090__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__28991 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__28991;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__28992 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__28992;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4090__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var obj = temp__4090__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3443__auto__ = ch == null;
      if (or__3443__auto__) {
        return or__3443__auto__;
      } else {
        var or__3443__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3443__auto____$1) {
          return or__3443__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3443__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__28993 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__28994 = cljs.reader.read_char.call(null, reader);
      buffer = G__28993;
      ch = G__28994;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__28995 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__28996 = cljs.reader.read_char.call(null, reader);
        buffer = G__28995;
        ch = G__28996;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          if (new cljs.core.Keyword(null, "default", "default", 2558708147)) {
            var G__28997 = function() {
              buffer.append(ch);
              return buffer;
            }();
            var G__28998 = cljs.reader.read_char.call(null, reader);
            buffer = G__28997;
            ch = G__28998;
            continue;
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(goog.string.contains(token, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || (name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1))) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", 1014018828), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return f;
        } else {
          return null;
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__29000 = o;
    if (G__29000) {
      var bit__4093__auto__ = G__29000.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4093__auto__ || G__29000.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__29000.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__29000);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__29000);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", -1545057749, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return null;
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return null;
            } else {
              return null;
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__29001 = reader;
        var G__29002 = eof_is_error;
        var G__29003 = sentinel;
        var G__29004 = is_recursive;
        reader = G__29001;
        eof_is_error = G__29002;
        sentinel = G__29003;
        is_recursive = G__29004;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__29005 = cljs.reader.read_comment.call(null, reader, ch);
          var G__29006 = eof_is_error;
          var G__29007 = sentinel;
          var G__29008 = is_recursive;
          reader = G__29005;
          eof_is_error = G__29006;
          sentinel = G__29007;
          is_recursive = G__29008;
          continue;
        } else {
          if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var f = cljs.reader.macros.call(null, ch);
            var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : new cljs.core.Keyword(null, "else", "else", 1017020587) ? cljs.reader.read_symbol.call(null, reader, ch) : null;
            if (res === reader) {
              var G__29009 = reader;
              var G__29010 = eof_is_error;
              var G__29011 = sentinel;
              var G__29012 = is_recursive;
              reader = G__29009;
              eof_is_error = G__29010;
              sentinel = G__29011;
              is_recursive = G__29012;
              continue;
            } else {
              return res;
            }
          } else {
            return null;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, true, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var b = new goog.string.StringBuffer(s);
        while (true) {
          if (b.getLength() < width) {
            var G__29013 = b.append("0");
            b = G__29013;
            continue;
          } else {
            return b.toString();
          }
          break;
        }
      } else {
        return null;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(month, leap_year_QMARK_) {
    return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
  };
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__29015 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__29015, 0, null);
  var years = cljs.core.nth.call(null, vec__29015, 1, null);
  var months = cljs.core.nth.call(null, vec__29015, 2, null);
  var days = cljs.core.nth.call(null, vec__29015, 3, null);
  var hours = cljs.core.nth.call(null, vec__29015, 4, null);
  var minutes = cljs.core.nth.call(null, vec__29015, 5, null);
  var seconds = cljs.core.nth.call(null, vec__29015, 6, null);
  var fraction = cljs.core.nth.call(null, vec__29015, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__29015, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__29015, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__29015, 10, null);
  var v = vec__29015;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3443__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4090__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4090__auto__)) {
    var vec__29017 = temp__4090__auto__;
    var years = cljs.core.nth.call(null, vec__29017, 0, null);
    var months = cljs.core.nth.call(null, vec__29017, 1, null);
    var days = cljs.core.nth.call(null, vec__29017, 2, null);
    var hours = cljs.core.nth.call(null, vec__29017, 3, null);
    var minutes = cljs.core.nth.call(null, vec__29017, 4, null);
    var seconds = cljs.core.nth.call(null, vec__29017, 5, null);
    var ms = cljs.core.nth.call(null, vec__29017, 6, null);
    var offset = cljs.core.nth.call(null, vec__29017, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__29030_29042 = cljs.core.seq.call(null, form);
    var chunk__29031_29043 = null;
    var count__29032_29044 = 0;
    var i__29033_29045 = 0;
    while (true) {
      if (i__29033_29045 < count__29032_29044) {
        var x_29046 = cljs.core._nth.call(null, chunk__29031_29043, i__29033_29045);
        arr.push(x_29046);
        var G__29047 = seq__29030_29042;
        var G__29048 = chunk__29031_29043;
        var G__29049 = count__29032_29044;
        var G__29050 = i__29033_29045 + 1;
        seq__29030_29042 = G__29047;
        chunk__29031_29043 = G__29048;
        count__29032_29044 = G__29049;
        i__29033_29045 = G__29050;
        continue;
      } else {
        var temp__4092__auto___29051 = cljs.core.seq.call(null, seq__29030_29042);
        if (temp__4092__auto___29051) {
          var seq__29030_29052__$1 = temp__4092__auto___29051;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__29030_29052__$1)) {
            var c__4191__auto___29053 = cljs.core.chunk_first.call(null, seq__29030_29052__$1);
            var G__29054 = cljs.core.chunk_rest.call(null, seq__29030_29052__$1);
            var G__29055 = c__4191__auto___29053;
            var G__29056 = cljs.core.count.call(null, c__4191__auto___29053);
            var G__29057 = 0;
            seq__29030_29042 = G__29054;
            chunk__29031_29043 = G__29055;
            count__29032_29044 = G__29056;
            i__29033_29045 = G__29057;
            continue;
          } else {
            var x_29058 = cljs.core.first.call(null, seq__29030_29052__$1);
            arr.push(x_29058);
            var G__29059 = cljs.core.next.call(null, seq__29030_29052__$1);
            var G__29060 = null;
            var G__29061 = 0;
            var G__29062 = 0;
            seq__29030_29042 = G__29059;
            chunk__29031_29043 = G__29060;
            count__29032_29044 = G__29061;
            i__29033_29045 = G__29062;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj29035 = {};
        return obj29035;
      }();
      var seq__29036_29063 = cljs.core.seq.call(null, form);
      var chunk__29037_29064 = null;
      var count__29038_29065 = 0;
      var i__29039_29066 = 0;
      while (true) {
        if (i__29039_29066 < count__29038_29065) {
          var vec__29040_29067 = cljs.core._nth.call(null, chunk__29037_29064, i__29039_29066);
          var k_29068 = cljs.core.nth.call(null, vec__29040_29067, 0, null);
          var v_29069 = cljs.core.nth.call(null, vec__29040_29067, 1, null);
          obj[cljs.core.name.call(null, k_29068)] = v_29069;
          var G__29070 = seq__29036_29063;
          var G__29071 = chunk__29037_29064;
          var G__29072 = count__29038_29065;
          var G__29073 = i__29039_29066 + 1;
          seq__29036_29063 = G__29070;
          chunk__29037_29064 = G__29071;
          count__29038_29065 = G__29072;
          i__29039_29066 = G__29073;
          continue;
        } else {
          var temp__4092__auto___29074 = cljs.core.seq.call(null, seq__29036_29063);
          if (temp__4092__auto___29074) {
            var seq__29036_29075__$1 = temp__4092__auto___29074;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__29036_29075__$1)) {
              var c__4191__auto___29076 = cljs.core.chunk_first.call(null, seq__29036_29075__$1);
              var G__29077 = cljs.core.chunk_rest.call(null, seq__29036_29075__$1);
              var G__29078 = c__4191__auto___29076;
              var G__29079 = cljs.core.count.call(null, c__4191__auto___29076);
              var G__29080 = 0;
              seq__29036_29063 = G__29077;
              chunk__29037_29064 = G__29078;
              count__29038_29065 = G__29079;
              i__29039_29066 = G__29080;
              continue;
            } else {
              var vec__29041_29081 = cljs.core.first.call(null, seq__29036_29075__$1);
              var k_29082 = cljs.core.nth.call(null, vec__29041_29081, 0, null);
              var v_29083 = cljs.core.nth.call(null, vec__29041_29081, 1, null);
              obj[cljs.core.name.call(null, k_29082)] = v_29083;
              var G__29084 = cljs.core.next.call(null, seq__29036_29075__$1);
              var G__29085 = null;
              var G__29086 = 0;
              var G__29087 = 0;
              seq__29036_29063 = G__29084;
              chunk__29037_29064 = G__29085;
              count__29038_29065 = G__29086;
              i__29039_29066 = G__29087;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
      } else {
        return null;
      }
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return f;
  });
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(_) {
    return null;
  });
  return old_parser;
};
goog.provide("omchaya.replay");
goog.require("cljs.core");
goog.require("omchaya.utils");
goog.require("cljs.core.async");
goog.require("omchaya.utils");
goog.require("cljs.core.async");
goog.require("omchaya.api.kandan.callbacks");
goog.require("omchaya.components.history_player");
goog.require("cljs.reader");
goog.require("omchaya.api.kandan.callbacks");
goog.require("om.core");
goog.require("om.core");
goog.require("omchaya.utils");
goog.require("cljs.reader");
goog.require("cljs.core.async");
goog.require("omchaya.components.history_player");
omchaya.replay.example_replay = cljs.reader.read_string.call(null, '[[:controls [:tab-selected "1"]] [:controls [:api-key-updated "isQgo1DvsegpyQ9Sq9ys"]] [:controls [:user-message-focused]] [:controls [:user-message-updated "E"]] [:controls [:user-message-updated "E"]] [:controls [:user-message-updated "Ex"]] [:controls [:user-message-updated "Exam"]] [:controls [:user-message-updated "Examp"]] [:controls [:user-message-updated "Exampl"]] [:controls [:user-message-updated "Example"]] [:controls [:user-message-updated "Example"]] [:controls [:user-message-updated "Example "]] [:controls [:user-message-updated "Example i"]] [:controls [:user-message-updated "Example in"]] [:controls [:user-message-updated "Example inp"]] [:controls [:user-message-updated "Example inpu"]] [:controls [:user-message-updated "Example input"]] [:controls [:user-message-submitted]] [:controls [:user-message-updated "W"]] [:controls [:user-message-updated "W"]] [:controls [:user-message-updated "Wa"]] [:controls [:user-message-updated "Wat"]] [:controls [:user-message-updated "Watch"]] [:controls [:user-message-updated "Watch"]] [:controls [:user-message-updated "Watch "]] [:controls [:user-message-updated "Watch me"]] [:controls [:user-message-updated "Watch me "]] [:controls [:user-message-updated "Watch me "]] [:controls [:user-message-updated "Watch me no"]] [:controls [:user-message-updated "Watch me now"]] [:controls [:user-message-updated "Watch me now"]] [:controls [:user-message-submitted]] [:controls [:user-message-blurred]] [:controls [:user-message-focused]] [:controls [:user-message-updated "/"]] [:controls [:user-message-updated "/pl"]] [:controls [:user-message-updated "/pl"]] [:controls [:user-message-updated "/pla"]] [:controls [:user-message-updated "/play"]] [:controls [:user-message-updated "/play "]] [:controls [:user-message-updated "/play https://dl.dropboxusercontent.com/u/412963/11%20Charlotte.mp3"]] [:controls [:user-message-submitted]] [:controls [:audio-player-source-updated ["https://dl.dropboxusercontent.com/u/412963/11%20Charlotte.mp3" "1"]]] [:controls [:audio-player-started "1"]] [:controls [:user-message-blurred]] [:controls [:audio-player-stopped "1"]] [:controls [:user-message-focused]] [:controls [:user-message-updated "/"]] [:controls [:user-message-updated "/pl"]] [:controls [:user-message-updated "/pl"]] [:controls [:user-message-updated "/pla"]] [:controls [:user-message-updated "/play"]] [:controls [:user-message-updated "/pla"]] [:controls [:user-message-updated "/pl"]] [:controls [:user-message-updated "/p"]] [:controls [:user-message-updated "/"]] [:controls [:user-message-updated "/q"]] [:controls [:user-message-updated "/qu"]] [:controls [:user-message-updated "/que"]] [:controls [:user-message-updated "/queu"]] [:controls [:user-message-updated "/queue"]] [:controls [:user-message-updated "/queue "]] [:controls [:user-message-updated "/queue https://dl.dropboxusercontent.com/u/412963/moresoldiers.mp3"]] [:controls [:user-message-submitted]] [:controls [:playlist-entry-queued ["1" "https://dl.dropboxusercontent.com/u/412963/moresoldiers.mp3"]]] [:controls [:user-message-blurred]] [:controls [:user-message-focused]] [:controls [:user-message-updated "O"]] [:controls [:user-message-updated "O"]] [:controls [:user-message-updated "Ok"]] [:controls [:user-message-updated "Ok,"]] [:controls [:user-message-updated "Ok, "]] [:controls [:user-message-updated "Ok, an"]] [:controls [:user-message-updated "Ok, ano"]] [:controls [:user-message-updated "Ok, anot"]] [:controls [:user-message-updated "Ok, anot"]] [:controls [:user-message-updated "Ok, anothe"]] [:controls [:user-message-updated "Ok, another "]] [:controls [:user-message-updated "Ok, another "]] [:controls [:user-message-updated "Ok, another "]] [:controls [:user-message-updated "Ok, another on"]] [:controls [:user-message-updated "Ok, another one"]] [:controls [:user-message-updated "Ok, another one"]] [:controls [:user-message-updated "Ok, another one."]] [:controls [:user-message-updated "Ok, another one.."]] [:controls [:user-message-updated "Ok, another one..."]] [:controls [:user-message-submitted]] [:controls [:user-message-updated "/"]] [:controls [:user-message-updated "/q"]] [:controls [:user-message-updated "/qu"]] [:controls [:user-message-updated "/que"]] [:controls [:user-message-updated "/queue"]] [:controls [:user-message-updated "/queue"]] [:controls [:user-message-updated "/queue "]] [:controls [:user-message-updated "/queue https://dl.dropboxusercontent.com/u/412963/Golf%20Clap.mp3"]] [:controls [:user-message-submitted]] [:controls [:playlist-entry-queued ["1" "https://dl.dropboxusercontent.com/u/412963/Golf%20Clap.mp3"]]] [:controls [:user-message-blurred]] [:controls [:playlist-entry-played [1 "1"]]] [:controls [:audio-player-source-updated ["https://dl.dropboxusercontent.com/u/412963/moresoldiers.mp3" "1"]]] [:controls [:audio-player-started "1"]] [:controls [:audio-player-stopped "1"]] [:controls [:user-message-focused]] [:controls [:user-message-updated "q"]] [:controls [:user-message-updated "que"]] [:controls [:user-message-updated "que"]] [:controls [:user-message-updated "queue"]] [:controls [:user-message-updated "queue"]] [:controls [:user-message-updated "queue "]] [:controls [:user-message-updated "queue "]] [:controls [:user-message-updated "queue "]] [:controls [:user-message-updated "/queue "]] [:controls [:user-message-updated "/queue "]] [:controls [:user-message-updated "/queue "]] [:controls [:user-message-updated "/queue https://dl.dropboxusercontent.com/u/412963/11%20Charlotte.mp3"]] [:controls [:user-message-submitted]] [:controls [:playlist-entry-queued ["1" "https://dl.dropboxusercontent.com/u/412963/11%20Charlotte.mp3"]]] [:controls [:user-message-blurred]] [:controls [:playlist-entry-played [3 "1"]]] [:controls [:audio-player-source-updated ["https://dl.dropboxusercontent.com/u/412963/11%20Charlotte.mp3" "1"]]] [:controls [:audio-player-started "1"]] [:controls [:user-message-focused]] [:controls [:user-message-updated "("]] [:controls [:user-message-updated "("]] [:controls [:user-message-updated "(no"]] [:controls [:user-message-updated "(not"]] [:controls [:user-message-updated "(not"]] [:controls [:user-message-updated "(notb"]] [:controls [:user-message-updated "(notbad"]] [:controls [:user-message-updated "(notbad"]] [:controls [:user-message-updated "(notbad)"]] [:controls [:user-message-updated "(notbad)"]] [:controls [:user-message-submitted]] [:controls [:user-message-blurred]] [:controls [:user-message-focused]] [:controls [:user-message-updated "A"]] [:controls [:user-message-updated "A"]] [:controls [:user-message-updated ""]] [:controls [:user-message-updated "@"]] [:controls [:user-message-updated "@"]] [:controls [:user-message-updated "@"]] [:controls [:user-message-updated "@n"]] [:controls [:user-message-updated "@nb"]] [:controls [:user-message-updated "@nb "]] [:controls [:user-message-updated "@nb he"]] [:controls [:user-message-updated "@nb her"]] [:controls [:user-message-updated "@nb here"]] [:controls [:user-message-updated "@nb here\'"]] [:controls [:user-message-updated "@nb here\'"]] [:controls [:user-message-updated "@nb here\'s"]] [:controls [:user-message-updated "@nb here\'s "]] [:controls [:user-message-updated "@nb here\'s a "]] [:controls [:user-message-updated "@nb here\'s a "]] [:controls [:user-message-updated "@nb here\'s a g"]] [:controls [:user-message-updated "@nb here\'s a go"]] [:controls [:user-message-updated "@nb here\'s a good"]] [:controls [:user-message-updated "@nb here\'s a good"]] [:controls [:user-message-updated "@nb here\'s a good "]] [:controls [:user-message-updated "@nb here\'s a good e"]] [:controls [:user-message-updated "@nb here\'s a good ep"]] [:controls [:user-message-updated "@nb here\'s a good epi"]] [:controls [:user-message-updated "@nb here\'s a good epis"]] [:controls [:user-message-updated "@nb here\'s a good episo"]] [:controls [:user-message-updated "@nb here\'s a good episode"]] [:controls [:user-message-updated "@nb here\'s a good episode "]] [:controls [:user-message-updated "@nb here\'s a good episode "]] [:controls [:user-message-updated "@nb here\'s a good episode of"]] [:controls [:user-message-updated "@nb here\'s a good episode of "]] [:controls [:user-message-updated "@nb here\'s a good episode of "]] [:controls [:user-message-updated "@nb here\'s a good episode of M"]] [:controls [:user-message-updated "@nb here\'s a good episode of MT"]] [:controls [:user-message-updated "@nb here\'s a good episode of MTW"]] [:controls [:user-message-updated "@nb here\'s a good episode of MTW"]] [:controls [:user-message-updated "@nb here\'s a good episode of MTW "]] [:controls [:user-message-updated "@nb here\'s a good episode of MTW f"]] [:controls [:user-message-updated "@nb here\'s a good episode of MTW fo"]] [:controls [:user-message-updated "@nb here\'s a good episode of MTW for "]] [:controls [:user-message-updated "@nb here\'s a good episode of MTW for "]] [:controls [:user-message-updated "@nb here\'s a good episode of MTW for y"]] [:controls [:user-message-updated "@nb here\'s a good episode of MTW for you"]] [:controls [:user-message-updated "@nb here\'s a good episode of MTW for you"]] [:controls [:user-message-updated "@nb here\'s a good episode of MTW for you "]] [:controls [:user-message-updated "@nb here\'s a good episode of MTW for you http://www.youtube.com/watch?v\x3dutv1la0q5ao"]] [:controls [:user-message-submitted]] [:controls [:user-message-updated "H"]] [:controls [:user-message-updated "H"]] [:controls [:user-message-updated "Hop"]] [:controls [:user-message-updated "Hop"]] [:controls [:user-message-updated "Hope"]] [:controls [:user-message-updated "Hope "]] [:controls [:user-message-updated ""]] [:controls [:user-message-updated ""]] [:controls [:user-message-updated "I"]] [:controls [:user-message-updated "I"]] [:controls [:user-message-updated "I\'"]] [:controls [:user-message-updated "I\'m"]] [:controls [:user-message-updated "I\'m "]] [:controls [:user-message-updated "I\'m su"]] [:controls [:user-message-updated "I\'m su"]] [:controls [:user-message-updated "I\'m sure "]] [:controls [:user-message-updated "I\'m sure "]] [:controls [:user-message-updated "I\'m sure "]] [:controls [:user-message-updated "I\'m sure y"]] [:controls [:user-message-updated "I\'m sure you"]] [:controls [:user-message-updated "I\'m sure you"]] [:controls [:user-message-updated "I\'m sure you\'"]] [:controls [:user-message-updated "I\'m sure you\'l"]] [:controls [:user-message-updated "I\'m sure you\'ll"]] [:controls [:user-message-updated "I\'m sure you\'ll "]] [:controls [:user-message-updated "I\'m sure you\'ll l"]] [:controls [:user-message-updated "I\'m sure you\'ll lo"]] [:controls [:user-message-updated "I\'m sure you\'ll l"]] [:controls [:user-message-updated "I\'m sure you\'ll li"]] [:controls [:user-message-updated "I\'m sure you\'ll like"]] [:controls [:user-message-updated "I\'m sure you\'ll like "]] [:controls [:user-message-updated "I\'m sure you\'ll like "]] [:controls [:user-message-updated "I\'m sure you\'ll like i"]] [:controls [:user-message-updated "I\'m sure you\'ll like it "]] [:controls [:user-message-updated "I\'m sure you\'ll like it "]] [:controls [:user-message-updated "I\'m sure you\'ll like it :"]] [:controls [:user-message-updated "I\'m sure you\'ll like it :"]] [:controls [:user-message-updated "I\'m sure you\'ll like it :+"]] [:controls [:user-message-updated "I\'m sure you\'ll like it :+!"]] [:controls [:user-message-updated "I\'m sure you\'ll like it :+!"]] [:controls [:user-message-updated "I\'m sure you\'ll like it :+"]] [:controls [:user-message-updated "I\'m sure you\'ll like it :+1"]] [:controls [:user-message-updated "I\'m sure you\'ll like it :+1:"]] [:controls [:user-message-updated "I\'m sure you\'ll like it :+1:"]] [:controls [:user-message-submitted]] [:controls [:user-message-blurred]] [:controls [:audio-player-stopped "1"]]]');
omchaya.replay.replay_history_step_BANG_ = function() {
  var method_table__4301__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4302__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4303__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4304__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4305__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("replay-history-step!", function(channels_map, format_version, step, player_control_ch) {
    return format_version;
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4305__auto__, method_table__4301__auto__, prefer_table__4302__auto__, method_cache__4303__auto__, cached_hierarchy__4304__auto__);
}();
omchaya.replay.player_control_ch = cljs.core.async.chan.call(null);
omchaya.replay.player_drag_ch = cljs.core.async.chan.call(null);
omchaya.replay.api_ch = cljs.core.async.chan.call(null);
omchaya.replay.initial_player_state = function initial_player_state(app_comms, player_comms) {
  return cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "replays", "replays", 2108401886), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "replay-list", "replay-list", 2022921782), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "history", "history", 1940838406), omchaya.replay.example_replay, new cljs.core.Keyword(null, 
  "name", "name", 1017277949), "Example replay", new cljs.core.Keyword(null, "format_version", "format_version", 3631466498), 1], null)], null), new cljs.core.Keyword(null, "queued-replay", "queued-replay", 2482676979), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "active-step", "active-step", 4211347621), 0, new cljs.core.Keyword(null, "format_version", "format_version", 3631466498), 1], null)], null), new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.PersistentArrayMap(null, 
  2, [new cljs.core.Keyword(null, "position", "position", 1761709211), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [16, 16], null), new cljs.core.Keyword(null, "offset", "offset", 4289091589), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0], null)], null), new cljs.core.Keyword(null, "player-comms", "player-comms", 3952961645), player_comms, new cljs.core.Keyword(null, "app-comms", "app-comms", 1410062253), app_comms, 
  new cljs.core.Keyword(null, "state", "state", 1123661827), new cljs.core.Keyword(null, "stopped", "stopped", 3424552255)], null));
};
cljs.core._add_method.call(null, omchaya.replay.replay_history_step_BANG_, 1, function(channels_map, format_version, step, player_control_ch) {
  var c__6068__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6069__auto__ = function() {
      var switch__5998__auto__ = function(state_23447) {
        var state_val_23448 = state_23447[1];
        if (state_val_23448 === 5) {
          var inst_23445 = state_23447[2];
          var state_23447__$1 = state_23447;
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23447__$1, inst_23445);
        } else {
          if (state_val_23448 === 4) {
            var state_23447__$1 = state_23447;
            var statearr_23449_23463 = state_23447__$1;
            statearr_23449_23463[2] = null;
            statearr_23449_23463[1] = 5;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_23448 === 3) {
              var inst_23437 = state_23447[7];
              var inst_23433 = state_23447[8];
              var inst_23432 = state_23447[9];
              var inst_23439 = cljs.core.pr_str.call(null, inst_23432);
              var inst_23440 = cljs.core.pr_str.call(null, inst_23433);
              var inst_23441 = console.log(inst_23439, " : ", inst_23440);
              var inst_23442 = cljs.core.async.put_BANG_.call(null, inst_23437, inst_23433);
              var state_23447__$1 = function() {
                var statearr_23450 = state_23447;
                statearr_23450[10] = inst_23441;
                return statearr_23450;
              }();
              var statearr_23451_23464 = state_23447__$1;
              statearr_23451_23464[2] = inst_23442;
              statearr_23451_23464[1] = 5;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_23448 === 2) {
                var inst_23437 = state_23447[7];
                var inst_23432 = state_23447[9];
                var inst_23431 = state_23447[11];
                var inst_23436 = state_23447[2];
                var inst_23437__$1 = cljs.core.get.call(null, inst_23431, inst_23432);
                var state_23447__$1 = function() {
                  var statearr_23452 = state_23447;
                  statearr_23452[12] = inst_23436;
                  statearr_23452[7] = inst_23437__$1;
                  return statearr_23452;
                }();
                if (cljs.core.truth_(inst_23437__$1)) {
                  var statearr_23453_23465 = state_23447__$1;
                  statearr_23453_23465[1] = 3;
                } else {
                  var statearr_23454_23466 = state_23447__$1;
                  statearr_23454_23466[1] = 4;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_23448 === 1) {
                  var inst_23431 = cljs.core.dissoc.call(null, channels_map, new cljs.core.Keyword(null, "error", "error", 1110689146));
                  var inst_23432 = cljs.core.first.call(null, step);
                  var inst_23433 = cljs.core.last.call(null, step);
                  var inst_23434 = cljs.core.async.timeout.call(null, 1E3);
                  var state_23447__$1 = function() {
                    var statearr_23455 = state_23447;
                    statearr_23455[8] = inst_23433;
                    statearr_23455[9] = inst_23432;
                    statearr_23455[11] = inst_23431;
                    return statearr_23455;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23447__$1, 2, inst_23434);
                } else {
                  return null;
                }
              }
            }
          }
        }
      };
      return function(switch__5998__auto__) {
        return function() {
          var state_machine__5999__auto__ = null;
          var state_machine__5999__auto____0 = function() {
            var statearr_23459 = [null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_23459[0] = state_machine__5999__auto__;
            statearr_23459[1] = 1;
            return statearr_23459;
          };
          var state_machine__5999__auto____1 = function(state_23447) {
            while (true) {
              var ret_value__6000__auto__ = function() {
                try {
                  while (true) {
                    var result__6001__auto__ = switch__5998__auto__.call(null, state_23447);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6001__auto__;
                    }
                    break;
                  }
                } catch (e23460) {
                  if (e23460 instanceof Object) {
                    var ex__6002__auto__ = e23460;
                    var statearr_23461_23467 = state_23447;
                    statearr_23461_23467[5] = ex__6002__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23447);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e23460;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__23468 = state_23447;
                state_23447 = G__23468;
                continue;
              } else {
                return ret_value__6000__auto__;
              }
              break;
            }
          };
          state_machine__5999__auto__ = function(state_23447) {
            switch(arguments.length) {
              case 0:
                return state_machine__5999__auto____0.call(this);
              case 1:
                return state_machine__5999__auto____1.call(this, state_23447);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
          return state_machine__5999__auto__;
        }();
      }(switch__5998__auto__);
    }();
    var state__6070__auto__ = function() {
      var statearr_23462 = f__6069__auto__.call(null);
      statearr_23462[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto__;
      return statearr_23462;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
  });
  return c__6068__auto__;
});
omchaya.replay.player_control_event = function() {
  var method_table__4301__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4302__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4303__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4304__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4305__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("player-control-event", function(message, args, state) {
    return message;
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4305__auto__, method_table__4301__auto__, prefer_table__4302__auto__, method_cache__4303__auto__, cached_hierarchy__4304__auto__);
}();
cljs.core._add_method.call(null, omchaya.replay.player_control_event, new cljs.core.Keyword(null, "default", "default", 2558708147), function(message, data, player_state) {
  return console.log("No message handler for ", cljs.core.pr_str.call(null, message));
});
cljs.core._add_method.call(null, omchaya.replay.player_control_event, new cljs.core.Keyword(null, "player-started", "player-started", 806961415), function(message, data, player_state) {
  return cljs.core.assoc.call(null, player_state, new cljs.core.Keyword(null, "state", "state", 1123661827), new cljs.core.Keyword(null, "playing", "playing", 520340384));
});
cljs.core._add_method.call(null, omchaya.replay.player_control_event, new cljs.core.Keyword(null, "player-stopped", "player-stopped", 819827283), function(message, data, player_state) {
  return cljs.core.assoc.call(null, player_state, new cljs.core.Keyword(null, "state", "state", 1123661827), new cljs.core.Keyword(null, "stopped", "stopped", 3424552255));
});
cljs.core._add_method.call(null, omchaya.replay.player_control_event, new cljs.core.Keyword(null, "step-selected", "step-selected", 3543353326), function(message, data, player_state) {
  return cljs.core.assoc_in.call(null, player_state, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "replays", "replays", 2108401886), new cljs.core.Keyword(null, "queued-replay", "queued-replay", 2482676979), new cljs.core.Keyword(null, "active-step", "active-step", 4211347621)], null), data);
});
cljs.core._add_method.call(null, omchaya.replay.player_control_event, new cljs.core.Keyword(null, "replay-selected", "replay-selected", 760550707), function(message, data, player_state) {
  return cljs.core.assoc_in.call(null, player_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "replays", "replays", 2108401886), new cljs.core.Keyword(null, "queued-replay", "queued-replay", 2482676979)], null), cljs.core.nth.call(null, cljs.core.get_in.call(null, player_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "replays", "replays", 2108401886), new cljs.core.Keyword(null, 
  "replay-list", "replay-list", 2022921782)], null)), data));
});
omchaya.replay.player_drag_event = function() {
  var method_table__4301__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4302__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4303__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4304__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4305__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("player-drag-event", function(message, args, state) {
    return message;
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4305__auto__, method_table__4301__auto__, prefer_table__4302__auto__, method_cache__4303__auto__, cached_hierarchy__4304__auto__);
}();
cljs.core._add_method.call(null, omchaya.replay.player_drag_event, new cljs.core.Keyword(null, "history-player-grabbed", "history-player-grabbed", 1379847572), function(message, initial_mouse_pos, player_state) {
  var vec__23469 = initial_mouse_pos;
  var mx = cljs.core.nth.call(null, vec__23469, 0, null);
  var my = cljs.core.nth.call(null, vec__23469, 1, null);
  var vec__23470 = cljs.core.get_in.call(null, player_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "position", "position", 1761709211)], null));
  var px = cljs.core.nth.call(null, vec__23470, 0, null);
  var py = cljs.core.nth.call(null, vec__23470, 1, null);
  var offset = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mx - px, my - py], null);
  return cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, player_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "dragging?", "dragging?", 709673026)], null), true), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "offset", "offset", 4289091589)], 
  null), offset);
});
cljs.core._add_method.call(null, omchaya.replay.player_drag_event, new cljs.core.Keyword(null, "history-player-released", "history-player-released", 3129319138), function(message, data, player_state) {
  return cljs.core.assoc_in.call(null, player_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "dragging?", "dragging?", 709673026)], null), false);
});
cljs.core._add_method.call(null, omchaya.replay.player_drag_event, new cljs.core.Keyword(null, "mouse-moved", "mouse-moved", 753447677), function(message, mouse_position, player_state) {
  if (cljs.core.truth_(cljs.core.get_in.call(null, player_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "dragging?", "dragging?", 709673026)], null)))) {
    var vec__23471 = mouse_position;
    var mx = cljs.core.nth.call(null, vec__23471, 0, null);
    var my = cljs.core.nth.call(null, vec__23471, 1, null);
    var vec__23472 = cljs.core.get_in.call(null, player_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "offset", "offset", 4289091589)], null));
    var off_x = cljs.core.nth.call(null, vec__23472, 0, null);
    var off_y = cljs.core.nth.call(null, vec__23472, 1, null);
    var vec__23473 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mx - off_x, my - off_y], null);
    var tnx = cljs.core.nth.call(null, vec__23473, 0, null);
    var tny = cljs.core.nth.call(null, vec__23473, 1, null);
    var min_x = -150;
    var max_x = document.body.clientWidth - 50;
    var min_y = 0;
    var max_y = document.body.clientHeight - 50;
    var new_position = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [min_x > tnx ? min_x : tnx > max_x ? max_x : new cljs.core.Keyword(null, "else", "else", 1017020587) ? tnx : null, min_y > tny ? min_y : tny > max_y ? max_y : new cljs.core.Keyword(null, "else", "else", 1017020587) ? tny : null], null);
    return cljs.core.assoc_in.call(null, player_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "position", "position", 1761709211)], null), new_position);
  } else {
    return player_state;
  }
});
omchaya.replay.player_api_event = function() {
  var method_table__4301__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4302__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4303__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4304__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4305__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("player-api-event", function(message, args, state) {
    return message;
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4305__auto__, method_table__4301__auto__, prefer_table__4302__auto__, method_cache__4303__auto__, cached_hierarchy__4304__auto__);
}();
cljs.core._add_method.call(null, omchaya.replay.player_api_event, new cljs.core.Keyword(null, "retrieve-replays-succeeded", "retrieve-replays-succeeded", 2669240161), function(message, p__23475, player_state) {
  var vec__23476 = p__23475;
  var _ = cljs.core.nth.call(null, vec__23476, 0, null);
  var response = cljs.core.nth.call(null, vec__23476, 1, null);
  return cljs.core.assoc_in.call(null, player_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "replays", "replays", 2108401886), new cljs.core.Keyword(null, "replay-list", "replay-list", 2022921782)], null), cljs.core.map.call(null, function(p1__23474_SHARP_) {
    return cljs.core.assoc.call(null, p1__23474_SHARP_, new cljs.core.Keyword(null, "history", "history", 1940838406), cljs.reader.read_string.call(null, (new cljs.core.Keyword(null, "history", "history", 1940838406)).cljs$core$IFn$_invoke$arity$1(p1__23474_SHARP_)));
  }, (new cljs.core.Keyword(null, "replays", "replays", 2108401886)).cljs$core$IFn$_invoke$arity$1(response)));
});
omchaya.replay.start_player_loop_BANG_ = function start_player_loop_BANG_(player_state, player_drag_ch, player_control_ch, step_delay) {
  var app_comms = (new cljs.core.Keyword(null, "app-comms", "app-comms", 1410062253)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, player_state));
  var player_comms = (new cljs.core.Keyword(null, "player-comms", "player-comms", 3952961645)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, player_state));
  var c__6068__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6069__auto__ = function() {
      var switch__5998__auto__ = function(state_23728) {
        var state_val_23729 = state_23728[1];
        if (state_val_23729 === 1) {
          var state_23728__$1 = state_23728;
          var statearr_23730_23773 = state_23728__$1;
          statearr_23730_23773[2] = null;
          statearr_23730_23773[1] = 4;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_23729 === 2) {
            var inst_23726 = state_23728[2];
            var state_23728__$1 = state_23728;
            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23728__$1, inst_23726);
          } else {
            if (state_val_23729 === 3) {
              var inst_23626 = state_23728[2];
              var inst_23627 = omchaya.api.kandan.callbacks.send_user_message_BANG_ = omchaya.api.kandan.callbacks.send_user_message_BANG_;
              var state_23728__$1 = function() {
                var statearr_23731 = state_23728;
                statearr_23731[7] = inst_23627;
                statearr_23731[8] = inst_23626;
                return statearr_23731;
              }();
              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23728__$1);
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_23729 === 4) {
                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_23728, null, null, 3, 2);
                var inst_23631 = function() {
                  var send_user_message_BANG_23625 = omchaya.api.kandan.callbacks.send_user_message_BANG_;
                  return function(send_user_message_BANG_23625, _, state_val_23729) {
                    return function() {
                      return omchaya.utils.mprint.call(null, "Stubbed fn called!");
                    };
                  }(send_user_message_BANG_23625, _, state_val_23729);
                }();
                var inst_23632 = omchaya.api.kandan.callbacks.send_user_message_BANG_ = inst_23631;
                var inst_23633 = omchaya.utils.mprint.call(null, "Stubbed functions for replay, replaying a v1 history");
                var state_23728__$1 = function() {
                  var statearr_23732 = state_23728;
                  statearr_23732[9] = inst_23633;
                  statearr_23732[10] = inst_23632;
                  return statearr_23732;
                }();
                var statearr_23733_23774 = state_23728__$1;
                statearr_23733_23774[2] = null;
                statearr_23733_23774[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_23729 === 5) {
                  var inst_23642 = state_23728[11];
                  var inst_23642__$1 = cljs.core.async.timeout.call(null, step_delay);
                  var inst_23643 = [player_control_ch, player_drag_ch, omchaya.replay.api_ch, inst_23642__$1];
                  var inst_23644 = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_23643, null);
                  var state_23728__$1 = function() {
                    var statearr_23734 = state_23728;
                    statearr_23734[11] = inst_23642__$1;
                    return statearr_23734;
                  }();
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_23728__$1, 7, inst_23644);
                } else {
                  if (state_val_23729 === 6) {
                    var inst_23724 = state_23728[2];
                    var state_23728__$1 = state_23728;
                    var statearr_23735_23775 = state_23728__$1;
                    statearr_23735_23775[2] = inst_23724;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23728__$1);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_23729 === 7) {
                      var inst_23648 = state_23728[12];
                      var inst_23646 = state_23728[13];
                      var inst_23646__$1 = state_23728[2];
                      var inst_23647 = cljs.core.nth.call(null, inst_23646__$1, 0, null);
                      var inst_23648__$1 = cljs.core.nth.call(null, inst_23646__$1, 1, null);
                      var inst_23649 = cljs.core._EQ_.call(null, inst_23648__$1, player_control_ch);
                      var state_23728__$1 = function() {
                        var statearr_23736 = state_23728;
                        statearr_23736[12] = inst_23648__$1;
                        statearr_23736[13] = inst_23646__$1;
                        statearr_23736[14] = inst_23647;
                        return statearr_23736;
                      }();
                      if (inst_23649) {
                        var statearr_23737_23776 = state_23728__$1;
                        statearr_23737_23776[1] = 8;
                      } else {
                        var statearr_23738_23777 = state_23728__$1;
                        statearr_23738_23777[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_23729 === 8) {
                        var inst_23648 = state_23728[12];
                        var inst_23642 = state_23728[11];
                        var inst_23646 = state_23728[13];
                        var inst_23647 = state_23728[14];
                        var inst_23652 = cljs.core.nth.call(null, inst_23646, 0, null);
                        var inst_23653 = cljs.core.pr_str.call(null, inst_23652);
                        var inst_23654 = omchaya.utils.mprint.call(null, "Player control: ", inst_23653);
                        var inst_23656 = cljs.core.nth.call(null, inst_23652, 0, null);
                        var inst_23657 = cljs.core.nth.call(null, inst_23652, 1, null);
                        var inst_23658 = function() {
                          var ch23639 = inst_23648;
                          var v = inst_23652;
                          var vec__23651 = inst_23646;
                          var send_user_message_BANG_23625 = omchaya.api.kandan.callbacks.send_user_message_BANG_;
                          var data = inst_23657;
                          var vec__23641 = inst_23646;
                          var val__6077__auto__ = inst_23647;
                          var G__23636 = player_drag_ch;
                          var G__23635 = player_control_ch;
                          var G__23638 = inst_23642;
                          var G__23637 = omchaya.replay.api_ch;
                          var vec__23655 = inst_23652;
                          var message = inst_23656;
                          var ret23640 = inst_23646;
                          return function(ch23639, v, vec__23651, send_user_message_BANG_23625, data, vec__23641, val__6077__auto__, G__23636, G__23635, G__23638, G__23637, vec__23655, message, ret23640, inst_23648, inst_23642, inst_23646, inst_23647, inst_23652, inst_23653, inst_23654, inst_23656, inst_23657, state_val_23729) {
                            return function(state) {
                              return omchaya.replay.player_control_event.call(null, message, data, state);
                            };
                          }(ch23639, v, vec__23651, send_user_message_BANG_23625, data, vec__23641, val__6077__auto__, G__23636, G__23635, G__23638, G__23637, vec__23655, message, ret23640, inst_23648, inst_23642, inst_23646, inst_23647, inst_23652, inst_23653, inst_23654, inst_23656, inst_23657, state_val_23729);
                        }();
                        var inst_23659 = cljs.core.swap_BANG_.call(null, player_state, inst_23658);
                        var state_23728__$1 = function() {
                          var statearr_23739 = state_23728;
                          statearr_23739[15] = inst_23659;
                          statearr_23739[16] = inst_23654;
                          return statearr_23739;
                        }();
                        var statearr_23740_23778 = state_23728__$1;
                        statearr_23740_23778[2] = null;
                        statearr_23740_23778[1] = 5;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_23729 === 9) {
                          var inst_23648 = state_23728[12];
                          var inst_23662 = cljs.core._EQ_.call(null, inst_23648, player_drag_ch);
                          var state_23728__$1 = state_23728;
                          if (inst_23662) {
                            var statearr_23741_23779 = state_23728__$1;
                            statearr_23741_23779[1] = 11;
                          } else {
                            var statearr_23742_23780 = state_23728__$1;
                            statearr_23742_23780[1] = 12;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_23729 === 10) {
                            var inst_23722 = state_23728[2];
                            var state_23728__$1 = state_23728;
                            var statearr_23743_23781 = state_23728__$1;
                            statearr_23743_23781[2] = inst_23722;
                            statearr_23743_23781[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_23729 === 11) {
                              var inst_23648 = state_23728[12];
                              var inst_23642 = state_23728[11];
                              var inst_23646 = state_23728[13];
                              var inst_23647 = state_23728[14];
                              var inst_23665 = cljs.core.nth.call(null, inst_23646, 0, null);
                              var inst_23667 = cljs.core.nth.call(null, inst_23665, 0, null);
                              var inst_23668 = cljs.core.nth.call(null, inst_23665, 1, null);
                              var inst_23669 = function() {
                                var ch23639 = inst_23648;
                                var v = inst_23665;
                                var vec__23666 = inst_23665;
                                var send_user_message_BANG_23625 = omchaya.api.kandan.callbacks.send_user_message_BANG_;
                                var data = inst_23668;
                                var vec__23641 = inst_23646;
                                var val__6077__auto__ = inst_23647;
                                var G__23636 = player_drag_ch;
                                var G__23635 = player_control_ch;
                                var G__23638 = inst_23642;
                                var G__23637 = omchaya.replay.api_ch;
                                var message = inst_23667;
                                var ret23640 = inst_23646;
                                var vec__23664 = inst_23646;
                                return function(ch23639, v, vec__23666, send_user_message_BANG_23625, data, vec__23641, val__6077__auto__, G__23636, G__23635, G__23638, G__23637, message, ret23640, vec__23664, inst_23648, inst_23642, inst_23646, inst_23647, inst_23665, inst_23667, inst_23668, state_val_23729) {
                                  return function(state) {
                                    return omchaya.replay.player_drag_event.call(null, message, data, state);
                                  };
                                }(ch23639, v, vec__23666, send_user_message_BANG_23625, data, vec__23641, val__6077__auto__, G__23636, G__23635, G__23638, G__23637, message, ret23640, vec__23664, inst_23648, inst_23642, inst_23646, inst_23647, inst_23665, inst_23667, inst_23668, state_val_23729);
                              }();
                              var inst_23670 = cljs.core.swap_BANG_.call(null, player_state, inst_23669);
                              var state_23728__$1 = function() {
                                var statearr_23744 = state_23728;
                                statearr_23744[17] = inst_23670;
                                return statearr_23744;
                              }();
                              var statearr_23745_23782 = state_23728__$1;
                              statearr_23745_23782[2] = null;
                              statearr_23745_23782[1] = 5;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_23729 === 12) {
                                var inst_23648 = state_23728[12];
                                var inst_23673 = cljs.core._EQ_.call(null, inst_23648, omchaya.replay.api_ch);
                                var state_23728__$1 = state_23728;
                                if (inst_23673) {
                                  var statearr_23746_23783 = state_23728__$1;
                                  statearr_23746_23783[1] = 14;
                                } else {
                                  var statearr_23747_23784 = state_23728__$1;
                                  statearr_23747_23784[1] = 15;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_23729 === 13) {
                                  var inst_23720 = state_23728[2];
                                  var state_23728__$1 = state_23728;
                                  var statearr_23748_23785 = state_23728__$1;
                                  statearr_23748_23785[2] = inst_23720;
                                  statearr_23748_23785[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_23729 === 14) {
                                    var inst_23648 = state_23728[12];
                                    var inst_23642 = state_23728[11];
                                    var inst_23646 = state_23728[13];
                                    var inst_23647 = state_23728[14];
                                    var inst_23676 = cljs.core.nth.call(null, inst_23646, 0, null);
                                    var inst_23677 = cljs.core.pr_str.call(null, inst_23676);
                                    var inst_23678 = omchaya.utils.mprint.call(null, "API control: ", inst_23677);
                                    var inst_23680 = cljs.core.nth.call(null, inst_23676, 0, null);
                                    var inst_23681 = cljs.core.nth.call(null, inst_23676, 1, null);
                                    var inst_23682 = function() {
                                      var ch23639 = inst_23648;
                                      var v = inst_23676;
                                      var send_user_message_BANG_23625 = omchaya.api.kandan.callbacks.send_user_message_BANG_;
                                      var data = inst_23681;
                                      var vec__23679 = inst_23676;
                                      var vec__23641 = inst_23646;
                                      var val__6077__auto__ = inst_23647;
                                      var G__23636 = player_drag_ch;
                                      var G__23635 = player_control_ch;
                                      var G__23638 = inst_23642;
                                      var vec__23675 = inst_23646;
                                      var G__23637 = omchaya.replay.api_ch;
                                      var message = inst_23680;
                                      var ret23640 = inst_23646;
                                      return function(ch23639, v, send_user_message_BANG_23625, data, vec__23679, vec__23641, val__6077__auto__, G__23636, G__23635, G__23638, vec__23675, G__23637, message, ret23640, inst_23648, inst_23642, inst_23646, inst_23647, inst_23676, inst_23677, inst_23678, inst_23680, inst_23681, state_val_23729) {
                                        return function(state) {
                                          return omchaya.replay.player_api_event.call(null, message, data, state);
                                        };
                                      }(ch23639, v, send_user_message_BANG_23625, data, vec__23679, vec__23641, val__6077__auto__, G__23636, G__23635, G__23638, vec__23675, G__23637, message, ret23640, inst_23648, inst_23642, inst_23646, inst_23647, inst_23676, inst_23677, inst_23678, inst_23680, inst_23681, state_val_23729);
                                    }();
                                    var inst_23683 = cljs.core.swap_BANG_.call(null, player_state, inst_23682);
                                    var state_23728__$1 = function() {
                                      var statearr_23749 = state_23728;
                                      statearr_23749[18] = inst_23678;
                                      statearr_23749[19] = inst_23683;
                                      return statearr_23749;
                                    }();
                                    var statearr_23750_23786 = state_23728__$1;
                                    statearr_23750_23786[2] = null;
                                    statearr_23750_23786[1] = 5;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_23729 === 15) {
                                      var inst_23648 = state_23728[12];
                                      var inst_23642 = state_23728[11];
                                      var inst_23686 = cljs.core._EQ_.call(null, inst_23648, inst_23642);
                                      var state_23728__$1 = state_23728;
                                      if (inst_23686) {
                                        var statearr_23751_23787 = state_23728__$1;
                                        statearr_23751_23787[1] = 17;
                                      } else {
                                        var statearr_23752_23788 = state_23728__$1;
                                        statearr_23752_23788[1] = 18;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_23729 === 16) {
                                        var inst_23718 = state_23728[2];
                                        var state_23728__$1 = state_23728;
                                        var statearr_23753_23789 = state_23728__$1;
                                        statearr_23753_23789[2] = inst_23718;
                                        statearr_23753_23789[1] = 13;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_23729 === 17) {
                                          var inst_23688 = cljs.core.deref.call(null, player_state);
                                          var inst_23689 = (new cljs.core.Keyword(null, "state", "state", 1123661827)).cljs$core$IFn$_invoke$arity$1(inst_23688);
                                          var inst_23690 = cljs.core._EQ_.call(null, inst_23689, new cljs.core.Keyword(null, "playing", "playing", 520340384));
                                          var state_23728__$1 = state_23728;
                                          if (inst_23690) {
                                            var statearr_23754_23790 = state_23728__$1;
                                            statearr_23754_23790[1] = 20;
                                          } else {
                                            var statearr_23755_23791 = state_23728__$1;
                                            statearr_23755_23791[1] = 21;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_23729 === 18) {
                                            var inst_23648 = state_23728[12];
                                            var inst_23710 = cljs.core._EQ_.call(null, inst_23648, new cljs.core.Keyword(null, "default", "default", 2558708147));
                                            var state_23728__$1 = state_23728;
                                            if (inst_23710) {
                                              var statearr_23756_23792 = state_23728__$1;
                                              statearr_23756_23792[1] = 23;
                                            } else {
                                              var statearr_23757_23793 = state_23728__$1;
                                              statearr_23757_23793[1] = 24;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_23729 === 19) {
                                              var inst_23716 = state_23728[2];
                                              var state_23728__$1 = state_23728;
                                              var statearr_23758_23794 = state_23728__$1;
                                              statearr_23758_23794[2] = inst_23716;
                                              statearr_23758_23794[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_23729 === 20) {
                                                var inst_23648 = state_23728[12];
                                                var inst_23642 = state_23728[11];
                                                var inst_23646 = state_23728[13];
                                                var inst_23647 = state_23728[14];
                                                var inst_23692 = cljs.core.deref.call(null, player_state);
                                                var inst_23693 = [new cljs.core.Keyword(null, "replays", "replays", 2108401886), new cljs.core.Keyword(null, "queued-replay", "queued-replay", 2482676979), new cljs.core.Keyword(null, "history", "history", 1940838406)];
                                                var inst_23694 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_23693, null);
                                                var inst_23695 = cljs.core.get_in.call(null, inst_23692, inst_23694);
                                                var inst_23696 = cljs.core.deref.call(null, player_state);
                                                var inst_23697 = [new cljs.core.Keyword(null, "replays", "replays", 2108401886), new cljs.core.Keyword(null, "queued-replay", "queued-replay", 2482676979), new cljs.core.Keyword(null, "active-step", "active-step", 4211347621)];
                                                var inst_23698 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_23697, null);
                                                var inst_23699 = cljs.core.get_in.call(null, inst_23696, inst_23698);
                                                var inst_23700 = cljs.core.nth.call(null, inst_23695, inst_23699);
                                                var inst_23701 = omchaya.replay.replay_history_step_BANG_.call(null, app_comms, 1, inst_23700, player_control_ch);
                                                var inst_23702 = function() {
                                                  var ret23640 = inst_23646;
                                                  var ch23639 = inst_23648;
                                                  var val__6077__auto__ = inst_23647;
                                                  var vec__23641 = inst_23646;
                                                  var G__23638 = inst_23642;
                                                  var G__23637 = omchaya.replay.api_ch;
                                                  var G__23636 = player_drag_ch;
                                                  var G__23635 = player_control_ch;
                                                  var send_user_message_BANG_23625 = omchaya.api.kandan.callbacks.send_user_message_BANG_;
                                                  return function(ret23640, ch23639, val__6077__auto__, vec__23641, G__23638, G__23637, G__23636, G__23635, send_user_message_BANG_23625, inst_23648, inst_23642, inst_23646, inst_23647, inst_23692, inst_23693, inst_23694, inst_23695, inst_23696, inst_23697, inst_23698, inst_23699, inst_23700, inst_23701, state_val_23729) {
                                                    return function(s) {
                                                      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, cljs.core.get_in.call(null, s, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "replays", "replays", 2108401886), new cljs.core.Keyword(null, "queued-replay", "queued-replay", 2482676979), new cljs.core.Keyword(null, "history", "history", 1940838406)], null))) - 1, cljs.core.get_in.call(null, s, new cljs.core.PersistentVector(null, 
                                                      3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "replays", "replays", 2108401886), new cljs.core.Keyword(null, "queued-replay", "queued-replay", 2482676979), new cljs.core.Keyword(null, "active-step", "active-step", 4211347621)], null)))) {
                                                        return cljs.core.assoc.call(null, cljs.core.assoc_in.call(null, s, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "replays", "replays", 2108401886), new cljs.core.Keyword(null, "queued-replay", "queued-replay", 2482676979), new cljs.core.Keyword(null, "active-step", "active-step", 4211347621)], null), 0), new cljs.core.Keyword(null, "state", "state", 1123661827), new cljs.core.Keyword(null, 
                                                        "stopped", "stopped", 3424552255));
                                                      } else {
                                                        return cljs.core.update_in.call(null, s, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "replays", "replays", 2108401886), new cljs.core.Keyword(null, "queued-replay", "queued-replay", 2482676979), new cljs.core.Keyword(null, "active-step", "active-step", 4211347621)], null), cljs.core.inc);
                                                      }
                                                    };
                                                  }(ret23640, ch23639, val__6077__auto__, vec__23641, G__23638, G__23637, G__23636, G__23635, send_user_message_BANG_23625, inst_23648, inst_23642, inst_23646, inst_23647, inst_23692, inst_23693, inst_23694, inst_23695, inst_23696, inst_23697, inst_23698, inst_23699, inst_23700, inst_23701, state_val_23729);
                                                }();
                                                var inst_23703 = cljs.core.swap_BANG_.call(null, player_state, inst_23702);
                                                var state_23728__$1 = function() {
                                                  var statearr_23759 = state_23728;
                                                  statearr_23759[20] = inst_23701;
                                                  statearr_23759[21] = inst_23703;
                                                  return statearr_23759;
                                                }();
                                                var statearr_23760_23795 = state_23728__$1;
                                                statearr_23760_23795[2] = null;
                                                statearr_23760_23795[1] = 5;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_23729 === 21) {
                                                  var state_23728__$1 = state_23728;
                                                  var statearr_23761_23796 = state_23728__$1;
                                                  statearr_23761_23796[2] = null;
                                                  statearr_23761_23796[1] = 5;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_23729 === 22) {
                                                    var inst_23708 = state_23728[2];
                                                    var state_23728__$1 = state_23728;
                                                    var statearr_23762_23797 = state_23728__$1;
                                                    statearr_23762_23797[2] = inst_23708;
                                                    statearr_23762_23797[1] = 19;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_23729 === 23) {
                                                      var inst_23647 = state_23728[14];
                                                      var state_23728__$1 = state_23728;
                                                      var statearr_23763_23798 = state_23728__$1;
                                                      statearr_23763_23798[2] = inst_23647;
                                                      statearr_23763_23798[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_23729 === 24) {
                                                        var state_23728__$1 = state_23728;
                                                        var statearr_23764_23799 = state_23728__$1;
                                                        statearr_23764_23799[2] = null;
                                                        statearr_23764_23799[1] = 25;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_23729 === 25) {
                                                          var inst_23714 = state_23728[2];
                                                          var state_23728__$1 = state_23728;
                                                          var statearr_23765_23800 = state_23728__$1;
                                                          statearr_23765_23800[2] = inst_23714;
                                                          statearr_23765_23800[1] = 19;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5998__auto__) {
        return function() {
          var state_machine__5999__auto__ = null;
          var state_machine__5999__auto____0 = function() {
            var statearr_23769 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_23769[0] = state_machine__5999__auto__;
            statearr_23769[1] = 1;
            return statearr_23769;
          };
          var state_machine__5999__auto____1 = function(state_23728) {
            while (true) {
              var ret_value__6000__auto__ = function() {
                try {
                  while (true) {
                    var result__6001__auto__ = switch__5998__auto__.call(null, state_23728);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6001__auto__;
                    }
                    break;
                  }
                } catch (e23770) {
                  if (e23770 instanceof Object) {
                    var ex__6002__auto__ = e23770;
                    var statearr_23771_23801 = state_23728;
                    statearr_23771_23801[5] = ex__6002__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23728);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e23770;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__23802 = state_23728;
                state_23728 = G__23802;
                continue;
              } else {
                return ret_value__6000__auto__;
              }
              break;
            }
          };
          state_machine__5999__auto__ = function(state_23728) {
            switch(arguments.length) {
              case 0:
                return state_machine__5999__auto____0.call(this);
              case 1:
                return state_machine__5999__auto____1.call(this, state_23728);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
          return state_machine__5999__auto__;
        }();
      }(switch__5998__auto__);
    }();
    var state__6070__auto__ = function() {
      var statearr_23772 = f__6069__auto__.call(null);
      statearr_23772[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto__;
      return statearr_23772;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
  });
  return c__6068__auto__;
};
omchaya.replay.install_player_BANG_ = function install_player_BANG_(root_el, api_key, initial_state) {
  omchaya.replay.start_player_loop_BANG_.call(null, initial_state, omchaya.replay.player_drag_ch, omchaya.replay.player_control_ch, 100);
  return om.core.root.call(null, omchaya.components.history_player.player, initial_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), root_el], null));
};
goog.provide("omchaya.useful");
goog.require("cljs.core");
omchaya.useful.map_vals = function() {
  var map_vals__delegate = function(m, f, args) {
    if (cljs.core.truth_(m)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
        var iter__4160__auto__ = function iter__23823(s__23824) {
          return new cljs.core.LazySeq(null, function() {
            var s__23824__$1 = s__23824;
            while (true) {
              var temp__4092__auto__ = cljs.core.seq.call(null, s__23824__$1);
              if (temp__4092__auto__) {
                var s__23824__$2 = temp__4092__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__23824__$2)) {
                  var c__4158__auto__ = cljs.core.chunk_first.call(null, s__23824__$2);
                  var size__4159__auto__ = cljs.core.count.call(null, c__4158__auto__);
                  var b__23826 = cljs.core.chunk_buffer.call(null, size__4159__auto__);
                  if (function() {
                    var i__23825 = 0;
                    while (true) {
                      if (i__23825 < size__4159__auto__) {
                        var vec__23829 = cljs.core._nth.call(null, c__4158__auto__, i__23825);
                        var k = cljs.core.nth.call(null, vec__23829, 0, null);
                        var v = cljs.core.nth.call(null, vec__23829, 1, null);
                        cljs.core.chunk_append.call(null, b__23826, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.apply.call(null, f, v, args)], null));
                        var G__23831 = i__23825 + 1;
                        i__23825 = G__23831;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23826), iter__23823.call(null, cljs.core.chunk_rest.call(null, s__23824__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23826), null);
                  }
                } else {
                  var vec__23830 = cljs.core.first.call(null, s__23824__$2);
                  var k = cljs.core.nth.call(null, vec__23830, 0, null);
                  var v = cljs.core.nth.call(null, vec__23830, 1, null);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.apply.call(null, f, v, args)], null), iter__23823.call(null, cljs.core.rest.call(null, s__23824__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          }, null, null);
        };
        return iter__4160__auto__.call(null, m);
      }());
    } else {
      return null;
    }
  };
  var map_vals = function(m, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return map_vals__delegate.call(this, m, f, args);
  };
  map_vals.cljs$lang$maxFixedArity = 2;
  map_vals.cljs$lang$applyTo = function(arglist__23832) {
    var m = cljs.core.first(arglist__23832);
    arglist__23832 = cljs.core.next(arglist__23832);
    var f = cljs.core.first(arglist__23832);
    var args = cljs.core.rest(arglist__23832);
    return map_vals__delegate(m, f, args);
  };
  map_vals.cljs$core$IFn$_invoke$arity$variadic = map_vals__delegate;
  return map_vals;
}();
omchaya.useful.map_keys = function() {
  var map_keys__delegate = function(m, f, args) {
    if (cljs.core.truth_(m)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
        var iter__4160__auto__ = function iter__23841(s__23842) {
          return new cljs.core.LazySeq(null, function() {
            var s__23842__$1 = s__23842;
            while (true) {
              var temp__4092__auto__ = cljs.core.seq.call(null, s__23842__$1);
              if (temp__4092__auto__) {
                var s__23842__$2 = temp__4092__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__23842__$2)) {
                  var c__4158__auto__ = cljs.core.chunk_first.call(null, s__23842__$2);
                  var size__4159__auto__ = cljs.core.count.call(null, c__4158__auto__);
                  var b__23844 = cljs.core.chunk_buffer.call(null, size__4159__auto__);
                  if (function() {
                    var i__23843 = 0;
                    while (true) {
                      if (i__23843 < size__4159__auto__) {
                        var vec__23847 = cljs.core._nth.call(null, c__4158__auto__, i__23843);
                        var k = cljs.core.nth.call(null, vec__23847, 0, null);
                        var v = cljs.core.nth.call(null, vec__23847, 1, null);
                        cljs.core.chunk_append.call(null, b__23844, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, k, args), v], null));
                        var G__23849 = i__23843 + 1;
                        i__23843 = G__23849;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23844), iter__23841.call(null, cljs.core.chunk_rest.call(null, s__23842__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__23844), null);
                  }
                } else {
                  var vec__23848 = cljs.core.first.call(null, s__23842__$2);
                  var k = cljs.core.nth.call(null, vec__23848, 0, null);
                  var v = cljs.core.nth.call(null, vec__23848, 1, null);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, k, args), v], null), iter__23841.call(null, cljs.core.rest.call(null, s__23842__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          }, null, null);
        };
        return iter__4160__auto__.call(null, m);
      }());
    } else {
      return null;
    }
  };
  var map_keys = function(m, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return map_keys__delegate.call(this, m, f, args);
  };
  map_keys.cljs$lang$maxFixedArity = 2;
  map_keys.cljs$lang$applyTo = function(arglist__23850) {
    var m = cljs.core.first(arglist__23850);
    arglist__23850 = cljs.core.next(arglist__23850);
    var f = cljs.core.first(arglist__23850);
    var args = cljs.core.rest(arglist__23850);
    return map_keys__delegate(m, f, args);
  };
  map_keys.cljs$core$IFn$_invoke$arity$variadic = map_keys__delegate;
  return map_keys;
}();
omchaya.useful.ffilter = cljs.core.comp.call(null, cljs.core.first, cljs.core.filter);
goog.provide("omchaya.mock_data");
goog.require("cljs.core");
goog.require("omchaya.utils");
goog.require("omchaya.utils");
omchaya.mock_data.user_emails = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["sean@bushi.do", "nb@bushi.do", "sacha@bushi.do"], null);
omchaya.mock_data.random_message = function() {
  var random_message__delegate = function(channel_id, p__23411) {
    var vec__23413 = p__23411;
    var at_now_QMARK_ = cljs.core.nth.call(null, vec__23413, 0, null);
    var at = cljs.core.truth_(at_now_QMARK_) ? new Date : function() {
      var x = new Date;
      var x__$1 = x.getTime();
      var x__$2 = x__$1 - cljs.core.rand_int.call(null, 1E3 * 60 * 24 * 60);
      var x__$3 = new Date(x__$2);
      return x__$3;
    }();
    return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "created_at", "created_at", 2383584348), at, new cljs.core.Keyword(null, "author", "author", 3902543101), cljs.core.rand_nth.call(null, omchaya.mock_data.user_emails), new cljs.core.Keyword(null, "content", "content", 1965434859), cljs.core.rand_nth.call(null, new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, ["deployed with ruby on...?", "ha, dat stuff works", "Random content", "Heh, :+1:", 
    "Wow, :exclamation:", "@sgrove Ok, let's do this!", "/queue http://mp3.tom7.org/t7es/2008/t7es_msiegler.mp3", "/queue http://mp3.tom7.org/t7es/2008/t7es_goog.mp3", "/queue http://mp3.tom7.org/t7es/2008/t7es_petrolatum.mp3", "/queue http://mp3.tom7.org/t7es/2009/t7es-sans-pellegrino.mp3", "/queue http://mp3.tom7.org/t7es/2008/t7es_rt2i.mp3", "/queue http://mp3.tom7.org/t7es/2007/tom7\x3drutgers.mp3", "/queue https://dl.dropboxusercontent.com/u/412963/11%20Charlotte.mp3", "/queue https://dl.dropboxusercontent.com/u/412963/Golf%20Clap.mp3", 
    "/queue https://dl.dropboxusercontent.com/u/412963/cheer.mp3", "/queue https://dl.dropboxusercontent.com/u/412963/Why%20This%20Kolaveri%20Di%20Full%20Song%20Promo%20Video%20in%20HD%20-%20.mp3", "@sacha Be careful with that", "Hey @nb - I got you something nice... (not really)"], null)), new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615), channel_id], null);
  };
  var random_message = function(channel_id, var_args) {
    var p__23411 = null;
    if (arguments.length > 1) {
      p__23411 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return random_message__delegate.call(this, channel_id, p__23411);
  };
  random_message.cljs$lang$maxFixedArity = 1;
  random_message.cljs$lang$applyTo = function(arglist__23414) {
    var channel_id = cljs.core.first(arglist__23414);
    var p__23411 = cljs.core.rest(arglist__23414);
    return random_message__delegate(channel_id, p__23411);
  };
  random_message.cljs$core$IFn$_invoke$arity$variadic = random_message__delegate;
  return random_message;
}();
omchaya.mock_data.random_title = function random_title() {
  return cljs.core.rand_nth.call(null, new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Background", "A dark place", "\ud55c\uad6d\uc5b4", "Zork lovers", "The War Room", "Emotional Trance", "8 out of 10 cats", "Was it something I said?", "Example"], null));
};
omchaya.mock_data.media = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/system/attachments/files/000/000/098/original/call-centre-woman.jpg?1392265218", new cljs.core.Keyword(null, "name", "name", 1017277949), "call-centre-woman.jpg"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/system/attachments/files/000/000/098/original/design.pdf?1392265218", 
new cljs.core.Keyword(null, "name", "name", 1017277949), "design.pdf"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/system/attachments/files/000/000/098/original/example.mp3?1392265218", new cljs.core.Keyword(null, "name", "name", 1017277949), "example.mp3"], null)], null);
omchaya.mock_data.random_channel = function() {
  var random_channel__delegate = function(order, p__23415) {
    var vec__23417 = p__23415;
    var title = cljs.core.nth.call(null, vec__23417, 0, null);
    var title__$1 = function() {
      var or__3443__auto__ = title;
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return omchaya.mock_data.random_title.call(null);
      }
    }();
    return cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "users", "users", 1125482874), new cljs.core.Keyword(null, "media", "media", 1117676374), new cljs.core.Keyword(null, "title", "title", 1124275658), new cljs.core.Keyword(null, "activities", "activities", 3062509407), new cljs.core.Keyword(null, "sfx", "sfx", 1014018039), new cljs.core.Keyword(null, "order", "order", 1119910592), new cljs.core.Keyword(null, "id", 
    "id", 1013907597), new cljs.core.Keyword(null, "selected", "selected", 2205476365)], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "source-url", "source-url", 4196274223), "https://dl.dropboxusercontent.com/u/412963/Why%20This%20Kolaveri%20Di%20Full%20Song%20Promo%20Video%20in%20HD%20-%20.mp3", new cljs.core.Keyword(null, "playing-order", "playing-order", 3298952289), -1, new cljs.core.Keyword(null, "state", "state", 1123661827), new cljs.core.Keyword(null, "playing", 
    "playing", 520340384), new cljs.core.Keyword(null, "loading", "loading", 1350554798), false, new cljs.core.Keyword(null, "playlist", "playlist", 2893378884), cljs.core.PersistentVector.EMPTY], null), cljs.core.take.call(null, cljs.core.rand_int.call(null, cljs.core.count.call(null, omchaya.mock_data.user_emails)) + 1, cljs.core.shuffle.call(null, omchaya.mock_data.user_emails)), cljs.core.vec.call(null, cljs.core.take.call(null, cljs.core.rand_int.call(null, 0) + 1, cljs.core.shuffle.call(null, 
    omchaya.mock_data.media))), title__$1, cljs.core.vec.call(null, cljs.core.sort_by.call(null, new cljs.core.Keyword(null, "created_at", "created_at", 2383584348), cljs.core.repeatedly.call(null, cljs.core.rand_int.call(null, 0) + 1, function() {
      return omchaya.mock_data.random_message.call(null, omchaya.utils.safe_sel.call(null, title__$1));
    }))), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "source-url", "source-url", 4196274223), null], null), order, omchaya.utils.safe_sel.call(null, title__$1), false]);
  };
  var random_channel = function(order, var_args) {
    var p__23415 = null;
    if (arguments.length > 1) {
      p__23415 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return random_channel__delegate.call(this, order, p__23415);
  };
  random_channel.cljs$lang$maxFixedArity = 1;
  random_channel.cljs$lang$applyTo = function(arglist__23418) {
    var order = cljs.core.first(arglist__23418);
    var p__23415 = cljs.core.rest(arglist__23418);
    return random_channel__delegate(order, p__23415);
  };
  random_channel.cljs$core$IFn$_invoke$arity$variadic = random_channel__delegate;
  return random_channel;
}();
omchaya.mock_data.initial_state = function initial_state(comms) {
  var channels = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.comp.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword(null, "id", "id", 1013907597), cljs.core.identity), omchaya.mock_data.random_channel), cljs.core.range.call(null, 2, 100)));
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "audio", "audio", 1107070792), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "volume", "volume", 4497988236), 100, new cljs.core.Keyword(null, "muted", "muted", 1118168285), true], null), new cljs.core.Keyword(null, "windows", "windows", 2363397621), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "window-inspector", "window-inspector", 2735849676), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "open", "open", 1017321916), false], null)], null), new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "message-limit", "message-limit", 2656236007), 50, new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "focused", "focused", 4617830121), false], null), new cljs.core.Keyword(null, "user-message", "user-message", 2253309815), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "focused", "focused", 4617830121), false], null)], null), new cljs.core.Keyword(null, "menus", "menus", 1117686374), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "user-menu", "user-menu", 1307043219), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open", 
  "open", 1017321916), false], null)], null), new cljs.core.Keyword(null, "sidebar", "sidebar", 3099131598), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "left", "left", 1017222009), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open", "open", 1017321916), false], null), new cljs.core.Keyword(null, "right", "right", 1122416014), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open", "open", 1017321916), false], null)], null), 
  new cljs.core.Keyword(null, "inspector", "inspector", 931868265), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "path", "path", 1017337751), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "users", "users", 1125482874)], null)], null)], null), new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411), "1", new cljs.core.Keyword(null, "channels", "channels", 2446530370), function() {
    var ch = channels;
    var ch__$1 = cljs.core.assoc.call(null, ch, "1", cljs.core.assoc.call(null, omchaya.mock_data.random_channel.call(null, 1, "Lobby"), new cljs.core.Keyword(null, "id", "id", 1013907597), "1"));
    var ch__$2 = cljs.core.update_in.call(null, ch__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["1"], null), cljs.core.assoc, new cljs.core.Keyword(null, "selected", "selected", 2205476365), true);
    return ch__$2;
  }(), new cljs.core.Keyword(null, "users", "users", 1125482874), new cljs.core.PersistentArrayMap(null, 3, ["sean@bushi.do", new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "full-name", "full-name", 3585519227), "Sean Grove", new cljs.core.Keyword(null, "email", "email", 1110523662), "sean@bushi.do", new cljs.core.Keyword(null, "username", "username", 748190792), "sgrove"], null), "nb@bushi.do", new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "full-name", 
  "full-name", 3585519227), "Nathan Broadbent", new cljs.core.Keyword(null, "email", "email", 1110523662), "nb@bushi.do", new cljs.core.Keyword(null, "username", "username", 748190792), "nb"], null), "sacha@bushi.do", new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "full-name", "full-name", 3585519227), "Sacha Greif", new cljs.core.Keyword(null, "email", "email", 1110523662), "sacha@bushi.do", new cljs.core.Keyword(null, "username", "username", 748190792), "sacha"], null)], 
  null), new cljs.core.Keyword(null, "current-user-email", "current-user-email", 4091392864), "sean@bushi.do", new cljs.core.Keyword(null, "comms", "comms", 1108747865), comms], null);
};
goog.provide("omchaya.api.mock");
goog.require("cljs.core");
goog.require("omchaya.utils");
goog.require("cljs.core.async");
goog.require("omchaya.utils");
goog.require("omchaya.utils");
goog.require("omchaya.mock_data");
goog.require("omchaya.mock_data");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
omchaya.api.mock.random_message = function random_message(api_ch, channel) {
  return cljs.core.async.put_BANG_.call(null, api_ch, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channel-activity-received", "channel-activity-received", 3517943815), omchaya.mock_data.random_message.call(null, channel, true)], null));
};
omchaya.api.mock.send_user_message_BANG_ = function send_user_message_BANG_(api_key, message) {
  return omchaya.utils.mprint.call(null, "Send a message to the server");
};
omchaya.api.mock.destroy_channel_BANG_ = function destroy_channel_BANG_(api_ch, channel_id) {
  var c__6068__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6069__auto__ = function() {
      var switch__5998__auto__ = function(state_21134) {
        var state_val_21135 = state_21134[1];
        if (state_val_21135 === 2) {
          var inst_21129 = state_21134[2];
          var inst_21130 = [new cljs.core.Keyword(null, "channel-remotely-destroyed", "channel-remotely-destroyed", 2144502171), channel_id];
          var inst_21131 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_21130, null);
          var inst_21132 = cljs.core.async.put_BANG_.call(null, api_ch, inst_21131);
          var state_21134__$1 = function() {
            var statearr_21136 = state_21134;
            statearr_21136[7] = inst_21129;
            return statearr_21136;
          }();
          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21134__$1, inst_21132);
        } else {
          if (state_val_21135 === 1) {
            var inst_21127 = cljs.core.async.timeout.call(null, 2500);
            var state_21134__$1 = state_21134;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21134__$1, 2, inst_21127);
          } else {
            return null;
          }
        }
      };
      return function(switch__5998__auto__) {
        return function() {
          var state_machine__5999__auto__ = null;
          var state_machine__5999__auto____0 = function() {
            var statearr_21140 = [null, null, null, null, null, null, null, null];
            statearr_21140[0] = state_machine__5999__auto__;
            statearr_21140[1] = 1;
            return statearr_21140;
          };
          var state_machine__5999__auto____1 = function(state_21134) {
            while (true) {
              var ret_value__6000__auto__ = function() {
                try {
                  while (true) {
                    var result__6001__auto__ = switch__5998__auto__.call(null, state_21134);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6001__auto__;
                    }
                    break;
                  }
                } catch (e21141) {
                  if (e21141 instanceof Object) {
                    var ex__6002__auto__ = e21141;
                    var statearr_21142_21144 = state_21134;
                    statearr_21142_21144[5] = ex__6002__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21134);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e21141;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__21145 = state_21134;
                state_21134 = G__21145;
                continue;
              } else {
                return ret_value__6000__auto__;
              }
              break;
            }
          };
          state_machine__5999__auto__ = function(state_21134) {
            switch(arguments.length) {
              case 0:
                return state_machine__5999__auto____0.call(this);
              case 1:
                return state_machine__5999__auto____1.call(this, state_21134);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
          return state_machine__5999__auto__;
        }();
      }(switch__5998__auto__);
    }();
    var state__6070__auto__ = function() {
      var statearr_21143 = f__6069__auto__.call(null);
      statearr_21143[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto__;
      return statearr_21143;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
  });
  return c__6068__auto__;
};
goog.provide("omchaya.components.audio_player");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("sablono.core");
goog.require("om.core");
goog.require("om.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
omchaya.components.audio_player.player = function player(audio_data, owner, opts) {
  if (typeof omchaya.components.audio_player.t22024 !== "undefined") {
  } else {
    omchaya.components.audio_player.t22024 = function(opts, owner, audio_data, player, meta22025) {
      this.opts = opts;
      this.owner = owner;
      this.audio_data = audio_data;
      this.player = player;
      this.meta22025 = meta22025;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    omchaya.components.audio_player.t22024.cljs$lang$type = true;
    omchaya.components.audio_player.t22024.cljs$lang$ctorStr = "omchaya.components.audio-player/t22024";
    omchaya.components.audio_player.t22024.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "omchaya.components.audio-player/t22024");
    };
    omchaya.components.audio_player.t22024.prototype.om$core$IRender$ = true;
    omchaya.components.audio_player.t22024.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var map__22027 = self__.audio_data;
      var map__22027__$1 = cljs.core.seq_QMARK_.call(null, map__22027) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22027) : map__22027;
      var id = cljs.core.get.call(null, map__22027__$1, new cljs.core.Keyword(null, "id", "id", 1013907597));
      var audio_settings = cljs.core.get.call(null, map__22027__$1, new cljs.core.Keyword(null, "audio-settings", "audio-settings", 938379180));
      var player__$2 = cljs.core.get.call(null, map__22027__$1, new cljs.core.Keyword(null, "player", "player", 4323118675));
      var sfx = cljs.core.get.call(null, map__22027__$1, new cljs.core.Keyword(null, "sfx", "sfx", 1014018039));
      var audio_source = (new cljs.core.Keyword(null, "source-url", "source-url", 4196274223)).cljs$core$IFn$_invoke$arity$1(player__$2);
      var comm = cljs.core.get_in.call(null, self__.opts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
      return React.DOM.div({"style":cljs.core.clj__GT_js.call(null, {"display":"none"})}, function() {
        var attrs22028 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), audio_source, new cljs.core.Keyword(null, "key", "key", 1014010321), [cljs.core.str("audio-"), cljs.core.str(id)].join(""), new cljs.core.Keyword(null, "class", "class", 1108647146), [cljs.core.str("audio-"), cljs.core.str(id)].join("")], null), cljs.core.truth_((new cljs.core.Keyword(null, "muted", "muted", 1118168285)).cljs$core$IFn$_invoke$arity$1(audio_settings)) ? 
        new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "muted", "muted", 1118168285), true], null) : null);
        if (cljs.core.map_QMARK_.call(null, attrs22028)) {
          return React.DOM.audio(sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["audio-player"], null)], null), attrs22028)), null);
        } else {
          return React.DOM.audio({"className":"audio-player"}, sablono.interpreter.interpret.call(null, attrs22028));
        }
      }(), function() {
        var attrs22029 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), (new cljs.core.Keyword(null, "source-url", "source-url", 4196274223)).cljs$core$IFn$_invoke$arity$1(sfx), new cljs.core.Keyword(null, "key", "key", 1014010321), [cljs.core.str("sfx-"), cljs.core.str(id)].join(""), new cljs.core.Keyword(null, "class", "class", 1108647146), [cljs.core.str("audio-"), cljs.core.str(id)].join("")], null), cljs.core.truth_((new cljs.core.Keyword(null, 
        "muted", "muted", 1118168285)).cljs$core$IFn$_invoke$arity$1(audio_settings)) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "muted", "muted", 1118168285), true], null) : null);
        if (cljs.core.map_QMARK_.call(null, attrs22029)) {
          return React.DOM.audio(sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["audio-player", "sfx"], null)], null), attrs22029)), null);
        } else {
          return React.DOM.audio({"className":"audio-player sfx"}, sablono.interpreter.interpret.call(null, attrs22029));
        }
      }());
    };
    omchaya.components.audio_player.t22024.prototype.om$core$IDisplayName$ = true;
    omchaya.components.audio_player.t22024.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var or__3443__auto__ = (new cljs.core.Keyword(null, "react-name", "react-name", 4800236939)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return "AudioPlayer";
      }
    };
    omchaya.components.audio_player.t22024.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22026) {
      var self__ = this;
      var _22026__$1 = this;
      return self__.meta22025;
    };
    omchaya.components.audio_player.t22024.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22026, meta22025__$1) {
      var self__ = this;
      var _22026__$1 = this;
      return new omchaya.components.audio_player.t22024(self__.opts, self__.owner, self__.audio_data, self__.player, meta22025__$1);
    };
    omchaya.components.audio_player.__GT_t22024 = function __GT_t22024(opts__$1, owner__$1, audio_data__$1, player__$1, meta22025) {
      return new omchaya.components.audio_player.t22024(opts__$1, owner__$1, audio_data__$1, player__$1, meta22025);
    };
  }
  return new omchaya.components.audio_player.t22024(opts, owner, audio_data, player, null);
};
goog.provide("omchaya.emoticons");
goog.require("cljs.core");
omchaya.emoticons.known_emoticons = cljs.core.PersistentHashMap.fromArrays([":libra:", ":poultry_leg:", ":lips:", ":poop:", ":revolving_hearts:", ":mailbox:", ":cancer:", ":two_women_holding_hands:", ":dizzy:", ":sweat:", ":tired_face:", ":traffic_light:", ":relieved:", "(seriously)", ":two_hearts:", ":black_square_button:", ":clock130:", ":fork_and_knife:", ":hotel:", ":shit:", ":arrow_down_small:", ":joy:", ":car:", ":bikini:", ":boat:", ":new_moon:", ":dromedary_camel:", ":couple:", ":bug:", ":wedding:", 
":station:", ":last_quarter_moon_with_face:", ":dancers:", ":earth_asia:", ":thumbsdown:", ":lemon:", ":e-mail:", ":mag:", ":six_pointed_star:", ":dart:", ":melon:", ":small_red_triangle_down:", ":black_joker:", ":running_shirt_with_sash:", ":arrow_double_up:", ":ok_woman:", "(cereal)", ":recycle:", ":love_letter:", ":paw_prints:", ":dancer:", ":diamonds:", ":u7533:", ":on:", ":tropical_fish:", ":confounded:", ":man_with_turban:", ":sushi:", ":oncoming_police_car:", ":carousel_horse:", ":railway_car:", 
":smiling_imp:", ":koala:", ":bar_chart:", ":calendar:", ":taxi:", ":left_luggage:", ":satisfied:", ":sunglasses:", ":swimmer:", ":busts_in_silhouette:", ":trident:", ":person_frowning:", ":boar:", ":tulip:", ":stuck_out_tongue_winking_eye:", ":oden:", ":volcano:", ":us:", ":snowflake:", ":collision:", ":goberserk:", ":red_circle:", ":couplekiss:", ":dvd:", ":mahjong:", ":no_bicycles:", ":ok_hand:", ":fishing_pole_and_fish:", ":kiss:", ":fuelpump:", ":persevere:", ":ski:", ":black_square:", ":peach:", 
":yum:", ":necktie:", ":tanabata_tree:", ":arrow_left:", ":mans_shoe:", ":raised_hands:", ":facepunch:", ":capricorn:", ":currency_exchange:", ":arrows_clockwise:", ":interrobang:", ":cherry_blossom:", ":birthday:", ":mens:", ":point_up_2:", ":vs:", ":large_blue_circle:", ":honey_pot:", ":sparkles:", ":file_folder:", ":lipstick:", "(trollface)", ":full_moon:", ":grimacing:", ":100:", ":tropical_drink:", ":neckbeard:", ":snowboarder:", ":heavy_check_mark:", ":open_file_folder:", ":cat2:", ":foggy:", 
":shell:", ":astonished:", ":bullettrain_front:", ":turtle:", ":mortar_board:", ":girl:", ":tea:", ":chocolate_bar:", ":ship:", ":tokyo_tower:", ":dollar:", ":electric_plug:", ":bank:", ":leaves:", ":mag_right:", ":oncoming_automobile:", ":low_brightness:", ":broken_heart:", ":barber:", ":sparkler:", "(yuno)", ":watermelon:", ":arrow_up_down:", ":ok:", ":arrow_right_hook:", ":office:", ":u7981:", ":worried:", ":id:", ":balloon:", ":arrow_forward:", ":ghost:", ":gb:", ":repeat:", ":goat:", ":yellow_heart:", 
":relaxed:", ":small_orange_diamond:", ":tennis:", ":suspension_railway:", ":rewind:", ":computer:", ":clock12:", ":sound:", ":christmas_tree:", ":light_rail:", ":baby_bottle:", ":gem:", ":watch:", ":arrow_lower_left:", ":trolleybus:", "(badass)", ":older_man:", ":eight:", ":soon:", ":heart_eyes:", ":up:", ":house_with_garden:", ":notebook:", ":syringe:", ":o:", ":chart_with_downwards_trend:", "(youdontsay)", ":womans_clothes:", ":no_pedestrians:", ":trollface:", ":waning_crescent_moon:", ":white_check_mark:", 
":phone:", ":clock11:", ":punch:", ":pray:", ":rabbit:", ":blue_book:", ":bathtub:", ":u7121:", ":memo:", ":hospital:", ":first_quarter_moon_with_face:", ":milky_way:", ":arrow_upper_left:", ":high_brightness:", ":performing_arts:", ":negative_squared_cross_mark:", ":earth_americas:", ":link:", ":pig:", ":ice_cream:", ":santa:", ":point_right:", ":wave:", ":arrow_backward:", ":capital_abcd:", ":exclamation:", ":squirrel:", ":eyeglasses:", ":mute:", ":clock10:", ":cold_sweat:", ":fearful:", ":battery:", 
":arrow_up_small:", ":pill:", ":crying_cat_face:", ":tm:", ":u5272:", ":seven:", ":rice:", ":bird:", ":tangerine:", ":loudspeaker:", ":ng:", ":m:", ":disappointed_relieved:", ":hotsprings:", ":clock1230:", ":partly_sunny:", ":penguin:", ":evergreen_tree:", ":clap:", ":fish:", ":cake:", ":imp:", ":guardsman:", ":smoking:", ":racehorse:", ":couple_with_heart:", ":construction_worker:", ":fireworks:", ":stuck_out_tongue:", ":two:", ":two_men_holding_hands:", ":boy:", ":droplet:", ":thumbsup:", ":arrow_down:", 
":hatched_chick:", ":floppy_disk:", ":mushroom:", ":pound:", ":scissors:", ":cherries:", ":mailbox_closed:", ":palm_tree:", ":pisces:", ":kissing_heart:", ":new_moon_with_face:", ":checkered_flag:", ":gift_heart:", ":massage:", ":fire_engine:", ":arrows_counterclockwise:", ":postbox:", ":helicopter:", ":joy_cat:", ":kissing_smiling_eyes:", ":tent:", ":heavy_multiplication_x:", ":cow:", ":icecream:", ":jeans:", ":clock1130:", ":heavy_exclamation_mark:", ":fries:", ":crocodile:", ":telescope:", ":dog2:", 
":ribbon:", ":sweet_potato:", ":fire:", ":radio_button:", ":point_left:", ":pineapple:", ":video_game:", ":round_pushpin:", ":uk:", ":heavy_plus_sign:", ":hibiscus:", ":jack_o_lantern:", ":baby:", ":statue_of_liberty:", ":briefcase:", ":factory:", ":curly_loop:", ":green_heart:", ":cry:", ":hourglass_flowing_sand:", ":bookmark:", ":city_sunset:", ":bow:", ":do_not_litter:", "(truestory)", ":clock1030:", ":feelsgood:", ":books:", ":musical_keyboard:", ":violin:", ":u7a7a:", ":minibus:", "(omgface)", 
":whale:", ":snail:", ":hamburger:", ":womens:", "(gtfo)", ":eight_spoked_asterisk:", ":person_with_blond_hair:", ":u55b6:", ":thought_balloon:", ":dragon_face:", ":shaved_ice:", ":arrow_upper_right:", ":saxophone:", ":zap:", ":anchor:", ":spaghetti:", ":water_buffalo:", ":monorail:", ":page_with_curl:", ":neutral_face:", ":arrow_heading_down:", ":gemini:", ":incoming_envelope:", ":monkey_face:", "\x3d(", ":trumpet:", ":department_store:", "(ilied)", ":no_entry_sign:", ":pizza:", ":movie_camera:", 
":school:", ":smirk:", ":bamboo:", ":full_moon_with_face:", ":information_desk_person:", ":rocket:", ":space_invader:", ":arrow_lower_right:", ":smile:", ":heavy_dollar_sign:", ":bear:", ":no_entry:", ":fountain:", ":dolls:", "\x3d)", ":mount_fuji:", ":european_castle:", ":train:", "(okay)", ":virgo:", ":ramen:", ":cyclone:", ":crossed_flags:", ":police_car:", ":game_die:", ":copyright:", ":sunflower:", ":octocat:", ":monkey:", "(awwyea)", ":curry:", ":tiger2:", ":potable_water:", ":anger:", ":ant:", 
":white_square:", ":speedboat:", ":metal:", ":nose:", ":bookmark_tabs:", ":alien:", ":dragon:", ":black_nib:", ":heartpulse:", ":large_blue_diamond:", ":rage4:", ":flags:", ":bath:", ":stew:", ":non-potable_water:", ":red_car:", ":wolf:", ":star:", ":airplane:", ":mountain_bicyclist:", ":aries:", ":heart_eyes_cat:", ":see_no_evil:", ":speech_balloon:", ":heart:", ":bento:", ":japan:", ":nine:", ":one:", ":mega:", ":disappointed:", "(challenge)", ":grey_question:", ":sob:", ":dash:", ":bride_with_veil:", 
":(", ":rage3:", ":beginner:", ":eight_pointed_black_star:", ":sagittarius:", ":fried_shrimp:", ":open_mouth:", ":boot:", ":arrow_right:", ":five:", ":japanese_castle:", ":egg:", ":elephant:", ":arrow_up:", "(notbad)", ":mouse:", ":japanese_goblin:", ":candy:", ":white_flower:", ":rugby_football:", ":speak_no_evil:", ":cinema:", ":pencil2:", ":smiley:", ":sailboat:", ":expressionless:", ":mailbox_with_mail:", ":rice_ball:", ":keycap_ten:", ":rage2:", ":)", ":clapper:", ":muscle:", ":straight_ruler:", 
":aquarius:", ":construction:", ":rat:", ":point_down:", ":ring:", ":kissing:", ":telephone:", ":gift:", ":runner:", ":bullettrain_side:", ":bicyclist:", ":beer:", ":secret:", ":calling:", ":horse_racing:", ":cop:", ":trophy:", ":waxing_crescent_moon:", ":bangbang:", ":rage1:", ":wavy_dash:", ":baseball:", ":grin:", ":passport_control:", ":black_circle:", ":page_facing_up:", ":mountain_cableway:", ":envelope:", ":meat_on_bone:", ":vibration_mode:", ":microscope:", ":earth_africa:", ":flushed:", ":strawberry:", 
":inbox_tray:", ":restroom:", ":blue_car:", ":musical_score:", ":scream:", ":name_badge:", ":rose:", ":sandal:", ":rotating_light:", ":hatching_chick:", ":art:", ":pager:", ":hand:", ":open_hands:", ":wink:", ":fu:", ":hocho:", ":beers:", ":sun_with_face:", ":blossom:", ":nut_and_bolt:", ":busstop:", ":children_crossing:", ":feet:", ":triangular_ruler:", ":spades:", ":flower_playing_cards:", ":yen:", ":information_source:", ":hash:", ":arrow_heading_up:", ":left_right_arrow:", ":sa:", ":small_red_triangle:", 
"(problem)", ":woman:", ":b:", ":roller_coaster:", ":date:", ":door:", ":innocent:", ":six:", ":stuck_out_tongue_closed_eyes:", ":es:", ":money_with_wings:", ":hamster:", ":abc:", ":no_smoking:", ":customs:", ":anguished:", ":bridge_at_night:", ":cactus:", ":mouse2:", ":baby_symbol:", ":stars:", ":angel:", "(rageguy)", ":high_heel:", ":scroll:", ":circus_tent:", ":a:", ":no_bell:", ":herb:", ":toilet:", ":notes:", ":rage:", ":womans_hat:", ":euro:", ":notebook_with_decorative_cover:", ":pencil:", 
":angry:", ":hearts:", ":football:", ":vhs:", "\x3dp", ":poodle:", ":grey_exclamation:", ":minidisc:", ":wc:", ":coffee:", ":alarm_clock:", ":star2:", ":bus:", ":ticket:", ":bowling:", ":house:", ":new:", ":chestnut:", ":gun:", ":diamond_shape_with_a_dot_inside:", ":fr:", ":rooster:", ":mask:", ":aerial_tramway:", ":free:", ":custard:", ":haircut:", ":snake:", ":blush:", ":waxing_gibbous_moon:", ":fish_cake:", ":tiger:", ":truck:", ":lock:", ":lollipop:", ":running:", ":vertical_traffic_light:", 
":key:", ":octopus:", ":smirk_cat:", ":sleeping:", ":european_post_office:", ":smile_cat:", ":it:", ":mountain_railway:", ":clock9:", ":godmode:", ":u6709:", ":speaker:", ":globe_with_meridians:", ":shoe:", ":boom:", ":cn:", ":purse:", ":beetle:", "(bitchplease)", ":moyai:", ":white_square_button:", ":hankey:", ":dolphin:", ":wheelchair:", ":chart:", ":train2:", ":blowfish:", ":scorpius:", ":tada:", ":green_apple:", ":clock8:", ":pensive:", ":u6708:", ":tram:", ":point_up:", ":ram:", ":three:", ":telephone_receiver:", 
"(alone)", ":p", ":guitar:", ":shower:", ":ocean:", ":microphone:", ":ballot_box_with_check:", ":tomato:", ":baggage_claim:", "(fuckyeah)", ":bulb:", ":horse:", ":oncoming_taxi:", ":ox:", ":princess:", ":articulated_lorry:", ":skull:", ":no_mouth:", ":last_quarter_moon:", ":clock7:", ":heart_decoration:", ":clubs:", ":cool:", ":ledger:", ":book:", ":soccer:", ":cl:", ":sweat_smile:", ":whale2:", "(megusta)", ":wrench:", ":fax:", ":video_camera:", ":u6e80:", ":paperclip:", ":clock930:", ":email:", 
":deciduous_tree:", ":sake:", ":u5408:", ":corn:", ":dog:", ":crystal_ball:", ":ambulance:", ":clock6:", ":taurus:", ":warning:", ":heartbeat:", ":zero:", ":accept:", ":moneybag:", ":closed_book:", ":grapes:", ":maple_leaf:", ":koko:", ":dizzy_face:", ":smiley_cat:", ":frowning:", ":seedling:", ":clock830:", ":radio:", ":mailbox_with_no_mail:", ":kissing_cat:", ":cow2:", ":kr:", ":no_good:", ":pouting_cat:", ":post_office:", ":pushpin:", ":clock5:", ":church:", ":love_hotel:", ":end:", ":satellite:", 
":bouquet:", ":person_with_pouting_face:", ":part_alternation_mark:", ":closed_lock_with_key:", ":honeybee:", ":school_satchel:", ":put_litter_in_its_place:", ":sheep:", ":underage:", ":pouch:", ":triumph:", ":bust_in_silhouette:", ":shipit:", ":large_orange_diamond:", ":symbols:", ":lock_with_ink_pen:", ":small_blue_diamond:", ":arrow_double_down:", ":atm:", ":pear:", ":kissing_closed_eyes:", ":eggplant:", ":wine_glass:", ":hammer:", ":apple:", ":bowtie:", ":scream_cat:", ":+1:", ":jp:", ":flashlight:", 
":white_circle:", ":man:", ":zzz:", ":clock4:", ":question:", ":sparkling_heart:", ":orange_book:", ":tophat:", ":rice_scene:", ":weary:", ":nail_care:", ":rowboat:", ":four:", ":clock730:", ":slot_machine:", ":walking:", ":japanese_ogre:", ":camera:", ":cupid:", ":handbag:", ":newspaper:", ":convenience_store:", ":u6307:", ":four_leaf_clover:", ":iphone:", "(sweetjesus)", ":clock3:", ":green_book:", ":headphones:", ":wind_chime:", ":ferris_wheel:", ":leopard:", ":sweat_drops:", ":seat:", ":metro:", 
":sunrise_over_mountains:", "(pokerface)", ":fallen_leaf:", ":clock630:", ":basketball:", ":dango:", ":banana:", ":tongue:", ":pig2:", ":umbrella:", ":x:", ":-1:", ":cookie:", ":heavy_minus_sign:", ":frog:", ":clock2:", ":cocktail:", ":grinning:", ":hurtrealbad:", ":parking:", ":pig_nose:", ":outbox_tray:", ":loop:", ":ear_of_rice:", ":rabbit2:", ":fist:", ":no_mobile_phones:", ":hourglass:", ":steam_locomotive:", ":bread:", ":clock530:", ":signal_strength:", ":family:", ":unlock:", ":first_quarter_moon:", 
":snowman:", ":o2:", ":closed_umbrella:", ":purple_heart:", ":baby_chick:", ":sos:", ":clock1:", ":card_index:", ":8ball:", ":dress:", ":heavy_division_sign:", ":suspect:", ":sunny:", ":clock430:", ":leftwards_arrow_with_hook:", ":crown:", ":tractor:", ":bell:", ":older_woman:", ":postal_horn:", ":ru:", ":surfer:", ":golf:", ":eyes:", ":leo:", ":abcd:", ":1234:", ":v:", ":ophiuchus:", ":fast_forward:", ":finnadie:", ":tshirt:", ":clipboard:", ":doughnut:", ":registered:", ":shirt:", ":raised_hand:", 
":bomb:", ":repeat_one:", ":panda_face:", ":cat:", ":confetti_ball:", ":sleepy:", ":clock330:", ":waning_gibbous_moon:", ":ear:", ":camel:", ":tv:", ":rainbow:", ":credit_card:", ":unamused:", ":chart_with_upwards_trend:", ":confused:", ":bike:", ":izakaya_lantern:", ":musical_note:", ":top:", ":ideograph_advantage:", ":moon:", ":cloud:", ":de:", ":cd:", ":kimono:", ":ab:", ":sunrise:", ":clock230:", ":city_sunrise:", ":hear_no_evil:", ":triangular_flag_on_post:", ":hushed:", ":congratulations:", 
":twisted_rightwards_arrows:", ":oncoming_bus:", ":man_with_gua_pi_mao:", ":chicken:", ":laughing:", ":mobile_phone_off:", ":blue_heart:", ":rice_cracker:"], [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/libra.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "libra"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/poultry_leg.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "poultry_leg"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/lips.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "lips"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/poop.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "poop"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/revolving_hearts.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "revolving_hearts"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mailbox.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mailbox"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cancer.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cancer"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/two_women_holding_hands.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "two_women_holding_hands"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/dizzy.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "dizzy"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sweat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sweat"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tired_face.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tired_face"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/traffic_light.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", 
"title", 1124275658), "traffic_light"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/relieved.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "relieved"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/seriously.jpg", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "seriously"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/two_hearts.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "two_hearts"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), 
"/assets/images/emoticons/emojis/black_square_button.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "black_square_button"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock130.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock130"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/fork_and_knife.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fork_and_knife"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/hotel.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "hotel"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/shit.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "shit"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_down_small.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_down_small"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/joy.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "joy"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/car.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "car"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bikini.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bikini"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/boat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "boat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/new_moon.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"new_moon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/dromedary_camel.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "dromedary_camel"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/couple.png", new cljs.core.Keyword(null, "css", 
"css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "couple"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bug.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bug"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/wedding.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "wedding"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/station.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "station"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/last_quarter_moon_with_face.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "last_quarter_moon_with_face"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/dancers.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "dancers"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/earth_asia.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "earth_asia"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/thumbsdown.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "thumbsdown"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/lemon.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "lemon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/e-mail.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "e-mail"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mag.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mag"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 
1014018390), "/assets/images/emoticons/emojis/six_pointed_star.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "six_pointed_star"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/dart.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "dart"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/melon.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "melon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/small_red_triangle_down.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "small_red_triangle_down"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/black_joker.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "black_joker"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/running_shirt_with_sash.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "running_shirt_with_sash"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_double_up.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_double_up"], null), new cljs.core.PersistentArrayMap(null, 3, 
[new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ok_woman.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ok_woman"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/cereal.jpg", new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"cereal"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/recycle.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "recycle"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/love_letter.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "love_letter"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/paw_prints.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "paw_prints"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/dancer.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "dancer"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/diamonds.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "diamonds"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/u7533.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "u7533"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/on.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "on"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tropical_fish.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tropical_fish"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/confounded.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", 
"title", 1124275658), "confounded"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/man_with_turban.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "man_with_turban"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sushi.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sushi"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/oncoming_police_car.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "oncoming_police_car"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/carousel_horse.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "carousel_horse"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/railway_car.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "railway_car"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/smiling_imp.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "smiling_imp"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/koala.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "koala"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bar_chart.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bar_chart"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/calendar.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "calendar"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/taxi.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "taxi"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/left_luggage.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "left_luggage"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/satisfied.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "satisfied"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sunglasses.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sunglasses"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/swimmer.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "swimmer"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/busts_in_silhouette.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "busts_in_silhouette"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/trident.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "trident"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/person_frowning.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "person_frowning"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/boar.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "boar"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tulip.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tulip"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/stuck_out_tongue_winking_eye.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "stuck_out_tongue_winking_eye"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/oden.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "oden"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/volcano.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "volcano"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/us.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "us"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/snowflake.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "snowflake"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/collision.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "collision"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/goberserk.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "goberserk"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/red_circle.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "red_circle"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/couplekiss.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "couplekiss"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/dvd.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "dvd"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mahjong.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "mahjong"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/no_bicycles.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "no_bicycles"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ok_hand.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ok_hand"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/fishing_pole_and_fish.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fishing_pole_and_fish"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/kiss.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "kiss"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/fuelpump.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fuelpump"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/persevere.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "persevere"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ski.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "ski"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/black_square.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "black_square"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/peach.png", new cljs.core.Keyword(null, "css", 
"css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "peach"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/yum.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "yum"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/necktie.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "necktie"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tanabata_tree.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tanabata_tree"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_left.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_left"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mans_shoe.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mans_shoe"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/raised_hands.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "raised_hands"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/facepunch.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "facepunch"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/capricorn.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "capricorn"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/currency_exchange.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "currency_exchange"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrows_clockwise.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrows_clockwise"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/interrobang.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "interrobang"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cherry_blossom.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cherry_blossom"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/birthday.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "birthday"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mens.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "mens"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/point_up_2.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "point_up_2"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/vs.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "vs"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/large_blue_circle.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "large_blue_circle"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/honey_pot.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "honey_pot"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sparkles.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sparkles"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/file_folder.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "file_folder"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/lipstick.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "lipstick"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/trollface.jpg", new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "trollface"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/full_moon.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "full_moon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/grimacing.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "grimacing"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/100.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "100"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tropical_drink.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tropical_drink"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/neckbeard.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "neckbeard"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/snowboarder.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "snowboarder"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/heavy_check_mark.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "heavy_check_mark"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/open_file_folder.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "open_file_folder"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cat2.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cat2"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/foggy.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "foggy"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/shell.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "shell"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/astonished.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "astonished"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bullettrain_front.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "bullettrain_front"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/turtle.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "turtle"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mortar_board.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mortar_board"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/girl.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "girl"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tea.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tea"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/chocolate_bar.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "chocolate_bar"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/ship.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ship"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tokyo_tower.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tokyo_tower"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/dollar.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "dollar"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/electric_plug.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "electric_plug"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bank.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bank"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/leaves.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "leaves"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mag_right.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mag_right"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), 
"/assets/images/emoticons/emojis/oncoming_automobile.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "oncoming_automobile"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/low_brightness.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "low_brightness"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/broken_heart.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "broken_heart"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/barber.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "barber"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sparkler.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sparkler"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/yuno.jpg", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "yuno"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/watermelon.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "watermelon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_up_down.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_up_down"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ok.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ok"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_right_hook.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_right_hook"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/office.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "office"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/u7981.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "u7981"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/worried.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "worried"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/id.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "id"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 
1014018390), "/assets/images/emoticons/emojis/balloon.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "balloon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_forward.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_forward"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ghost.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ghost"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/gb.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "gb"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/repeat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "repeat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/goat.png", new cljs.core.Keyword(null, "css", 
"css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "goat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/yellow_heart.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "yellow_heart"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/relaxed.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "relaxed"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/small_orange_diamond.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "small_orange_diamond"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/tennis.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tennis"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/suspension_railway.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "suspension_railway"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rewind.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rewind"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/computer.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "computer"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock12.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock12"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sound.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sound"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/christmas_tree.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "christmas_tree"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/light_rail.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "light_rail"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/baby_bottle.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "baby_bottle"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/gem.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "gem"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/watch.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "watch"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_lower_left.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_lower_left"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/trolleybus.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "trolleybus"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/badass.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "badass"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 
1014018390), "/assets/images/emoticons/emojis/older_man.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "older_man"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/eight.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "eight"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/soon.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "soon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/heart_eyes.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"heart_eyes"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/up.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "up"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/house_with_garden.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "house_with_garden"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/notebook.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "notebook"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/syringe.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "syringe"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/o.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "o"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 
1014018390), "/assets/images/emoticons/emojis/chart_with_downwards_trend.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "chart_with_downwards_trend"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/youdontsay.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"youdontsay"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/womans_clothes.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "womans_clothes"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/no_pedestrians.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "no_pedestrians"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/trollface.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "trollface"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), 
"/assets/images/emoticons/emojis/waning_crescent_moon.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "waning_crescent_moon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/white_check_mark.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "white_check_mark"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/phone.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "phone"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock11.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "clock11"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/punch.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "punch"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/pray.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pray"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rabbit.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rabbit"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/blue_book.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "blue_book"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bathtub.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bathtub"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/u7121.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "u7121"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/memo.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "memo"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/hospital.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "hospital"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/first_quarter_moon_with_face.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "first_quarter_moon_with_face"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/milky_way.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "milky_way"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_upper_left.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_upper_left"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/high_brightness.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "high_brightness"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/performing_arts.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "performing_arts"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/negative_squared_cross_mark.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "negative_squared_cross_mark"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/earth_americas.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "earth_americas"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/link.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "link"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/pig.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pig"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ice_cream.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ice_cream"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/santa.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "santa"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/point_right.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "point_right"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/wave.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "wave"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_backward.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_backward"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/capital_abcd.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "capital_abcd"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/exclamation.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "exclamation"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/squirrel.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "squirrel"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/eyeglasses.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "eyeglasses"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), 
"/assets/images/emoticons/emojis/mute.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mute"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock10.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock10"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cold_sweat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cold_sweat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/fearful.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "fearful"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/battery.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "battery"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_up_small.png", new cljs.core.Keyword(null, "css", 
"css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_up_small"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/pill.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pill"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/crying_cat_face.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "crying_cat_face"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tm.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tm"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/u5272.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "u5272"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/seven.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "seven"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rice.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rice"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bird.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"bird"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tangerine.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tangerine"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/loudspeaker.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "loudspeaker"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ng.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ng"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/m.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "m"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/disappointed_relieved.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "disappointed_relieved"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/hotsprings.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "hotsprings"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock1230.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock1230"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/partly_sunny.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "partly_sunny"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/penguin.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "penguin"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/evergreen_tree.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "evergreen_tree"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clap.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clap"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/fish.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fish"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 
1014018390), "/assets/images/emoticons/emojis/cake.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cake"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/imp.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "imp"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/guardsman.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "guardsman"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/smoking.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "smoking"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/racehorse.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "racehorse"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/couple_with_heart.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "couple_with_heart"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/construction_worker.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "construction_worker"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/fireworks.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fireworks"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/stuck_out_tongue.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "stuck_out_tongue"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/two.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "two"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/two_men_holding_hands.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "two_men_holding_hands"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/boy.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "boy"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/droplet.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "droplet"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/thumbsup.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "thumbsup"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_down.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_down"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/hatched_chick.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "hatched_chick"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/floppy_disk.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "floppy_disk"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mushroom.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mushroom"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/pound.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pound"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/scissors.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "scissors"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cherries.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cherries"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/mailbox_closed.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mailbox_closed"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/palm_tree.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "palm_tree"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/pisces.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pisces"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/kissing_heart.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "kissing_heart"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/new_moon_with_face.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "new_moon_with_face"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/checkered_flag.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "checkered_flag"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/gift_heart.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "gift_heart"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/massage.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "massage"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/fire_engine.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fire_engine"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrows_counterclockwise.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrows_counterclockwise"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/postbox.png", new cljs.core.Keyword(null, "css", 
"css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "postbox"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/helicopter.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "helicopter"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/joy_cat.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "joy_cat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/kissing_smiling_eyes.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "kissing_smiling_eyes"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/tent.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tent"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/heavy_multiplication_x.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "heavy_multiplication_x"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cow.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cow"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/icecream.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "icecream"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/jeans.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "jeans"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock1130.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock1130"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/heavy_exclamation_mark.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "heavy_exclamation_mark"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/fries.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fries"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/crocodile.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "crocodile"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/telescope.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "telescope"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/dog2.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "dog2"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ribbon.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ribbon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sweet_potato.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sweet_potato"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/fire.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fire"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/radio_button.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "radio_button"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/point_left.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "point_left"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/pineapple.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pineapple"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/video_game.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "video_game"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/round_pushpin.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "round_pushpin"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/uk.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "uk"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/heavy_plus_sign.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "heavy_plus_sign"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/hibiscus.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "hibiscus"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/jack_o_lantern.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "jack_o_lantern"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/baby.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "baby"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/statue_of_liberty.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "statue_of_liberty"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/briefcase.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "briefcase"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/factory.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "factory"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/curly_loop.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "curly_loop"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/green_heart.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "green_heart"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cry.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cry"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/hourglass_flowing_sand.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "hourglass_flowing_sand"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bookmark.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"bookmark"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/city_sunset.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "city_sunset"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bow.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bow"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/do_not_litter.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "do_not_litter"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/truestory.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "truestory"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock1030.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock1030"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/feelsgood.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "feelsgood"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/books.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "books"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/musical_keyboard.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "musical_keyboard"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/violin.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "violin"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/u7a7a.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "u7a7a"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/minibus.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "minibus"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/omgface.jpg", new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "omgface"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 
1014018390), "/assets/images/emoticons/emojis/whale.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "whale"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/snail.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "snail"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/hamburger.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "hamburger"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/womens.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "womens"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/gtfo.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "gtfo"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/eight_spoked_asterisk.png", new cljs.core.Keyword(null, "css", "css", 
1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "eight_spoked_asterisk"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/person_with_blond_hair.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "person_with_blond_hair"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/u55b6.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "u55b6"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/thought_balloon.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "thought_balloon"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/dragon_face.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "dragon_face"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/shaved_ice.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "shaved_ice"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_upper_right.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_upper_right"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/saxophone.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "saxophone"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/zap.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "zap"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/anchor.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "anchor"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/spaghetti.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "spaghetti"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/water_buffalo.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "water_buffalo"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/monorail.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", 
"title", 1124275658), "monorail"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/page_with_curl.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "page_with_curl"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/neutral_face.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "neutral_face"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_heading_down.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_heading_down"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/gemini.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "gemini"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/incoming_envelope.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "incoming_envelope"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/monkey_face.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "monkey_face"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/sad.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "sad"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/trumpet.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "trumpet"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/department_store.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "department_store"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/ilied.jpg", new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "ilied"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/no_entry_sign.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "no_entry_sign"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/pizza.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pizza"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/movie_camera.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "movie_camera"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/school.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "school"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/smirk.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "smirk"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bamboo.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "bamboo"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/full_moon_with_face.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "full_moon_with_face"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/information_desk_person.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "information_desk_person"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rocket.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rocket"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/space_invader.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "space_invader"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_lower_right.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"arrow_lower_right"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/smile.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "smile"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/heavy_dollar_sign.png", new cljs.core.Keyword(null, "css", 
"css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "heavy_dollar_sign"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bear.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bear"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/no_entry.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "no_entry"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/fountain.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fountain"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/dolls.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "dolls"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/happy.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "happy"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mount_fuji.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mount_fuji"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/european_castle.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", 
"title", 1124275658), "european_castle"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/train.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "train"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/okay.jpg", new cljs.core.Keyword(null, "css", 
"css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "okay"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/virgo.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "virgo"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ramen.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ramen"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cyclone.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cyclone"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/crossed_flags.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "crossed_flags"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/police_car.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "police_car"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/game_die.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "game_die"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/copyright.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "copyright"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sunflower.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sunflower"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/octocat.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "octocat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/monkey.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "monkey"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/awwyea.jpg", new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "awwyea"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/curry.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "curry"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tiger2.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tiger2"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/potable_water.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "potable_water"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/anger.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "anger"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ant.png", new cljs.core.Keyword(null, "css", "css", 
1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ant"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/white_square.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "white_square"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/speedboat.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "speedboat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/metal.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "metal"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/nose.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "nose"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bookmark_tabs.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bookmark_tabs"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/alien.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "alien"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/dragon.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "dragon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/black_nib.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "black_nib"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/heartpulse.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "heartpulse"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/large_blue_diamond.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "large_blue_diamond"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/rage4.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rage4"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/flags.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "flags"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bath.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bath"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/stew.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"stew"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/non-potable_water.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "non-potable_water"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/red_car.png", new cljs.core.Keyword(null, "css", 
"css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "red_car"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/wolf.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "wolf"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/star.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "star"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/airplane.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "airplane"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/mountain_bicyclist.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mountain_bicyclist"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/aries.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "aries"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/heart_eyes_cat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "heart_eyes_cat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/see_no_evil.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "see_no_evil"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/speech_balloon.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "speech_balloon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/heart.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "heart"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bento.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bento"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/japan.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "japan"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/nine.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "nine"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/one.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "one"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mega.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"mega"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/disappointed.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "disappointed"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/challenge.jpg", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"big", new cljs.core.Keyword(null, "title", "title", 1124275658), "challenge"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/grey_question.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "grey_question"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sob.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sob"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/dash.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "dash"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 
1014018390), "/assets/images/emoticons/emojis/bride_with_veil.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bride_with_veil"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/sad.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sad"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rage3.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rage3"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/beginner.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"beginner"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/eight_pointed_black_star.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "eight_pointed_black_star"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sagittarius.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sagittarius"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/fried_shrimp.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fried_shrimp"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), 
"/assets/images/emoticons/emojis/open_mouth.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "open_mouth"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/boot.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "boot"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_right.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_right"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/five.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "five"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/japanese_castle.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "japanese_castle"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/egg.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "egg"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/elephant.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "elephant"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_up.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_up"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/notbad.jpg", new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "notbad"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 
1014018390), "/assets/images/emoticons/emojis/mouse.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mouse"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/japanese_goblin.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "japanese_goblin"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/candy.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "candy"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/white_flower.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "white_flower"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rugby_football.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rugby_football"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/speak_no_evil.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "speak_no_evil"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cinema.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cinema"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/pencil2.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pencil2"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/smiley.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "smiley"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sailboat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sailboat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/expressionless.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "expressionless"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mailbox_with_mail.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mailbox_with_mail"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rice_ball.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rice_ball"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/keycap_ten.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "keycap_ten"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/rage2.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rage2"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/happy.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "happy"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clapper.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clapper"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/muscle.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "muscle"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/straight_ruler.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "straight_ruler"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/aquarius.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "aquarius"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/construction.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "construction"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), 
"/assets/images/emoticons/emojis/rat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/point_down.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "point_down"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ring.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ring"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/kissing.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"kissing"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/telephone.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "telephone"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/gift.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "gift"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/runner.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "runner"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bullettrain_side.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bullettrain_side"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bicyclist.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bicyclist"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/beer.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "beer"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/secret.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "secret"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/calling.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "calling"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/horse_racing.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "horse_racing"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cop.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cop"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/trophy.png", new cljs.core.Keyword(null, "css", "css", 
1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "trophy"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/waxing_crescent_moon.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "waxing_crescent_moon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), 
"/assets/images/emoticons/emojis/bangbang.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bangbang"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rage1.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rage1"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/wavy_dash.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "wavy_dash"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/baseball.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "baseball"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/grin.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "grin"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/passport_control.png", new cljs.core.Keyword(null, "css", 
"css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "passport_control"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/black_circle.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "black_circle"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), 
"/assets/images/emoticons/emojis/page_facing_up.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "page_facing_up"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mountain_cableway.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mountain_cableway"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/envelope.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "envelope"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/meat_on_bone.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "meat_on_bone"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/vibration_mode.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "vibration_mode"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/microscope.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "microscope"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/earth_africa.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "earth_africa"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/flushed.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "flushed"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/strawberry.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "strawberry"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/inbox_tray.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "inbox_tray"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/restroom.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "restroom"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/blue_car.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "blue_car"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/musical_score.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "musical_score"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/scream.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "scream"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/name_badge.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "name_badge"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rose.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rose"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sandal.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sandal"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rotating_light.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "rotating_light"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/hatching_chick.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "hatching_chick"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/art.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "art"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/pager.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pager"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 
1014018390), "/assets/images/emoticons/emojis/hand.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "hand"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/open_hands.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "open_hands"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/wink.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "wink"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/fu.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"fu"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/hocho.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "hocho"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/beers.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "beers"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sun_with_face.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sun_with_face"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/blossom.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "blossom"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/nut_and_bolt.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "nut_and_bolt"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/busstop.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "busstop"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/children_crossing.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "children_crossing"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/feet.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "feet"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/triangular_ruler.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "triangular_ruler"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/spades.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "spades"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/flower_playing_cards.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "flower_playing_cards"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/yen.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "yen"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/information_source.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "information_source"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/hash.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"hash"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/arrow_heading_up.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_heading_up"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/left_right_arrow.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "left_right_arrow"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sa.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sa"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/small_red_triangle.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "small_red_triangle"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/trollface.jpg", new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "problem"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/woman.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "woman"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/b.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "b"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/roller_coaster.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "roller_coaster"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/date.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", 
"title", 1124275658), "date"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/door.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "door"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/innocent.png", new cljs.core.Keyword(null, "css", "css", 
1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "innocent"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/six.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "six"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/stuck_out_tongue_closed_eyes.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "stuck_out_tongue_closed_eyes"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/es.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "es"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/money_with_wings.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "money_with_wings"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/hamster.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"hamster"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/abc.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "abc"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/no_smoking.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "no_smoking"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/customs.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "customs"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/anguished.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "anguished"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bridge_at_night.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bridge_at_night"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/cactus.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cactus"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mouse2.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mouse2"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/baby_symbol.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "baby_symbol"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/stars.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "stars"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/angel.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "angel"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/rageguy.jpg", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"big", new cljs.core.Keyword(null, "title", "title", 1124275658), "rageguy"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/high_heel.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "high_heel"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/scroll.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "scroll"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/circus_tent.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "circus_tent"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/a.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "a"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/no_bell.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "no_bell"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/herb.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "herb"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/toilet.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"toilet"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/notes.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "notes"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rage.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "rage"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/womans_hat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "womans_hat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/euro.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "euro"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/notebook_with_decorative_cover.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "notebook_with_decorative_cover"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/pencil.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pencil"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/angry.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"angry"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/hearts.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "hearts"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/football.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "football"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/vhs.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "vhs"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/tongue.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "\x3dp"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/poodle.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "poodle"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/grey_exclamation.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "grey_exclamation"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/minidisc.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "minidisc"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/wc.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "wc"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/coffee.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "coffee"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/alarm_clock.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "alarm_clock"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/star2.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "star2"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bus.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bus"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ticket.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ticket"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bowling.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bowling"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/house.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "house"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/new.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "new"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/chestnut.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "chestnut"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/gun.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "gun"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/diamond_shape_with_a_dot_inside.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "diamond_shape_with_a_dot_inside"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/fr.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fr"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rooster.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rooster"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/mask.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mask"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/aerial_tramway.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "aerial_tramway"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/free.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "free"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/custard.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "custard"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/haircut.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "haircut"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/snake.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "snake"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/blush.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "blush"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/waxing_gibbous_moon.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "waxing_gibbous_moon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/fish_cake.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fish_cake"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/tiger.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tiger"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/truck.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "truck"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/lock.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "lock"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/lollipop.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"lollipop"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/running.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "running"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/vertical_traffic_light.png", new cljs.core.Keyword(null, "css", 
"css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "vertical_traffic_light"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/key.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "key"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/octopus.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "octopus"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/smirk_cat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "smirk_cat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/sleeping.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sleeping"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/european_post_office.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "european_post_office"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/smile_cat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "smile_cat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/it.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "it"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mountain_railway.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mountain_railway"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock9.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock9"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/godmode.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "godmode"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/u6709.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "u6709"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/speaker.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "speaker"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/globe_with_meridians.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "globe_with_meridians"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/shoe.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "shoe"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/boom.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "boom"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cn.png", new cljs.core.Keyword(null, "css", 
"css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cn"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/purse.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "purse"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/beetle.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "beetle"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/bitchplease.jpg", new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "bitchplease"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/moyai.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "moyai"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/white_square_button.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "white_square_button"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/hankey.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "hankey"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/dolphin.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "dolphin"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/wheelchair.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "wheelchair"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/chart.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "chart"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/train2.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "train2"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/blowfish.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "blowfish"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/scorpius.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "scorpius"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tada.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tada"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/green_apple.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "green_apple"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock8.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock8"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/pensive.png", new cljs.core.Keyword(null, "css", 
"css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pensive"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/u6708.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "u6708"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tram.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tram"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/point_up.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "point_up"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/ram.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ram"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/three.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "three"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/telephone_receiver.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "telephone_receiver"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/alone.jpg", new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", 
"title", 1124275658), "alone"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/tongue.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), ":p"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/guitar.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "guitar"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/shower.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "shower"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ocean.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ocean"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/microphone.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "microphone"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/ballot_box_with_check.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ballot_box_with_check"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tomato.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"tomato"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/baggage_claim.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "baggage_claim"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/fuckyeah.jpg", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"big", new cljs.core.Keyword(null, "title", "title", 1124275658), "fuckyeah"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bulb.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bulb"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/horse.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "horse"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/oncoming_taxi.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "oncoming_taxi"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/ox.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ox"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/princess.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "princess"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/articulated_lorry.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "articulated_lorry"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/skull.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "skull"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/no_mouth.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "no_mouth"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/last_quarter_moon.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "last_quarter_moon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock7.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock7"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), 
"/assets/images/emoticons/emojis/heart_decoration.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "heart_decoration"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clubs.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clubs"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cool.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cool"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ledger.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"ledger"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/book.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "book"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/soccer.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "soccer"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cl.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cl"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sweat_smile.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sweat_smile"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/whale2.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "whale2"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/megusta.jpg", new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "megusta"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/wrench.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "wrench"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/fax.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fax"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/video_camera.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"video_camera"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/u6e80.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "u6e80"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/paperclip.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "paperclip"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock930.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock930"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/email.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "email"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/deciduous_tree.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "deciduous_tree"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/sake.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sake"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/u5408.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "u5408"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/corn.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "corn"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/dog.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"dog"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/crystal_ball.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "crystal_ball"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ambulance.png", new cljs.core.Keyword(null, "css", "css", 
1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ambulance"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock6.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock6"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/taurus.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "taurus"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/warning.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "warning"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/heartbeat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "heartbeat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/zero.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "zero"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/accept.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "accept"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/moneybag.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "moneybag"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/closed_book.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "closed_book"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/grapes.png", new cljs.core.Keyword(null, "css", 
"css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "grapes"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/maple_leaf.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "maple_leaf"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/koko.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "koko"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/dizzy_face.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "dizzy_face"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/smiley_cat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "smiley_cat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/frowning.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "frowning"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/seedling.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "seedling"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock830.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "clock830"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/radio.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "radio"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mailbox_with_no_mail.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mailbox_with_no_mail"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/kissing_cat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "kissing_cat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/cow2.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cow2"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/kr.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "kr"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/no_good.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "no_good"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/pouting_cat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "pouting_cat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/post_office.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "post_office"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/pushpin.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pushpin"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock5.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock5"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/church.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "church"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/love_hotel.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "love_hotel"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/end.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "end"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/satellite.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "satellite"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bouquet.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bouquet"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/person_with_pouting_face.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "person_with_pouting_face"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/part_alternation_mark.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "part_alternation_mark"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/closed_lock_with_key.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "closed_lock_with_key"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/honeybee.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "honeybee"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/school_satchel.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "school_satchel"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/put_litter_in_its_place.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "put_litter_in_its_place"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sheep.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sheep"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/underage.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "underage"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/pouch.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pouch"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/triumph.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "triumph"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bust_in_silhouette.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bust_in_silhouette"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/shipit.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "shipit"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/large_orange_diamond.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "large_orange_diamond"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/symbols.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "symbols"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/lock_with_ink_pen.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "lock_with_ink_pen"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/small_blue_diamond.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "small_blue_diamond"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), 
"/assets/images/emoticons/emojis/arrow_double_down.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "arrow_double_down"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/atm.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "atm"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/pear.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pear"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/kissing_closed_eyes.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "kissing_closed_eyes"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/eggplant.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "eggplant"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/wine_glass.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "wine_glass"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/hammer.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "hammer"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/apple.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "apple"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bowtie.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bowtie"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/scream_cat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "scream_cat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/plus1.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "+1"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/jp.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "jp"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/flashlight.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"flashlight"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/white_circle.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "white_circle"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/man.png", new cljs.core.Keyword(null, "css", "css", 
1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "man"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/zzz.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "zzz"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock4.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock4"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/question.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "question"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/sparkling_heart.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sparkling_heart"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/orange_book.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"orange_book"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tophat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tophat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rice_scene.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rice_scene"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/weary.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "weary"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/nail_care.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "nail_care"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rowboat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rowboat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/four.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "four"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock730.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock730"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/slot_machine.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "slot_machine"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/walking.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", 
"title", 1124275658), "walking"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/japanese_ogre.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "japanese_ogre"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/camera.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "camera"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cupid.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cupid"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/handbag.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "handbag"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/newspaper.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "newspaper"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/convenience_store.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "convenience_store"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/u6307.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"u6307"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/four_leaf_clover.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "four_leaf_clover"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/iphone.png", new cljs.core.Keyword(null, "css", 
"css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "iphone"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/sweetjesus.jpg", new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "sweetjesus"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock3.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock3"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/green_book.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "green_book"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/headphones.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "headphones"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/wind_chime.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "wind_chime"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ferris_wheel.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ferris_wheel"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/leopard.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "leopard"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sweat_drops.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sweat_drops"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/seat.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "seat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/metro.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "metro"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 
1014018390), "/assets/images/emoticons/emojis/sunrise_over_mountains.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sunrise_over_mountains"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/pokerface.jpg", new cljs.core.Keyword(null, "css", "css", 1014003061), "big", new cljs.core.Keyword(null, "title", "title", 1124275658), "pokerface"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/fallen_leaf.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fallen_leaf"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock630.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock630"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/basketball.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "basketball"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/dango.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "dango"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/banana.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "banana"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/tongue.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tongue"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/pig2.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pig2"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/umbrella.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "umbrella"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/x.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"x"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/-1.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "-1"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cookie.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "cookie"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/heavy_minus_sign.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "heavy_minus_sign"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/frog.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "frog"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock2.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock2"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cocktail.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cocktail"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/grinning.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "grinning"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/hurtrealbad.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "hurtrealbad"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/parking.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "parking"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/pig_nose.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "pig_nose"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/outbox_tray.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "outbox_tray"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/loop.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "loop"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ear_of_rice.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ear_of_rice"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rabbit2.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rabbit2"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/fist.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fist"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/no_mobile_phones.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "no_mobile_phones"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/hourglass.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "hourglass"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/steam_locomotive.png", new cljs.core.Keyword(null, "css", "css", 1014003061), 
"small", new cljs.core.Keyword(null, "title", "title", 1124275658), "steam_locomotive"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bread.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bread"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock530.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock530"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/signal_strength.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "signal_strength"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/family.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "family"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/unlock.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "unlock"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/first_quarter_moon.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "first_quarter_moon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/snowman.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "snowman"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/o2.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "o2"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/closed_umbrella.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "closed_umbrella"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/purple_heart.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "purple_heart"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 
1014018390), "/assets/images/emoticons/emojis/baby_chick.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "baby_chick"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sos.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sos"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock1.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock1"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/card_index.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "card_index"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/8ball.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "8ball"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/dress.png", new cljs.core.Keyword(null, "css", "css", 
1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "dress"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/heavy_division_sign.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "heavy_division_sign"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), 
"/assets/images/emoticons/emojis/suspect.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "suspect"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sunny.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sunny"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock430.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock430"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/leftwards_arrow_with_hook.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "leftwards_arrow_with_hook"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/crown.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "crown"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tractor.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tractor"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bell.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bell"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/older_woman.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "older_woman"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/postal_horn.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "postal_horn"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/ru.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ru"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/surfer.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "surfer"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/golf.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "golf"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/eyes.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"eyes"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/leo.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "leo"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/abcd.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "abcd"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/1234.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "1234"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/v.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "v"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ophiuchus.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ophiuchus"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/fast_forward.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "fast_forward"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/finnadie.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "finnadie"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/tshirt.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tshirt"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clipboard.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clipboard"], null), 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/doughnut.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "doughnut"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/registered.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "registered"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/shirt.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "shirt"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/raised_hand.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "raised_hand"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bomb.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bomb"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/repeat_one.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "repeat_one"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/panda_face.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "panda_face"], 
null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cat.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cat"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/confetti_ball.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "confetti_ball"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sleepy.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "sleepy"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock330.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock330"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/waning_gibbous_moon.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "waning_gibbous_moon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/ear.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ear"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/camel.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "camel"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/tv.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "tv"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rainbow.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"rainbow"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/credit_card.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "credit_card"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/unamused.png", new cljs.core.Keyword(null, "css", "css", 
1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "unamused"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/chart_with_upwards_trend.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "chart_with_upwards_trend"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 
1014018390), "/assets/images/emoticons/emojis/confused.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "confused"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/bike.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "bike"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/izakaya_lantern.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "izakaya_lantern"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/musical_note.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, 
"title", "title", 1124275658), "musical_note"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/top.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "top"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ideograph_advantage.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ideograph_advantage"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/moon.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "moon"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), 
"/assets/images/emoticons/emojis/cloud.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cloud"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/de.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "de"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/cd.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "cd"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/kimono.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"kimono"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/ab.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "ab"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/sunrise.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", 
new cljs.core.Keyword(null, "title", "title", 1124275658), "sunrise"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/clock230.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "clock230"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/city_sunrise.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "city_sunrise"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/hear_no_evil.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "hear_no_evil"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"src", "src", 1014018390), "/assets/images/emoticons/emojis/triangular_flag_on_post.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "triangular_flag_on_post"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/hushed.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 
1124275658), "hushed"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/congratulations.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "congratulations"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/twisted_rightwards_arrows.png", new cljs.core.Keyword(null, 
"css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "twisted_rightwards_arrows"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/oncoming_bus.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "oncoming_bus"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", 
"src", 1014018390), "/assets/images/emoticons/emojis/man_with_gua_pi_mao.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "man_with_gua_pi_mao"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/chicken.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), 
"chicken"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/laughing.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "laughing"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/mobile_phone_off.png", new cljs.core.Keyword(null, "css", "css", 
1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "mobile_phone_off"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/blue_heart.png", new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "blue_heart"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/emoticons/emojis/rice_cracker.png", 
new cljs.core.Keyword(null, "css", "css", 1014003061), "small", new cljs.core.Keyword(null, "title", "title", 1124275658), "rice_cracker"], null)]);
goog.provide("omchaya.plugins");
goog.require("cljs.core");
goog.require("omchaya.emoticons");
goog.require("omchaya.emoticons");
goog.require("clojure.string");
goog.require("clojure.string");
omchaya.plugins.mention = function mention(name) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1017440956), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.mention", "span.mention", 4255198904), name], null), " "], null);
};
omchaya.plugins.mentions = function mentions(activity_pieces, current_user_email, users, settings, author) {
  return cljs.core.map.call(null, function(piece) {
    var vec__23420 = cljs.core.re_find.call(null, /(.*)@(\w+)(.*)/, piece);
    var _ = cljs.core.nth.call(null, vec__23420, 0, null);
    var pre = cljs.core.nth.call(null, vec__23420, 1, null);
    var username = cljs.core.nth.call(null, vec__23420, 2, null);
    var post = cljs.core.nth.call(null, vec__23420, 3, null);
    var temp__4090__auto__ = function() {
      var and__3431__auto__ = typeof piece === "string";
      if (and__3431__auto__) {
        return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([username], true), cljs.core.map.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "username", "username", 748190792), cljs.core.second), users));
      } else {
        return and__3431__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var at = temp__4090__auto__;
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, post), omchaya.plugins.mention.call(null, username)), pre);
    } else {
      return piece;
    }
  }, activity_pieces);
};
omchaya.plugins.emoticon = function emoticon(emoji) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img.emoticon-embed.small", "img.emoticon-embed.small", 3640115624), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), (new cljs.core.Keyword(null, "src", "src", 1014018390)).cljs$core$IFn$_invoke$arity$1(emoji), new cljs.core.Keyword(null, "class", "class", 1108647146), (new cljs.core.Keyword(null, "css", "css", 1014003061)).cljs$core$IFn$_invoke$arity$1(emoji), 
  new cljs.core.Keyword(null, "title", "title", 1124275658), (new cljs.core.Keyword(null, "title", "title", 1124275658)).cljs$core$IFn$_invoke$arity$1(emoji)], null)], null);
};
omchaya.plugins.emoticons = function emoticons(activity_pieces) {
  var helper = function(piece) {
    if (typeof piece === "string") {
      var temp__4090__auto__ = cljs.core.get.call(null, omchaya.emoticons.known_emoticons, clojure.string.trim.call(null, piece));
      if (cljs.core.truth_(temp__4090__auto__)) {
        var emoji = temp__4090__auto__;
        return omchaya.plugins.emoticon.call(null, emoji);
      } else {
        return piece;
      }
    } else {
      return piece;
    }
  };
  return cljs.core.map.call(null, helper, activity_pieces);
};
omchaya.plugins.links = function links(activity_pieces) {
  var helper = function(piece) {
    var temp__4090__auto__ = function() {
      var and__3431__auto__ = typeof piece === "string";
      if (and__3431__auto__) {
        return cljs.core.re_find.call(null, /https?:\/\/.*/, piece);
      } else {
        return and__3431__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var link = temp__4090__auto__;
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a.href", "a.href", 3836624906), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "target", "target", 4427965699), "_blank", new cljs.core.Keyword(null, "href", "href", 1017115293), link], null), link], null);
    } else {
      return piece;
    }
  };
  return cljs.core.map.call(null, helper, activity_pieces);
};
omchaya.plugins.pastie = function pastie(activity_pieces) {
  var max_preview_length = 300;
  var max_preview_lines = 4;
  var original = clojure.string.join.call(null, " ", activity_pieces);
  if (cljs.core.truth_(cljs.core.re_find.call(null, /\n.*\n/, original))) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pre.pastie", "pre.pastie", 1693117899), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a.pastie-link", "a.pastie-link", 3223124766), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", 1017115293), 
    "#", new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), cljs.core.constantly.call(null, false)], null), "View pastie"], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "br", "br", 1013907394)], null), function() {
      var preview = function() {
        var preview = original;
        var preview__$1 = cljs.core.count.call(null, clojure.string.split.call(null, /\n/, preview)) > max_preview_lines ? clojure.string.join.call(null, "\n", cljs.core.take.call(null, max_preview_lines, clojure.string.split.call(null, /\n/, preview))) : preview;
        var preview__$2 = cljs.core.count.call(null, preview__$1) > max_preview_length ? cljs.core.subs.call(null, preview__$1, 0, max_preview_length) : preview__$1;
        return preview__$2;
      }();
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.not_EQ_.call(null, cljs.core.count.call(null, preview), cljs.core.count.call(null, original)) ? "..." : null), preview);
    }()], null)], null);
  } else {
    return activity_pieces;
  }
};
omchaya.plugins.slash_me = function slash_me(activity_pieces, current_user_email, users) {
  if (cljs.core._EQ_.call(null, cljs.core.first.call(null, activity_pieces), "/me")) {
    var user = cljs.core.get.call(null, users, current_user_email);
    return cljs.core.assoc_in.call(null, cljs.core.vec.call(null, activity_pieces), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [0], null), (new cljs.core.Keyword(null, "username", "username", 748190792)).cljs$core$IFn$_invoke$arity$1(user));
  } else {
    return activity_pieces;
  }
};
omchaya.plugins.slash_play = function slash_play(activity_pieces) {
  var vec__23422 = activity_pieces;
  var command = cljs.core.nth.call(null, vec__23422, 0, null);
  var url = cljs.core.nth.call(null, vec__23422, 1, null);
  var rest = cljs.core.nthnext.call(null, vec__23422, 2);
  if (cljs.core._EQ_.call(null, command, "/play")) {
    return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "strong", "strong", 4416891401), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a.audio-play", "a.audio-play", 1097712106), "Playing ", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "target", "target", 4427965699), "_blank", new cljs.core.Keyword(null, "href", "href", 1017115293), url], null), url], null)], null)], null)], null), rest);
  } else {
    return activity_pieces;
  }
};
omchaya.plugins.rgb_embed = function rgb_embed(activity_pieces) {
  return cljs.core.map.call(null, function(piece) {
    var temp__4090__auto__ = cljs.core.re_find.call(null, /(.*)rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)(.*)/, piece);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var vec__23424 = temp__4090__auto__;
      var _ = cljs.core.nth.call(null, vec__23424, 0, null);
      var pre = cljs.core.nth.call(null, vec__23424, 1, null);
      var r = cljs.core.nth.call(null, vec__23424, 2, null);
      var g = cljs.core.nth.call(null, vec__23424, 3, null);
      var b = cljs.core.nth.call(null, vec__23424, 4, null);
      var post = cljs.core.nth.call(null, vec__23424, 5, null);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, post), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.color-preview", "span.color-preview", 4358700844), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", 1123684643), {"background-color":[cljs.core.str("rgb("), cljs.core.str(r), cljs.core.str(","), cljs.core.str(g), cljs.core.str(","), 
      cljs.core.str(b), cljs.core.str(")")].join("")}], null)], null)), pre);
    } else {
      return piece;
    }
  }, activity_pieces);
};
omchaya.plugins.hex_embed = function hex_embed(activity_pieces) {
  return cljs.core.map.call(null, function(piece) {
    var temp__4090__auto__ = cljs.core.re_find.call(null, /(.*)#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})(.*)/, piece);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var vec__23426 = temp__4090__auto__;
      var _ = cljs.core.nth.call(null, vec__23426, 0, null);
      var pre = cljs.core.nth.call(null, vec__23426, 1, null);
      var hex = cljs.core.nth.call(null, vec__23426, 2, null);
      var post = cljs.core.nth.call(null, vec__23426, 3, null);
      return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, post), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.color-preview", "span.color-preview", 4358700844), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", 1123684643), {"background-color":[cljs.core.str("#"), cljs.core.str(hex)].join("")}], null)], null)), pre);
    } else {
      return piece;
    }
  }, activity_pieces);
};
omchaya.plugins.image_embed = function image_embed(activity_pieces) {
  return cljs.core.map.call(null, function(piece) {
    if (cljs.core.truth_(cljs.core.re_find.call(null, /http.*\.(jpg|jpeg|gif|png)/, piece))) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.image-preview", "div.image-preview", 3251488299), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "target", "target", 4427965699), "_blank", new cljs.core.Keyword(null, "href", "href", 1017115293), piece], null), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img.image-embed", "img.image-embed", 3682275758), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", 1014018390), piece], null)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.name", "div.name", 1323980090), piece], null)], null);
    } else {
      return piece;
    }
  }, activity_pieces);
};
omchaya.plugins.youtube_embed = function youtube_embed(activity_pieces) {
  return cljs.core.map.call(null, function(piece) {
    var temp__4090__auto__ = function() {
      var and__3431__auto__ = cljs.core.re_find.call(null, /https?.+www.youtube.com.+watch/, piece);
      if (cljs.core.truth_(and__3431__auto__)) {
        return cljs.core.re_find.call(null, /\Wv=([\w|\-]*)/, piece);
      } else {
        return and__3431__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4090__auto__)) {
      var vec__23428 = temp__4090__auto__;
      var _ = cljs.core.nth.call(null, vec__23428, 0, null);
      var video_id = cljs.core.nth.call(null, vec__23428, 1, null);
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.youtube-preview", "div.youtube-preview", 4543886131), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "iframe", "iframe", 4117657110), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "width", "width", 1127031096), "560", new cljs.core.Keyword(null, "height", "height", 4087841945), "315", 
      new cljs.core.Keyword(null, "src", "src", 1014018390), [cljs.core.str("http://www.youtube.com/embed/"), cljs.core.str(video_id)].join(""), new cljs.core.Keyword(null, "frameBorder", "frameBorder", 4678186859), 0, new cljs.core.Keyword(null, "allowFullScreen", "allowFullScreen", 4370862966), true], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.name", "div.name", 1323980090), piece], null)], null);
    } else {
      return piece;
    }
  }, activity_pieces);
};
omchaya.plugins.vimeo_embed = function vimeo_embed(activity_pieces) {
  return cljs.core.map.call(null, function(piece) {
    var temp__4090__auto__ = cljs.core.re_find.call(null, /^https?:\/\/vimeo.com\/(\d+)/, piece);
    if (cljs.core.truth_(temp__4090__auto__)) {
      var vec__23430 = temp__4090__auto__;
      var _ = cljs.core.nth.call(null, vec__23430, 0, null);
      var video_id = cljs.core.nth.call(null, vec__23430, 1, null);
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.vimeo-preview", "div.vimeo-preview", 2625657364), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "iframe", "iframe", 4117657110), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "width", "width", 1127031096), "500", new cljs.core.Keyword(null, "height", "height", 4087841945), "281", new cljs.core.Keyword(null, 
      "src", "src", 1014018390), [cljs.core.str("http://player.vimeo.com/video/"), cljs.core.str(video_id)].join(""), new cljs.core.Keyword(null, "frameBorder", "frameBorder", 4678186859), 0, new cljs.core.Keyword(null, "webkitAllowFullScreen", "webkitAllowFullScreen", 923010068), true, new cljs.core.Keyword(null, "mozAllowFullScreen", "mozAllowFullScreen", 4100002110), true, new cljs.core.Keyword(null, "allowFullScreen", "allowFullScreen", 4370862966), true], null)], null), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.name", "div.name", 1323980090), piece], null)], null);
    } else {
      return piece;
    }
  }, activity_pieces);
};
goog.provide("omchaya.components.main_area");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("omchaya.plugins");
goog.require("omchaya.utils");
goog.require("sablono.core");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("om.dom");
goog.require("om.core");
goog.require("clojure.string");
goog.require("omchaya.datetime");
goog.require("om.core");
goog.require("omchaya.datetime");
goog.require("clojure.string");
goog.require("omchaya.utils");
goog.require("om.dom");
goog.require("cljs.core.async");
goog.require("omchaya.plugins");
omchaya.components.main_area.delimiter_re = / /;
omchaya.components.main_area.activity_content = function activity_content(current_user_email, users, settings, author, activity) {
  var content = omchaya.plugins.hex_embed.call(null, omchaya.plugins.rgb_embed.call(null, omchaya.plugins.links.call(null, omchaya.plugins.emoticons.call(null, omchaya.plugins.slash_play.call(null, omchaya.plugins.slash_me.call(null, omchaya.plugins.mentions.call(null, omchaya.plugins.pastie.call(null, clojure.string.split.call(null, (new cljs.core.Keyword(null, "content", "content", 1965434859)).cljs$core$IFn$_invoke$arity$1(activity), omchaya.components.main_area.delimiter_re)), current_user_email, 
  users, settings, author), current_user_email, users))))));
  return cljs.core.interpose.call(null, " ", content);
};
omchaya.components.main_area.activity_entry = function activity_entry(current_user_email, users, settings, author, activity) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.activity", "div.activity", 722659134), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", 1013907597), [cljs.core.str("activity-"), cljs.core.str((new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(activity))].join(""), new cljs.core.Keyword(null, "class", "class", 
  1108647146), cljs.core._EQ_.call(null, current_user_email, (new cljs.core.Keyword(null, "email", "email", 1110523662)).cljs$core$IFn$_invoke$arity$1(author)) ? "current_user" : null, new cljs.core.Keyword(null, "key", "key", 1014010321), (new cljs.core.Keyword(null, "created_at", "created_at", 2383584348)).cljs$core$IFn$_invoke$arity$1(activity)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.posted_at", "span.posted_at", 
  1306140929), [cljs.core.str(omchaya.datetime.time_ago.call(null, (new cljs.core.Keyword(null, "created_at", "created_at", 2383584348)).cljs$core$IFn$_invoke$arity$1(activity))), cljs.core.str(" ago")].join("")], null), omchaya.utils.gravatar_for.call(null, (new cljs.core.Keyword(null, "email", "email", 1110523662)).cljs$core$IFn$_invoke$arity$1(author)), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.readable", "div.readable", 
  1511467039), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.user", "span.user", 4620099425), function() {
    var or__3443__auto__ = (new cljs.core.Keyword(null, "full-name", "full-name", 3585519227)).cljs$core$IFn$_invoke$arity$1(author);
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return(new cljs.core.Keyword(null, "email", "email", 1110523662)).cljs$core$IFn$_invoke$arity$1(author);
    }
  }()], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.content", "span.content", 4256384327), omchaya.components.main_area.activity_content.call(null, current_user_email, users, settings, author, activity)], null)], null), cljs.core.map.call(null, function(media) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.media-entry", "div.media-entry", 4138135262), media], null);
  }, cljs.core.remove.call(null, cljs.core.string_QMARK_, omchaya.plugins.vimeo_embed.call(null, omchaya.plugins.youtube_embed.call(null, omchaya.plugins.image_embed.call(null, clojure.string.split.call(null, (new cljs.core.Keyword(null, "content", "content", 1965434859)).cljs$core$IFn$_invoke$arity$1(activity), omchaya.components.main_area.delimiter_re))))))], null));
};
omchaya.components.main_area.chatbox = function chatbox(comm, opts) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.chatbox", "div.chatbox", 3321066120), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "textarea.chat-input", "textarea.chat-input", 3263729595), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "on-focus", "on-focus", 1419396828), function() {
    return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "user-message-focused", "user-message-focused", 3790954785)], null));
  }, new cljs.core.Keyword(null, "on-blur", "on-blur", 3936357127), function() {
    return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "user-message-blurred", "user-message-blurred", 4466552948)], null));
  }, new cljs.core.Keyword(null, "on-key-up", "on-key-up", 833769449), function(p1__22609_SHARP_) {
    if (cljs.core._EQ_.call(null, p1__22609_SHARP_.which, 13)) {
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "user-message-submitted", "user-message-submitted", 1304334501)], null));
    } else {
      return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "user-message-updated", "user-message-updated", 4247565925), p1__22609_SHARP_.target.value], null));
    }
  }], null), cljs.core.truth_((new cljs.core.Keyword(null, "input-focused?", "input-focused?", 2338465213)).cljs$core$IFn$_invoke$arity$1(opts)) ? null : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 1125876963), (new cljs.core.Keyword(null, "input-value", "input-value", 3916329248)).cljs$core$IFn$_invoke$arity$1(opts)], null))], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button.post", 
  "button.post", 3504098638), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), function() {
    return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "user-message-submitted", "user-message-submitted", 1304334501)], null));
  }], null), "Post"], null)], null);
};
omchaya.components.main_area.activities_list = function activities_list(filtered_activities, opts) {
  return cljs.core.map.call(null, function(p1__22610_SHARP_) {
    var author = cljs.core.get_in.call(null, opts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "users", "users", 1125482874), (new cljs.core.Keyword(null, "author", "author", 3902543101)).cljs$core$IFn$_invoke$arity$1(p1__22610_SHARP_)], null));
    return omchaya.components.main_area.activity_entry.call(null, (new cljs.core.Keyword(null, "current-user-email", "current-user-email", 4091392864)).cljs$core$IFn$_invoke$arity$1(opts), (new cljs.core.Keyword(null, "users", "users", 1125482874)).cljs$core$IFn$_invoke$arity$1(opts), (new cljs.core.Keyword(null, "settings", "settings", 2448535445)).cljs$core$IFn$_invoke$arity$1(opts), author, p1__22610_SHARP_);
  }, filtered_activities);
};
omchaya.components.main_area.main_area = function main_area(p__22612, owner, opts) {
  var map__22617 = p__22612;
  var map__22617__$1 = cljs.core.seq_QMARK_.call(null, map__22617) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22617) : map__22617;
  var search_filter = cljs.core.get.call(null, map__22617__$1, new cljs.core.Keyword(null, "search-filter", "search-filter", 674207407));
  var channel = cljs.core.get.call(null, map__22617__$1, new cljs.core.Keyword(null, "channel", "channel", 1752854645));
  if (typeof omchaya.components.main_area.t22618 !== "undefined") {
  } else {
    omchaya.components.main_area.t22618 = function(channel, search_filter, map__22617, opts, owner, p__22612, main_area, meta22619) {
      this.channel = channel;
      this.search_filter = search_filter;
      this.map__22617 = map__22617;
      this.opts = opts;
      this.owner = owner;
      this.p__22612 = p__22612;
      this.main_area = main_area;
      this.meta22619 = meta22619;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    omchaya.components.main_area.t22618.cljs$lang$type = true;
    omchaya.components.main_area.t22618.cljs$lang$ctorStr = "omchaya.components.main-area/t22618";
    omchaya.components.main_area.t22618.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "omchaya.components.main-area/t22618");
    };
    omchaya.components.main_area.t22618.prototype.om$core$IRender$ = true;
    omchaya.components.main_area.t22618.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return sablono.interpreter.interpret.call(null, function() {
        var comm = cljs.core.get_in.call(null, self__.opts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
        var re_filter = cljs.core.truth_(self__.search_filter) ? new RegExp(self__.search_filter, "ig") : null;
        var activities = (new cljs.core.Keyword(null, "activities", "activities", 3062509407)).cljs$core$IFn$_invoke$arity$1(self__.channel);
        var filtered_activities = cljs.core.truth_(re_filter) ? cljs.core.filter.call(null, function(comm, re_filter, activities) {
          return function(p1__22611_SHARP_) {
            return(new cljs.core.Keyword(null, "content", "content", 1965434859)).cljs$core$IFn$_invoke$arity$1(p1__22611_SHARP_).match(re_filter);
          };
        }(comm, re_filter, activities), activities) : activities;
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "article.main-area", "article.main-area", 2825875611), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "header.header", "header.header", 4226879616), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a.nav-toggle.button.left", "a.nav-toggle.button.left", 
        3678030386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", 1017115293), "#", new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), function() {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "left-sidebar-toggled", "left-sidebar-toggled", 1753163723)], null));
        }], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-comments", "i.icon-comments", 3985629045)], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a.sidebar-toggle.button.right", "a.sidebar-toggle.button.right", 3925274670), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", 1017115293), "#", new cljs.core.Keyword(null, 
        "on-click", "on-click", 1416542092), function() {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-sidebar-toggled", "right-sidebar-toggled", 1915715552)], null));
        }], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-reorder", "i.icon-reorder", 2638596222)], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a.logo", "a.logo", 3836741258), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", 1017115293), "#/", new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), 
        cljs.core.constantly.call(null, false)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1014008629), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "src", "src", 1014018390), "/assets/images/logo.png", new cljs.core.Keyword(null, "alt", "alt", 1014000923), "Omchaya", new cljs.core.Keyword(null, "title", "title", 1124275658), "Omchaya - A Kandan Client"], null)], null)], null)], null), 
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div#channels", "div#channels", 2218414836), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.channels-pane", "div.channels-pane", 3438486554), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", 1013907597), [cljs.core.str("channels-"), cljs.core.str((new cljs.core.Keyword(null, "id", 
        "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(self__.channel))].join(""), new cljs.core.Keyword(null, "class", "class", 1108647146), cljs.core.truth_((new cljs.core.Keyword(null, "selected", "selected", 2205476365)).cljs$core$IFn$_invoke$arity$1(self__.channel)) ? "active" : null], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.paginated-activities", "div.paginated-activities", 3824313244), cljs.core.truth_((new cljs.core.Keyword(null, 
        "loading-more-messages", "loading-more-messages", 4687766885)).cljs$core$IFn$_invoke$arity$1(self__.channel)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.pagination", "div.pagination", 3844272265), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-spinner.icon-spin.icon-2x", "i.icon-spinner.icon-spin.icon-2x", 3663369264)], null), "Loading previous messages"], 
        null) : null, omchaya.components.main_area.activities_list.call(null, filtered_activities, self__.opts)], null), omchaya.components.main_area.chatbox.call(null, comm, self__.opts)], null)], null)], null);
      }());
    };
    omchaya.components.main_area.t22618.prototype.om$core$IDisplayName$ = true;
    omchaya.components.main_area.t22618.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return "MainArea";
    };
    omchaya.components.main_area.t22618.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22620) {
      var self__ = this;
      var _22620__$1 = this;
      return self__.meta22619;
    };
    omchaya.components.main_area.t22618.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22620, meta22619__$1) {
      var self__ = this;
      var _22620__$1 = this;
      return new omchaya.components.main_area.t22618(self__.channel, self__.search_filter, self__.map__22617, self__.opts, self__.owner, self__.p__22612, self__.main_area, meta22619__$1);
    };
    omchaya.components.main_area.__GT_t22618 = function __GT_t22618(channel__$1, search_filter__$1, map__22617__$2, opts__$1, owner__$1, p__22612__$1, main_area__$1, meta22619) {
      return new omchaya.components.main_area.t22618(channel__$1, search_filter__$1, map__22617__$2, opts__$1, owner__$1, p__22612__$1, main_area__$1, meta22619);
    };
  }
  return new omchaya.components.main_area.t22618(channel, search_filter, map__22617__$1, opts, owner, p__22612, main_area, null);
};
goog.provide("omchaya.components.key_queue");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.core.async");
goog.require("omchaya.utils");
goog.require("sablono.core");
goog.require("cljs.core.async");
goog.require("sablono.core");
goog.require("om.core");
goog.require("om.core");
goog.require("clojure.string");
goog.require("omchaya.utils");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("dommy.core");
omchaya.components.key_queue.code__GT_key = cljs.core.PersistentHashMap.fromArrays([37, 38, 39, 40, 13, 46, 186, 27, 191], ["left", "up", "right", "down", "enter", "del", ";", "esc", "slash"]);
omchaya.components.key_queue.event_modifiers = function event_modifiers(e) {
  return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.filter.call(null, cljs.core.identity, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(e.shiftKey) ? "shift" : null, cljs.core.truth_(e.altKey) ? "alt" : null, cljs.core.truth_(e.ctrlKey) ? "ctrl" : null, cljs.core.truth_(e.metaKey) ? "meta" : null], null)));
};
omchaya.components.key_queue.mod_keys = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [String.fromCharCode(16), String.fromCharCode(17), String.fromCharCode(18)], null);
omchaya.components.key_queue.event__GT_key = function event__GT_key(event) {
  var mods = omchaya.components.key_queue.event_modifiers.call(null, event);
  var which = event.which;
  var key = function() {
    var or__3443__auto__ = omchaya.components.key_queue.code__GT_key.call(null, which);
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return String.fromCharCode(which).toLowerCase();
    }
  }();
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = key;
    if (cljs.core.truth_(and__3431__auto__)) {
      return!cljs.core.empty_QMARK_.call(null, key) && cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([key], true), omchaya.components.key_queue.mod_keys));
    } else {
      return and__3431__auto__;
    }
  }())) {
    return clojure.string.join.call(null, "+", cljs.core.conj.call(null, mods, key));
  } else {
    return null;
  }
};
omchaya.components.key_queue.log_keystroke = function log_keystroke(e) {
  omchaya.utils.log.call(null, "key event", e);
  return e;
};
omchaya.components.key_queue.start_key_queue = function start_key_queue(key_ch) {
  return dommy.core.listen_BANG_.call(null, document, new cljs.core.Keyword(null, "keydown", "keydown", 4493897459), function(p1__22413_SHARP_) {
    var temp__4092__auto__ = omchaya.components.key_queue.event__GT_key.call(null, p1__22413_SHARP_);
    if (cljs.core.truth_(temp__4092__auto__)) {
      var k = temp__4092__auto__;
      return cljs.core.async.put_BANG_.call(null, key_ch, k);
    } else {
      return null;
    }
  });
};
omchaya.components.key_queue.global_key_ch = cljs.core.async.chan.call(null, cljs.core.async.sliding_buffer.call(null, 1E3));
omchaya.components.key_queue.start_key_queue.call(null, omchaya.components.key_queue.global_key_ch);
omchaya.components.key_queue.key_mult = cljs.core.async.mult.call(null, omchaya.components.key_queue.global_key_ch);
omchaya.components.key_queue.combo_match_QMARK_ = function combo_match_QMARK_(keys, combo) {
  var tail_keys = cljs.core.take_while.call(null, cljs.core.seq, cljs.core.iterate.call(null, cljs.core.rest, keys));
  return cljs.core.some.call(null, cljs.core.partial.call(null, cljs.core._EQ_, combo), tail_keys);
};
omchaya.components.key_queue.combos_match_QMARK_ = function combos_match_QMARK_(combo_or_combos, keys) {
  var combos = cljs.core.coll_QMARK_.call(null, combo_or_combos) ? combo_or_combos : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [combo_or_combos], null);
  var combos__$1 = cljs.core.map.call(null, function(combos) {
    return function(p1__22414_SHARP_) {
      return clojure.string.split.call(null, p1__22414_SHARP_, / /);
    };
  }(combos), combos);
  return cljs.core.some.call(null, cljs.core.partial.call(null, omchaya.components.key_queue.combo_match_QMARK_, keys), combos__$1);
};
omchaya.components.key_queue.match_keys = function match_keys(keymap, keys) {
  return cljs.core.first.call(null, cljs.core.keep.call(null, function(p__22417) {
    var vec__22418 = p__22417;
    var c = cljs.core.nth.call(null, vec__22418, 0, null);
    var f = cljs.core.nth.call(null, vec__22418, 1, null);
    if (cljs.core.truth_(omchaya.components.key_queue.combos_match_QMARK_.call(null, c, keys))) {
      return f;
    } else {
      return null;
    }
  }, keymap));
};
omchaya.components.key_queue.KeyboardHandler = function KeyboardHandler(app, owner, p__22419, opts) {
  var map__22505 = p__22419;
  var map__22505__$1 = cljs.core.seq_QMARK_.call(null, map__22505) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22505) : map__22505;
  var error_ch = cljs.core.get.call(null, map__22505__$1, new cljs.core.Keyword(null, "error-ch", "error-ch", 2409970108));
  var keymap = cljs.core.get.call(null, map__22505__$1, new cljs.core.Keyword(null, "keymap", "keymap", 4174211599));
  var ch = cljs.core.async.chan.call(null);
  if (typeof omchaya.components.key_queue.t22506 !== "undefined") {
  } else {
    omchaya.components.key_queue.t22506 = function(ch, keymap, error_ch, map__22505, opts, p__22419, owner, app, KeyboardHandler, meta22507) {
      this.ch = ch;
      this.keymap = keymap;
      this.error_ch = error_ch;
      this.map__22505 = map__22505;
      this.opts = opts;
      this.p__22419 = p__22419;
      this.owner = owner;
      this.app = app;
      this.KeyboardHandler = KeyboardHandler;
      this.meta22507 = meta22507;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    omchaya.components.key_queue.t22506.cljs$lang$type = true;
    omchaya.components.key_queue.t22506.cljs$lang$ctorStr = "omchaya.components.key-queue/t22506";
    omchaya.components.key_queue.t22506.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "omchaya.components.key-queue/t22506");
    };
    omchaya.components.key_queue.t22506.prototype.om$core$IRender$ = true;
    omchaya.components.key_queue.t22506.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.span({"className":"hidden"});
    };
    omchaya.components.key_queue.t22506.prototype.om$core$IWillUnmount$ = true;
    omchaya.components.key_queue.t22506.prototype.om$core$IWillUnmount$will_unmount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.untap.call(null, omchaya.components.key_queue.key_mult, self__.ch);
    };
    omchaya.components.key_queue.t22506.prototype.om$core$IDidMount$ = true;
    omchaya.components.key_queue.t22506.prototype.om$core$IDidMount$did_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.tap.call(null, omchaya.components.key_queue.key_mult, self__.ch);
      var c__6068__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function() {
        var f__6069__auto__ = function() {
          var switch__5998__auto__ = function(state_22557) {
            var state_val_22558 = state_22557[1];
            if (state_val_22558 === 1) {
              var inst_22511 = cljs.core.PersistentVector.EMPTY;
              var inst_22512 = null;
              var state_22557__$1 = function() {
                var statearr_22559 = state_22557;
                statearr_22559[7] = inst_22511;
                statearr_22559[8] = inst_22512;
                return statearr_22559;
              }();
              var statearr_22560_22590 = state_22557__$1;
              statearr_22560_22590[2] = null;
              statearr_22560_22590[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
            } else {
              if (state_val_22558 === 2) {
                var inst_22512 = state_22557[8];
                var state_22557__$1 = state_22557;
                if (cljs.core.truth_(inst_22512)) {
                  var statearr_22561_22591 = state_22557__$1;
                  statearr_22561_22591[1] = 4;
                } else {
                  var statearr_22562_22592 = state_22557__$1;
                  statearr_22562_22592[1] = 5;
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
              } else {
                if (state_val_22558 === 3) {
                  var inst_22555 = state_22557[2];
                  var state_22557__$1 = state_22557;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22557__$1, inst_22555);
                } else {
                  if (state_val_22558 === 4) {
                    var inst_22512 = state_22557[8];
                    var state_22557__$1 = state_22557;
                    var statearr_22563_22593 = state_22557__$1;
                    statearr_22563_22593[2] = inst_22512;
                    statearr_22563_22593[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_22558 === 5) {
                      var inst_22517 = cljs.core.async.chan.call(null);
                      var state_22557__$1 = state_22557;
                      var statearr_22564_22594 = state_22557__$1;
                      statearr_22564_22594[2] = inst_22517;
                      statearr_22564_22594[1] = 6;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_22558 === 6) {
                        var inst_22519 = state_22557[2];
                        var inst_22520 = [self__.ch, inst_22519];
                        var inst_22521 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_22520, null);
                        var state_22557__$1 = state_22557;
                        return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_22557__$1, 7, inst_22521);
                      } else {
                        if (state_val_22558 === 7) {
                          var inst_22523 = state_22557[2];
                          var inst_22524 = cljs.core.nth.call(null, inst_22523, 0, null);
                          var inst_22525 = cljs.core.nth.call(null, inst_22523, 1, null);
                          var inst_22526 = cljs.core._EQ_.call(null, inst_22525, self__.ch);
                          var state_22557__$1 = function() {
                            var statearr_22565 = state_22557;
                            statearr_22565[9] = inst_22524;
                            return statearr_22565;
                          }();
                          if (inst_22526) {
                            var statearr_22566_22595 = state_22557__$1;
                            statearr_22566_22595[1] = 8;
                          } else {
                            var statearr_22567_22596 = state_22557__$1;
                            statearr_22567_22596[1] = 9;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_22558 === 8) {
                            var inst_22528 = state_22557[10];
                            var inst_22530 = state_22557[11];
                            var inst_22524 = state_22557[9];
                            var inst_22511 = state_22557[7];
                            var inst_22528__$1 = cljs.core.conj.call(null, inst_22511, inst_22524);
                            var inst_22529 = cljs.core.deref.call(null, self__.keymap);
                            var inst_22530__$1 = omchaya.components.key_queue.match_keys.call(null, inst_22529, inst_22528__$1);
                            var state_22557__$1 = function() {
                              var statearr_22568 = state_22557;
                              statearr_22568[10] = inst_22528__$1;
                              statearr_22568[11] = inst_22530__$1;
                              return statearr_22568;
                            }();
                            if (cljs.core.truth_(inst_22530__$1)) {
                              var statearr_22569_22597 = state_22557__$1;
                              statearr_22569_22597[1] = 11;
                            } else {
                              var statearr_22570_22598 = state_22557__$1;
                              statearr_22570_22598[1] = 12;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_22558 === 9) {
                              var inst_22511 = cljs.core.PersistentVector.EMPTY;
                              var inst_22512 = null;
                              var state_22557__$1 = function() {
                                var statearr_22571 = state_22557;
                                statearr_22571[7] = inst_22511;
                                statearr_22571[8] = inst_22512;
                                return statearr_22571;
                              }();
                              var statearr_22572_22599 = state_22557__$1;
                              statearr_22572_22599[2] = null;
                              statearr_22572_22599[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_22558 === 10) {
                                var inst_22553 = state_22557[2];
                                var state_22557__$1 = state_22557;
                                var statearr_22573_22600 = state_22557__$1;
                                statearr_22573_22600[2] = inst_22553;
                                statearr_22573_22600[1] = 3;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_22558 === 11) {
                                  var state_22557__$1 = state_22557;
                                  var statearr_22574_22601 = state_22557__$1;
                                  statearr_22574_22601[2] = null;
                                  statearr_22574_22601[1] = 16;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_22558 === 12) {
                                    var inst_22528 = state_22557[10];
                                    var inst_22546 = cljs.core.async.timeout.call(null, 1E3);
                                    var inst_22511 = inst_22528;
                                    var inst_22512 = inst_22546;
                                    var state_22557__$1 = function() {
                                      var statearr_22575 = state_22557;
                                      statearr_22575[7] = inst_22511;
                                      statearr_22575[8] = inst_22512;
                                      return statearr_22575;
                                    }();
                                    var statearr_22576_22602 = state_22557__$1;
                                    statearr_22576_22602[2] = null;
                                    statearr_22576_22602[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_22558 === 13) {
                                      var inst_22549 = state_22557[2];
                                      var state_22557__$1 = state_22557;
                                      var statearr_22577_22603 = state_22557__$1;
                                      statearr_22577_22603[2] = inst_22549;
                                      statearr_22577_22603[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_22558 === 14) {
                                        var inst_22543 = state_22557[2];
                                        var inst_22511 = cljs.core.PersistentVector.EMPTY;
                                        var inst_22512 = null;
                                        var state_22557__$1 = function() {
                                          var statearr_22578 = state_22557;
                                          statearr_22578[12] = inst_22543;
                                          statearr_22578[7] = inst_22511;
                                          statearr_22578[8] = inst_22512;
                                          return statearr_22578;
                                        }();
                                        var statearr_22579_22604 = state_22557__$1;
                                        statearr_22579_22604[2] = null;
                                        statearr_22579_22604[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_22558 === 15) {
                                          var inst_22530 = state_22557[11];
                                          var inst_22524 = state_22557[9];
                                          var inst_22532 = state_22557[2];
                                          var inst_22533 = omchaya.utils.log_pr.call(null, "Error calling", inst_22530, "with key event", inst_22524, ":");
                                          var inst_22534 = omchaya.utils.stack_trace.call(null, inst_22532);
                                          var inst_22535 = [new cljs.core.Keyword(null, "keyboard-handler-error", "keyboard-handler-error", 1374918097), inst_22532];
                                          var inst_22536 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_22535, null);
                                          var inst_22537 = cljs.core.async.put_BANG_.call(null, self__.error_ch, inst_22536);
                                          var state_22557__$1 = function() {
                                            var statearr_22580 = state_22557;
                                            statearr_22580[13] = inst_22533;
                                            statearr_22580[14] = inst_22534;
                                            return statearr_22580;
                                          }();
                                          var statearr_22581_22605 = state_22557__$1;
                                          statearr_22581_22605[2] = inst_22537;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22557__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_22558 === 16) {
                                            var inst_22530 = state_22557[11];
                                            var inst_22524 = state_22557[9];
                                            var ___$2 = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_22557, 15, Object, null, 14);
                                            var inst_22541 = inst_22530.call(null, inst_22524);
                                            var state_22557__$1 = state_22557;
                                            var statearr_22582_22606 = state_22557__$1;
                                            statearr_22582_22606[2] = inst_22541;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22557__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
          return function(switch__5998__auto__) {
            return function() {
              var state_machine__5999__auto__ = null;
              var state_machine__5999__auto____0 = function() {
                var statearr_22586 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_22586[0] = state_machine__5999__auto__;
                statearr_22586[1] = 1;
                return statearr_22586;
              };
              var state_machine__5999__auto____1 = function(state_22557) {
                while (true) {
                  var ret_value__6000__auto__ = function() {
                    try {
                      while (true) {
                        var result__6001__auto__ = switch__5998__auto__.call(null, state_22557);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue;
                        } else {
                          return result__6001__auto__;
                        }
                        break;
                      }
                    } catch (e22587) {
                      if (e22587 instanceof Object) {
                        var ex__6002__auto__ = e22587;
                        var statearr_22588_22607 = state_22557;
                        statearr_22588_22607[5] = ex__6002__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22557);
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                          throw e22587;
                        } else {
                          return null;
                        }
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                    var G__22608 = state_22557;
                    state_22557 = G__22608;
                    continue;
                  } else {
                    return ret_value__6000__auto__;
                  }
                  break;
                }
              };
              state_machine__5999__auto__ = function(state_22557) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__5999__auto____0.call(this);
                  case 1:
                    return state_machine__5999__auto____1.call(this, state_22557);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
              state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
              return state_machine__5999__auto__;
            }();
          }(switch__5998__auto__);
        }();
        var state__6070__auto__ = function() {
          var statearr_22589 = f__6069__auto__.call(null);
          statearr_22589[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto__;
          return statearr_22589;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
      });
      return c__6068__auto__;
    };
    omchaya.components.key_queue.t22506.prototype.om$core$IDisplayName$ = true;
    omchaya.components.key_queue.t22506.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var or__3443__auto__ = (new cljs.core.Keyword(null, "react-name", "react-name", 4800236939)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return "KeyboardHandler";
      }
    };
    omchaya.components.key_queue.t22506.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22508) {
      var self__ = this;
      var _22508__$1 = this;
      return self__.meta22507;
    };
    omchaya.components.key_queue.t22506.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22508, meta22507__$1) {
      var self__ = this;
      var _22508__$1 = this;
      return new omchaya.components.key_queue.t22506(self__.ch, self__.keymap, self__.error_ch, self__.map__22505, self__.opts, self__.p__22419, self__.owner, self__.app, self__.KeyboardHandler, meta22507__$1);
    };
    omchaya.components.key_queue.__GT_t22506 = function __GT_t22506(ch__$1, keymap__$1, error_ch__$1, map__22505__$2, opts__$1, p__22419__$1, owner__$1, app__$1, KeyboardHandler__$1, meta22507) {
      return new omchaya.components.key_queue.t22506(ch__$1, keymap__$1, error_ch__$1, map__22505__$2, opts__$1, p__22419__$1, owner__$1, app__$1, KeyboardHandler__$1, meta22507);
    };
  }
  return new omchaya.components.key_queue.t22506(ch, keymap, error_ch, map__22505__$1, opts, p__22419, owner, app, KeyboardHandler, null);
};
goog.provide("ankha.core");
goog.require("cljs.core");
goog.require("goog.object");
goog.require("goog.object");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("om.dom");
goog.require("om.dom");
goog.require("om.core");
goog.require("om.core");
cljs.core.enable_console_print_BANG_.call(null);
ankha.core.empty_QMARK_ = function empty_QMARK_(x) {
  if (cljs.core.object_QMARK_.call(null, x)) {
    return goog.object.isEmpty(x);
  } else {
    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      return cljs.core.empty_QMARK_.call(null, x);
    } else {
      return null;
    }
  }
};
ankha.core.record_QMARK_ = function record_QMARK_(x) {
  var G__29089 = x;
  if (G__29089) {
    var bit__4093__auto__ = G__29089.cljs$lang$protocol_mask$partition0$ & 67108864;
    if (bit__4093__auto__ || G__29089.cljs$core$IRecord$) {
      return true;
    } else {
      if (!G__29089.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__29089);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__29089);
  }
};
ankha.core.regex_QMARK_ = function regex_QMARK_(x) {
  return x instanceof RegExp;
};
ankha.core.record_name = function record_name(r) {
  return cljs.core.first.call(null, clojure.string.split.call(null, cljs.core.pr_str.call(null, r), "{"));
};
ankha.core.literal = function literal(class$, x) {
  return React.DOM.span({"key":x, "className":class$}, cljs.core.pr_str.call(null, x));
};
ankha.core.collection = function collection(cursor, coll, class$, opener, closer) {
  return om.core.build.call(null, ankha.core.view, om.core.graft.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 1125876963), coll], null), cursor), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "opener", "opener", 4298292201), opener, new cljs.core.Keyword(null, "class", "class", 1108647146), class$, new cljs.core.Keyword(null, 
  "closer", "closer", 3951351020), closer], null)], null));
};
ankha.core.inspect = function inspect(cursor, x) {
  if (typeof x === "number") {
    return ankha.core.literal.call(null, "number", x);
  } else {
    if (x instanceof cljs.core.Keyword) {
      return ankha.core.literal.call(null, "keyword", x);
    } else {
      if (x instanceof cljs.core.Symbol) {
        return ankha.core.literal.call(null, "symbol", x);
      } else {
        if (typeof x === "string") {
          return ankha.core.literal.call(null, "string", x);
        } else {
          if (x === true) {
            return ankha.core.literal.call(null, "boolean", x);
          } else {
            if (x === false) {
              return ankha.core.literal.call(null, "boolean", x);
            } else {
              if (x == null) {
                return ankha.core.literal.call(null, "nil", x);
              } else {
                if (cljs.core.fn_QMARK_.call(null, x)) {
                  return ankha.core.literal.call(null, "function", x);
                } else {
                  if (ankha.core.regex_QMARK_.call(null, x)) {
                    return ankha.core.literal.call(null, "regex", x);
                  } else {
                    if (ankha.core.record_QMARK_.call(null, x)) {
                      return ankha.core.collection.call(null, cursor, x, "record", [cljs.core.str(ankha.core.record_name.call(null, x)), cljs.core.str("{")].join(""), "}");
                    } else {
                      if (cljs.core.map_QMARK_.call(null, x)) {
                        return ankha.core.collection.call(null, cursor, x, "map", "{", "}");
                      } else {
                        if (cljs.core.vector_QMARK_.call(null, x)) {
                          return ankha.core.collection.call(null, cursor, x, "vector", "[", "]");
                        } else {
                          if (cljs.core.set_QMARK_.call(null, x)) {
                            return ankha.core.collection.call(null, cursor, x, "set", "#{", "}");
                          } else {
                            if (cljs.core.seq_QMARK_.call(null, x)) {
                              return ankha.core.collection.call(null, cursor, x, "seq ", "(", ")");
                            } else {
                              if (cljs.core.object_QMARK_.call(null, x)) {
                                return ankha.core.collection.call(null, cursor, x, "object", "#js {", "}");
                              } else {
                                if (x instanceof Array) {
                                  return ankha.core.collection.call(null, cursor, x, "array", "#js [", "]");
                                } else {
                                  if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                    return ankha.core.literal.call(null, "literal", x);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
ankha.core.associative__GT_dom = function associative__GT_dom(data, kvs, p__29090) {
  var map__29100 = p__29090;
  var map__29100__$1 = cljs.core.seq_QMARK_.call(null, map__29100) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29100) : map__29100;
  var val_class = cljs.core.get.call(null, map__29100__$1, new cljs.core.Keyword(null, "val-class", "val-class", 2480724798));
  var key_class = cljs.core.get.call(null, map__29100__$1, new cljs.core.Keyword(null, "key-class", "key-class", 2216807420));
  var entry_class = cljs.core.get.call(null, map__29100__$1, new cljs.core.Keyword(null, "entry-class", "entry-class", 3066174415));
  return cljs.core.into_array.call(null, function() {
    var iter__4160__auto__ = function iter__29101(s__29102) {
      return new cljs.core.LazySeq(null, function() {
        var s__29102__$1 = s__29102;
        while (true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__29102__$1);
          if (temp__4092__auto__) {
            var s__29102__$2 = temp__4092__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__29102__$2)) {
              var c__4158__auto__ = cljs.core.chunk_first.call(null, s__29102__$2);
              var size__4159__auto__ = cljs.core.count.call(null, c__4158__auto__);
              var b__29104 = cljs.core.chunk_buffer.call(null, size__4159__auto__);
              if (function() {
                var i__29103 = 0;
                while (true) {
                  if (i__29103 < size__4159__auto__) {
                    var vec__29107 = cljs.core._nth.call(null, c__4158__auto__, i__29103);
                    var k = cljs.core.nth.call(null, vec__29107, 0, null);
                    var v = cljs.core.nth.call(null, vec__29107, 1, null);
                    cljs.core.chunk_append.call(null, b__29104, React.DOM.li(null, React.DOM.div({"style":{"position":"relative"}, "className":[cljs.core.str("entry "), cljs.core.str(entry_class)].join("")}, React.DOM.span({"style":{"verticalAlign":"top", "display":"inline-block"}, "className":[cljs.core.str("key "), cljs.core.str(key_class)].join("")}, ankha.core.inspect.call(null, data, om.core.value.call(null, k))), React.DOM.span({"style":{"width":"1em", "display":"inline-block"}}), React.DOM.span({"style":{"verticalAlign":"top", 
                    "display":"inline-block"}, "className":[cljs.core.str("val "), cljs.core.str(val_class)].join("")}, ankha.core.inspect.call(null, data, om.core.value.call(null, v))))));
                    var G__29109 = i__29103 + 1;
                    i__29103 = G__29109;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29104), iter__29101.call(null, cljs.core.chunk_rest.call(null, s__29102__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29104), null);
              }
            } else {
              var vec__29108 = cljs.core.first.call(null, s__29102__$2);
              var k = cljs.core.nth.call(null, vec__29108, 0, null);
              var v = cljs.core.nth.call(null, vec__29108, 1, null);
              return cljs.core.cons.call(null, React.DOM.li(null, React.DOM.div({"style":{"position":"relative"}, "className":[cljs.core.str("entry "), cljs.core.str(entry_class)].join("")}, React.DOM.span({"style":{"verticalAlign":"top", "display":"inline-block"}, "className":[cljs.core.str("key "), cljs.core.str(key_class)].join("")}, ankha.core.inspect.call(null, data, om.core.value.call(null, k))), React.DOM.span({"style":{"width":"1em", "display":"inline-block"}}), React.DOM.span({"style":{"verticalAlign":"top", 
              "display":"inline-block"}, "className":[cljs.core.str("val "), cljs.core.str(val_class)].join("")}, ankha.core.inspect.call(null, data, om.core.value.call(null, v))))), iter__29101.call(null, cljs.core.rest.call(null, s__29102__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4160__auto__.call(null, kvs);
  }());
};
ankha.core.map__GT_dom = function map__GT_dom(data, m) {
  return ankha.core.associative__GT_dom.call(null, data, m, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "entry-class", "entry-class", 3066174415), "map-entry", new cljs.core.Keyword(null, "key-class", "key-class", 2216807420), "map-key", new cljs.core.Keyword(null, "val-class", "val-class", 2480724798), "map-val"], null));
};
ankha.core.object__GT_dom = function object__GT_dom(data, o) {
  var _ = cljs.core.zipmap.call(null, goog.object.getKeys(o), goog.object.getValues(o));
  var ___$1 = ankha.core.associative__GT_dom.call(null, data, _, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "entry-class", "entry-class", 3066174415), "object-entry", new cljs.core.Keyword(null, "key-class", "key-class", 2216807420), "object-key", new cljs.core.Keyword(null, "val-class", "val-class", 2480724798), "object-val"], null));
  return ___$1;
};
ankha.core.coll__GT_dom = function coll__GT_dom(data, v) {
  return cljs.core.into_array.call(null, function() {
    var iter__4160__auto__ = function iter__29114(s__29115) {
      return new cljs.core.LazySeq(null, function() {
        var s__29115__$1 = s__29115;
        while (true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__29115__$1);
          if (temp__4092__auto__) {
            var s__29115__$2 = temp__4092__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__29115__$2)) {
              var c__4158__auto__ = cljs.core.chunk_first.call(null, s__29115__$2);
              var size__4159__auto__ = cljs.core.count.call(null, c__4158__auto__);
              var b__29117 = cljs.core.chunk_buffer.call(null, size__4159__auto__);
              if (function() {
                var i__29116 = 0;
                while (true) {
                  if (i__29116 < size__4159__auto__) {
                    var x = cljs.core._nth.call(null, c__4158__auto__, i__29116);
                    cljs.core.chunk_append.call(null, b__29117, React.DOM.li({"className":"entry"}, ankha.core.inspect.call(null, data, om.core.value.call(null, x))));
                    var G__29118 = i__29116 + 1;
                    i__29116 = G__29118;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29117), iter__29114.call(null, cljs.core.chunk_rest.call(null, s__29115__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29117), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__29115__$2);
              return cljs.core.cons.call(null, React.DOM.li({"className":"entry"}, ankha.core.inspect.call(null, data, om.core.value.call(null, x))), iter__29114.call(null, cljs.core.rest.call(null, s__29115__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4160__auto__.call(null, v);
  }());
};
ankha.core.toggle_button = function toggle_button(owner, p__29119) {
  var map__29121 = p__29119;
  var map__29121__$1 = cljs.core.seq_QMARK_.call(null, map__29121) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29121) : map__29121;
  var disable_QMARK_ = cljs.core.get.call(null, map__29121__$1, new cljs.core.Keyword(null, "disable?", "disable?", 1284845001));
  return React.DOM.button({"style":{"fontWeight":"bold", "cursor":"pointer", "opacity":cljs.core.truth_(disable_QMARK_) ? "0.5" : "1.0", "padding":"0", "display":"inline-block", "outline":"none", "verticalAlign":"top", "background":"none", "border":"none"}, "onClick":function(_) {
    return om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "open?", "open?", 1119852199), cljs.core.not.call(null, om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "open?", "open?", 1119852199))));
  }, "disabled":disable_QMARK_, "className":"toggle-button"}, cljs.core.truth_(om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "open?", "open?", 1119852199))) ? "-" : "+");
};
ankha.core.view = function view(data, owner, p__29122) {
  var map__29127 = p__29122;
  var map__29127__$1 = cljs.core.seq_QMARK_.call(null, map__29127) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29127) : map__29127;
  var opts = map__29127__$1;
  var closer = cljs.core.get.call(null, map__29127__$1, new cljs.core.Keyword(null, "closer", "closer", 3951351020));
  var opener = cljs.core.get.call(null, map__29127__$1, new cljs.core.Keyword(null, "opener", "opener", 4298292201));
  var class$ = cljs.core.get.call(null, map__29127__$1, new cljs.core.Keyword(null, "class", "class", 1108647146));
  var value = (new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(data);
  var value_QMARK_ = ankha.core.empty_QMARK_.call(null, value);
  var open_QMARK_ = function(value, value_QMARK_) {
    return function() {
      return om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "open?", "open?", 1119852199));
    };
  }(value, value_QMARK_);
  if (typeof ankha.core.t29128 !== "undefined") {
  } else {
    ankha.core.t29128 = function(opener, opts, value, view, data, closer, class$, open_QMARK_, owner, value_QMARK_, p__29122, map__29127, meta29129) {
      this.opener = opener;
      this.opts = opts;
      this.value = value;
      this.view = view;
      this.data = data;
      this.closer = closer;
      this.class$ = class$;
      this.open_QMARK_ = open_QMARK_;
      this.owner = owner;
      this.value_QMARK_ = value_QMARK_;
      this.p__29122 = p__29122;
      this.map__29127 = map__29127;
      this.meta29129 = meta29129;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    ankha.core.t29128.cljs$lang$type = true;
    ankha.core.t29128.cljs$lang$ctorStr = "ankha.core/t29128";
    ankha.core.t29128.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "ankha.core/t29128");
    };
    ankha.core.t29128.prototype.om$core$IRender$ = true;
    ankha.core.t29128.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.div({"className":self__.class$}, ankha.core.toggle_button.call(null, self__.owner, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "disable?", "disable?", 1284845001), self__.value_QMARK_], null)), React.DOM.span({"style":{"display":"inline-block"}, "className":"opener"}, self__.opener), React.DOM.ul({"style":{"margin":"0", "listStyleType":"none", "display":cljs.core.truth_(self__.open_QMARK_.call(null)) ? "block" : "none"}, "className":"values"}, function() {
        var f = cljs.core.map_QMARK_.call(null, self__.value) ? ankha.core.map__GT_dom : cljs.core.object_QMARK_.call(null, self__.value) ? ankha.core.object__GT_dom : new cljs.core.Keyword(null, "else", "else", 1017020587) ? ankha.core.coll__GT_dom : null;
        return f.call(null, self__.data, self__.value);
      }()), React.DOM.span({"style":{"display":cljs.core.truth_(self__.open_QMARK_.call(null)) ? "none" : cljs.core.truth_(self__.value_QMARK_) ? "none" : new cljs.core.Keyword(null, "else", "else", 1017020587) ? "inline" : null}, "className":"ellipsis"}, "\u2026"), React.DOM.span({"style":{"display":cljs.core.not.call(null, self__.value_QMARK_) ? "inline-block" : cljs.core.truth_(self__.open_QMARK_.call(null)) ? "block" : new cljs.core.Keyword(null, "else", "else", 1017020587) ? "inline-block" : 
      null}, "className":"closer"}, self__.closer));
    };
    ankha.core.t29128.prototype.om$core$IInitState$ = true;
    ankha.core.t29128.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open?", "open?", 1119852199), !((new cljs.core.Keyword(null, "open?", "open?", 1119852199)).cljs$core$IFn$_invoke$arity$1(self__.opts) === false) && cljs.core.not.call(null, self__.value_QMARK_)], null);
    };
    ankha.core.t29128.prototype.cljs$core$IMeta$_meta$arity$1 = function(_29130) {
      var self__ = this;
      var _29130__$1 = this;
      return self__.meta29129;
    };
    ankha.core.t29128.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_29130, meta29129__$1) {
      var self__ = this;
      var _29130__$1 = this;
      return new ankha.core.t29128(self__.opener, self__.opts, self__.value, self__.view, self__.data, self__.closer, self__.class$, self__.open_QMARK_, self__.owner, self__.value_QMARK_, self__.p__29122, self__.map__29127, meta29129__$1);
    };
    ankha.core.__GT_t29128 = function __GT_t29128(opener__$1, opts__$1, value__$1, view__$1, data__$1, closer__$1, class$__$1, open_QMARK___$1, owner__$1, value_QMARK___$1, p__29122__$1, map__29127__$2, meta29129) {
      return new ankha.core.t29128(opener__$1, opts__$1, value__$1, view__$1, data__$1, closer__$1, class$__$1, open_QMARK___$1, owner__$1, value_QMARK___$1, p__29122__$1, map__29127__$2, meta29129);
    };
  }
  return new ankha.core.t29128(opener, opts, value, view, data, closer, class$, open_QMARK_, owner, value_QMARK_, p__29122, map__29127__$1, null);
};
ankha.core.inspector = function() {
  var inspector = null;
  var inspector__2 = function(data, owner) {
    return inspector.call(null, data, owner, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), "inspector"], null)], null));
  };
  var inspector__3 = function(data, owner, opts) {
    var map__29135 = opts;
    var map__29135__$1 = cljs.core.seq_QMARK_.call(null, map__29135) ? cljs.core.apply.call(null, cljs.core.hash_map, map__29135) : map__29135;
    var class$ = cljs.core.get.call(null, map__29135__$1, new cljs.core.Keyword(null, "class", "class", 1108647146), "inspector");
    if (typeof ankha.core.t29136 !== "undefined") {
    } else {
      ankha.core.t29136 = function(class$, map__29135, opts, owner, data, inspector, meta29137) {
        this.class$ = class$;
        this.map__29135 = map__29135;
        this.opts = opts;
        this.owner = owner;
        this.data = data;
        this.inspector = inspector;
        this.meta29137 = meta29137;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      ankha.core.t29136.cljs$lang$type = true;
      ankha.core.t29136.cljs$lang$ctorStr = "ankha.core/t29136";
      ankha.core.t29136.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
        return cljs.core._write.call(null, writer__4011__auto__, "ankha.core/t29136");
      };
      ankha.core.t29136.prototype.om$core$IRender$ = true;
      ankha.core.t29136.prototype.om$core$IRender$render$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return React.DOM.div({"style":{"overflowX":"scroll", "width":"100%", "whiteSpace":"pre-wrap", "fontFamily":"monospace"}, "className":"inspector"}, ankha.core.inspect.call(null, self__.data, om.core.value.call(null, self__.data)));
      };
      ankha.core.t29136.prototype.cljs$core$IMeta$_meta$arity$1 = function(_29138) {
        var self__ = this;
        var _29138__$1 = this;
        return self__.meta29137;
      };
      ankha.core.t29136.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_29138, meta29137__$1) {
        var self__ = this;
        var _29138__$1 = this;
        return new ankha.core.t29136(self__.class$, self__.map__29135, self__.opts, self__.owner, self__.data, self__.inspector, meta29137__$1);
      };
      ankha.core.__GT_t29136 = function __GT_t29136(class$__$1, map__29135__$2, opts__$1, owner__$1, data__$1, inspector__$1, meta29137) {
        return new ankha.core.t29136(class$__$1, map__29135__$2, opts__$1, owner__$1, data__$1, inspector__$1, meta29137);
      };
    }
    return new ankha.core.t29136(class$, map__29135__$1, opts, owner, data, inspector, null);
  };
  inspector = function(data, owner, opts) {
    switch(arguments.length) {
      case 2:
        return inspector__2.call(this, data, owner);
      case 3:
        return inspector__3.call(this, data, owner, opts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  inspector.cljs$core$IFn$_invoke$arity$2 = inspector__2;
  inspector.cljs$core$IFn$_invoke$arity$3 = inspector__3;
  return inspector;
}();
goog.provide("omchaya.components.sidebar");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("omchaya.utils");
goog.require("sablono.core");
goog.require("cljs.core.async");
goog.require("goog.string");
goog.require("sablono.core");
goog.require("om.core");
goog.require("clojure.string");
goog.require("om.core");
goog.require("clojure.string");
goog.require("omchaya.utils");
goog.require("cljs.core.async");
goog.require("goog.string");
omchaya.components.sidebar.people_entry = function people_entry(comm, person) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li.user", "li.user", 1132196110), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 1124275658), function() {
    var or__3443__auto__ = (new cljs.core.Keyword(null, "full-name", "full-name", 3585519227)).cljs$core$IFn$_invoke$arity$1(person);
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      var or__3443__auto____$1 = (new cljs.core.Keyword(null, "username", "username", 748190792)).cljs$core$IFn$_invoke$arity$1(person);
      if (cljs.core.truth_(or__3443__auto____$1)) {
        return or__3443__auto____$1;
      } else {
        return(new cljs.core.Keyword(null, "email", "email", 1110523662)).cljs$core$IFn$_invoke$arity$1(person);
      }
    }
  }(), new cljs.core.Keyword(null, "key", "key", 1014010321), (new cljs.core.Keyword(null, "email", "email", 1110523662)).cljs$core$IFn$_invoke$arity$1(person)], null), omchaya.utils.gravatar_for.call(null, (new cljs.core.Keyword(null, "email", "email", 1110523662)).cljs$core$IFn$_invoke$arity$1(person)), function() {
    var or__3443__auto__ = (new cljs.core.Keyword(null, "full-name", "full-name", 3585519227)).cljs$core$IFn$_invoke$arity$1(person);
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return(new cljs.core.Keyword(null, "username", "username", 748190792)).cljs$core$IFn$_invoke$arity$1(person);
    }
  }()], null);
};
omchaya.components.sidebar.people_widget = function people_widget(p__22629, owner, opts) {
  var map__22634 = p__22629;
  var map__22634__$1 = cljs.core.seq_QMARK_.call(null, map__22634) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22634) : map__22634;
  var data = map__22634__$1;
  var search_filter = cljs.core.get.call(null, map__22634__$1, new cljs.core.Keyword(null, "search-filter", "search-filter", 674207407));
  var channel_users_emails = cljs.core.get.call(null, map__22634__$1, new cljs.core.Keyword(null, "channel-users-emails", "channel-users-emails", 2413740984));
  if (typeof omchaya.components.sidebar.t22635 !== "undefined") {
  } else {
    omchaya.components.sidebar.t22635 = function(channel_users_emails, search_filter, data, map__22634, opts, owner, p__22629, people_widget, meta22636) {
      this.channel_users_emails = channel_users_emails;
      this.search_filter = search_filter;
      this.data = data;
      this.map__22634 = map__22634;
      this.opts = opts;
      this.owner = owner;
      this.p__22629 = p__22629;
      this.people_widget = people_widget;
      this.meta22636 = meta22636;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    omchaya.components.sidebar.t22635.cljs$lang$type = true;
    omchaya.components.sidebar.t22635.cljs$lang$ctorStr = "omchaya.components.sidebar/t22635";
    omchaya.components.sidebar.t22635.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "omchaya.components.sidebar/t22635");
    };
    omchaya.components.sidebar.t22635.prototype.om$core$IRender$ = true;
    omchaya.components.sidebar.t22635.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return sablono.interpreter.interpret.call(null, function() {
        var comm = cljs.core.get_in.call(null, self__.opts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
        var re_filter = cljs.core.truth_(self__.search_filter) ? new RegExp(self__.search_filter, "ig") : null;
        var channel_users = cljs.core.vals.call(null, cljs.core.select_keys.call(null, (new cljs.core.Keyword(null, "users", "users", 1125482874)).cljs$core$IFn$_invoke$arity$1(self__.opts), self__.channel_users_emails));
        var fil_users = cljs.core.truth_(re_filter) ? cljs.core.filter.call(null, function(comm, re_filter, channel_users) {
          return function(p1__22628_SHARP_) {
            var or__3443__auto__ = (new cljs.core.Keyword(null, "full-name", "full-name", 3585519227)).cljs$core$IFn$_invoke$arity$1(p1__22628_SHARP_).match(re_filter);
            if (cljs.core.truth_(or__3443__auto__)) {
              return or__3443__auto__;
            } else {
              var or__3443__auto____$1 = (new cljs.core.Keyword(null, "email", "email", 1110523662)).cljs$core$IFn$_invoke$arity$1(p1__22628_SHARP_).match(re_filter);
              if (cljs.core.truth_(or__3443__auto____$1)) {
                return or__3443__auto____$1;
              } else {
                return(new cljs.core.Keyword(null, "username", "username", 748190792)).cljs$core$IFn$_invoke$arity$1(p1__22628_SHARP_).match(re_filter);
              }
            }
          };
        }(comm, re_filter, channel_users), channel_users) : channel_users;
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul.user_list", "ul.user_list", 2324064621), cljs.core.map.call(null, cljs.core.partial.call(null, omchaya.components.sidebar.people_entry, comm), fil_users)], null);
      }());
    };
    omchaya.components.sidebar.t22635.prototype.om$core$IDisplayName$ = true;
    omchaya.components.sidebar.t22635.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var or__3443__auto__ = (new cljs.core.Keyword(null, "react-name", "react-name", 4800236939)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return "PeopleWidget";
      }
    };
    omchaya.components.sidebar.t22635.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22637) {
      var self__ = this;
      var _22637__$1 = this;
      return self__.meta22636;
    };
    omchaya.components.sidebar.t22635.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22637, meta22636__$1) {
      var self__ = this;
      var _22637__$1 = this;
      return new omchaya.components.sidebar.t22635(self__.channel_users_emails, self__.search_filter, self__.data, self__.map__22634, self__.opts, self__.owner, self__.p__22629, self__.people_widget, meta22636__$1);
    };
    omchaya.components.sidebar.__GT_t22635 = function __GT_t22635(channel_users_emails__$1, search_filter__$1, data__$1, map__22634__$2, opts__$1, owner__$1, p__22629__$1, people_widget__$1, meta22636) {
      return new omchaya.components.sidebar.t22635(channel_users_emails__$1, search_filter__$1, data__$1, map__22634__$2, opts__$1, owner__$1, p__22629__$1, people_widget__$1, meta22636);
    };
  }
  return new omchaya.components.sidebar.t22635(channel_users_emails, search_filter, data, map__22634__$1, opts, owner, p__22629, people_widget, null);
};
omchaya.components.sidebar.current_user = function current_user(comm, user) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a.user-menu-toggle", "a.user-menu-toggle", 1726759391), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", 1017115293), "#", new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), cljs.core.comp.call(null, cljs.core.constantly.call(null, false), function() {
    return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "user-menu-toggled", "user-menu-toggled", 567658326)], null));
  })], null), omchaya.utils.gravatar_for.call(null, (new cljs.core.Keyword(null, "email", "email", 1110523662)).cljs$core$IFn$_invoke$arity$1(user)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.icon-angle.button.right", "i.icon-angle.button.right", 4652336220), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", 1123684643), {"height":"inherit"}], null)], null), (new cljs.core.Keyword(null, 
  "full-name", "full-name", 3585519227)).cljs$core$IFn$_invoke$arity$1(user)], null);
};
omchaya.components.sidebar.media_name = function media_name(src) {
  return goog.string.urlDecode(cljs.core.first.call(null, clojure.string.split.call(null, cljs.core.last.call(null, clojure.string.split.call(null, src, /\//)), /\?/)));
};
omchaya.components.sidebar.playlist_entry = function playlist_entry(comm, opts, entry) {
  var src = (new cljs.core.Keyword(null, "src", "src", 1014018390)).cljs$core$IFn$_invoke$arity$1(entry);
  var order = (new cljs.core.Keyword(null, "order", "order", 1119910592)).cljs$core$IFn$_invoke$arity$1(entry);
  var name = omchaya.components.sidebar.media_name.call(null, src);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li.user", "li.user", 1132196110), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "title", "title", 1124275658), src, new cljs.core.Keyword(null, "key", "key", 1014010321), [cljs.core.str((new cljs.core.Keyword(null, "order", "order", 1119910592)).cljs$core$IFn$_invoke$arity$1(entry)), cljs.core.str(src)].join("")], null), cljs.core._EQ_.call(null, 
  (new cljs.core.Keyword(null, "order", "order", 1119910592)).cljs$core$IFn$_invoke$arity$1(entry), cljs.core.get_in.call(null, opts, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), (new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "playing-order", 
  "playing-order", 3298952289)], null))) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", 1123684643), {"background-color":"#ccc"}], null) : null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", 1123684643), {"cursor":"pointer"}, new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), 
  cljs.core.comp.call(null, cljs.core.constantly.call(null, false), function() {
    return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "playlist-entry-played", "playlist-entry-played", 1677366299), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [order, (new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411)).cljs$core$IFn$_invoke$arity$1(opts)], null)], null));
  })], null), (new cljs.core.Keyword(null, "order", "order", 1119910592)).cljs$core$IFn$_invoke$arity$1(entry), ". ", name], null)], null);
};
omchaya.components.sidebar.playlist_widget = function playlist_widget(p__22639, owner, opts) {
  var map__22644 = p__22639;
  var map__22644__$1 = cljs.core.seq_QMARK_.call(null, map__22644) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22644) : map__22644;
  var search_filter = cljs.core.get.call(null, map__22644__$1, new cljs.core.Keyword(null, "search-filter", "search-filter", 674207407));
  var player = cljs.core.get.call(null, map__22644__$1, new cljs.core.Keyword(null, "player", "player", 4323118675));
  if (typeof omchaya.components.sidebar.t22645 !== "undefined") {
  } else {
    omchaya.components.sidebar.t22645 = function(player, search_filter, map__22644, opts, owner, p__22639, playlist_widget, meta22646) {
      this.player = player;
      this.search_filter = search_filter;
      this.map__22644 = map__22644;
      this.opts = opts;
      this.owner = owner;
      this.p__22639 = p__22639;
      this.playlist_widget = playlist_widget;
      this.meta22646 = meta22646;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    omchaya.components.sidebar.t22645.cljs$lang$type = true;
    omchaya.components.sidebar.t22645.cljs$lang$ctorStr = "omchaya.components.sidebar/t22645";
    omchaya.components.sidebar.t22645.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "omchaya.components.sidebar/t22645");
    };
    omchaya.components.sidebar.t22645.prototype.om$core$IRender$ = true;
    omchaya.components.sidebar.t22645.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return sablono.interpreter.interpret.call(null, function() {
        var comm = cljs.core.get_in.call(null, self__.opts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
        var re_filter = cljs.core.truth_(self__.search_filter) ? new RegExp(self__.search_filter, "ig") : null;
        var fil_playlist = cljs.core.truth_(re_filter) ? cljs.core.filter.call(null, function(comm, re_filter) {
          return function(p1__22638_SHARP_) {
            return omchaya.components.sidebar.media_name.call(null, (new cljs.core.Keyword(null, "src", "src", 1014018390)).cljs$core$IFn$_invoke$arity$1(p1__22638_SHARP_)).match(re_filter);
          };
        }(comm, re_filter), (new cljs.core.Keyword(null, "playlist", "playlist", 2893378884)).cljs$core$IFn$_invoke$arity$1(self__.player)) : (new cljs.core.Keyword(null, "playlist", "playlist", 2893378884)).cljs$core$IFn$_invoke$arity$1(self__.player);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1014003715), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul.user_list", "ul.user_list", 2324064621), cljs.core.map.call(null, cljs.core.partial.call(null, omchaya.components.sidebar.playlist_entry, comm, self__.opts), cljs.core.sort_by.call(null, new cljs.core.Keyword(null, "order", "order", 
        1119910592), fil_playlist))], null)], null);
      }());
    };
    omchaya.components.sidebar.t22645.prototype.om$core$IDisplayName$ = true;
    omchaya.components.sidebar.t22645.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var or__3443__auto__ = (new cljs.core.Keyword(null, "react-name", "react-name", 4800236939)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return "PlaylistWidget";
      }
    };
    omchaya.components.sidebar.t22645.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22647) {
      var self__ = this;
      var _22647__$1 = this;
      return self__.meta22646;
    };
    omchaya.components.sidebar.t22645.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22647, meta22646__$1) {
      var self__ = this;
      var _22647__$1 = this;
      return new omchaya.components.sidebar.t22645(self__.player, self__.search_filter, self__.map__22644, self__.opts, self__.owner, self__.p__22639, self__.playlist_widget, meta22646__$1);
    };
    omchaya.components.sidebar.__GT_t22645 = function __GT_t22645(player__$1, search_filter__$1, map__22644__$2, opts__$1, owner__$1, p__22639__$1, playlist_widget__$1, meta22646) {
      return new omchaya.components.sidebar.t22645(player__$1, search_filter__$1, map__22644__$2, opts__$1, owner__$1, p__22639__$1, playlist_widget__$1, meta22646);
    };
  }
  return new omchaya.components.sidebar.t22645(player, search_filter, map__22644__$1, opts, owner, p__22639, playlist_widget, null);
};
omchaya.components.sidebar.playlist_action_widget = function playlist_action_widget(p__22648, owner, opts) {
  var map__22651 = p__22648;
  var map__22651__$1 = cljs.core.seq_QMARK_.call(null, map__22651) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22651) : map__22651;
  var player = cljs.core.get.call(null, map__22651__$1, new cljs.core.Keyword(null, "player", "player", 4323118675));
  var comm = cljs.core.get_in.call(null, opts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
  var attrs22652 = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "state", "state", 1123661827)).cljs$core$IFn$_invoke$arity$1(player), new cljs.core.Keyword(null, "playing", "playing", 520340384)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.fa.fa-pause", "i.fa.fa-pause", 3144543140), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", 1123684643), {"cursor":"pointer"}, new cljs.core.Keyword(null, 
  "on-click", "on-click", 1416542092), function() {
    return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "audio-player-stopped", "audio-player-stopped", 1820835114), (new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411)).cljs$core$IFn$_invoke$arity$1(opts)], null));
  }], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "i.fa.fa-play", "i.fa.fa-play", 4546327786), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", 1123684643), {"cursor":"pointer"}, new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), function() {
    return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "audio-player-started", "audio-player-started", 1807969246), (new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411)).cljs$core$IFn$_invoke$arity$1(opts)], null));
  }], null)], null);
  if (cljs.core.map_QMARK_.call(null, attrs22652)) {
    return React.DOM.div(sablono.interpreter.attributes.call(null, sablono.util.merge_with_class.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["dropzone"], null)], null), attrs22652)), null);
  } else {
    return React.DOM.div({"className":"dropzone"}, sablono.interpreter.interpret.call(null, attrs22652));
  }
};
omchaya.components.sidebar.icon_map = new cljs.core.PersistentArrayMap(null, 3, ["png", "img", "jpg", "img", "jpeg", "img"], null);
omchaya.components.sidebar.media_entry = function media_entry(comm, media) {
  var extension = cljs.core.last.call(null, clojure.string.split.call(null, cljs.core.first.call(null, clojure.string.split.call(null, (new cljs.core.Keyword(null, "src", "src", 1014018390)).cljs$core$IFn$_invoke$arity$1(media), /\?/)), /\./));
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li.file_item", "li.file_item", 602318903), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", 1014010321), (new cljs.core.Keyword(null, "src", "src", 1014018390)).cljs$core$IFn$_invoke$arity$1(media)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 
  3, [new cljs.core.Keyword(null, "href", "href", 1017115293), "#", new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), cljs.core.constantly.call(null, false), new cljs.core.Keyword(null, "target", "target", 4427965699), "_blank"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1014008629), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "src", "src", 1014018390), [cljs.core.str("/assets/images/"), 
  cljs.core.str(cljs.core.get.call(null, omchaya.components.sidebar.icon_map, extension, "file")), cljs.core.str("_icon.png")].join("")], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1017440956), (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(media)], null)], null)], null);
};
omchaya.components.sidebar.media_widget = function media_widget(p__22654, owner, opts) {
  var map__22659 = p__22654;
  var map__22659__$1 = cljs.core.seq_QMARK_.call(null, map__22659) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22659) : map__22659;
  var search_filter = cljs.core.get.call(null, map__22659__$1, new cljs.core.Keyword(null, "search-filter", "search-filter", 674207407));
  var media = cljs.core.get.call(null, map__22659__$1, new cljs.core.Keyword(null, "media", "media", 1117676374));
  var channel_id = cljs.core.get.call(null, map__22659__$1, new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615));
  if (typeof omchaya.components.sidebar.t22660 !== "undefined") {
  } else {
    omchaya.components.sidebar.t22660 = function(channel_id, media, search_filter, map__22659, opts, owner, p__22654, media_widget, meta22661) {
      this.channel_id = channel_id;
      this.media = media;
      this.search_filter = search_filter;
      this.map__22659 = map__22659;
      this.opts = opts;
      this.owner = owner;
      this.p__22654 = p__22654;
      this.media_widget = media_widget;
      this.meta22661 = meta22661;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    omchaya.components.sidebar.t22660.cljs$lang$type = true;
    omchaya.components.sidebar.t22660.cljs$lang$ctorStr = "omchaya.components.sidebar/t22660";
    omchaya.components.sidebar.t22660.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "omchaya.components.sidebar/t22660");
    };
    omchaya.components.sidebar.t22660.prototype.om$core$IRender$ = true;
    omchaya.components.sidebar.t22660.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return sablono.interpreter.interpret.call(null, function() {
        var comm = (new cljs.core.Keyword(null, "comm", "comm", 1016963710)).cljs$core$IFn$_invoke$arity$1(self__.opts);
        var re_filter = cljs.core.truth_(self__.search_filter) ? new RegExp(self__.search_filter, "ig") : null;
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul.file_list", "ul.file_list", 668255836), cljs.core.map.call(null, cljs.core.partial.call(null, omchaya.components.sidebar.media_entry, comm), cljs.core.truth_(re_filter) ? cljs.core.filter.call(null, function(p1__22653_SHARP_) {
          return(new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(p1__22653_SHARP_).match(re_filter);
        }, self__.media) : self__.media)], null);
      }());
    };
    omchaya.components.sidebar.t22660.prototype.om$core$IDisplayName$ = true;
    omchaya.components.sidebar.t22660.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var or__3443__auto__ = (new cljs.core.Keyword(null, "react-name", "react-name", 4800236939)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return "MediaWidget";
      }
    };
    omchaya.components.sidebar.t22660.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22662) {
      var self__ = this;
      var _22662__$1 = this;
      return self__.meta22661;
    };
    omchaya.components.sidebar.t22660.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22662, meta22661__$1) {
      var self__ = this;
      var _22662__$1 = this;
      return new omchaya.components.sidebar.t22660(self__.channel_id, self__.media, self__.search_filter, self__.map__22659, self__.opts, self__.owner, self__.p__22654, self__.media_widget, meta22661__$1);
    };
    omchaya.components.sidebar.__GT_t22660 = function __GT_t22660(channel_id__$1, media__$1, search_filter__$1, map__22659__$2, opts__$1, owner__$1, p__22654__$1, media_widget__$1, meta22661) {
      return new omchaya.components.sidebar.t22660(channel_id__$1, media__$1, search_filter__$1, map__22659__$2, opts__$1, owner__$1, p__22654__$1, media_widget__$1, meta22661);
    };
  }
  return new omchaya.components.sidebar.t22660(channel_id, media, search_filter, map__22659__$1, opts, owner, p__22654, media_widget, null);
};
omchaya.components.sidebar.media_action_widget = function media_action_widget(p__22663, owner, opts) {
  var map__22671 = p__22663;
  var map__22671__$1 = cljs.core.seq_QMARK_.call(null, map__22671) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22671) : map__22671;
  var channel_id = cljs.core.get.call(null, map__22671__$1, new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615));
  return React.DOM.form({"id":"file_upload", "method":"post", "html":"{:multipart\x3d\x3etrue}", "data-remote":"true", "action":[cljs.core.str("/channels/"), cljs.core.str(channel_id), cljs.core.str("/attachments.json")].join(""), "acceptCharset":"UTF-8"}, React.DOM.div({"style":cljs.core.clj__GT_js.call(null, {"display":"inline", "padding":"0", "margin":"0"})}, sablono.interpreter.input.call(null, {"value":"\u2713", "type":"hidden", "name":"utf8"}), sablono.interpreter.input.call(null, {"value":"bpuDvAt5w97Cp4khpWE25tcTsD2vFEFpKwsIAG0m8fw\x3d", 
  "type":"hidden", "name":"authenticity_token"})), sablono.interpreter.input.call(null, {"id":"channel_id_1", "type":"hidden", "name":[cljs.core.str("channel_id["), cljs.core.str(channel_id), cljs.core.str("]")].join("")}), sablono.interpreter.input.call(null, {"id":"file", "type":"file", "name":"file"}), React.DOM.div({"className":"dropzone"}, "Drop file here to upload"));
};
omchaya.components.sidebar.widget = function widget(data, owner, opts) {
  if (typeof omchaya.components.sidebar.t22681 !== "undefined") {
  } else {
    omchaya.components.sidebar.t22681 = function(opts, owner, data, widget, meta22682) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.widget = widget;
      this.meta22682 = meta22682;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    omchaya.components.sidebar.t22681.cljs$lang$type = true;
    omchaya.components.sidebar.t22681.cljs$lang$ctorStr = "omchaya.components.sidebar/t22681";
    omchaya.components.sidebar.t22681.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "omchaya.components.sidebar/t22681");
    };
    omchaya.components.sidebar.t22681.prototype.om$core$IRender$ = true;
    omchaya.components.sidebar.t22681.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return sablono.interpreter.interpret.call(null, function() {
        var comm = (new cljs.core.Keyword(null, "comm", "comm", 1016963710)).cljs$core$IFn$_invoke$arity$1(self__.opts);
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.widget", "div.widget", 2908838323), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h5.widget-header.unselectable", "h5.widget-header.unselectable", 3530192282), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1014008629), new cljs.core.PersistentArrayMap(null, 
        1, [new cljs.core.Keyword(null, "src", "src", 1014018390), (new cljs.core.Keyword(null, "icon", "icon", 1017130987)).cljs$core$IFn$_invoke$arity$1(self__.opts)], null)], null), (new cljs.core.Keyword(null, "title", "title", 1124275658)).cljs$core$IFn$_invoke$arity$1(self__.opts)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.widget-content", "div.widget-content", 4299661407), om.core.build.call(null, (new cljs.core.Keyword(null, 
        "content-comp", "content-comp", 1799058261)).cljs$core$IFn$_invoke$arity$1(self__.opts), (new cljs.core.Keyword(null, "content-data", "content-data", 1799074800)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), (new cljs.core.Keyword(null, "content-opts", "content-opts", 1799416934)).cljs$core$IFn$_invoke$arity$1(self__.data)], null))], null), cljs.core.truth_((new cljs.core.Keyword(null, "action-comp", 
        "action-comp", 2550970296)).cljs$core$IFn$_invoke$arity$1(self__.opts)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.widget-action-bar", "div.widget-action-bar", 1992202874), om.core.build.call(null, (new cljs.core.Keyword(null, "action-comp", "action-comp", 2550970296)).cljs$core$IFn$_invoke$arity$1(self__.opts), (new cljs.core.Keyword(null, "action-data", "action-data", 2550986835)).cljs$core$IFn$_invoke$arity$1(self__.data), 
        new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), (new cljs.core.Keyword(null, "action-opts", "action-opts", 2551328969)).cljs$core$IFn$_invoke$arity$1(self__.data)], null))], null) : null], null);
      }());
    };
    omchaya.components.sidebar.t22681.prototype.om$core$IDisplayName$ = true;
    omchaya.components.sidebar.t22681.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var or__3443__auto__ = (new cljs.core.Keyword(null, "react-name", "react-name", 4800236939)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return "Widget";
      }
    };
    omchaya.components.sidebar.t22681.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22683) {
      var self__ = this;
      var _22683__$1 = this;
      return self__.meta22682;
    };
    omchaya.components.sidebar.t22681.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22683, meta22682__$1) {
      var self__ = this;
      var _22683__$1 = this;
      return new omchaya.components.sidebar.t22681(self__.opts, self__.owner, self__.data, self__.widget, meta22682__$1);
    };
    omchaya.components.sidebar.__GT_t22681 = function __GT_t22681(opts__$1, owner__$1, data__$1, widget__$1, meta22682) {
      return new omchaya.components.sidebar.t22681(opts__$1, owner__$1, data__$1, widget__$1, meta22682);
    };
  }
  return new omchaya.components.sidebar.t22681(opts, owner, data, widget, null);
};
omchaya.components.sidebar.sidebar = function sidebar(data, owner, opts) {
  if (typeof omchaya.components.sidebar.t22687 !== "undefined") {
  } else {
    omchaya.components.sidebar.t22687 = function(opts, owner, data, sidebar, meta22688) {
      this.opts = opts;
      this.owner = owner;
      this.data = data;
      this.sidebar = sidebar;
      this.meta22688 = meta22688;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    omchaya.components.sidebar.t22687.cljs$lang$type = true;
    omchaya.components.sidebar.t22687.cljs$lang$ctorStr = "omchaya.components.sidebar/t22687";
    omchaya.components.sidebar.t22687.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "omchaya.components.sidebar/t22687");
    };
    omchaya.components.sidebar.t22687.prototype.om$core$IRender$ = true;
    omchaya.components.sidebar.t22687.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      return sablono.interpreter.interpret.call(null, function() {
        var comm = cljs.core.get_in.call(null, self__.opts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
        var channel = (new cljs.core.Keyword(null, "channel", "channel", 1752854645)).cljs$core$IFn$_invoke$arity$1(self__.data);
        var settings = (new cljs.core.Keyword(null, "settings", "settings", 2448535445)).cljs$core$IFn$_invoke$arity$1(self__.data);
        var search_filter = (new cljs.core.Keyword(null, "search-filter", "search-filter", 674207407)).cljs$core$IFn$_invoke$arity$1(self__.data);
        cljs.core.print.call(null, "Sidebar render");
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "aside.sidebar", "aside.sidebar", 891231256), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.header.user-header", "div.header.user-header", 807252189), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", 1108647146), cljs.core.truth_(cljs.core.get_in.call(null, settings, 
        new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "menus", "menus", 1117686374), new cljs.core.Keyword(null, "user-menu", "user-menu", 1307043219), new cljs.core.Keyword(null, "open", "open", 1017321916)], null))) ? "open-menu" : null], null), omchaya.components.sidebar.current_user.call(null, comm, cljs.core.get_in.call(null, self__.opts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
        "users", "users", 1125482874), (new cljs.core.Keyword(null, "current-user-email", "current-user-email", 4091392864)).cljs$core$IFn$_invoke$arity$1(self__.opts)], null))), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul.user-menu", "ul.user-menu", 2277914364), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695)], null), new cljs.core.PersistentVector(null, 
        2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", 1017115293), "#", new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), function() {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings-opened", "settings-opened", 2980449477)], null));
        }], null), "Edit Account"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "rel", "rel", 1014017035), "nofollow", new cljs.core.Keyword(null, "href", "href", 1017115293), "#", new cljs.core.Keyword(null, 
        "on-click", "on-click", 1416542092), function() {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "user-logged-out", "user-logged-out", 2519482167)], null));
        }], null), "Logout"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", 1017115293), "#", new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), function() {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "help-opened", "help-opened", 703585255)], null));
        }], null), "Help"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 1013907695), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "href", "href", 1017115293), "#", new cljs.core.Keyword(null, "on-click", "on-click", 1416542092), function() {
          return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "about-opened", "about-opened", 4155398683)], null));
        }], null), "About Omchaya"], null)], null)], null)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.widgets", "div.widgets", 3922286020), om.core.build.call(null, omchaya.components.sidebar.widget, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "content-data", "content-data", 1799074800), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "channel-users-emails", "channel-users-emails", 
        2413740984), (new cljs.core.Keyword(null, "users", "users", 1125482874)).cljs$core$IFn$_invoke$arity$1(channel), new cljs.core.Keyword(null, "search-filter", "search-filter", 674207407), search_filter], null), new cljs.core.Keyword(null, "content-opts", "content-opts", 1799416934), self__.opts], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "title", "title", 
        1124275658), "People", new cljs.core.Keyword(null, "icon", "icon", 1017130987), "/assets/images/people_icon.png", new cljs.core.Keyword(null, "content-comp", "content-comp", 1799058261), omchaya.components.sidebar.people_widget], null)], null)), om.core.build.call(null, omchaya.components.sidebar.widget, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "content-data", "content-data", 1799074800), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
        "player", "player", 4323118675), (new cljs.core.Keyword(null, "player", "player", 4323118675)).cljs$core$IFn$_invoke$arity$1(channel), new cljs.core.Keyword(null, "search-filter", "search-filter", 674207407), search_filter], null), new cljs.core.Keyword(null, "content-opts", "content-opts", 1799416934), self__.opts, new cljs.core.Keyword(null, "action-data", "action-data", 2550986835), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "player", "player", 4323118675), 
        (new cljs.core.Keyword(null, "player", "player", 4323118675)).cljs$core$IFn$_invoke$arity$1(channel)], null), new cljs.core.Keyword(null, "action-opts", "action-opts", 2551328969), self__.opts], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "title", "title", 1124275658), "Playlist", new cljs.core.Keyword(null, "icon", "icon", 1017130987), "/assets/images/video_icon.png", 
        new cljs.core.Keyword(null, "content-comp", "content-comp", 1799058261), omchaya.components.sidebar.playlist_widget, new cljs.core.Keyword(null, "action-comp", "action-comp", 2550970296), omchaya.components.sidebar.playlist_action_widget], null)], null)), om.core.build.call(null, omchaya.components.sidebar.widget, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "content-data", "content-data", 1799074800), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
        "search-filter", "search-filter", 674207407), search_filter, new cljs.core.Keyword(null, "media", "media", 1117676374), (new cljs.core.Keyword(null, "media", "media", 1117676374)).cljs$core$IFn$_invoke$arity$1(channel), new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615), (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(channel)], null), new cljs.core.Keyword(null, "content-opts", "content-opts", 1799416934), new cljs.core.PersistentArrayMap(null, 
        1, [new cljs.core.Keyword(null, "comm", "comm", 1016963710), comm], null), new cljs.core.Keyword(null, "action-data", "action-data", 2550986835), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615), (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(channel)], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 
        4, [new cljs.core.Keyword(null, "title", "title", 1124275658), "My Media", new cljs.core.Keyword(null, "icon", "icon", 1017130987), "/assets/images/media_icon.png", new cljs.core.Keyword(null, "content-comp", "content-comp", 1799058261), omchaya.components.sidebar.media_widget, new cljs.core.Keyword(null, "action-comp", "action-comp", 2550970296), omchaya.components.sidebar.media_action_widget], null)], null))], null)], null);
      }());
    };
    omchaya.components.sidebar.t22687.prototype.om$core$IDisplayName$ = true;
    omchaya.components.sidebar.t22687.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var or__3443__auto__ = (new cljs.core.Keyword(null, "react-name", "react-name", 4800236939)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return "Sidebar";
      }
    };
    omchaya.components.sidebar.t22687.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22689) {
      var self__ = this;
      var _22689__$1 = this;
      return self__.meta22688;
    };
    omchaya.components.sidebar.t22687.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22689, meta22688__$1) {
      var self__ = this;
      var _22689__$1 = this;
      return new omchaya.components.sidebar.t22687(self__.opts, self__.owner, self__.data, self__.sidebar, meta22688__$1);
    };
    omchaya.components.sidebar.__GT_t22687 = function __GT_t22687(opts__$1, owner__$1, data__$1, sidebar__$1, meta22688) {
      return new omchaya.components.sidebar.t22687(opts__$1, owner__$1, data__$1, sidebar__$1, meta22688);
    };
  }
  return new omchaya.components.sidebar.t22687(opts, owner, data, sidebar, null);
};
goog.provide("omchaya.components.app");
goog.require("cljs.core");
goog.require("omchaya.utils");
goog.require("cljs.core.async");
goog.require("omchaya.components.main_area");
goog.require("omchaya.components.draggable_window");
goog.require("omchaya.utils");
goog.require("sablono.core");
goog.require("cljs.core.async");
goog.require("omchaya.components.key_queue");
goog.require("sablono.core");
goog.require("cljs.reader");
goog.require("omchaya.components.audio_player");
goog.require("om.core");
goog.require("omchaya.components.sidebar");
goog.require("omchaya.components.navbar");
goog.require("om.core");
goog.require("omchaya.components.draggable_window");
goog.require("omchaya.components.main_area");
goog.require("omchaya.utils");
goog.require("omchaya.components.key_queue");
goog.require("cljs.reader");
goog.require("ankha.core");
goog.require("omchaya.components.audio_player");
goog.require("omchaya.components.sidebar");
goog.require("ankha.core");
goog.require("omchaya.components.navbar");
goog.require("cljs.core.async");
omchaya.components.app.keymap = cljs.core.atom.call(null, null);
omchaya.components.app.app = function app(app__$1, owner, opts) {
  if (typeof omchaya.components.app.t22010 !== "undefined") {
  } else {
    omchaya.components.app.t22010 = function(opts, owner, app, meta22011) {
      this.opts = opts;
      this.owner = owner;
      this.app = app;
      this.meta22011 = meta22011;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    omchaya.components.app.t22010.cljs$lang$type = true;
    omchaya.components.app.t22010.cljs$lang$ctorStr = "omchaya.components.app/t22010";
    omchaya.components.app.t22010.cljs$lang$ctorPrWriter = function(this__4010__auto__, writer__4011__auto__, opt__4012__auto__) {
      return cljs.core._write.call(null, writer__4011__auto__, "omchaya.components.app/t22010");
    };
    omchaya.components.app.t22010.prototype.om$core$IRender$ = true;
    omchaya.components.app.t22010.prototype.om$core$IRender$render$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      var selected_channel = cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), (new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411)).cljs$core$IFn$_invoke$arity$1(self__.app)], null));
      var current_user = cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "users", "users", 1125482874), (new cljs.core.Keyword(null, "current-user-email", "current-user-email", 4091392864)).cljs$core$IFn$_invoke$arity$1(self__.app)], null));
      var controls_ch = cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
      var open_player_BANG_ = function(selected_channel, current_user, controls_ch) {
        return function() {
          return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "history-player-opened", "history-player-opened", 3054141134)], null));
        };
      }(selected_channel, current_user, controls_ch);
      var message_input_focused_QMARK_ = cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "user-message", "user-message", 2253309815), new cljs.core.Keyword(null, "focused", "focused", 4617830121)], null));
      var search_input_focused_QMARK_ = cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, "focused", "focused", 4617830121)], null));
      var focus_search_BANG_ = function(selected_channel, current_user, controls_ch, open_player_BANG_, message_input_focused_QMARK_, search_input_focused_QMARK_) {
        return function() {
          if (cljs.core.truth_(message_input_focused_QMARK_)) {
            return null;
          } else {
            return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "search-focus-key-pressed", "search-focus-key-pressed", 1169113036)], null));
          }
        };
      }(selected_channel, current_user, controls_ch, open_player_BANG_, message_input_focused_QMARK_, search_input_focused_QMARK_);
      var inspector_path = cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "inspector", "inspector", 931868265), new cljs.core.Keyword(null, "path", "path", 1017337751)], null));
      var inspector_path_s = cljs.core.pr_str.call(null, inspector_path);
      var blur_current_field_BANG_ = function(selected_channel, current_user, controls_ch, open_player_BANG_, message_input_focused_QMARK_, search_input_focused_QMARK_, focus_search_BANG_, inspector_path, inspector_path_s) {
        return function() {
          if (cljs.core.truth_(message_input_focused_QMARK_)) {
            return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "user-message-blur-key-pressed", "user-message-blur-key-pressed", 3460583048)], null));
          } else {
            if (cljs.core.truth_(search_input_focused_QMARK_)) {
              return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "search-form-blur-key-pressed", "search-form-blur-key-pressed", 2923548996)], null));
            } else {
              return null;
            }
          }
        };
      }(selected_channel, current_user, controls_ch, open_player_BANG_, message_input_focused_QMARK_, search_input_focused_QMARK_, focus_search_BANG_, inspector_path, inspector_path_s);
      var change_inspector_path_BANG_ = function(selected_channel, current_user, controls_ch, open_player_BANG_, message_input_focused_QMARK_, search_input_focused_QMARK_, focus_search_BANG_, inspector_path, inspector_path_s, blur_current_field_BANG_) {
        return function() {
          var path_string = prompt("New path (must be edn-compatible)", inspector_path_s);
          try {
            return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "inspector-path-updated", "inspector-path-updated", 848746907), cljs.reader.read_string.call(null, path_string)], null));
          } catch (e22013) {
            if (e22013 instanceof Error) {
              var e = e22013;
              return omchaya.utils.mprint.call(null, "Not edn-compatible: ", path_string);
            } else {
              if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e22013;
              } else {
                return null;
              }
            }
          }
        };
      }(selected_channel, current_user, controls_ch, open_player_BANG_, message_input_focused_QMARK_, search_input_focused_QMARK_, focus_search_BANG_, inspector_path, inspector_path_s, blur_current_field_BANG_);
      var persist_local_state_BANG_ = function(selected_channel, current_user, controls_ch, open_player_BANG_, message_input_focused_QMARK_, search_input_focused_QMARK_, focus_search_BANG_, inspector_path, inspector_path_s, blur_current_field_BANG_, change_inspector_path_BANG_) {
        return function() {
          return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-persisted", "state-persisted", 2957998761)], null));
        };
      }(selected_channel, current_user, controls_ch, open_player_BANG_, message_input_focused_QMARK_, search_input_focused_QMARK_, focus_search_BANG_, inspector_path, inspector_path_s, blur_current_field_BANG_, change_inspector_path_BANG_);
      var restore_local_state_BANG_ = function(selected_channel, current_user, controls_ch, open_player_BANG_, message_input_focused_QMARK_, search_input_focused_QMARK_, focus_search_BANG_, inspector_path, inspector_path_s, blur_current_field_BANG_, change_inspector_path_BANG_, persist_local_state_BANG_) {
        return function() {
          return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-restored", "state-restored", 2236662980)], null));
        };
      }(selected_channel, current_user, controls_ch, open_player_BANG_, message_input_focused_QMARK_, search_input_focused_QMARK_, focus_search_BANG_, inspector_path, inspector_path_s, blur_current_field_BANG_, change_inspector_path_BANG_, persist_local_state_BANG_);
      var toggle_inspector_BANG_ = function(selected_channel, current_user, controls_ch, open_player_BANG_, message_input_focused_QMARK_, search_input_focused_QMARK_, focus_search_BANG_, inspector_path, inspector_path_s, blur_current_field_BANG_, change_inspector_path_BANG_, persist_local_state_BANG_, restore_local_state_BANG_) {
        return function() {
          return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "toggle-inspector-key-pressed", "toggle-inspector-key-pressed", 2594666135)], null));
        };
      }(selected_channel, current_user, controls_ch, open_player_BANG_, message_input_focused_QMARK_, search_input_focused_QMARK_, focus_search_BANG_, inspector_path, inspector_path_s, blur_current_field_BANG_, change_inspector_path_BANG_, persist_local_state_BANG_, restore_local_state_BANG_);
      var _ = cljs.core.reset_BANG_.call(null, omchaya.components.app.keymap, new cljs.core.PersistentArrayMap(null, 7, ["ctrl+slash", open_player_BANG_, "ctrl+esc", toggle_inspector_BANG_, "ctrl+1", change_inspector_path_BANG_, "ctrl+s", persist_local_state_BANG_, "ctrl+r", restore_local_state_BANG_, "slash", focus_search_BANG_, "esc", blur_current_field_BANG_], null));
      return React.DOM.div({"className":[cljs.core.str(cljs.core.truth_(cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "sidebar", "sidebar", 3099131598), new cljs.core.Keyword(null, "right", "right", 1122416014), new cljs.core.Keyword(null, "open", "open", 1017321916)], null))) ? "slide-left " : null), cljs.core.str(cljs.core.truth_(cljs.core.get_in.call(null, 
      self__.app, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "sidebar", "sidebar", 3099131598), new cljs.core.Keyword(null, "left", "left", 1017222009), new cljs.core.Keyword(null, "open", "open", 1017321916)], null))) ? "slide-right " : null)].join("")}, sablono.interpreter.interpret.call(null, cljs.core.truth_(cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 
      3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "windows", "windows", 2363397621), new cljs.core.Keyword(null, "window-inspector", "window-inspector", 2735849676), new cljs.core.Keyword(null, "open", "open", 1017321916)], null))) ? function() {
        var temp__4092__auto__ = cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "inspector", "inspector", 931868265), new cljs.core.Keyword(null, "path", "path", 1017337751)], null));
        if (cljs.core.truth_(temp__4092__auto__)) {
          var path = temp__4092__auto__;
          return om.core.build.call(null, omchaya.components.draggable_window.draggable_window, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "title", "title", 1124275658), [cljs.core.str("Data Inspector: "), cljs.core.str(cljs.core.pr_str.call(null, path))].join(""), new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Keyword(null, "window-inspector", "window-inspector", 2735849676), new cljs.core.Keyword(null, "window", "window", 4521119586), cljs.core.get_in.call(null, 
          self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "windows", "windows", 2363397621), new cljs.core.Keyword(null, "window-inspector", "window-inspector", 2735849676)], null)), new cljs.core.Keyword(null, "comm", "comm", 1016963710), cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, 
          "controls", "controls", 4741937704)], null)), new cljs.core.Keyword(null, "content-com", "content-com", 623589791), ankha.core.inspector, new cljs.core.Keyword(null, "content-data", "content-data", 1799074800), cljs.core.get_in.call(null, self__.app, path), new cljs.core.Keyword(null, "content-opts", "content-opts", 1799416934), cljs.core.PersistentArrayMap.EMPTY], null));
        } else {
          return null;
        }
      }() : null), sablono.interpreter.interpret.call(null, om.core.build.call(null, omchaya.components.key_queue.KeyboardHandler, self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "keymap", "keymap", 4174211599), omchaya.components.app.keymap, new cljs.core.Keyword(null, "error-ch", "error-ch", 2409970108), cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "error", "error", 1110689146)], null))], null)], null))), sablono.interpreter.interpret.call(null, om.core.build_all.call(null, omchaya.components.audio_player.player, cljs.core.map.call(null, function(p__22016) {
        var vec__22017 = p__22016;
        var channel_id = cljs.core.nth.call(null, vec__22017, 0, null);
        var channel = cljs.core.nth.call(null, vec__22017, 1, null);
        return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "audio-settings", "audio-settings", 938379180), (new cljs.core.Keyword(null, "audio", "audio", 1107070792)).cljs$core$IFn$_invoke$arity$1(self__.app), new cljs.core.Keyword(null, "player", "player", 4323118675), (new cljs.core.Keyword(null, "player", "player", 4323118675)).cljs$core$IFn$_invoke$arity$1(channel), new cljs.core.Keyword(null, "sfx", "sfx", 1014018039), (new cljs.core.Keyword(null, "sfx", "sfx", 1014018039)).cljs$core$IFn$_invoke$arity$1(channel), 
        new cljs.core.Keyword(null, "id", "id", 1013907597), channel_id], null);
      }, (new cljs.core.Keyword(null, "channels", "channels", 2446530370)).cljs$core$IFn$_invoke$arity$1(self__.app)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), (new cljs.core.Keyword(null, "comms", "comms", 1108747865)).cljs$core$IFn$_invoke$arity$1(self__.app)], null)], null))), sablono.interpreter.interpret.call(null, om.core.build.call(null, 
      omchaya.components.sidebar.sidebar, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "channel", "channel", 1752854645), selected_channel, new cljs.core.Keyword(null, "settings", "settings", 2448535445), (new cljs.core.Keyword(null, "settings", "settings", 2448535445)).cljs$core$IFn$_invoke$arity$1(self__.app), new cljs.core.Keyword(null, "search-filter", "search-filter", 674207407), cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, "value", "value", 1125876963)], null))], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), (new cljs.core.Keyword(null, "comms", 
      "comms", 1108747865)).cljs$core$IFn$_invoke$arity$1(self__.opts), new cljs.core.Keyword(null, "users", "users", 1125482874), (new cljs.core.Keyword(null, "users", "users", 1125482874)).cljs$core$IFn$_invoke$arity$1(self__.app), new cljs.core.Keyword(null, "current-user-email", "current-user-email", 4091392864), (new cljs.core.Keyword(null, "current-user-email", "current-user-email", 4091392864)).cljs$core$IFn$_invoke$arity$1(self__.app), new cljs.core.Keyword(null, "selected-channel", "selected-channel", 
      2473753411), (new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411)).cljs$core$IFn$_invoke$arity$1(self__.app), new cljs.core.Keyword(null, "channels", "channels", 2446530370), (new cljs.core.Keyword(null, "channels", "channels", 2446530370)).cljs$core$IFn$_invoke$arity$1(self__.app)], null)], null))), sablono.interpreter.interpret.call(null, om.core.build.call(null, omchaya.components.main_area.main_area, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
      "channel", "channel", 1752854645), selected_channel, new cljs.core.Keyword(null, "search-filter", "search-filter", 674207407), cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, "value", "value", 1125876963)], 
      null))], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), (new cljs.core.Keyword(null, "comms", "comms", 1108747865)).cljs$core$IFn$_invoke$arity$1(self__.opts), new cljs.core.Keyword(null, "users", "users", 1125482874), (new cljs.core.Keyword(null, "users", "users", 1125482874)).cljs$core$IFn$_invoke$arity$1(self__.app), new cljs.core.Keyword(null, 
      "current-user-email", "current-user-email", 4091392864), (new cljs.core.Keyword(null, "current-user-email", "current-user-email", 4091392864)).cljs$core$IFn$_invoke$arity$1(self__.app), new cljs.core.Keyword(null, "input-focused?", "input-focused?", 2338465213), cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 
      1111523233), new cljs.core.Keyword(null, "user-message", "user-message", 2253309815), new cljs.core.Keyword(null, "focused", "focused", 4617830121)], null)), new cljs.core.Keyword(null, "input-value", "input-value", 3916329248), cljs.core.get_in.call(null, self__.app, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, 
      "user-message", "user-message", 2253309815), new cljs.core.Keyword(null, "value", "value", 1125876963)], null))], null)], null))), sablono.interpreter.interpret.call(null, om.core.build.call(null, omchaya.components.navbar.navbar, cljs.core.select_keys.call(null, self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), new cljs.core.Keyword(null, "settings", "settings", 2448535445)], null)), 
      new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), (new cljs.core.Keyword(null, "comms", "comms", 1108747865)).cljs$core$IFn$_invoke$arity$1(self__.opts)], null)], null))), React.DOM.div({"className":"at-view", "id":"at-view"}, React.DOM.ul({"id":"at-view-ul"})));
    };
    omchaya.components.app.t22010.prototype.om$core$IDisplayName$ = true;
    omchaya.components.app.t22010.prototype.om$core$IDisplayName$display_name$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var or__3443__auto__ = (new cljs.core.Keyword(null, "react-name", "react-name", 4800236939)).cljs$core$IFn$_invoke$arity$1(self__.opts);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return "Omchaya";
      }
    };
    omchaya.components.app.t22010.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22012) {
      var self__ = this;
      var _22012__$1 = this;
      return self__.meta22011;
    };
    omchaya.components.app.t22010.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22012, meta22011__$1) {
      var self__ = this;
      var _22012__$1 = this;
      return new omchaya.components.app.t22010(self__.opts, self__.owner, self__.app, meta22011__$1);
    };
    omchaya.components.app.__GT_t22010 = function __GT_t22010(opts__$1, owner__$1, app__$2, meta22011) {
      return new omchaya.components.app.t22010(opts__$1, owner__$1, app__$2, meta22011);
    };
  }
  return new omchaya.components.app.t22010(opts, owner, app__$1, null);
};
goog.provide("omchaya.ui");
goog.require("cljs.core");
goog.require("omchaya.useful");
goog.require("cljs.core.async");
goog.require("omchaya.components.app");
goog.require("omchaya.utils");
goog.require("cljs.core.async");
goog.require("omchaya.api.mock");
goog.require("omchaya.useful");
goog.require("omchaya.mock_data");
goog.require("omchaya.useful");
goog.require("om.dom");
goog.require("om.core");
goog.require("clojure.string");
goog.require("omchaya.api.mock");
goog.require("omchaya.datetime");
goog.require("om.core");
goog.require("omchaya.mock_data");
goog.require("omchaya.datetime");
goog.require("clojure.string");
goog.require("omchaya.components.app");
goog.require("omchaya.utils");
goog.require("om.dom");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("dommy.core");
omchaya.ui.scroll_to_latest_message_BANG_ = function scroll_to_latest_message_BANG_(target, channel_id) {
  var channel = dommy.template.__GT_node_like.call(null, target).querySelector(dommy.core.selector.call(null, [cljs.core.str("#channels-"), cljs.core.str(channel_id)].join("")));
  var activities = function() {
    var and__3431__auto__ = channel;
    if (cljs.core.truth_(and__3431__auto__)) {
      return dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, channel).getElementsByClassName("activity"));
    } else {
      return and__3431__auto__;
    }
  }();
  var latest = cljs.core.last.call(null, activities);
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = channel;
    if (cljs.core.truth_(and__3431__auto__)) {
      return latest;
    } else {
      return and__3431__auto__;
    }
  }())) {
    return channel.scrollTop = latest.offsetTop;
  } else {
    return null;
  }
};
omchaya.ui.scroll_to_latest_message_when_appropriate_BANG_ = function scroll_to_latest_message_when_appropriate_BANG_(target, channel_id) {
  var channel_el = dommy.template.__GT_node_like.call(null, target).querySelector(dommy.core.selector.call(null, [cljs.core.str("#channels-"), cljs.core.str(channel_id)].join("")));
  var activities_els = dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, channel_el).getElementsByClassName("activity"));
  var second_latest_el = cljs.core.last.call(null, cljs.core.drop_last.call(null, activities_els));
  var latest_el = cljs.core.last.call(null, activities_els);
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = channel_el;
    if (cljs.core.truth_(and__3431__auto__)) {
      return second_latest_el;
    } else {
      return and__3431__auto__;
    }
  }())) {
    var channel_view_bottom = channel_el.scrollTop + channel_el.clientHeight;
    if (channel_view_bottom > second_latest_el.offsetTop) {
      return channel_el.scrollTop = latest_el.offsetTop;
    } else {
      return null;
    }
  } else {
    return null;
  }
};
goog.provide("omchaya.commands");
goog.require("cljs.core");
goog.require("omchaya.utils");
goog.require("omchaya.useful");
goog.require("cljs.core.async");
goog.require("omchaya.components.app");
goog.require("omchaya.utils");
goog.require("cljs.core.async");
goog.require("omchaya.api.mock");
goog.require("omchaya.useful");
goog.require("omchaya.mock_data");
goog.require("omchaya.useful");
goog.require("om.dom");
goog.require("om.core");
goog.require("clojure.string");
goog.require("omchaya.api.mock");
goog.require("omchaya.datetime");
goog.require("om.core");
goog.require("omchaya.mock_data");
goog.require("omchaya.datetime");
goog.require("clojure.string");
goog.require("omchaya.components.app");
goog.require("omchaya.utils");
goog.require("om.dom");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("dommy.core");
omchaya.commands.handle_maybe_command = function() {
  var method_table__4301__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4302__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4303__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4304__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4305__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("handle-maybe-command", function(target, activity, state) {
    return cljs.core.first.call(null, clojure.string.split.call(null, (new cljs.core.Keyword(null, "content", "content", 1965434859)).cljs$core$IFn$_invoke$arity$1(activity), / |\n/));
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4305__auto__, method_table__4301__auto__, prefer_table__4302__auto__, method_cache__4303__auto__, cached_hierarchy__4304__auto__);
}();
cljs.core._add_method.call(null, omchaya.commands.handle_maybe_command, new cljs.core.Keyword(null, "default", "default", 2558708147), function(target, activity, state) {
  return omchaya.utils.mprint.call(null, "No command for ", cljs.core.pr_str.call(null, activity));
});
cljs.core._add_method.call(null, omchaya.commands.handle_maybe_command, "/play", function(target, activity, state) {
  var controls_ch = cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
  var temp__4092__auto___22000 = function() {
    var or__3443__auto__ = function() {
      var G__21999 = (new cljs.core.Keyword(null, "content", "content", 1965434859)).cljs$core$IFn$_invoke$arity$1(activity);
      var G__21999__$1 = G__21999 == null ? null : clojure.string.split.call(null, G__21999, / /);
      var G__21999__$2 = G__21999__$1 == null ? null : cljs.core.second.call(null, G__21999__$1);
      var G__21999__$3 = G__21999__$2 == null ? null : cljs.core.first.call(null, cljs.core.re_find.call(null, /http.*\.(mp3|mp4|ogg|wav)/, G__21999__$2));
      return G__21999__$3;
    }();
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      var x = (new cljs.core.Keyword(null, "content", "content", 1965434859)).cljs$core$IFn$_invoke$arity$1(activity);
      var x__$1 = clojure.string.split.call(null, x, / /);
      var x__$2 = cljs.core.second.call(null, x__$1);
      var x__$3 = cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([x__$2], true), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["ding", "alert"], null));
      var x__$4 = cljs.core.get.call(null, new cljs.core.PersistentArrayMap(null, 2, ["ding", "/assets/audio/ding.wav", "alert", "/assets/audio/threetone-alert.wav"], null), x__$3);
      return x__$4;
    }
  }();
  if (cljs.core.truth_(temp__4092__auto___22000)) {
    var url_22001 = temp__4092__auto___22000;
    cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "audio-player-source-updated", "audio-player-source-updated", 2679762480), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [url_22001, (new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411)).cljs$core$IFn$_invoke$arity$1(state)], null)], null));
  } else {
  }
  return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "audio-player-started", "audio-player-started", 1807969246), (new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615)).cljs$core$IFn$_invoke$arity$1(activity)], null));
});
cljs.core._add_method.call(null, omchaya.commands.handle_maybe_command, "/stop", function(target, activity, state) {
  var controls_ch = cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
  return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "audio-player-stopped", "audio-player-stopped", 1820835114), (new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615)).cljs$core$IFn$_invoke$arity$1(activity)], null));
});
cljs.core._add_method.call(null, omchaya.commands.handle_maybe_command, "/pause", function(target, activity, state) {
  var controls_ch = cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
  return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "audio-player-stopped", "audio-player-stopped", 1820835114), (new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615)).cljs$core$IFn$_invoke$arity$1(activity)], null));
});
cljs.core._add_method.call(null, omchaya.commands.handle_maybe_command, "/queue", function(target, activity, state) {
  var controls_ch = cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
  var temp__4092__auto__ = cljs.core.first.call(null, cljs.core.re_find.call(null, /http.*\.(mp3|mp4|ogg|wav)/, cljs.core.second.call(null, clojure.string.split.call(null, (new cljs.core.Keyword(null, "content", "content", 1965434859)).cljs$core$IFn$_invoke$arity$1(activity), / |\n/))));
  if (cljs.core.truth_(temp__4092__auto__)) {
    var url = temp__4092__auto__;
    return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "playlist-entry-queued", "playlist-entry-queued", 1714422459), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615)).cljs$core$IFn$_invoke$arity$1(activity), url], null)], null));
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, omchaya.commands.handle_maybe_command, "/mute", function(target, activity, state) {
  var controls_ch = cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
  return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "audio-player-muted", "audio-player-muted", 4718730120)], null));
});
cljs.core._add_method.call(null, omchaya.commands.handle_maybe_command, "/unmute", function(target, activity, state) {
  var controls_ch = cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
  return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "audio-player-unmuted", "audio-player-unmuted", 3422373327)], null));
});
goog.provide("omchaya.controllers.post_controls");
goog.require("cljs.core");
goog.require("omchaya.utils");
goog.require("omchaya.useful");
goog.require("cljs.core.async");
goog.require("omchaya.routes");
goog.require("omchaya.utils");
goog.require("omchaya.replay");
goog.require("cljs.core.async");
goog.require("omchaya.ui");
goog.require("omchaya.api.mock");
goog.require("omchaya.commands");
goog.require("omchaya.useful");
goog.require("omchaya.useful");
goog.require("clojure.string");
goog.require("omchaya.api.mock");
goog.require("omchaya.commands");
goog.require("omchaya.ui");
goog.require("clojure.string");
goog.require("omchaya.utils");
goog.require("omchaya.replay");
goog.require("omchaya.routes");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("dommy.core");
omchaya.controllers.post_controls.local_only_commands = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["/mute", "/unmute"], null);
omchaya.controllers.post_controls.sendable_message_QMARK_ = function sendable_message_QMARK_(message) {
  var vec__23047 = clojure.string.split.call(null, message, / |\n/);
  var command = cljs.core.nth.call(null, vec__23047, 0, null);
  var _ = cljs.core.nthnext.call(null, vec__23047, 1);
  if (cljs.core.truth_(function() {
    var or__3443__auto__ = cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([command], true), omchaya.controllers.post_controls.local_only_commands);
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return cljs.core.empty_QMARK_.call(null, message);
    }
  }())) {
    return false;
  } else {
    return true;
  }
};
omchaya.controllers.post_controls.post_control_event_BANG_ = function() {
  var method_table__4301__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4302__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4303__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4304__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4305__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("post-control-event!", function(target, message, args, previous_state, current_state) {
    return message;
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4305__auto__, method_table__4301__auto__, prefer_table__4302__auto__, method_cache__4303__auto__, cached_hierarchy__4304__auto__);
}();
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "default", "default", 2558708147), function(target, message, args, previous_state, current_state) {
  return omchaya.utils.mprint.call(null, "No post-control for: ", message);
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "current-user-mentioned", "current-user-mentioned", 1125795533), function(target, message, args, previous_state, current_state) {
  return omchaya.utils.mprint.call(null, "notify current user they were mentioned");
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "playlist-entry-played", "playlist-entry-played", 1677366299), function(target, message, p__23049, previous_state, current_state) {
  var vec__23050 = p__23049;
  var order = cljs.core.nth.call(null, vec__23050, 0, null);
  var channel_id = cljs.core.nth.call(null, vec__23050, 1, null);
  var controls_ch = cljs.core.get_in.call(null, current_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
  var playlist = cljs.core.get_in.call(null, current_state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), channel_id, new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "playlist", "playlist", 2893378884)], null));
  var entry = omchaya.useful.ffilter.call(null, function(controls_ch, playlist) {
    return function(p1__23048_SHARP_) {
      return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "order", "order", 1119910592)).cljs$core$IFn$_invoke$arity$1(p1__23048_SHARP_), order);
    };
  }(controls_ch, playlist), cljs.core.get_in.call(null, current_state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), channel_id, new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "playlist", "playlist", 2893378884)], null)));
  return cljs.core.async.put_BANG_.call(null, controls_ch, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "audio-player-source-updated", "audio-player-source-updated", 2679762480), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "src", "src", 1014018390)).cljs$core$IFn$_invoke$arity$1(entry), channel_id], null)], null));
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "audio-player-source-updated", "audio-player-source-updated", 2679762480), function(target, message, p__23051, previous_state, current_state) {
  var vec__23052 = p__23051;
  var src = cljs.core.nth.call(null, vec__23052, 0, null);
  var channel_id = cljs.core.nth.call(null, vec__23052, 1, null);
  if (cljs.core._EQ_.call(null, channel_id, (new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411)).cljs$core$IFn$_invoke$arity$1(current_state)) && cljs.core._EQ_.call(null, cljs.core.get_in.call(null, current_state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), (new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411)).cljs$core$IFn$_invoke$arity$1(current_state), 
  new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "state", "state", 1123661827)], null)), new cljs.core.Keyword(null, "playing", "playing", 520340384))) {
    var player = dommy.template.__GT_node_like.call(null, target).querySelector(dommy.core.selector.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(".audio-player.audio-"), cljs.core.str(channel_id)].join("")], null)));
    return setTimeout(function() {
      return player.play();
    }, 35);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "tab-selected", "tab-selected", 4274020677), function(target, message, channel_id, previous_state, current_state) {
  omchaya.utils.set_window_href_BANG_.call(null, omchaya.routes.v1_channel_link.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615), channel_id], null)));
  var temp__4092__auto__ = cljs.core.get_in.call(null, current_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), channel_id], null));
  if (cljs.core.truth_(temp__4092__auto__)) {
    var new_channel = temp__4092__auto__;
    return setTimeout(function() {
      return omchaya.ui.scroll_to_latest_message_BANG_.call(null, target, (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(new_channel));
    }, 35);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "user-message-submitted", "user-message-submitted", 1304334501), function(target, message, args, previous_state, current_state) {
  var channel = cljs.core.get_in.call(null, current_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), (new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411)).cljs$core$IFn$_invoke$arity$1(current_state)], null));
  var user_message = cljs.core.get_in.call(null, previous_state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "user-message", "user-message", 2253309815), new cljs.core.Keyword(null, "value", "value", 1125876963)], null));
  var content = cljs.core.get_in.call(null, previous_state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "user-message", "user-message", 2253309815), new cljs.core.Keyword(null, "value", "value", 1125876963)], null));
  var user = cljs.core.get_in.call(null, current_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "users", "users", 1125482874), (new cljs.core.Keyword(null, "current-user-email", "current-user-email", 4091392864)).cljs$core$IFn$_invoke$arity$1(current_state)], null));
  var channel__$1 = cljs.core.get_in.call(null, current_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), (new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411)).cljs$core$IFn$_invoke$arity$1(current_state)], null));
  var api_key = (new cljs.core.Keyword(null, "api-key", "api-key", 4507296670)).cljs$core$IFn$_invoke$arity$1(user);
  var activity = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "content", "content", 1965434859), content, new cljs.core.Keyword(null, "author", "author", 3902543101), (new cljs.core.Keyword(null, "email", "email", 1110523662)).cljs$core$IFn$_invoke$arity$1(user), new cljs.core.Keyword(null, "created_at", "created_at", 2383584348), new Date, new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615), (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(channel__$1)], 
  null);
  var temp__4092__auto___23053 = dommy.template.__GT_node_like.call(null, target).querySelector(dommy.core.selector.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, ".chat-input", ".chat-input", 1495609141)], null)));
  if (cljs.core.truth_(temp__4092__auto___23053)) {
    var input_23054 = temp__4092__auto___23053;
    dommy.core.set_value_BANG_.call(null, input_23054, "");
  } else {
  }
  setTimeout(function() {
    return omchaya.ui.scroll_to_latest_message_when_appropriate_BANG_.call(null, target, (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(channel__$1));
  }, 35);
  omchaya.commands.handle_maybe_command.call(null, target, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "content", "content", 1965434859), user_message, new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615), (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(channel__$1)], null), current_state);
  if (omchaya.controllers.post_controls.sendable_message_QMARK_.call(null, user_message)) {
    return omchaya.api.mock.send_user_message_BANG_.call(null, api_key, activity);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "audio-player-started", "audio-player-started", 1807969246), function(target, message, channel_id, previous_state, current_state) {
  var player = dommy.template.__GT_node_like.call(null, target).querySelector(dommy.core.selector.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(".audio-player.audio-"), cljs.core.str(channel_id)].join("")], null)));
  return setTimeout(function() {
    return player.play();
  }, 35);
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "audio-player-stopped", "audio-player-stopped", 1820835114), function(target, message, channel_id, previous_state, current_state) {
  var player = dommy.template.__GT_node_like.call(null, target).querySelector(dommy.core.selector.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(".audio-player.audio-"), cljs.core.str(channel_id)].join("")], null)));
  return setTimeout(function() {
    return player.pause();
  }, 35);
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "audio-player-muted", "audio-player-muted", 4718730120), function(target, message, args, previous_state, current_state) {
  var players = dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, target).getElementsByClassName("audio-player"));
  return setTimeout(function() {
    var seq__23055 = cljs.core.seq.call(null, players);
    var chunk__23056 = null;
    var count__23057 = 0;
    var i__23058 = 0;
    while (true) {
      if (i__23058 < count__23057) {
        var player = cljs.core._nth.call(null, chunk__23056, i__23058);
        player.muted = true;
        var G__23059 = seq__23055;
        var G__23060 = chunk__23056;
        var G__23061 = count__23057;
        var G__23062 = i__23058 + 1;
        seq__23055 = G__23059;
        chunk__23056 = G__23060;
        count__23057 = G__23061;
        i__23058 = G__23062;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__23055);
        if (temp__4092__auto__) {
          var seq__23055__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__23055__$1)) {
            var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__23055__$1);
            var G__23063 = cljs.core.chunk_rest.call(null, seq__23055__$1);
            var G__23064 = c__4191__auto__;
            var G__23065 = cljs.core.count.call(null, c__4191__auto__);
            var G__23066 = 0;
            seq__23055 = G__23063;
            chunk__23056 = G__23064;
            count__23057 = G__23065;
            i__23058 = G__23066;
            continue;
          } else {
            var player = cljs.core.first.call(null, seq__23055__$1);
            player.muted = true;
            var G__23067 = cljs.core.next.call(null, seq__23055__$1);
            var G__23068 = null;
            var G__23069 = 0;
            var G__23070 = 0;
            seq__23055 = G__23067;
            chunk__23056 = G__23068;
            count__23057 = G__23069;
            i__23058 = G__23070;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }, 35);
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "audio-player-unmuted", "audio-player-unmuted", 3422373327), function(target, message, args, previous_state, current_state) {
  var players = dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, target).getElementsByClassName("audio-player"));
  return setTimeout(function() {
    var seq__23071 = cljs.core.seq.call(null, players);
    var chunk__23072 = null;
    var count__23073 = 0;
    var i__23074 = 0;
    while (true) {
      if (i__23074 < count__23073) {
        var player = cljs.core._nth.call(null, chunk__23072, i__23074);
        player.muted = false;
        var G__23075 = seq__23071;
        var G__23076 = chunk__23072;
        var G__23077 = count__23073;
        var G__23078 = i__23074 + 1;
        seq__23071 = G__23075;
        chunk__23072 = G__23076;
        count__23073 = G__23077;
        i__23074 = G__23078;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__23071);
        if (temp__4092__auto__) {
          var seq__23071__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__23071__$1)) {
            var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__23071__$1);
            var G__23079 = cljs.core.chunk_rest.call(null, seq__23071__$1);
            var G__23080 = c__4191__auto__;
            var G__23081 = cljs.core.count.call(null, c__4191__auto__);
            var G__23082 = 0;
            seq__23071 = G__23079;
            chunk__23072 = G__23080;
            count__23073 = G__23081;
            i__23074 = G__23082;
            continue;
          } else {
            var player = cljs.core.first.call(null, seq__23071__$1);
            player.muted = false;
            var G__23083 = cljs.core.next.call(null, seq__23071__$1);
            var G__23084 = null;
            var G__23085 = 0;
            var G__23086 = 0;
            seq__23071 = G__23083;
            chunk__23072 = G__23084;
            count__23073 = G__23085;
            i__23074 = G__23086;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }, 35);
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "current-user-mentioned", "current-user-mentioned", 1125795533), function(target, message, p__23087, previous_state, current_state) {
  var vec__23088 = p__23087;
  var activity = cljs.core.nth.call(null, vec__23088, 0, null);
  var url = cljs.core.nth.call(null, vec__23088, 1, null);
  var player = dommy.template.__GT_node_like.call(null, target).querySelector(dommy.core.selector.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(".audio-player.sfx.audio-"), cljs.core.str((new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615)).cljs$core$IFn$_invoke$arity$1(activity))].join("")], null)));
  return setTimeout(function() {
    return player.play();
  }, 35);
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "user-logged-out", "user-logged-out", 2519482167), function(target, message, p__23089, previous_state, current_state) {
  var vec__23090 = p__23089;
  var activity = cljs.core.nth.call(null, vec__23090, 0, null);
  var url = cljs.core.nth.call(null, vec__23090, 1, null);
  return omchaya.utils.mprint.call(null, "Log the user out somehow");
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "history-player-opened", "history-player-opened", 3054141134), function(target, message, p__23091, previous_state, current_state) {
  var vec__23092 = p__23091;
  var activity = cljs.core.nth.call(null, vec__23092, 0, null);
  var url = cljs.core.nth.call(null, vec__23092, 1, null);
  var temp__4092__auto__ = document.querySelector("div#player-container");
  if (cljs.core.truth_(temp__4092__auto__)) {
    var player_el = temp__4092__auto__;
    return omchaya.replay.install_player_BANG_.call(null, player_el, cljs.core.get_in.call(null, current_state, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "users", "users", 1125482874), (new cljs.core.Keyword(null, "current-user-email", "current-user-email", 4091392864)).cljs$core$IFn$_invoke$arity$1(current_state), new cljs.core.Keyword(null, "api-key", "api-key", 4507296670)], null)), omchaya.replay.initial_player_state.call(null, 
    (new cljs.core.Keyword(null, "comms", "comms", 1108747865)).cljs$core$IFn$_invoke$arity$1(current_state), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "player-control", "player-control", 3655689699), omchaya.replay.player_control_ch, new cljs.core.Keyword(null, "player-drag", "player-drag", 1524386834), omchaya.replay.player_drag_ch, new cljs.core.Keyword(null, "api", "api", 1014001036), omchaya.replay.api_ch], null)));
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "search-field-focused", "search-field-focused", 1194736049), function(target, message, p__23093, previous_state, current_state) {
  var vec__23094 = p__23093;
  var activity = cljs.core.nth.call(null, vec__23094, 0, null);
  var url = cljs.core.nth.call(null, vec__23094, 1, null);
  var temp__4092__auto__ = document.querySelector(dommy.core.selector.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [target, new cljs.core.Keyword(null, "input.query", "input.query", 3940929814)], null)));
  if (cljs.core.truth_(temp__4092__auto__)) {
    var search_field = temp__4092__auto__;
    return window.setTimeout(function() {
      return search_field.value = cljs.core.get_in.call(null, current_state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, "value", "value", 1125876963)], null));
    }, 20);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "search-focus-key-pressed", "search-focus-key-pressed", 1169113036), function(target, message, args, previous_state, current_state) {
  var temp__4092__auto__ = document.querySelector(dommy.core.selector.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [target, new cljs.core.Keyword(null, "input.query", "input.query", 3940929814)], null)));
  if (cljs.core.truth_(temp__4092__auto__)) {
    var search_field = temp__4092__auto__;
    return search_field.focus();
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "search-form-blur-key-pressed", "search-form-blur-key-pressed", 2923548996), function(target, message, args, previous_state, current_state) {
  var temp__4092__auto__ = document.querySelector(dommy.core.selector.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [target, new cljs.core.Keyword(null, "textarea.chat-input", "textarea.chat-input", 3263729595)], null)));
  if (cljs.core.truth_(temp__4092__auto__)) {
    var message_field = temp__4092__auto__;
    return message_field.focus();
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "user-message-blur-key-pressed", "user-message-blur-key-pressed", 3460583048), function(target, message, args, previous_state, current_state) {
  var temp__4092__auto__ = document.querySelector(dommy.core.selector.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [target, new cljs.core.Keyword(null, "input.query", "input.query", 3940929814)], null)));
  if (cljs.core.truth_(temp__4092__auto__)) {
    var search_field = temp__4092__auto__;
    return search_field.focus();
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "channel-destroyed", "channel-destroyed", 3892625729), function(target, message, channel_id, previous_state, current_state) {
  return omchaya.api.mock.destroy_channel_BANG_.call(null, cljs.core.get_in.call(null, current_state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "api", "api", 1014001036)], null)), channel_id);
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "state-restored", "state-restored", 2236662980), function(target, message, channel_id, previous_state, current_state) {
  if (cljs.core.empty_QMARK_.call(null, localStorage.getItem("omchaya-state"))) {
    return cljs.core.print.call(null, "No data available to load from localStorage");
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "state-persisted", "state-persisted", 2957998761), function(target, message, channel_id, previous_state, current_state) {
  return localStorage.setItem("omchaya-state", cljs.core.pr_str.call(null, cljs.core.dissoc.call(null, current_state, new cljs.core.Keyword(null, "comms", "comms", 1108747865))));
});
cljs.core._add_method.call(null, omchaya.controllers.post_controls.post_control_event_BANG_, new cljs.core.Keyword(null, "window-resized", "window-resized", 3784490181), function(target, message, channel_id, previous_state, current_state) {
  return null;
});
goog.provide("omchaya.api.kandan");
goog.require("cljs.core");
goog.require("omchaya.utils");
goog.require("omchaya.useful");
goog.require("cljs.core.async");
goog.require("omchaya.api.kandan.callbacks");
goog.require("omchaya.utils");
goog.require("cljs.core.async");
goog.require("omchaya.useful");
goog.require("omchaya.useful");
goog.require("omchaya.api.kandan.callbacks");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("omchaya.utils");
goog.require("cljs.core.async");
omchaya.api.kandan.process_event_BANG_ = function() {
  var method_table__4301__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4302__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4303__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4304__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4305__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("process-event!", function(entity_name, event_name, data) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [entity_name, cljs.core.keyword.call(null, cljs.core.first.call(null, clojure.string.split.call(null, (new cljs.core.Keyword(null, "event", "event", 1110795788)).cljs$core$IFn$_invoke$arity$1(data), /#/)))], null);
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4305__auto__, method_table__4301__auto__, prefer_table__4302__auto__, method_cache__4303__auto__, cached_hierarchy__4304__auto__);
}();
cljs.core._add_method.call(null, omchaya.api.kandan.process_event_BANG_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "user", "user", 1017503549), new cljs.core.Keyword(null, "connect", "connect", 1965255772)], null), function(entity_name, event_name, data) {
  return "Placeholder";
});
cljs.core._add_method.call(null, omchaya.api.kandan.process_event_BANG_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channel", "channel", 1752854645), new cljs.core.Keyword(null, "delete", "delete", 3973413149)], null), function(entity_name, event_name, data) {
  return "Placeholder";
});
cljs.core._add_method.call(null, omchaya.api.kandan.process_event_BANG_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channel", "channel", 1752854645), new cljs.core.Keyword(null, "create", "create", 3956577390)], null), function(entity_name, event_name, data) {
  return "Placeholder";
});
cljs.core._add_method.call(null, omchaya.api.kandan.process_event_BANG_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channel", "channel", 1752854645), new cljs.core.Keyword(null, "update", "update", 4470025275)], null), function(entity_name, event_name, data) {
  return "Placeholder";
});
cljs.core._add_method.call(null, omchaya.api.kandan.process_event_BANG_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "attachments", "attachments", 4569874210), new cljs.core.Keyword(null, "added", "added", 1106564210)], null), function(entity_name, event_name, data) {
  return "Placeholder";
});
omchaya.api.kandan.handle_activity = function handle_activity(data) {
  var data__$1 = cljs.core.js__GT_clj.call(null, data, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
  var event = (new cljs.core.Keyword(null, "event", "event", 1110795788)).cljs$core$IFn$_invoke$arity$1(data__$1);
  var vec__21096 = cljs.core.map.call(null, cljs.core.keyword, clojure.string.split.call(null, event, /#/));
  var entity_name = cljs.core.nth.call(null, vec__21096, 0, null);
  var event_name = cljs.core.nth.call(null, vec__21096, 1, null);
  return omchaya.api.kandan.process_event_BANG_.call(null, entity_name, event_name, data__$1);
};
omchaya.api.kandan.make_client = function make_client(auth_token, end_point) {
  var client = new Faye.Client(end_point);
  var auth_extension = function() {
    var obj21101 = {"outgoing":function(client) {
      return function(message, cb) {
        if (cljs.core._EQ_.call(null, message.channel, "/meta/subscribe")) {
          message["ext"] = {"auth_token":auth_token};
        } else {
        }
        return cb.call(null, message);
      };
    }(client)};
    return obj21101;
  }();
  var G__21102 = client;
  G__21102.disable("websocket");
  G__21102.addExtension(auth_extension);
  G__21102.bind("transport:down", function() {
    return omchaya.utils.mprint.call(null, "Connection to Kandan server is down");
  });
  G__21102.bind("transport:up", function() {
    return omchaya.utils.mprint.call(null, "Connection to Kandan server is up");
  });
  G__21102.subscribe("/app/activities", omchaya.api.kandan.handle_activity);
  return G__21102;
};
omchaya.api.kandan.normalize_activity = function normalize_activity(activity) {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "id", "id", 1013907597), (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(activity), new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615), omchaya.utils.safe_sel.call(null, (new cljs.core.Keyword(null, "channel_id", "channel_id", 3378062665)).cljs$core$IFn$_invoke$arity$1(activity)), new cljs.core.Keyword(null, "created_at", "created_at", 2383584348), new Date((new cljs.core.Keyword(null, 
  "created_at", "created_at", 2383584348)).cljs$core$IFn$_invoke$arity$1(activity)), new cljs.core.Keyword(null, "author", "author", 3902543101), cljs.core.get_in.call(null, activity, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "user", "user", 1017503549), new cljs.core.Keyword(null, "email", "email", 1110523662)], null)), new cljs.core.Keyword(null, "content", "content", 1965434859), (new cljs.core.Keyword(null, "content", "content", 
  1965434859)).cljs$core$IFn$_invoke$arity$1(activity)], null);
};
omchaya.api.kandan.subscribe_BANG_ = function subscribe_BANG_(client, remote_channel_name, api_ch) {
  var subscription = client.subscribe(remote_channel_name);
  client.subscribe(remote_channel_name, function(activity) {
    var normalized = omchaya.api.kandan.normalize_activity.call(null, cljs.core.js__GT_clj.call(null, activity, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), true));
    return cljs.core.async.put_BANG_.call(null, api_ch, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channel-activity-received", "channel-activity-received", 3517943815), normalized], null));
  });
  client.errback(function(data) {
    return cljs.core.async.put_BANG_.call(null, api_ch, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channel-error-received", "channel-error-received", 3125248386), cljs.core.js__GT_clj.call(null, data, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), true)], null));
  });
  return subscription;
};
omchaya.api.kandan.save = function save(api_key, obj) {
  return omchaya.api.kandan.callbacks.post_activity_BANG_.call(null, api_key, cljs.core.js__GT_clj.call(null, obj), function(p1__21103_SHARP_) {
    return omchaya.utils.mprint.call(null, "Save Activity Result: ", p1__21103_SHARP_);
  });
};
goog.provide("omchaya.controllers.api");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
omchaya.controllers.api.append_activity_to_channel = function append_activity_to_channel(state, channel_id, activity) {
  return cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), channel_id, new cljs.core.Keyword(null, "activities", "activities", 3062509407)], null), cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.core.sort_by, new cljs.core.Keyword(null, "created_at", "created_at", 2383584348)), cljs.core.conj), activity);
};
omchaya.controllers.api.drop_old_activity_from_channel = function drop_old_activity_from_channel(state, channel_id, message_limit) {
  return cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), channel_id, new cljs.core.Keyword(null, "activities", "activities", 3062509407)], null), cljs.core.partial.call(null, cljs.core.take_last, message_limit));
};
omchaya.controllers.api.api_event = function() {
  var method_table__4301__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4302__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4303__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4304__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4305__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("api-event", function(target, message, args, state) {
    return message;
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4305__auto__, method_table__4301__auto__, prefer_table__4302__auto__, method_cache__4303__auto__, cached_hierarchy__4304__auto__);
}();
cljs.core._add_method.call(null, omchaya.controllers.api.api_event, new cljs.core.Keyword(null, "channel-activity-received", "channel-activity-received", 3517943815), function(target, message, activity, state) {
  var message_limit = cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "message-limit", "message-limit", 2656236007)], null));
  return omchaya.controllers.api.drop_old_activity_from_channel.call(null, omchaya.controllers.api.append_activity_to_channel.call(null, state, (new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615)).cljs$core$IFn$_invoke$arity$1(activity), activity), (new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615)).cljs$core$IFn$_invoke$arity$1(activity), message_limit);
});
cljs.core._add_method.call(null, omchaya.controllers.api.api_event, new cljs.core.Keyword(null, "channel-remotely-destroyed", "channel-remotely-destroyed", 2144502171), function(target, message, channel_id, state) {
  return cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370)], null), cljs.core.dissoc, channel_id);
});
goog.provide("omchaya.controllers.post_api");
goog.require("cljs.core");
goog.require("omchaya.utils");
goog.require("omchaya.useful");
goog.require("cljs.core.async");
goog.require("omchaya.utils");
goog.require("cljs.core.async");
goog.require("omchaya.ui");
goog.require("omchaya.commands");
goog.require("omchaya.useful");
goog.require("omchaya.useful");
goog.require("clojure.string");
goog.require("omchaya.commands");
goog.require("omchaya.ui");
goog.require("clojure.string");
goog.require("omchaya.utils");
goog.require("cljs.core.async");
omchaya.controllers.post_api.notify_if_mentioned_BANG_ = function notify_if_mentioned_BANG_(activity, state) {
  var current_user = cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "users", "users", 1125482874), (new cljs.core.Keyword(null, "current-user-email", "current-user-email", 4091392864)).cljs$core$IFn$_invoke$arity$1(state)], null));
  var comm = cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null));
  if (cljs.core.truth_(function() {
    var and__3431__auto__ = cljs.core.not_EQ_.call(null, (new cljs.core.Keyword(null, "email", "email", 1110523662)).cljs$core$IFn$_invoke$arity$1(current_user), (new cljs.core.Keyword(null, "author", "author", 3902543101)).cljs$core$IFn$_invoke$arity$1(activity));
    if (and__3431__auto__) {
      return omchaya.useful.ffilter.call(null, function(piece) {
        var vec__22709 = cljs.core.re_find.call(null, /(.*)@(\w+)(.*)/, piece);
        var _ = cljs.core.nth.call(null, vec__22709, 0, null);
        var pre = cljs.core.nth.call(null, vec__22709, 1, null);
        var username = cljs.core.nth.call(null, vec__22709, 2, null);
        var post = cljs.core.nth.call(null, vec__22709, 3, null);
        return cljs.core._EQ_.call(null, username, (new cljs.core.Keyword(null, "username", "username", 748190792)).cljs$core$IFn$_invoke$arity$1(current_user));
      }, clojure.string.split.call(null, (new cljs.core.Keyword(null, "content", "content", 1965434859)).cljs$core$IFn$_invoke$arity$1(activity), / /));
    } else {
      return and__3431__auto__;
    }
  }())) {
    return cljs.core.async.put_BANG_.call(null, comm, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "current-user-mentioned", "current-user-mentioned", 1125795533), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [activity, "/assets/audio/threetone-alert.wav"], null)], null));
  } else {
    return null;
  }
};
omchaya.controllers.post_api.post_api_event_BANG_ = function() {
  var method_table__4301__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4302__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4303__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4304__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4305__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("post-api-event!", function(target, message, previous_state, current_state) {
    return message;
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4305__auto__, method_table__4301__auto__, prefer_table__4302__auto__, method_cache__4303__auto__, cached_hierarchy__4304__auto__);
}();
cljs.core._add_method.call(null, omchaya.controllers.post_api.post_api_event_BANG_, new cljs.core.Keyword(null, "default", "default", 2558708147), function(target, message, previous_state, current_state) {
  return omchaya.utils.mprint.call(null, "No post-api handler for: ", message);
});
cljs.core._add_method.call(null, omchaya.controllers.post_api.post_api_event_BANG_, new cljs.core.Keyword(null, "channel-activity-received", "channel-activity-received", 3517943815), function(target, message, activity, previous_state, current_state) {
  omchaya.commands.handle_maybe_command.call(null, target, activity, current_state);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615)).cljs$core$IFn$_invoke$arity$1(activity), (new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411)).cljs$core$IFn$_invoke$arity$1(current_state))) {
    setTimeout(function() {
      return omchaya.ui.scroll_to_latest_message_when_appropriate_BANG_.call(null, target, (new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615)).cljs$core$IFn$_invoke$arity$1(activity));
    }, 35);
    if (cljs.core.truth_(function() {
      var or__3443__auto__ = (new cljs.core.Keyword(null, "live?", "live?", 1116889157)).cljs$core$IFn$_invoke$arity$1(activity);
      if (cljs.core.truth_(or__3443__auto__)) {
        return or__3443__auto__;
      } else {
        return true;
      }
    }())) {
      return omchaya.controllers.post_api.notify_if_mentioned_BANG_.call(null, activity, current_state);
    } else {
      return null;
    }
  } else {
    return null;
  }
});
goog.provide("omchaya.controllers.controls");
goog.require("cljs.core");
goog.require("omchaya.utils");
goog.require("cljs.core.async");
goog.require("omchaya.utils");
goog.require("omchaya.utils");
goog.require("cljs.reader");
goog.require("cljs.reader");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
omchaya.controllers.controls.control_event = function() {
  var method_table__4301__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4302__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4303__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4304__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4305__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("control-event", function(target, message, args, state) {
    return message;
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4305__auto__, method_table__4301__auto__, prefer_table__4302__auto__, method_cache__4303__auto__, cached_hierarchy__4304__auto__);
}();
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "default", "default", 2558708147), function(target, message, args, state) {
  omchaya.utils.mprint.call(null, "Unknown controls: ", cljs.core.pr_str.call(null, message));
  return state;
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "api-key-updated", "api-key-updated", 756464524), function(target, message, api_key, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "users", "users", 1125482874), (new cljs.core.Keyword(null, "current-user-email", "current-user-email", 4091392864)).cljs$core$IFn$_invoke$arity$1(state), new cljs.core.Keyword(null, "api-key", "api-key", 4507296670)], null), api_key);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "current-user-mentioned", "current-user-mentioned", 1125795533), function(target, message, p__22690, state) {
  var vec__22691 = p__22690;
  var activity = cljs.core.nth.call(null, vec__22691, 0, null);
  var url = cljs.core.nth.call(null, vec__22691, 1, null);
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), (new cljs.core.Keyword(null, "channel-id", "channel-id", 3378014615)).cljs$core$IFn$_invoke$arity$1(activity), new cljs.core.Keyword(null, "sfx", "sfx", 1014018039), new cljs.core.Keyword(null, "source-url", "source-url", 4196274223)], null), url);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "user-menu-toggled", "user-menu-toggled", 567658326), function(target, message, args, state) {
  return cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "menus", "menus", 1117686374), new cljs.core.Keyword(null, "user-menu", "user-menu", 1307043219), new cljs.core.Keyword(null, "open", "open", 1017321916)], null), cljs.core.not);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "tab-selected", "tab-selected", 4274020677), function(target, message, args, state) {
  var old_channel = cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), (new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411)).cljs$core$IFn$_invoke$arity$1(state)], null));
  var new_channel = cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), args], null));
  return cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411), args), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(old_channel), new cljs.core.Keyword(null, "selected", "selected", 2205476365)], 
  null), false), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), args, new cljs.core.Keyword(null, "selected", "selected", 2205476365)], null), true);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "search-form-focused", "search-form-focused", 1124244197), function(target, message, args, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, "focused", "focused", 4617830121)], null), true);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "search-form-blurred", "search-form-blurred", 1799842360), function(target, message, args, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, "focused", "focused", 4617830121)], null), false);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "search-form-updated", "search-form-updated", 1580855337), function(target, message, new_value, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, "value", "value", 1125876963)], null), new_value);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "user-message-focused", "user-message-focused", 3790954785), function(target, message, args, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "user-message", "user-message", 2253309815), new cljs.core.Keyword(null, "focused", "focused", 4617830121)], null), true);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "user-message-blurred", "user-message-blurred", 4466552948), function(target, message, args, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "user-message", "user-message", 2253309815), new cljs.core.Keyword(null, "focused", "focused", 4617830121)], null), false);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "user-message-updated", "user-message-updated", 4247565925), function(target, message, args, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "user-message", "user-message", 2253309815), new cljs.core.Keyword(null, "value", "value", 1125876963)], null), args);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "audio-player-started", "audio-player-started", 1807969246), function(target, message, channel_id, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), channel_id, new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "state", "state", 1123661827)], null), new cljs.core.Keyword(null, "playing", "playing", 520340384));
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "audio-player-stopped", "audio-player-stopped", 1820835114), function(target, message, channel_id, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), channel_id, new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "state", "state", 1123661827)], null), new cljs.core.Keyword(null, "stopped", "stopped", 3424552255));
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "audio-player-muted", "audio-player-muted", 4718730120), function(target, message, args, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "audio", "audio", 1107070792), new cljs.core.Keyword(null, "muted", "muted", 1118168285)], null), true);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "audio-player-unmuted", "audio-player-unmuted", 3422373327), function(target, message, args, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "audio", "audio", 1107070792), new cljs.core.Keyword(null, "muted", "muted", 1118168285)], null), false);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "audio-player-unmuted", "audio-player-unmuted", 3422373327), function(target, message, args, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "audio", "audio", 1107070792), new cljs.core.Keyword(null, "muted", "muted", 1118168285)], null), false);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "audio-player-source-updated", "audio-player-source-updated", 2679762480), function(target, message, p__22692, state) {
  var vec__22693 = p__22692;
  var src = cljs.core.nth.call(null, vec__22693, 0, null);
  var channel_id = cljs.core.nth.call(null, vec__22693, 1, null);
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), channel_id, new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "source-url", "source-url", 4196274223)], null), src);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "audio-player-unmuted", "audio-player-unmuted", 3422373327), function(target, message, args, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "audio", "audio", 1107070792), new cljs.core.Keyword(null, "muted", "muted", 1118168285)], null), false);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "playlist-entry-queued", "playlist-entry-queued", 1714422459), function(target, message, args, state) {
  var vec__22694 = args;
  var channel_id = cljs.core.nth.call(null, vec__22694, 0, null);
  var url = cljs.core.nth.call(null, vec__22694, 1, null);
  return cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), channel_id, new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "playlist", "playlist", 2893378884)], null), function(playlist) {
    return cljs.core.conj.call(null, playlist, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "order", "order", 1119910592), cljs.core.count.call(null, playlist) + 1, new cljs.core.Keyword(null, "src", "src", 1014018390), url], null));
  });
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "playlist-entry-played", "playlist-entry-played", 1677366299), function(target, message, p__22695, state) {
  var vec__22696 = p__22695;
  var order = cljs.core.nth.call(null, vec__22696, 0, null);
  var channel_id = cljs.core.nth.call(null, vec__22696, 1, null);
  return cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), channel_id, new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "playing-order", "playing-order", 3298952289)], null), order), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", 
  "channels", 2446530370), channel_id, new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "loading", "loading", 1350554798)], null), true);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "user-message-submitted", "user-message-submitted", 1304334501), function(target, message, args, state) {
  if (cljs.core.empty_QMARK_.call(null, cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "user-message", "user-message", 2253309815), new cljs.core.Keyword(null, "value", "value", 1125876963)], null)))) {
    return state;
  } else {
    var content = cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "user-message", "user-message", 2253309815), new cljs.core.Keyword(null, "value", "value", 1125876963)], null));
    var user = cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "users", "users", 1125482874), (new cljs.core.Keyword(null, "current-user-email", "current-user-email", 4091392864)).cljs$core$IFn$_invoke$arity$1(state)], null));
    var channel = cljs.core.get_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), (new cljs.core.Keyword(null, "selected-channel", "selected-channel", 2473753411)).cljs$core$IFn$_invoke$arity$1(state)], null));
    var activity = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "content", "content", 1965434859), content, new cljs.core.Keyword(null, "author", "author", 3902543101), (new cljs.core.Keyword(null, "email", "email", 1110523662)).cljs$core$IFn$_invoke$arity$1(user), new cljs.core.Keyword(null, "created_at", "created_at", 2383584348), new Date], null);
    return cljs.core.update_in.call(null, cljs.core.update_in.call(null, cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "user-message", "user-message", 2253309815), new cljs.core.Keyword(null, "value", "value", 1125876963)], null), null), new cljs.core.PersistentVector(null, 
    3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(channel), new cljs.core.Keyword(null, "activities", "activities", 3062509407)], null), cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.core.sort_by, new cljs.core.Keyword(null, "created_at", "created_at", 2383584348)), cljs.core.conj), activity), new cljs.core.PersistentVector(null, 3, 5, 
    cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), (new cljs.core.Keyword(null, "id", "id", 1013907597)).cljs$core$IFn$_invoke$arity$1(channel), new cljs.core.Keyword(null, "activities", "activities", 3062509407)], null), cljs.core.vec);
  }
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "settings-opened", "settings-opened", 2980449477), function(target, message, args, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "menus", "menus", 1117686374), new cljs.core.Keyword(null, "user-menu", "user-menu", 1307043219), new cljs.core.Keyword(null, "open", "open", 1017321916)], null), false);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "help-opened", "help-opened", 703585255), function(target, message, args, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "menus", "menus", 1117686374), new cljs.core.Keyword(null, "user-menu", "user-menu", 1307043219), new cljs.core.Keyword(null, "open", "open", 1017321916)], null), false);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "about-opened", "about-opened", 4155398683), function(target, message, args, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "menus", "menus", 1117686374), new cljs.core.Keyword(null, "user-menu", "user-menu", 1307043219), new cljs.core.Keyword(null, "open", "open", 1017321916)], null), false);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "user-logged-out", "user-logged-out", 2519482167), function(target, message, args, state) {
  return cljs.core.assoc_in.call(null, cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "menus", "menus", 1117686374), new cljs.core.Keyword(null, "user-menu", "user-menu", 1307043219), new cljs.core.Keyword(null, "open", "open", 1017321916)], null), false), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "current-user-email", "current-user-email", 4091392864)], null), null);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "audio-source-loaded", "audio-source-loaded", 1601208242), function(target, message, channel_id, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), channel_id, new cljs.core.Keyword(null, "player", "player", 4323118675), new cljs.core.Keyword(null, "loading", "loading", 1350554798)], null), false);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "channel-destroyed", "channel-destroyed", 3892625729), function(target, message, channel_id, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), channel_id, new cljs.core.Keyword(null, "loading", "loading", 1350554798)], null), true);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "right-sidebar-toggled", "right-sidebar-toggled", 1915715552), function(target, message, channel_id, state) {
  return cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "sidebar", "sidebar", 3099131598), new cljs.core.Keyword(null, "right", "right", 1122416014), new cljs.core.Keyword(null, "open", "open", 1017321916)], null), cljs.core.not);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "left-sidebar-toggled", "left-sidebar-toggled", 1753163723), function(target, message, channel_id, state) {
  return cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "sidebar", "sidebar", 3099131598), new cljs.core.Keyword(null, "left", "left", 1017222009), new cljs.core.Keyword(null, "open", "open", 1017321916)], null), cljs.core.not);
});
omchaya.controllers.controls.window_drag_event = function() {
  var method_table__4301__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4302__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4303__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4304__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4305__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("window-drag-event", function(message, args, state) {
    return message;
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__4305__auto__, method_table__4301__auto__, prefer_table__4302__auto__, method_cache__4303__auto__, cached_hierarchy__4304__auto__);
}();
cljs.core._add_method.call(null, omchaya.controllers.controls.window_drag_event, new cljs.core.Keyword(null, "grabbed", "grabbed", 1293824551), function(message, initial_mouse_pos, window_state) {
  var vec__22697 = initial_mouse_pos;
  var mx = cljs.core.nth.call(null, vec__22697, 0, null);
  var my = cljs.core.nth.call(null, vec__22697, 1, null);
  var vec__22698 = (new cljs.core.Keyword(null, "position", "position", 1761709211)).cljs$core$IFn$_invoke$arity$1(window_state);
  var px = cljs.core.nth.call(null, vec__22698, 0, null);
  var py = cljs.core.nth.call(null, vec__22698, 1, null);
  var offset = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mx - px, my - py], null);
  return cljs.core.assoc.call(null, window_state, new cljs.core.Keyword(null, "dragging?", "dragging?", 709673026), true, new cljs.core.Keyword(null, "offset", "offset", 4289091589), offset);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.window_drag_event, new cljs.core.Keyword(null, "released", "released", 4757572783), function(message, data, window_state) {
  return cljs.core.assoc.call(null, window_state, new cljs.core.Keyword(null, "dragging?", "dragging?", 709673026), false);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.window_drag_event, new cljs.core.Keyword(null, "mouse-moved", "mouse-moved", 753447677), function(message, mouse_position, window_state) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "dragging?", "dragging?", 709673026)).cljs$core$IFn$_invoke$arity$1(window_state))) {
    var vec__22699 = mouse_position;
    var mx = cljs.core.nth.call(null, vec__22699, 0, null);
    var my = cljs.core.nth.call(null, vec__22699, 1, null);
    var vec__22700 = (new cljs.core.Keyword(null, "offset", "offset", 4289091589)).cljs$core$IFn$_invoke$arity$1(window_state);
    var off_x = cljs.core.nth.call(null, vec__22700, 0, null);
    var off_y = cljs.core.nth.call(null, vec__22700, 1, null);
    var vec__22701 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mx - off_x, my - off_y], null);
    var tnx = cljs.core.nth.call(null, vec__22701, 0, null);
    var tny = cljs.core.nth.call(null, vec__22701, 1, null);
    var min_x = -150;
    var max_x = document.body.clientWidth - 50;
    var min_y = 0;
    var max_y = document.body.clientHeight - 50;
    var new_position = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [min_x > tnx ? min_x : tnx > max_x ? max_x : new cljs.core.Keyword(null, "else", "else", 1017020587) ? tnx : null, min_y > tny ? min_y : tny > max_y ? max_y : new cljs.core.Keyword(null, "else", "else", 1017020587) ? tny : null], null);
    return cljs.core.assoc.call(null, window_state, new cljs.core.Keyword(null, "position", "position", 1761709211), new_position);
  } else {
    return window_state;
  }
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "draggable", "draggable", 709423359), function(target, message, p__22703, state) {
  var vec__22704 = p__22703;
  var sub_message = cljs.core.nth.call(null, vec__22704, 0, null);
  var map__22705 = cljs.core.nth.call(null, vec__22704, 1, null);
  var map__22705__$1 = cljs.core.seq_QMARK_.call(null, map__22705) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22705) : map__22705;
  var args = map__22705__$1;
  var name = cljs.core.get.call(null, map__22705__$1, new cljs.core.Keyword(null, "name", "name", 1017277949));
  return cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "windows", "windows", 2363397621), name], null), function(p1__22702_SHARP_) {
    return omchaya.controllers.controls.window_drag_event.call(null, sub_message, (new cljs.core.Keyword(null, "position", "position", 1761709211)).cljs$core$IFn$_invoke$arity$1(args), p1__22702_SHARP_);
  });
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "toggle-inspector-key-pressed", "toggle-inspector-key-pressed", 2594666135), function(target, message, args, state) {
  return cljs.core.update_in.call(null, state, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "windows", "windows", 2363397621), new cljs.core.Keyword(null, "window-inspector", "window-inspector", 2735849676), new cljs.core.Keyword(null, "open", "open", 1017321916)], null), cljs.core.not);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "inspector-path-updated", "inspector-path-updated", 848746907), function(target, message, path, state) {
  return cljs.core.assoc_in.call(null, state, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "inspector", "inspector", 931868265), new cljs.core.Keyword(null, "path", "path", 1017337751)], null), path);
});
cljs.core._add_method.call(null, omchaya.controllers.controls.control_event, new cljs.core.Keyword(null, "state-restored", "state-restored", 2236662980), function(target, message, path, state) {
  var str_data = localStorage.getItem("omchaya-state");
  if (cljs.core.seq.call(null, str_data)) {
    return cljs.core.assoc.call(null, cljs.reader.read_string.call(null, str_data), new cljs.core.Keyword(null, "comms", "comms", 1108747865), (new cljs.core.Keyword(null, "comms", "comms", 1108747865)).cljs$core$IFn$_invoke$arity$1(state));
  } else {
    return state;
  }
});
goog.provide("omchaya.core");
goog.require("cljs.core");
goog.require("omchaya.utils");
goog.require("omchaya.useful");
goog.require("cljs.core.async");
goog.require("omchaya.components.app");
goog.require("omchaya.routes");
goog.require("omchaya.controllers.post_controls");
goog.require("omchaya.utils");
goog.require("omchaya.controllers.api");
goog.require("omchaya.api.kandan");
goog.require("omchaya.controllers.api");
goog.require("cljs.core.async");
goog.require("omchaya.api.mock");
goog.require("omchaya.useful");
goog.require("omchaya.mock_data");
goog.require("omchaya.useful");
goog.require("om.dom");
goog.require("om.core");
goog.require("clojure.string");
goog.require("omchaya.api.mock");
goog.require("omchaya.datetime");
goog.require("om.core");
goog.require("omchaya.controllers.post_api");
goog.require("omchaya.mock_data");
goog.require("omchaya.datetime");
goog.require("clojure.string");
goog.require("omchaya.components.app");
goog.require("omchaya.utils");
goog.require("om.dom");
goog.require("omchaya.controllers.post_api");
goog.require("omchaya.routes");
goog.require("omchaya.controllers.controls");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("omchaya.controllers.controls");
goog.require("omchaya.api.kandan");
goog.require("omchaya.controllers.post_controls");
goog.require("dommy.core");
cljs.core.enable_console_print_BANG_.call(null);
omchaya.core.controls_ch = cljs.core.async.chan.call(null);
omchaya.core.api_ch = cljs.core.async.chan.call(null);
omchaya.core.app_state = cljs.core.atom.call(null, omchaya.mock_data.initial_state.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "controls", "controls", 4741937704), omchaya.core.controls_ch, new cljs.core.Keyword(null, "api", "api", 1014001036), omchaya.core.api_ch], null)));
omchaya.core.history = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
omchaya.core.filtered_message_QMARK_ = function filtered_message_QMARK_(message) {
  return cljs.core.get.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "credit-card-updated", "credit-card-updated", 2872375492), null], null), null), message);
};
omchaya.core.update_history_BANG_ = function update_history_BANG_(history, channel, message) {
  var m = cljs.core.first.call(null, message);
  var record = cljs.core.truth_(omchaya.core.filtered_message_QMARK_.call(null, m)) ? m : message;
  return cljs.core.swap_BANG_.call(null, history, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [channel, record], null));
};
omchaya.core.main = function main(target, state) {
  var comms = (new cljs.core.Keyword(null, "comms", "comms", 1108747865)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, state));
  var history = function() {
    var or__3443__auto__ = omchaya.core.history;
    if (cljs.core.truth_(or__3443__auto__)) {
      return or__3443__auto__;
    } else {
      return cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
    }
  }();
  omchaya.routes.define_routes_BANG_.call(null, state, document.getElementById("history-container"));
  om.core.root.call(null, omchaya.components.app.app, state, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "target", "target", 4427965699), target, new cljs.core.Keyword(null, "opts", "opts", 1017322386), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), comms], null)], null));
  var c__6068__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__6069__auto__ = function() {
      var switch__5998__auto__ = function(state_23311) {
        var state_val_23312 = state_23311[1];
        if (state_val_23312 === 1) {
          var state_23311__$1 = state_23311;
          var statearr_23313_23357 = state_23311__$1;
          statearr_23313_23357[2] = null;
          statearr_23313_23357[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
        } else {
          if (state_val_23312 === 2) {
            var state_23311__$1 = state_23311;
            if (true) {
              var statearr_23314_23358 = state_23311__$1;
              statearr_23314_23358[1] = 4;
            } else {
              var statearr_23315_23359 = state_23311__$1;
              statearr_23315_23359[1] = 5;
            }
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
          } else {
            if (state_val_23312 === 3) {
              var inst_23309 = state_23311[2];
              var state_23311__$1 = state_23311;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23311__$1, inst_23309);
            } else {
              if (state_val_23312 === 4) {
                var inst_23236 = state_23311[7];
                var inst_23235 = state_23311[8];
                var inst_23234 = state_23311[9];
                var inst_23234__$1 = (new cljs.core.Keyword(null, "controls", "controls", 4741937704)).cljs$core$IFn$_invoke$arity$1(comms);
                var inst_23235__$1 = (new cljs.core.Keyword(null, "api", "api", 1014001036)).cljs$core$IFn$_invoke$arity$1(comms);
                var inst_23236__$1 = cljs.core.async.timeout.call(null, 3E4);
                var inst_23237 = [inst_23234__$1, inst_23235__$1, inst_23236__$1];
                var inst_23238 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, inst_23237, null);
                var state_23311__$1 = function() {
                  var statearr_23316 = state_23311;
                  statearr_23316[7] = inst_23236__$1;
                  statearr_23316[8] = inst_23235__$1;
                  statearr_23316[9] = inst_23234__$1;
                  return statearr_23316;
                }();
                return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_23311__$1, 7, inst_23238);
              } else {
                if (state_val_23312 === 5) {
                  var state_23311__$1 = state_23311;
                  var statearr_23317_23360 = state_23311__$1;
                  statearr_23317_23360[2] = null;
                  statearr_23317_23360[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                } else {
                  if (state_val_23312 === 6) {
                    var inst_23307 = state_23311[2];
                    var state_23311__$1 = state_23311;
                    var statearr_23318_23361 = state_23311__$1;
                    statearr_23318_23361[2] = inst_23307;
                    statearr_23318_23361[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (state_val_23312 === 7) {
                      var inst_23242 = state_23311[10];
                      var inst_23240 = state_23311[11];
                      var inst_23234 = state_23311[9];
                      var inst_23240__$1 = state_23311[2];
                      var inst_23241 = cljs.core.nth.call(null, inst_23240__$1, 0, null);
                      var inst_23242__$1 = cljs.core.nth.call(null, inst_23240__$1, 1, null);
                      var inst_23243 = cljs.core._EQ_.call(null, inst_23242__$1, inst_23234);
                      var state_23311__$1 = function() {
                        var statearr_23319 = state_23311;
                        statearr_23319[10] = inst_23242__$1;
                        statearr_23319[11] = inst_23240__$1;
                        statearr_23319[12] = inst_23241;
                        return statearr_23319;
                      }();
                      if (inst_23243) {
                        var statearr_23320_23362 = state_23311__$1;
                        statearr_23320_23362[1] = 8;
                      } else {
                        var statearr_23321_23363 = state_23311__$1;
                        statearr_23321_23363[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                    } else {
                      if (state_val_23312 === 8) {
                        var inst_23240 = state_23311[11];
                        var inst_23246 = cljs.core.nth.call(null, inst_23240, 0, null);
                        var inst_23247 = (new cljs.core.Keyword(null, "log-channels?", "log-channels?", 1640598168)).cljs$core$IFn$_invoke$arity$1(omchaya.utils.initial_player_state);
                        var state_23311__$1 = function() {
                          var statearr_23322 = state_23311;
                          statearr_23322[13] = inst_23246;
                          return statearr_23322;
                        }();
                        if (cljs.core.truth_(inst_23247)) {
                          var statearr_23323_23364 = state_23311__$1;
                          statearr_23323_23364[1] = 11;
                        } else {
                          var statearr_23324_23365 = state_23311__$1;
                          statearr_23324_23365[1] = 12;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                      } else {
                        if (state_val_23312 === 9) {
                          var inst_23242 = state_23311[10];
                          var inst_23235 = state_23311[8];
                          var inst_23265 = cljs.core._EQ_.call(null, inst_23242, inst_23235);
                          var state_23311__$1 = state_23311;
                          if (inst_23265) {
                            var statearr_23325_23366 = state_23311__$1;
                            statearr_23325_23366[1] = 14;
                          } else {
                            var statearr_23326_23367 = state_23311__$1;
                            statearr_23326_23367[1] = 15;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                        } else {
                          if (state_val_23312 === 10) {
                            var inst_23303 = state_23311[2];
                            var state_23311__$1 = function() {
                              var statearr_23327 = state_23311;
                              statearr_23327[14] = inst_23303;
                              return statearr_23327;
                            }();
                            var statearr_23328_23368 = state_23311__$1;
                            statearr_23328_23368[2] = null;
                            statearr_23328_23368[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                          } else {
                            if (state_val_23312 === 11) {
                              var inst_23246 = state_23311[13];
                              var inst_23249 = cljs.core.pr_str.call(null, inst_23246);
                              var inst_23250 = omchaya.utils.mprint.call(null, "Controls Verbose: ", inst_23249);
                              var state_23311__$1 = state_23311;
                              var statearr_23329_23369 = state_23311__$1;
                              statearr_23329_23369[2] = inst_23250;
                              statearr_23329_23369[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                            } else {
                              if (state_val_23312 === 12) {
                                var state_23311__$1 = state_23311;
                                var statearr_23330_23370 = state_23311__$1;
                                statearr_23330_23370[2] = null;
                                statearr_23330_23370[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                              } else {
                                if (state_val_23312 === 13) {
                                  var inst_23246 = state_23311[13];
                                  var inst_23253 = state_23311[2];
                                  var inst_23254 = cljs.core.deref.call(null, state);
                                  var inst_23255 = omchaya.core.update_history_BANG_.call(null, history, new cljs.core.Keyword(null, "controls", "controls", 4741937704), inst_23246);
                                  var inst_23256 = cljs.core.first.call(null, inst_23246);
                                  var inst_23257 = cljs.core.second.call(null, inst_23246);
                                  var inst_23258 = cljs.core.partial.call(null, omchaya.controllers.controls.control_event, target, inst_23256, inst_23257);
                                  var inst_23259 = cljs.core.swap_BANG_.call(null, state, inst_23258);
                                  var inst_23260 = cljs.core.first.call(null, inst_23246);
                                  var inst_23261 = cljs.core.second.call(null, inst_23246);
                                  var inst_23262 = cljs.core.deref.call(null, state);
                                  var inst_23263 = omchaya.controllers.post_controls.post_control_event_BANG_.call(null, target, inst_23260, inst_23261, inst_23254, inst_23262);
                                  var state_23311__$1 = function() {
                                    var statearr_23331 = state_23311;
                                    statearr_23331[15] = inst_23253;
                                    statearr_23331[16] = inst_23259;
                                    statearr_23331[17] = inst_23255;
                                    return statearr_23331;
                                  }();
                                  var statearr_23332_23371 = state_23311__$1;
                                  statearr_23332_23371[2] = inst_23263;
                                  statearr_23332_23371[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                } else {
                                  if (state_val_23312 === 14) {
                                    var inst_23240 = state_23311[11];
                                    var inst_23268 = cljs.core.nth.call(null, inst_23240, 0, null);
                                    var inst_23269 = (new cljs.core.Keyword(null, "log-channels?", "log-channels?", 1640598168)).cljs$core$IFn$_invoke$arity$1(omchaya.utils.initial_player_state);
                                    var state_23311__$1 = function() {
                                      var statearr_23333 = state_23311;
                                      statearr_23333[18] = inst_23268;
                                      return statearr_23333;
                                    }();
                                    if (cljs.core.truth_(inst_23269)) {
                                      var statearr_23334_23372 = state_23311__$1;
                                      statearr_23334_23372[1] = 17;
                                    } else {
                                      var statearr_23335_23373 = state_23311__$1;
                                      statearr_23335_23373[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                  } else {
                                    if (state_val_23312 === 15) {
                                      var inst_23242 = state_23311[10];
                                      var inst_23236 = state_23311[7];
                                      var inst_23287 = cljs.core._EQ_.call(null, inst_23242, inst_23236);
                                      var state_23311__$1 = state_23311;
                                      if (inst_23287) {
                                        var statearr_23336_23374 = state_23311__$1;
                                        statearr_23336_23374[1] = 20;
                                      } else {
                                        var statearr_23337_23375 = state_23311__$1;
                                        statearr_23337_23375[1] = 21;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                    } else {
                                      if (state_val_23312 === 16) {
                                        var inst_23301 = state_23311[2];
                                        var state_23311__$1 = state_23311;
                                        var statearr_23338_23376 = state_23311__$1;
                                        statearr_23338_23376[2] = inst_23301;
                                        statearr_23338_23376[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                      } else {
                                        if (state_val_23312 === 17) {
                                          var inst_23268 = state_23311[18];
                                          var inst_23271 = cljs.core.pr_str.call(null, inst_23268);
                                          var inst_23272 = omchaya.utils.mprint.call(null, "API Verbose: ", inst_23271);
                                          var state_23311__$1 = state_23311;
                                          var statearr_23339_23377 = state_23311__$1;
                                          statearr_23339_23377[2] = inst_23272;
                                          statearr_23339_23377[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                        } else {
                                          if (state_val_23312 === 18) {
                                            var state_23311__$1 = state_23311;
                                            var statearr_23340_23378 = state_23311__$1;
                                            statearr_23340_23378[2] = null;
                                            statearr_23340_23378[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                          } else {
                                            if (state_val_23312 === 19) {
                                              var inst_23268 = state_23311[18];
                                              var inst_23275 = state_23311[2];
                                              var inst_23276 = cljs.core.deref.call(null, state);
                                              var inst_23277 = omchaya.core.update_history_BANG_.call(null, history, new cljs.core.Keyword(null, "api", "api", 1014001036), inst_23268);
                                              var inst_23278 = cljs.core.first.call(null, inst_23268);
                                              var inst_23279 = cljs.core.second.call(null, inst_23268);
                                              var inst_23280 = cljs.core.partial.call(null, omchaya.controllers.api.api_event, target, inst_23278, inst_23279);
                                              var inst_23281 = cljs.core.swap_BANG_.call(null, state, inst_23280);
                                              var inst_23282 = cljs.core.first.call(null, inst_23268);
                                              var inst_23283 = cljs.core.second.call(null, inst_23268);
                                              var inst_23284 = cljs.core.deref.call(null, state);
                                              var inst_23285 = omchaya.controllers.post_api.post_api_event_BANG_.call(null, target, inst_23282, inst_23283, inst_23276, inst_23284);
                                              var state_23311__$1 = function() {
                                                var statearr_23341 = state_23311;
                                                statearr_23341[19] = inst_23275;
                                                statearr_23341[20] = inst_23281;
                                                statearr_23341[21] = inst_23277;
                                                return statearr_23341;
                                              }();
                                              var statearr_23342_23379 = state_23311__$1;
                                              statearr_23342_23379[2] = inst_23285;
                                              statearr_23342_23379[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                            } else {
                                              if (state_val_23312 === 20) {
                                                var inst_23289 = cljs.core.deref.call(null, history);
                                                var inst_23290 = cljs.core.pr_str.call(null, inst_23289);
                                                var inst_23291 = omchaya.utils.mprint.call(null, inst_23290);
                                                var state_23311__$1 = state_23311;
                                                var statearr_23343_23380 = state_23311__$1;
                                                statearr_23343_23380[2] = inst_23291;
                                                statearr_23343_23380[1] = 22;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                              } else {
                                                if (state_val_23312 === 21) {
                                                  var inst_23242 = state_23311[10];
                                                  var inst_23293 = cljs.core._EQ_.call(null, inst_23242, new cljs.core.Keyword(null, "default", "default", 2558708147));
                                                  var state_23311__$1 = state_23311;
                                                  if (inst_23293) {
                                                    var statearr_23344_23381 = state_23311__$1;
                                                    statearr_23344_23381[1] = 23;
                                                  } else {
                                                    var statearr_23345_23382 = state_23311__$1;
                                                    statearr_23345_23382[1] = 24;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                } else {
                                                  if (state_val_23312 === 22) {
                                                    var inst_23299 = state_23311[2];
                                                    var state_23311__$1 = state_23311;
                                                    var statearr_23346_23383 = state_23311__$1;
                                                    statearr_23346_23383[2] = inst_23299;
                                                    statearr_23346_23383[1] = 16;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                  } else {
                                                    if (state_val_23312 === 23) {
                                                      var inst_23241 = state_23311[12];
                                                      var state_23311__$1 = state_23311;
                                                      var statearr_23347_23384 = state_23311__$1;
                                                      statearr_23347_23384[2] = inst_23241;
                                                      statearr_23347_23384[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                    } else {
                                                      if (state_val_23312 === 24) {
                                                        var state_23311__$1 = state_23311;
                                                        var statearr_23348_23385 = state_23311__$1;
                                                        statearr_23348_23385[2] = null;
                                                        statearr_23348_23385[1] = 25;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                      } else {
                                                        if (state_val_23312 === 25) {
                                                          var inst_23297 = state_23311[2];
                                                          var state_23311__$1 = state_23311;
                                                          var statearr_23349_23386 = state_23311__$1;
                                                          statearr_23349_23386[2] = inst_23297;
                                                          statearr_23349_23386[1] = 22;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5998__auto__) {
        return function() {
          var state_machine__5999__auto__ = null;
          var state_machine__5999__auto____0 = function() {
            var statearr_23353 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            statearr_23353[0] = state_machine__5999__auto__;
            statearr_23353[1] = 1;
            return statearr_23353;
          };
          var state_machine__5999__auto____1 = function(state_23311) {
            while (true) {
              var ret_value__6000__auto__ = function() {
                try {
                  while (true) {
                    var result__6001__auto__ = switch__5998__auto__.call(null, state_23311);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6001__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue;
                    } else {
                      return result__6001__auto__;
                    }
                    break;
                  }
                } catch (e23354) {
                  if (e23354 instanceof Object) {
                    var ex__6002__auto__ = e23354;
                    var statearr_23355_23387 = state_23311;
                    statearr_23355_23387[5] = ex__6002__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23311);
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407);
                  } else {
                    if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                      throw e23354;
                    } else {
                      return null;
                    }
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6000__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                var G__23388 = state_23311;
                state_23311 = G__23388;
                continue;
              } else {
                return ret_value__6000__auto__;
              }
              break;
            }
          };
          state_machine__5999__auto__ = function(state_23311) {
            switch(arguments.length) {
              case 0:
                return state_machine__5999__auto____0.call(this);
              case 1:
                return state_machine__5999__auto____1.call(this, state_23311);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5999__auto____0;
          state_machine__5999__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5999__auto____1;
          return state_machine__5999__auto__;
        }();
      }(switch__5998__auto__);
    }();
    var state__6070__auto__ = function() {
      var statearr_23356 = f__6069__auto__.call(null);
      statearr_23356[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6068__auto__;
      return statearr_23356;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6070__auto__);
  });
  return c__6068__auto__;
};
omchaya.core.setup_BANG_ = function setup_BANG_() {
  var comms = (new cljs.core.Keyword(null, "comms", "comms", 1108747865)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, omchaya.core.app_state));
  omchaya.core.main.call(null, document.getElementById("app"), omchaya.core.app_state);
  if (cljs.core.truth_((new cljs.core.Keyword(null, "restore-state?", "restore-state?", 3703635295)).cljs$core$IFn$_invoke$arity$1(omchaya.utils.initial_query_map))) {
    cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "controls", "controls", 4741937704)).cljs$core$IFn$_invoke$arity$1(comms), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-restored", "state-restored", 2236662980)], null));
  } else {
  }
  if (cljs.core.truth_((new cljs.core.Keyword(null, "kandan-client?", "kandan-client?", 915311154)).cljs$core$IFn$_invoke$arity$1(omchaya.utils.initial_query_map))) {
    var api_key = (new cljs.core.Keyword(null, "kandan-api-key", "kandan-api-key", 3548116106)).cljs$core$IFn$_invoke$arity$1(omchaya.utils.initial_query_map);
    var kandan_client = omchaya.api.kandan.make_client.call(null, api_key, "http://localhost:3000/remote/faye");
    var channels = (new cljs.core.Keyword(null, "kandan-channels", "kandan-channels", 2776703958)).cljs$core$IFn$_invoke$arity$1(omchaya.utils.initial_query_map);
    cljs.core.async.put_BANG_.call(null, (new cljs.core.Keyword(null, "controls", "controls", 4741937704)).cljs$core$IFn$_invoke$arity$1(comms), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "api-key-updated", "api-key-updated", 756464524), api_key], null));
    var seq__23393 = cljs.core.seq.call(null, channels);
    var chunk__23394 = null;
    var count__23395 = 0;
    var i__23396 = 0;
    while (true) {
      if (i__23396 < count__23395) {
        var channel = cljs.core._nth.call(null, chunk__23394, i__23396);
        omchaya.api.kandan.subscribe_BANG_.call(null, kandan_client, [cljs.core.str("/channels/"), cljs.core.str(channel)].join(""), (new cljs.core.Keyword(null, "api", "api", 1014001036)).cljs$core$IFn$_invoke$arity$1(comms));
        var G__23397 = seq__23393;
        var G__23398 = chunk__23394;
        var G__23399 = count__23395;
        var G__23400 = i__23396 + 1;
        seq__23393 = G__23397;
        chunk__23394 = G__23398;
        count__23395 = G__23399;
        i__23396 = G__23400;
        continue;
      } else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__23393);
        if (temp__4092__auto__) {
          var seq__23393__$1 = temp__4092__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__23393__$1)) {
            var c__4191__auto__ = cljs.core.chunk_first.call(null, seq__23393__$1);
            var G__23401 = cljs.core.chunk_rest.call(null, seq__23393__$1);
            var G__23402 = c__4191__auto__;
            var G__23403 = cljs.core.count.call(null, c__4191__auto__);
            var G__23404 = 0;
            seq__23393 = G__23401;
            chunk__23394 = G__23402;
            count__23395 = G__23403;
            i__23396 = G__23404;
            continue;
          } else {
            var channel = cljs.core.first.call(null, seq__23393__$1);
            omchaya.api.kandan.subscribe_BANG_.call(null, kandan_client, [cljs.core.str("/channels/"), cljs.core.str(channel)].join(""), (new cljs.core.Keyword(null, "api", "api", 1014001036)).cljs$core$IFn$_invoke$arity$1(comms));
            var G__23405 = cljs.core.next.call(null, seq__23393__$1);
            var G__23406 = null;
            var G__23407 = 0;
            var G__23408 = 0;
            seq__23393 = G__23405;
            chunk__23394 = G__23406;
            count__23395 = G__23407;
            i__23396 = G__23408;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
};
window.onload = omchaya.core.setup_BANG_;
omchaya.core.send_async_message = function send_async_message(ch_name, message, data) {
  return cljs.core.async.put_BANG_.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, omchaya.core.app_state), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), cljs.core.keyword.call(null, ch_name)], null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, message), cljs.core.js__GT_clj.call(null, data, new cljs.core.Keyword(null, 
  "keywordize-keys", "keywordize-keys", 4191781672), true)], null));
};
goog.exportSymbol("omchaya.core.send_async_message", omchaya.core.send_async_message);
omchaya.core.remove_channel_BANG_ = function remove_channel_BANG_(channel_id) {
  return cljs.core.async.put_BANG_.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, omchaya.core.app_state), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "comms", "comms", 1108747865), new cljs.core.Keyword(null, "controls", "controls", 4741937704)], null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "channel-remotely-destroyed", "channel-remotely-destroyed", 
  2144502171), channel_id], null));
};
goog.exportSymbol("omchaya.core.remove_channel_BANG_", omchaya.core.remove_channel_BANG_);
goog.provide("omchaya.test.components.common");
goog.require("cljs.core");
goog.require("om.core");
goog.require("om.core");
goog.require("dommy.core");
goog.require("dommy.core");
goog.require("cemerick.cljs.test");
goog.require("cemerick.cljs.test");
omchaya.test.components.common.container_div = function container_div() {
  var id = [cljs.core.str("container-"), cljs.core.str(cljs.core.gensym.call(null))].join("");
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    var dom24012 = document.createElement("div");
    if (cljs.core.truth_(id)) {
      dom24012.setAttribute("id", id);
    } else {
    }
    return dom24012;
  }(), [cljs.core.str("#"), cljs.core.str(id)].join("")], null);
};
omchaya.test.components.common.insert_container_BANG_ = function insert_container_BANG_(container) {
  return dommy.core.append_BANG_.call(null, document.body, container);
};
omchaya.test.components.common.new_container_BANG_ = function new_container_BANG_() {
  var vec__24014 = omchaya.test.components.common.container_div.call(null);
  var n = cljs.core.nth.call(null, vec__24014, 0, null);
  var s = cljs.core.nth.call(null, vec__24014, 1, null);
  omchaya.test.components.common.insert_container_BANG_.call(null, n);
  return document.querySelector(dommy.core.selector.call(null, s));
};
goog.provide("omchaya.test.components.navbar");
goog.require("cljs.core");
goog.require("cemerick.cljs.test");
goog.require("omchaya.test.components.common");
goog.require("om.core");
goog.require("omchaya.components.navbar");
goog.require("om.core");
goog.require("omchaya.test.components.common");
goog.require("omchaya.components.navbar");
goog.require("dommy.core");
goog.require("cemerick.cljs.test");
goog.require("dommy.core");
omchaya.test.components.navbar.h__GT_n = function h__GT_n(el, hiccup_like) {
  return dommy.core.append_BANG_.call(null, el, dommy.template.__GT_node_like.call(null, hiccup_like));
};
omchaya.test.components.navbar.navbar_renders_QMARK_ = function navbar_renders_QMARK_() {
  return cemerick.cljs.test.test_function.call(null, omchaya.test.components.navbar.navbar_renders_QMARK_);
};
omchaya.test.components.navbar.navbar_renders_QMARK_ = cljs.core.vary_meta.call(null, omchaya.test.components.navbar.navbar_renders_QMARK_, cljs.core.assoc, new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Symbol(null, "navbar-renders?", "navbar-renders?", -673991400, null), new cljs.core.Keyword(null, "test", "test", 1017460740), function navbar_renders_QMARK__test() {
  var data = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "channels", "channels", 2446530370), new cljs.core.PersistentArrayMap(null, 2, ["1", new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "order", "order", 1119910592), 1, new cljs.core.Keyword(null, "id", "id", 1013907597), "1", new cljs.core.Keyword(null, "title", "title", 1124275658), "Lobby"], null), "Lemon Tree", new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "order", 
  "order", 1119910592), 2, new cljs.core.Keyword(null, "id", "id", 1013907597), "lemon-tree", new cljs.core.Keyword(null, "title", "title", 1124275658), "Lemon Tree"], null)], null), new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "focused", "focused", 4617830121), false], null)], null)], null)], null);
  var _STAR_testing_contexts_STAR_24022_24029 = cemerick.cljs.test._STAR_testing_contexts_STAR_;
  try {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = cljs.core.conj.call(null, cemerick.cljs.test._STAR_testing_contexts_STAR_, "Correct number of tabs");
    try {
      var values__23880__auto___24030 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
        var c = omchaya.test.components.common.new_container_BANG_.call(null);
        cljs.core.print.call(null, "Testing with container: ", c);
        om.core.root.call(null, omchaya.components.navbar.navbar, data, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), c], null));
        return cljs.core.count.call(null, dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, c).querySelectorAll("a.show_channel")));
      }()), 2);
      var result__23881__auto___24031 = cljs.core.apply.call(null, cljs.core._EQ_, values__23880__auto___24030);
      if (cljs.core.truth_(result__23881__auto___24031)) {
        cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), cljs.core.cons.call(null, cljs.core._EQ_, values__23880__auto___24030), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "pass", "pass", 1017337731), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, 
        "\x3d", "\x3d", -1640531466, null), 2, cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "c", "c", -1640531428, null), cljs.core.list(new cljs.core.Symbol("com", "new-container!", "com/new-container!", -1912308249, null))], null), cljs.core.list(new cljs.core.Symbol(null, "print", "print", -1533596570, null), "Testing with container: ", new cljs.core.Symbol(null, 
        "c", "c", -1640531428, null)), cljs.core.list(new cljs.core.Symbol("om", "root", "om/root", -1636796340, null), new cljs.core.Symbol("navbar", "navbar", "navbar/navbar", 1641118941, null), new cljs.core.Symbol(null, "data", "data", -1637455517, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Symbol(null, "c", "c", -1640531428, null)], null)), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, 
        null), cljs.core.list(new cljs.core.Symbol(null, "sel", "sel", -1640417773, null), new cljs.core.Symbol(null, "c", "c", -1640531428, null), new cljs.core.Keyword(null, "a.show_channel", "a.show_channel", 788280736)))))], null));
      } else {
        cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), values__23880__auto___24030)), new cljs.core.Symbol(null, "not", "not", -1640422260, null)), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "fail", 
        "fail", 1017039504), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 2, cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "c", "c", -1640531428, null), cljs.core.list(new cljs.core.Symbol("com", 
        "new-container!", "com/new-container!", -1912308249, null))], null), cljs.core.list(new cljs.core.Symbol(null, "print", "print", -1533596570, null), "Testing with container: ", new cljs.core.Symbol(null, "c", "c", -1640531428, null)), cljs.core.list(new cljs.core.Symbol("om", "root", "om/root", -1636796340, null), new cljs.core.Symbol("navbar", "navbar", "navbar/navbar", 1641118941, null), new cljs.core.Symbol(null, "data", "data", -1637455517, null), new cljs.core.PersistentArrayMap(null, 
        1, [new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Symbol(null, "c", "c", -1640531428, null)], null)), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), cljs.core.list(new cljs.core.Symbol(null, "sel", "sel", -1640417773, null), new cljs.core.Symbol(null, "c", "c", -1640531428, null), new cljs.core.Keyword(null, "a.show_channel", "a.show_channel", 788280736)))))], null));
      }
    } catch (e24023) {
      if (e24023 instanceof Error) {
        var t__23917__auto___24032 = e24023;
        cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), t__23917__auto___24032, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "error", "error", 1110689146), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 
        2, cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "c", "c", -1640531428, null), cljs.core.list(new cljs.core.Symbol("com", "new-container!", "com/new-container!", -1912308249, null))], null), cljs.core.list(new cljs.core.Symbol(null, "print", "print", -1533596570, null), "Testing with container: ", new cljs.core.Symbol(null, "c", "c", -1640531428, null)), 
        cljs.core.list(new cljs.core.Symbol("om", "root", "om/root", -1636796340, null), new cljs.core.Symbol("navbar", "navbar", "navbar/navbar", 1641118941, null), new cljs.core.Symbol(null, "data", "data", -1637455517, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Symbol(null, "c", "c", -1640531428, null)], null)), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), cljs.core.list(new cljs.core.Symbol(null, 
        "sel", "sel", -1640417773, null), new cljs.core.Symbol(null, "c", "c", -1640531428, null), new cljs.core.Keyword(null, "a.show_channel", "a.show_channel", 788280736)))))], null));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e24023;
        } else {
        }
      }
    }
  } finally {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = _STAR_testing_contexts_STAR_24022_24029;
  }
  var _STAR_testing_contexts_STAR_24024_24033 = cemerick.cljs.test._STAR_testing_contexts_STAR_;
  try {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = cljs.core.conj.call(null, cemerick.cljs.test._STAR_testing_contexts_STAR_, "Correct titles");
    try {
      var values__23880__auto___24034 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
        var c = omchaya.test.components.common.new_container_BANG_.call(null);
        om.core.root.call(null, omchaya.components.navbar.navbar, data, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), c], null));
        return cljs.core.map.call(null, dommy.core.text, dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, c).getElementsByClassName("show_channel")));
      }()), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lobby", "Lemon Tree"], null));
      var result__23881__auto___24035 = cljs.core.apply.call(null, cljs.core._EQ_, values__23880__auto___24034);
      if (cljs.core.truth_(result__23881__auto___24035)) {
        cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), cljs.core.cons.call(null, cljs.core._EQ_, values__23880__auto___24034), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "pass", "pass", 1017337731), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, 
        "\x3d", "\x3d", -1640531466, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lobby", "Lemon Tree"], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "c", "c", -1640531428, null), cljs.core.list(new cljs.core.Symbol("com", "new-container!", "com/new-container!", -1912308249, null))], null), cljs.core.list(new cljs.core.Symbol("om", 
        "root", "om/root", -1636796340, null), new cljs.core.Symbol("navbar", "navbar", "navbar/navbar", 1641118941, null), new cljs.core.Symbol(null, "data", "data", -1637455517, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Symbol(null, "c", "c", -1640531428, null)], null)), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1640423659, null), new cljs.core.Symbol("dommy", "text", "dommy/text", 144238447, null), 
        cljs.core.list(new cljs.core.Symbol(null, "sel", "sel", -1640417773, null), new cljs.core.Symbol(null, "c", "c", -1640531428, null), new cljs.core.Keyword(null, ".show_channel", ".show_channel", 2582827105)))))], null));
      } else {
        cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), values__23880__auto___24034)), new cljs.core.Symbol(null, "not", "not", -1640422260, null)), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "fail", 
        "fail", 1017039504), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lobby", "Lemon Tree"], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
        [new cljs.core.Symbol(null, "c", "c", -1640531428, null), cljs.core.list(new cljs.core.Symbol("com", "new-container!", "com/new-container!", -1912308249, null))], null), cljs.core.list(new cljs.core.Symbol("om", "root", "om/root", -1636796340, null), new cljs.core.Symbol("navbar", "navbar", "navbar/navbar", 1641118941, null), new cljs.core.Symbol(null, "data", "data", -1637455517, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), 
        new cljs.core.Symbol(null, "c", "c", -1640531428, null)], null)), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1640423659, null), new cljs.core.Symbol("dommy", "text", "dommy/text", 144238447, null), cljs.core.list(new cljs.core.Symbol(null, "sel", "sel", -1640417773, null), new cljs.core.Symbol(null, "c", "c", -1640531428, null), new cljs.core.Keyword(null, ".show_channel", ".show_channel", 2582827105)))))], null));
      }
    } catch (e24025) {
      if (e24025 instanceof Error) {
        var t__23917__auto___24036 = e24025;
        cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), t__23917__auto___24036, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "error", "error", 1110689146), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Lobby", "Lemon Tree"], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "c", "c", -1640531428, null), cljs.core.list(new cljs.core.Symbol("com", "new-container!", "com/new-container!", -1912308249, null))], null), cljs.core.list(new cljs.core.Symbol("om", "root", "om/root", 
        -1636796340, null), new cljs.core.Symbol("navbar", "navbar", "navbar/navbar", 1641118941, null), new cljs.core.Symbol(null, "data", "data", -1637455517, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Symbol(null, "c", "c", -1640531428, null)], null)), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1640423659, null), new cljs.core.Symbol("dommy", "text", "dommy/text", 144238447, null), cljs.core.list(new cljs.core.Symbol(null, 
        "sel", "sel", -1640417773, null), new cljs.core.Symbol(null, "c", "c", -1640531428, null), new cljs.core.Keyword(null, ".show_channel", ".show_channel", 2582827105)))))], null));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e24025;
        } else {
        }
      }
    }
  } finally {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = _STAR_testing_contexts_STAR_24024_24033;
  }
  var _STAR_testing_contexts_STAR_24026 = cemerick.cljs.test._STAR_testing_contexts_STAR_;
  try {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = cljs.core.conj.call(null, cemerick.cljs.test._STAR_testing_contexts_STAR_, "Search bar has correct classes when focused/blurred");
    try {
      var values__23880__auto___24037 = cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
        var c = omchaya.test.components.common.new_container_BANG_.call(null);
        om.core.root.call(null, omchaya.components.navbar.navbar, data, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), c], null));
        return dommy.core.has_class_QMARK_.call(null, dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, c).getElementsByTagName("nav"))[0], "active");
      }());
      var result__23881__auto___24038 = cljs.core.apply.call(null, cljs.core.not, values__23880__auto___24037);
      if (cljs.core.truth_(result__23881__auto___24038)) {
        cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), cljs.core.cons.call(null, cljs.core.not, values__23880__auto___24037), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "pass", "pass", 1017337731), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, 
        "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "c", "c", -1640531428, null), cljs.core.list(new cljs.core.Symbol("com", "new-container!", "com/new-container!", -1912308249, null))], null), cljs.core.list(new cljs.core.Symbol("om", "root", "om/root", -1636796340, null), new cljs.core.Symbol("navbar", "navbar", "navbar/navbar", 
        1641118941, null), new cljs.core.Symbol(null, "data", "data", -1637455517, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Symbol(null, "c", "c", -1640531428, null)], null)), cljs.core.list(new cljs.core.Symbol("dommy", "has-class?", "dommy/has-class?", 467652160, null), cljs.core.list(new cljs.core.Symbol(null, "sel1", "sel1", -1637005104, null), new cljs.core.Symbol(null, "c", "c", -1640531428, null), new cljs.core.Keyword(null, 
        "nav", "nav", 1014013077)), "active")))], null));
      } else {
        cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", -1640422260, null), values__23880__auto___24037)), new cljs.core.Symbol(null, "not", "not", -1640422260, null)), new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "fail", 
        "fail", 1017039504), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "c", "c", -1640531428, null), cljs.core.list(new cljs.core.Symbol("com", "new-container!", 
        "com/new-container!", -1912308249, null))], null), cljs.core.list(new cljs.core.Symbol("om", "root", "om/root", -1636796340, null), new cljs.core.Symbol("navbar", "navbar", "navbar/navbar", 1641118941, null), new cljs.core.Symbol(null, "data", "data", -1637455517, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Symbol(null, "c", "c", -1640531428, null)], null)), cljs.core.list(new cljs.core.Symbol("dommy", "has-class?", 
        "dommy/has-class?", 467652160, null), cljs.core.list(new cljs.core.Symbol(null, "sel1", "sel1", -1637005104, null), new cljs.core.Symbol(null, "c", "c", -1640531428, null), new cljs.core.Keyword(null, "nav", "nav", 1014013077)), "active")))], null));
      }
    } catch (e24027) {
      if (e24027 instanceof Error) {
        var t__23917__auto___24039 = e24027;
        cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), t__23917__auto___24039, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "error", "error", 1110689146), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), 
        cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "c", "c", -1640531428, null), cljs.core.list(new cljs.core.Symbol("com", "new-container!", "com/new-container!", -1912308249, null))], null), cljs.core.list(new cljs.core.Symbol("om", "root", "om/root", -1636796340, null), new cljs.core.Symbol("navbar", "navbar", "navbar/navbar", 1641118941, null), new cljs.core.Symbol(null, 
        "data", "data", -1637455517, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Symbol(null, "c", "c", -1640531428, null)], null)), cljs.core.list(new cljs.core.Symbol("dommy", "has-class?", "dommy/has-class?", 467652160, null), cljs.core.list(new cljs.core.Symbol(null, "sel1", "sel1", -1637005104, null), new cljs.core.Symbol(null, "c", "c", -1640531428, null), new cljs.core.Keyword(null, "nav", "nav", 1014013077)), 
        "active")))], null));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e24027;
        } else {
        }
      }
    }
    try {
      var value__23883__auto__ = function() {
        var c = omchaya.test.components.common.new_container_BANG_.call(null);
        var data__$1 = cljs.core.assoc_in.call(null, data, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, "focused", "focused", 4617830121)], null), true);
        om.core.root.call(null, omchaya.components.navbar.navbar, data__$1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), c], null));
        return dommy.core.has_class_QMARK_.call(null, dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, c).getElementsByTagName("nav"))[0], "search-focus");
      }();
      if (cljs.core.truth_(value__23883__auto__)) {
        cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), value__23883__auto__, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "pass", "pass", 1017337731), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), new cljs.core.PersistentVector(null, 
        4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "c", "c", -1640531428, null), cljs.core.list(new cljs.core.Symbol("com", "new-container!", "com/new-container!", -1912308249, null)), new cljs.core.Symbol(null, "data", "data", -1637455517, null), cljs.core.list(new cljs.core.Symbol(null, "assoc-in", "assoc-in", -2005053546, null), new cljs.core.Symbol(null, "data", "data", -1637455517, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
        [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, "focused", "focused", 4617830121)], null), true)], null), cljs.core.list(new cljs.core.Symbol("om", "root", "om/root", -1636796340, null), new cljs.core.Symbol("navbar", "navbar", "navbar/navbar", 1641118941, null), new cljs.core.Symbol(null, "data", "data", -1637455517, null), 
        new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Symbol(null, "c", "c", -1640531428, null)], null)), cljs.core.list(new cljs.core.Symbol("dommy", "has-class?", "dommy/has-class?", 467652160, null), cljs.core.list(new cljs.core.Symbol(null, "sel1", "sel1", -1637005104, null), new cljs.core.Symbol(null, "c", "c", -1640531428, null), new cljs.core.Keyword(null, "nav", "nav", 1014013077)), "search-focus"))], null));
      } else {
        cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), value__23883__auto__, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "fail", "fail", 1017039504), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), new cljs.core.PersistentVector(null, 
        4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "c", "c", -1640531428, null), cljs.core.list(new cljs.core.Symbol("com", "new-container!", "com/new-container!", -1912308249, null)), new cljs.core.Symbol(null, "data", "data", -1637455517, null), cljs.core.list(new cljs.core.Symbol(null, "assoc-in", "assoc-in", -2005053546, null), new cljs.core.Symbol(null, "data", "data", -1637455517, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
        [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, "focused", "focused", 4617830121)], null), true)], null), cljs.core.list(new cljs.core.Symbol("om", "root", "om/root", -1636796340, null), new cljs.core.Symbol("navbar", "navbar", "navbar/navbar", 1641118941, null), new cljs.core.Symbol(null, "data", "data", -1637455517, null), 
        new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Symbol(null, "c", "c", -1640531428, null)], null)), cljs.core.list(new cljs.core.Symbol("dommy", "has-class?", "dommy/has-class?", 467652160, null), cljs.core.list(new cljs.core.Symbol(null, "sel1", "sel1", -1637005104, null), new cljs.core.Symbol(null, "c", "c", -1640531428, null), new cljs.core.Keyword(null, "nav", "nav", 1014013077)), "search-focus"))], null));
      }
      return value__23883__auto__;
    } catch (e24028) {
      if (e24028 instanceof Error) {
        var t__23917__auto__ = e24028;
        return cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "actual", "actual", 3885931776), t__23917__auto__, new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "error", "error", 1110689146), new cljs.core.Keyword(null, "message", "message", 1968829305), null, new cljs.core.Keyword(null, "expected", "expected", 3373152810), cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), 
        new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "c", "c", -1640531428, null), cljs.core.list(new cljs.core.Symbol("com", "new-container!", "com/new-container!", -1912308249, null)), new cljs.core.Symbol(null, "data", "data", -1637455517, null), cljs.core.list(new cljs.core.Symbol(null, "assoc-in", "assoc-in", -2005053546, null), new cljs.core.Symbol(null, "data", "data", -1637455517, null), new cljs.core.PersistentVector(null, 
        4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "settings", "settings", 2448535445), new cljs.core.Keyword(null, "forms", "forms", 1111523233), new cljs.core.Keyword(null, "search", "search", 4402534682), new cljs.core.Keyword(null, "focused", "focused", 4617830121)], null), true)], null), cljs.core.list(new cljs.core.Symbol("om", "root", "om/root", -1636796340, null), new cljs.core.Symbol("navbar", "navbar", "navbar/navbar", 1641118941, null), new cljs.core.Symbol(null, 
        "data", "data", -1637455517, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 4427965699), new cljs.core.Symbol(null, "c", "c", -1640531428, null)], null)), cljs.core.list(new cljs.core.Symbol("dommy", "has-class?", "dommy/has-class?", 467652160, null), cljs.core.list(new cljs.core.Symbol(null, "sel1", "sel1", -1637005104, null), new cljs.core.Symbol(null, "c", "c", -1640531428, null), new cljs.core.Keyword(null, "nav", "nav", 1014013077)), 
        "search-focus"))], null));
      } else {
        if (new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e24028;
        } else {
          return null;
        }
      }
    }
  } finally {
    cemerick.cljs.test._STAR_testing_contexts_STAR_ = _STAR_testing_contexts_STAR_24026;
  }
});
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "omchaya.test.components.navbar", "omchaya.test.components.navbar", 96061101, null), omchaya.test.components.navbar.navbar_renders_QMARK_);
