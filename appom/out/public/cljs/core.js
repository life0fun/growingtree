// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__22716__delegate = function (args){
return console.log.apply(console,(function (){var G__22715 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__22715) : cljs.core.into_array.call(null,G__22715));
})());
};
var G__22716 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22717__i = 0, G__22717__a = new Array(arguments.length -  0);
while (G__22717__i < G__22717__a.length) {G__22717__a[G__22717__i] = arguments[G__22717__i + 0]; ++G__22717__i;}
  args = new cljs.core.IndexedSeq(G__22717__a,0);
} 
return G__22716__delegate.call(this,args);};
G__22716.cljs$lang$maxFixedArity = 0;
G__22716.cljs$lang$applyTo = (function (arglist__22718){
var args = cljs.core.seq(arglist__22718);
return G__22716__delegate(args);
});
G__22716.cljs$core$IFn$_invoke$arity$variadic = G__22716__delegate;
return G__22716;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__22720 = x;
return goog.isString(G__22720);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__22722 = x__$1;
return goog.typeOf(G__22722);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3795__auto__ = ty;
if(cljs.core.truth_(and__3795__auto__)){
return ty.cljs$lang$type;
} else {
return and__3795__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__22724 = obj;
return goog.typeOf(G__22724);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__22726 = Symbol;
return goog.typeOf(G__22726);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4694__auto___22728 = len;
var i_22729 = (0);
while(true){
if((i_22729 < n__4694__auto___22728)){
(new_arr[i_22729] = (arr[i_22729]));

var G__22730 = (i_22729 + (1));
i_22729 = G__22730;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__22731 = (i + (1));
i = G__22731;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__22740__delegate = function (array,i,idxs){
var G__22737 = aget;
var G__22738 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__22739 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__22737,G__22738,G__22739) : cljs.core.apply.call(null,G__22737,G__22738,G__22739));
};
var G__22740 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__22741__i = 0, G__22741__a = new Array(arguments.length -  2);
while (G__22741__i < G__22741__a.length) {G__22741__a[G__22741__i] = arguments[G__22741__i + 2]; ++G__22741__i;}
  idxs = new cljs.core.IndexedSeq(G__22741__a,0);
} 
return G__22740__delegate.call(this,array,i,idxs);};
G__22740.cljs$lang$maxFixedArity = 2;
G__22740.cljs$lang$applyTo = (function (arglist__22742){
var array = cljs.core.first(arglist__22742);
arglist__22742 = cljs.core.next(arglist__22742);
var i = cljs.core.first(arglist__22742);
var idxs = cljs.core.rest(arglist__22742);
return G__22740__delegate(array,i,idxs);
});
G__22740.cljs$core$IFn$_invoke$arity$variadic = G__22740__delegate;
return G__22740;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__22743 = null;
if (arguments.length > 2) {
var G__22744__i = 0, G__22744__a = new Array(arguments.length -  2);
while (G__22744__i < G__22744__a.length) {G__22744__a[G__22744__i] = arguments[G__22744__i + 2]; ++G__22744__i;}
G__22743 = new cljs.core.IndexedSeq(G__22744__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__22743);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__22753__delegate = function (array,idx,idx2,idxv){
var G__22749 = aset;
var G__22750 = (array[idx]);
var G__22751 = idx2;
var G__22752 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__22749,G__22750,G__22751,G__22752) : cljs.core.apply.call(null,G__22749,G__22750,G__22751,G__22752));
};
var G__22753 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__22754__i = 0, G__22754__a = new Array(arguments.length -  3);
while (G__22754__i < G__22754__a.length) {G__22754__a[G__22754__i] = arguments[G__22754__i + 3]; ++G__22754__i;}
  idxv = new cljs.core.IndexedSeq(G__22754__a,0);
} 
return G__22753__delegate.call(this,array,idx,idx2,idxv);};
G__22753.cljs$lang$maxFixedArity = 3;
G__22753.cljs$lang$applyTo = (function (arglist__22755){
var array = cljs.core.first(arglist__22755);
arglist__22755 = cljs.core.next(arglist__22755);
var idx = cljs.core.first(arglist__22755);
arglist__22755 = cljs.core.next(arglist__22755);
var idx2 = cljs.core.first(arglist__22755);
var idxv = cljs.core.rest(arglist__22755);
return G__22753__delegate(array,idx,idx2,idxv);
});
G__22753.cljs$core$IFn$_invoke$arity$variadic = G__22753__delegate;
return G__22753;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__22756 = null;
if (arguments.length > 3) {
var G__22757__i = 0, G__22757__a = new Array(arguments.length -  3);
while (G__22757__i < G__22757__a.length) {G__22757__a[G__22757__i] = arguments[G__22757__i + 3]; ++G__22757__i;}
G__22756 = new cljs.core.IndexedSeq(G__22757__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__22756);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__22763 = (function (a,x){
a.push(x);

return a;
});
var G__22764 = [];
var G__22765 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__22763,G__22764,G__22765) : cljs.core.reduce.call(null,G__22763,G__22764,G__22765));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__22766__i = 0, G__22766__a = new Array(arguments.length -  2);
while (G__22766__i < G__22766__a.length) {G__22766__a[G__22766__i] = arguments[G__22766__i + 2]; ++G__22766__i;}
  args = new cljs.core.IndexedSeq(G__22766__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__22767){
var obj = cljs.core.first(arglist__22767);
arglist__22767 = cljs.core.next(arglist__22767);
var s = cljs.core.first(arglist__22767);
var args = cljs.core.rest(arglist__22767);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj22769 = {};
return obj22769;
})();


cljs.core.IFn = (function (){var obj22771 = {};
return obj22771;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22817 = x__4451__auto__;
return goog.typeOf(G__22817);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22819 = x__4451__auto__;
return goog.typeOf(G__22819);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22821 = x__4451__auto__;
return goog.typeOf(G__22821);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22823 = x__4451__auto__;
return goog.typeOf(G__22823);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22825 = x__4451__auto__;
return goog.typeOf(G__22825);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22827 = x__4451__auto__;
return goog.typeOf(G__22827);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22829 = x__4451__auto__;
return goog.typeOf(G__22829);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22831 = x__4451__auto__;
return goog.typeOf(G__22831);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22833 = x__4451__auto__;
return goog.typeOf(G__22833);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22835 = x__4451__auto__;
return goog.typeOf(G__22835);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22837 = x__4451__auto__;
return goog.typeOf(G__22837);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22839 = x__4451__auto__;
return goog.typeOf(G__22839);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22841 = x__4451__auto__;
return goog.typeOf(G__22841);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22843 = x__4451__auto__;
return goog.typeOf(G__22843);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22845 = x__4451__auto__;
return goog.typeOf(G__22845);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22847 = x__4451__auto__;
return goog.typeOf(G__22847);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22849 = x__4451__auto__;
return goog.typeOf(G__22849);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22851 = x__4451__auto__;
return goog.typeOf(G__22851);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22853 = x__4451__auto__;
return goog.typeOf(G__22853);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22855 = x__4451__auto__;
return goog.typeOf(G__22855);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22857 = x__4451__auto__;
return goog.typeOf(G__22857);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._invoke[(function (){var G__22859 = x__4451__auto__;
return goog.typeOf(G__22859);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._invoke["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj22861 = {};
return obj22861;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3795__auto__ = value;
if(and__3795__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3795__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4451__auto__ = (((value == null))?null:value);
return (function (){var or__3807__auto__ = (cljs.core._clone[(function (){var G__22865 = x__4451__auto__;
return goog.typeOf(G__22865);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._clone["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj22867 = {};
return obj22867;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._count[(function (){var G__22871 = x__4451__auto__;
return goog.typeOf(G__22871);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._count["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj22873 = {};
return obj22873;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._empty[(function (){var G__22877 = x__4451__auto__;
return goog.typeOf(G__22877);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._empty["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj22879 = {};
return obj22879;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._conj[(function (){var G__22883 = x__4451__auto__;
return goog.typeOf(G__22883);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._conj["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj22885 = {};
return obj22885;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._nth[(function (){var G__22891 = x__4451__auto__;
return goog.typeOf(G__22891);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._nth["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._nth[(function (){var G__22893 = x__4451__auto__;
return goog.typeOf(G__22893);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._nth["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj22895 = {};
return obj22895;
})();


cljs.core.ISeq = (function (){var obj22897 = {};
return obj22897;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._first[(function (){var G__22901 = x__4451__auto__;
return goog.typeOf(G__22901);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._first["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._rest[(function (){var G__22905 = x__4451__auto__;
return goog.typeOf(G__22905);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._rest["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj22907 = {};
return obj22907;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._next[(function (){var G__22911 = x__4451__auto__;
return goog.typeOf(G__22911);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._next["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj22913 = {};
return obj22913;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._lookup[(function (){var G__22919 = x__4451__auto__;
return goog.typeOf(G__22919);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._lookup["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._lookup[(function (){var G__22921 = x__4451__auto__;
return goog.typeOf(G__22921);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._lookup["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj22923 = {};
return obj22923;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__22927 = x__4451__auto__;
return goog.typeOf(G__22927);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._assoc[(function (){var G__22931 = x__4451__auto__;
return goog.typeOf(G__22931);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._assoc["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj22933 = {};
return obj22933;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._dissoc[(function (){var G__22937 = x__4451__auto__;
return goog.typeOf(G__22937);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj22939 = {};
return obj22939;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._key[(function (){var G__22943 = x__4451__auto__;
return goog.typeOf(G__22943);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._key["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._val[(function (){var G__22947 = x__4451__auto__;
return goog.typeOf(G__22947);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._val["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj22949 = {};
return obj22949;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._disjoin[(function (){var G__22953 = x__4451__auto__;
return goog.typeOf(G__22953);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj22955 = {};
return obj22955;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._peek[(function (){var G__22959 = x__4451__auto__;
return goog.typeOf(G__22959);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._peek["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._pop[(function (){var G__22963 = x__4451__auto__;
return goog.typeOf(G__22963);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._pop["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj22965 = {};
return obj22965;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._assoc_n[(function (){var G__22969 = x__4451__auto__;
return goog.typeOf(G__22969);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj22971 = {};
return obj22971;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._deref[(function (){var G__22975 = x__4451__auto__;
return goog.typeOf(G__22975);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._deref["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj22977 = {};
return obj22977;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._deref_with_timeout[(function (){var G__22981 = x__4451__auto__;
return goog.typeOf(G__22981);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj22983 = {};
return obj22983;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._meta[(function (){var G__22987 = x__4451__auto__;
return goog.typeOf(G__22987);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._meta["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj22989 = {};
return obj22989;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._with_meta[(function (){var G__22993 = x__4451__auto__;
return goog.typeOf(G__22993);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj22995 = {};
return obj22995;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._reduce[(function (){var G__23001 = x__4451__auto__;
return goog.typeOf(G__23001);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._reduce["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._reduce[(function (){var G__23003 = x__4451__auto__;
return goog.typeOf(G__23003);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._reduce["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj23005 = {};
return obj23005;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._kv_reduce[(function (){var G__23009 = x__4451__auto__;
return goog.typeOf(G__23009);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj23011 = {};
return obj23011;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._equiv[(function (){var G__23015 = x__4451__auto__;
return goog.typeOf(G__23015);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._equiv["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj23017 = {};
return obj23017;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._hash[(function (){var G__23021 = x__4451__auto__;
return goog.typeOf(G__23021);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._hash["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj23023 = {};
return obj23023;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._seq[(function (){var G__23027 = x__4451__auto__;
return goog.typeOf(G__23027);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._seq["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj23029 = {};
return obj23029;
})();


cljs.core.IList = (function (){var obj23031 = {};
return obj23031;
})();


cljs.core.IRecord = (function (){var obj23033 = {};
return obj23033;
})();


cljs.core.IReversible = (function (){var obj23035 = {};
return obj23035;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._rseq[(function (){var G__23039 = x__4451__auto__;
return goog.typeOf(G__23039);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._rseq["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj23041 = {};
return obj23041;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._sorted_seq[(function (){var G__23045 = x__4451__auto__;
return goog.typeOf(G__23045);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._sorted_seq_from[(function (){var G__23049 = x__4451__auto__;
return goog.typeOf(G__23049);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._entry_key[(function (){var G__23053 = x__4451__auto__;
return goog.typeOf(G__23053);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._comparator[(function (){var G__23057 = x__4451__auto__;
return goog.typeOf(G__23057);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._comparator["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj23059 = {};
return obj23059;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3795__auto__ = writer;
if(and__3795__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3795__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4451__auto__ = (((writer == null))?null:writer);
return (function (){var or__3807__auto__ = (cljs.core._write[(function (){var G__23063 = x__4451__auto__;
return goog.typeOf(G__23063);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._write["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3795__auto__ = writer;
if(and__3795__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3795__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4451__auto__ = (((writer == null))?null:writer);
return (function (){var or__3807__auto__ = (cljs.core._flush[(function (){var G__23067 = x__4451__auto__;
return goog.typeOf(G__23067);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._flush["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj23069 = {};
return obj23069;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._pr_writer[(function (){var G__23073 = x__4451__auto__;
return goog.typeOf(G__23073);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj23075 = {};
return obj23075;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3795__auto__ = d;
if(and__3795__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3795__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4451__auto__ = (((d == null))?null:d);
return (function (){var or__3807__auto__ = (cljs.core._realized_QMARK_[(function (){var G__23079 = x__4451__auto__;
return goog.typeOf(G__23079);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj23081 = {};
return obj23081;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._notify_watches[(function (){var G__23085 = x__4451__auto__;
return goog.typeOf(G__23085);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._add_watch[(function (){var G__23089 = x__4451__auto__;
return goog.typeOf(G__23089);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3795__auto__ = this$;
if(and__3795__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3795__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4451__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3807__auto__ = (cljs.core._remove_watch[(function (){var G__23093 = x__4451__auto__;
return goog.typeOf(G__23093);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj23095 = {};
return obj23095;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._as_transient[(function (){var G__23099 = x__4451__auto__;
return goog.typeOf(G__23099);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj23101 = {};
return obj23101;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3795__auto__ = tcoll;
if(and__3795__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3795__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4451__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3807__auto__ = (cljs.core._conj_BANG_[(function (){var G__23105 = x__4451__auto__;
return goog.typeOf(G__23105);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3795__auto__ = tcoll;
if(and__3795__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3795__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4451__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3807__auto__ = (cljs.core._persistent_BANG_[(function (){var G__23109 = x__4451__auto__;
return goog.typeOf(G__23109);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj23111 = {};
return obj23111;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3795__auto__ = tcoll;
if(and__3795__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3795__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4451__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3807__auto__ = (cljs.core._assoc_BANG_[(function (){var G__23115 = x__4451__auto__;
return goog.typeOf(G__23115);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj23117 = {};
return obj23117;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3795__auto__ = tcoll;
if(and__3795__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3795__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4451__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3807__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__23121 = x__4451__auto__;
return goog.typeOf(G__23121);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj23123 = {};
return obj23123;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3795__auto__ = tcoll;
if(and__3795__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3795__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4451__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3807__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__23127 = x__4451__auto__;
return goog.typeOf(G__23127);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3795__auto__ = tcoll;
if(and__3795__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3795__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4451__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3807__auto__ = (cljs.core._pop_BANG_[(function (){var G__23131 = x__4451__auto__;
return goog.typeOf(G__23131);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj23133 = {};
return obj23133;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3795__auto__ = tcoll;
if(and__3795__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3795__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4451__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3807__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__23137 = x__4451__auto__;
return goog.typeOf(G__23137);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj23139 = {};
return obj23139;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3795__auto__ = x;
if(and__3795__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3795__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4451__auto__ = (((x == null))?null:x);
return (function (){var or__3807__auto__ = (cljs.core._compare[(function (){var G__23143 = x__4451__auto__;
return goog.typeOf(G__23143);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._compare["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj23145 = {};
return obj23145;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._drop_first[(function (){var G__23149 = x__4451__auto__;
return goog.typeOf(G__23149);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj23151 = {};
return obj23151;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._chunked_first[(function (){var G__23155 = x__4451__auto__;
return goog.typeOf(G__23155);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._chunked_rest[(function (){var G__23159 = x__4451__auto__;
return goog.typeOf(G__23159);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj23161 = {};
return obj23161;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._chunked_next[(function (){var G__23165 = x__4451__auto__;
return goog.typeOf(G__23165);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj23167 = {};
return obj23167;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3795__auto__ = x;
if(and__3795__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3795__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4451__auto__ = (((x == null))?null:x);
return (function (){var or__3807__auto__ = (cljs.core._name[(function (){var G__23171 = x__4451__auto__;
return goog.typeOf(G__23171);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._name["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3795__auto__ = x;
if(and__3795__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3795__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4451__auto__ = (((x == null))?null:x);
return (function (){var or__3807__auto__ = (cljs.core._namespace[(function (){var G__23175 = x__4451__auto__;
return goog.typeOf(G__23175);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._namespace["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj23177 = {};
return obj23177;
})();


cljs.core.IReset = (function (){var obj23179 = {};
return obj23179;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._reset_BANG_[(function (){var G__23183 = x__4451__auto__;
return goog.typeOf(G__23183);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj23185 = {};
return obj23185;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._swap_BANG_[(function (){var G__23195 = x__4451__auto__;
return goog.typeOf(G__23195);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._swap_BANG_[(function (){var G__23197 = x__4451__auto__;
return goog.typeOf(G__23197);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._swap_BANG_[(function (){var G__23199 = x__4451__auto__;
return goog.typeOf(G__23199);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._swap_BANG_[(function (){var G__23201 = x__4451__auto__;
return goog.typeOf(G__23201);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj23203 = {};
return obj23203;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3795__auto__ = o;
if(and__3795__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3795__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4451__auto__ = (((o == null))?null:o);
return (function (){var or__3807__auto__ = (cljs.core._vreset_BANG_[(function (){var G__23207 = x__4451__auto__;
return goog.typeOf(G__23207);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj23209 = {};
return obj23209;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3795__auto__ = coll;
if(and__3795__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3795__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4451__auto__ = (((coll == null))?null:coll);
return (function (){var or__3807__auto__ = (cljs.core._iterator[(function (){var G__23213 = x__4451__auto__;
return goog.typeOf(G__23213);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._iterator["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__23216 = (4294967295);
var G__23217 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__23216,G__23217) : Math.imul.call(null,G__23216,G__23217));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__23220 = a;
var G__23221 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__23220,G__23221) : Math.imul.call(null,G__23220,G__23221));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__23222 = (i + (2));
var G__23223 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__23222;
h1 = G__23223;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj23225 = {};
return obj23225;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__23226 = (i + (1));
var G__23227 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__23226;
hash = G__23227;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj23231 = {};
return obj23231;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__23234 = o;
if(G__23234){
var bit__4481__auto__ = (G__23234.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4481__auto__) || (G__23234.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__23235 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__23235) : Math.floor.call(null,G__23235));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3795__auto__ = cljs.core.not(a.ns);
if(and__3795__auto__){
return b.ns;
} else {
return and__3795__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__23242 = a.ns;
var G__23243 = b.ns;
return goog.array.defaultCompare(G__23242,G__23243);
})();
if(((0) === nsc)){
var G__23244 = a.name;
var G__23245 = b.name;
return goog.array.defaultCompare(G__23244,G__23245);
} else {
return nsc;
}
}
} else {
var G__23246 = a.name;
var G__23247 = b.name;
return goog.array.defaultCompare(G__23246,G__23247);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4228__auto__ = self__._hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__23249 = null;
var G__23249__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__23249__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__23249 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__23249__2.call(this,self__,coll);
case 3:
return G__23249__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23249.cljs$core$IFn$_invoke$arity$2 = G__23249__2;
G__23249.cljs$core$IFn$_invoke$arity$3 = G__23249__3;
return G__23249;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args23248){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23248)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__23297 = null;
var G__23297__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__23297__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__23297__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__23297__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__23297__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__23297__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__23297__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__23297__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__23297__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__23297__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__23297__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__23297__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__23297__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__23297__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__23297__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__23297__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__23297__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__23297__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__23297__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__23297__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__23297__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__23297__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23253 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__23254 = a;
var G__23255 = b;
var G__23256 = c;
var G__23257 = d;
var G__23258 = e;
var G__23259 = f;
var G__23260 = g;
var G__23261 = h;
var G__23262 = i;
var G__23263 = j;
var G__23264 = k;
var G__23265 = l;
var G__23266 = m;
var G__23267 = n;
var G__23268 = o;
var G__23269 = p;
var G__23270 = q;
var G__23271 = r;
var G__23272 = s;
var G__23273 = t;
var G__23274 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23253,G__23254,G__23255,G__23256,G__23257,G__23258,G__23259,G__23260,G__23261,G__23262,G__23263,G__23264,G__23265,G__23266,G__23267,G__23268,G__23269,G__23270,G__23271,G__23272,G__23273,G__23274) : cljs.core.apply.call(null,G__23253,G__23254,G__23255,G__23256,G__23257,G__23258,G__23259,G__23260,G__23261,G__23262,G__23263,G__23264,G__23265,G__23266,G__23267,G__23268,G__23269,G__23270,G__23271,G__23272,G__23273,G__23274));
});
G__23297 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__23297__1.call(this,self__);
case 2:
return G__23297__2.call(this,self__,a);
case 3:
return G__23297__3.call(this,self__,a,b);
case 4:
return G__23297__4.call(this,self__,a,b,c);
case 5:
return G__23297__5.call(this,self__,a,b,c,d);
case 6:
return G__23297__6.call(this,self__,a,b,c,d,e);
case 7:
return G__23297__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__23297__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__23297__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__23297__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__23297__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__23297__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__23297__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__23297__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__23297__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__23297__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__23297__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__23297__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__23297__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__23297__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__23297__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__23297__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23297.cljs$core$IFn$_invoke$arity$1 = G__23297__1;
G__23297.cljs$core$IFn$_invoke$arity$2 = G__23297__2;
G__23297.cljs$core$IFn$_invoke$arity$3 = G__23297__3;
G__23297.cljs$core$IFn$_invoke$arity$4 = G__23297__4;
G__23297.cljs$core$IFn$_invoke$arity$5 = G__23297__5;
G__23297.cljs$core$IFn$_invoke$arity$6 = G__23297__6;
G__23297.cljs$core$IFn$_invoke$arity$7 = G__23297__7;
G__23297.cljs$core$IFn$_invoke$arity$8 = G__23297__8;
G__23297.cljs$core$IFn$_invoke$arity$9 = G__23297__9;
G__23297.cljs$core$IFn$_invoke$arity$10 = G__23297__10;
G__23297.cljs$core$IFn$_invoke$arity$11 = G__23297__11;
G__23297.cljs$core$IFn$_invoke$arity$12 = G__23297__12;
G__23297.cljs$core$IFn$_invoke$arity$13 = G__23297__13;
G__23297.cljs$core$IFn$_invoke$arity$14 = G__23297__14;
G__23297.cljs$core$IFn$_invoke$arity$15 = G__23297__15;
G__23297.cljs$core$IFn$_invoke$arity$16 = G__23297__16;
G__23297.cljs$core$IFn$_invoke$arity$17 = G__23297__17;
G__23297.cljs$core$IFn$_invoke$arity$18 = G__23297__18;
G__23297.cljs$core$IFn$_invoke$arity$19 = G__23297__19;
G__23297.cljs$core$IFn$_invoke$arity$20 = G__23297__20;
G__23297.cljs$core$IFn$_invoke$arity$21 = G__23297__21;
G__23297.cljs$core$IFn$_invoke$arity$22 = G__23297__22;
return G__23297;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args23252){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23252)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__23275 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__23276 = a;
var G__23277 = b;
var G__23278 = c;
var G__23279 = d;
var G__23280 = e;
var G__23281 = f;
var G__23282 = g;
var G__23283 = h;
var G__23284 = i;
var G__23285 = j;
var G__23286 = k;
var G__23287 = l;
var G__23288 = m;
var G__23289 = n;
var G__23290 = o;
var G__23291 = p;
var G__23292 = q;
var G__23293 = r;
var G__23294 = s;
var G__23295 = t;
var G__23296 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23275,G__23276,G__23277,G__23278,G__23279,G__23280,G__23281,G__23282,G__23283,G__23284,G__23285,G__23286,G__23287,G__23288,G__23289,G__23290,G__23291,G__23292,G__23293,G__23294,G__23295,G__23296) : cljs.core.apply.call(null,G__23275,G__23276,G__23277,G__23278,G__23279,G__23280,G__23281,G__23282,G__23283,G__23284,G__23285,G__23286,G__23287,G__23288,G__23289,G__23290,G__23291,G__23292,G__23293,G__23294,G__23295,G__23296));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__23299 = x;
if(G__23299){
var bit__4488__auto__ = null;
if(cljs.core.truth_((function (){var or__3807__auto__ = bit__4488__auto__;
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return G__23299.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__23299.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__23299);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__23299);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__23301 = value;
if(G__23301){
var bit__4488__auto__ = (G__23301.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4488__auto__) || (G__23301.cljs$core$ICloneable$)){
return true;
} else {
if((!G__23301.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__23301);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__23301);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23303 = coll;
if(G__23303){
var bit__4481__auto__ = (G__23303.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4481__auto__) || (G__23303.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23305 = coll;
if(G__23305){
var bit__4481__auto__ = (G__23305.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4481__auto__) || (G__23305.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__23307 = coll;
if(G__23307){
var bit__4481__auto__ = (G__23307.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4481__auto__) || (G__23307.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23309 = coll;
if(G__23309){
var bit__4481__auto__ = (G__23309.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4481__auto__) || (G__23309.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__23314__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__23315 = y;
var G__23316 = cljs.core.first(more);
var G__23317 = cljs.core.next(more);
x = G__23315;
y = G__23316;
more = G__23317;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__23314 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23318__i = 0, G__23318__a = new Array(arguments.length -  2);
while (G__23318__i < G__23318__a.length) {G__23318__a[G__23318__i] = arguments[G__23318__i + 2]; ++G__23318__i;}
  more = new cljs.core.IndexedSeq(G__23318__a,0);
} 
return G__23314__delegate.call(this,x,y,more);};
G__23314.cljs$lang$maxFixedArity = 2;
G__23314.cljs$lang$applyTo = (function (arglist__23319){
var x = cljs.core.first(arglist__23319);
arglist__23319 = cljs.core.next(arglist__23319);
var y = cljs.core.first(arglist__23319);
var more = cljs.core.rest(arglist__23319);
return G__23314__delegate(x,y,more);
});
G__23314.cljs$core$IFn$_invoke$arity$variadic = G__23314__delegate;
return G__23314;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__23320 = null;
if (arguments.length > 2) {
var G__23321__i = 0, G__23321__a = new Array(arguments.length -  2);
while (G__23321__i < G__23321__a.length) {G__23321__a[G__23321__i] = arguments[G__23321__i + 2]; ++G__23321__i;}
G__23320 = new cljs.core.IndexedSeq(G__23321__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__23322 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__23322) : cljs.core.es6_iterator_seq.call(null,G__23322));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__23323 = (n + (1));
var G__23324 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__23325 = cljs.core.next(coll__$1);
n = G__23323;
hash_code = G__23324;
coll__$1 = G__23325;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__23326 = (n + (1));
var G__23327 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__23328 = cljs.core.next(coll__$1);
n = G__23326;
hash_code = G__23327;
coll__$1 = G__23328;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__23329 = o;
return goog.getUid(G__23329);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__23331 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23331) : cljs.core.deref.call(null,G__23331));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__23338 = val;
var G__23339 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23338,G__23339) : f.call(null,G__23338,G__23339));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23344 = nval;
var G__23345 = (n + (1));
val = G__23344;
n = G__23345;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__23340 = val__$1;
var G__23341 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23340,G__23341) : f.call(null,G__23340,G__23341));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23346 = nval;
var G__23347 = (n + (1));
val__$1 = G__23346;
n = G__23347;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__23342 = val__$1;
var G__23343 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23342,G__23343) : f.call(null,G__23342,G__23343));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23348 = nval;
var G__23349 = (n + (1));
val__$1 = G__23348;
n = G__23349;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__23356 = val;
var G__23357 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23356,G__23357) : f.call(null,G__23356,G__23357));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23362 = nval;
var G__23363 = (n + (1));
val = G__23362;
n = G__23363;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__23358 = val__$1;
var G__23359 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23358,G__23359) : f.call(null,G__23358,G__23359));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23364 = nval;
var G__23365 = (n + (1));
val__$1 = G__23364;
n = G__23365;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__23360 = val__$1;
var G__23361 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23360,G__23361) : f.call(null,G__23360,G__23361));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23366 = nval;
var G__23367 = (n + (1));
val__$1 = G__23366;
n = G__23367;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__23369 = x;
if(G__23369){
var bit__4488__auto__ = (G__23369.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4488__auto__) || (G__23369.cljs$core$ICounted$)){
return true;
} else {
if((!G__23369.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__23369);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__23369);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__23371 = x;
if(G__23371){
var bit__4488__auto__ = (G__23371.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4488__auto__) || (G__23371.cljs$core$IIndexed$)){
return true;
} else {
if((!G__23371.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__23371);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__23371);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__23372 = coll__$1;
var G__23373 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__23372,G__23373) : cljs.core.equiv_sequential.call(null,G__23372,G__23373));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23374 = o;
var G__23375 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__23374,G__23375) : cljs.core.cons.call(null,G__23374,G__23375));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__23378 = coll__$1;
var G__23379 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__23378,G__23379) : cljs.core.equiv_sequential.call(null,G__23378,G__23379));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__23380 = cljs.core.List.EMPTY;
var G__23381 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__23380,G__23381) : cljs.core.with_meta.call(null,G__23380,G__23381));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__23382 = f;
var G__23383 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__23382,G__23383) : cljs.core.seq_reduce.call(null,G__23382,G__23383));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__23384 = f;
var G__23385 = start;
var G__23386 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__23384,G__23385,G__23386) : cljs.core.seq_reduce.call(null,G__23384,G__23385,G__23386));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23387 = o;
var G__23388 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__23387,G__23388) : cljs.core.cons.call(null,G__23387,G__23388));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__23389 = sn;
s = G__23389;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__23394__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__23395 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__23396 = cljs.core.first(xs);
var G__23397 = cljs.core.next(xs);
coll = G__23395;
x = G__23396;
xs = G__23397;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__23394 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__23398__i = 0, G__23398__a = new Array(arguments.length -  2);
while (G__23398__i < G__23398__a.length) {G__23398__a[G__23398__i] = arguments[G__23398__i + 2]; ++G__23398__i;}
  xs = new cljs.core.IndexedSeq(G__23398__a,0);
} 
return G__23394__delegate.call(this,coll,x,xs);};
G__23394.cljs$lang$maxFixedArity = 2;
G__23394.cljs$lang$applyTo = (function (arglist__23399){
var coll = cljs.core.first(arglist__23399);
arglist__23399 = cljs.core.next(arglist__23399);
var x = cljs.core.first(arglist__23399);
var xs = cljs.core.rest(arglist__23399);
return G__23394__delegate(coll,x,xs);
});
G__23394.cljs$core$IFn$_invoke$arity$variadic = G__23394__delegate;
return G__23394;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__23400 = null;
if (arguments.length > 2) {
var G__23401__i = 0, G__23401__a = new Array(arguments.length -  2);
while (G__23401__i < G__23401__a.length) {G__23401__a[G__23401__i] = arguments[G__23401__i + 2]; ++G__23401__i;}
G__23400 = new cljs.core.IndexedSeq(G__23401__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__23400);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__23402 = cljs.core.next(s);
var G__23403 = (acc + (1));
s = G__23402;
acc = G__23403;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__23405 = coll;
if(G__23405){
var bit__4481__auto__ = (G__23405.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4481__auto__) || (G__23405.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__23406 = cljs.core.next(coll);
var G__23407 = (n - (1));
coll = G__23406;
n = G__23407;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__23408 = cljs.core.next(coll);
var G__23409 = (n - (1));
var G__23410 = not_found;
coll = G__23408;
n = G__23409;
not_found = G__23410;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__23415 = coll;
if(G__23415){
var bit__4481__auto__ = (G__23415.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4481__auto__) || (G__23415.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__23416 = coll;
if(G__23416){
var bit__4488__auto__ = (G__23416.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4488__auto__) || (G__23416.cljs$core$ISeq$)){
return true;
} else {
if((!G__23416.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23416);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23416);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__23417 = coll;
if(G__23417){
var bit__4481__auto__ = (G__23417.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4481__auto__) || (G__23417.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__23418 = coll;
if(G__23418){
var bit__4488__auto__ = (G__23418.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4488__auto__) || (G__23418.cljs$core$ISeq$)){
return true;
} else {
if((!G__23418.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23418);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23418);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__23419 = (n__$1 - (1));
var G__23420 = cljs.core.rest(xs);
n__$1 = G__23419;
xs = G__23420;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__23423 = o;
if(G__23423){
var bit__4481__auto__ = (G__23423.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4481__auto__) || (G__23423.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__23424 = o;
if(G__23424){
var bit__4481__auto__ = (G__23424.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4481__auto__) || (G__23424.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__23428__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__23429 = ret;
var G__23430 = cljs.core.first(kvs);
var G__23431 = cljs.core.second(kvs);
var G__23432 = cljs.core.nnext(kvs);
coll = G__23429;
k = G__23430;
v = G__23431;
kvs = G__23432;
continue;
} else {
return ret;
}
break;
}
};
var G__23428 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__23433__i = 0, G__23433__a = new Array(arguments.length -  3);
while (G__23433__i < G__23433__a.length) {G__23433__a[G__23433__i] = arguments[G__23433__i + 3]; ++G__23433__i;}
  kvs = new cljs.core.IndexedSeq(G__23433__a,0);
} 
return G__23428__delegate.call(this,coll,k,v,kvs);};
G__23428.cljs$lang$maxFixedArity = 3;
G__23428.cljs$lang$applyTo = (function (arglist__23434){
var coll = cljs.core.first(arglist__23434);
arglist__23434 = cljs.core.next(arglist__23434);
var k = cljs.core.first(arglist__23434);
arglist__23434 = cljs.core.next(arglist__23434);
var v = cljs.core.first(arglist__23434);
var kvs = cljs.core.rest(arglist__23434);
return G__23428__delegate(coll,k,v,kvs);
});
G__23428.cljs$core$IFn$_invoke$arity$variadic = G__23428__delegate;
return G__23428;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__23435 = null;
if (arguments.length > 3) {
var G__23436__i = 0, G__23436__a = new Array(arguments.length -  3);
while (G__23436__i < G__23436__a.length) {G__23436__a[G__23436__i] = arguments[G__23436__i + 3]; ++G__23436__i;}
G__23435 = new cljs.core.IndexedSeq(G__23436__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__23435);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__23439__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__23440 = ret;
var G__23441 = cljs.core.first(ks);
var G__23442 = cljs.core.next(ks);
coll = G__23440;
k = G__23441;
ks = G__23442;
continue;
} else {
return ret;
}
}
break;
}
};
var G__23439 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__23443__i = 0, G__23443__a = new Array(arguments.length -  2);
while (G__23443__i < G__23443__a.length) {G__23443__a[G__23443__i] = arguments[G__23443__i + 2]; ++G__23443__i;}
  ks = new cljs.core.IndexedSeq(G__23443__a,0);
} 
return G__23439__delegate.call(this,coll,k,ks);};
G__23439.cljs$lang$maxFixedArity = 2;
G__23439.cljs$lang$applyTo = (function (arglist__23444){
var coll = cljs.core.first(arglist__23444);
arglist__23444 = cljs.core.next(arglist__23444);
var k = cljs.core.first(arglist__23444);
var ks = cljs.core.rest(arglist__23444);
return G__23439__delegate(coll,k,ks);
});
G__23439.cljs$core$IFn$_invoke$arity$variadic = G__23439__delegate;
return G__23439;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__23445 = null;
if (arguments.length > 2) {
var G__23446__i = 0, G__23446__a = new Array(arguments.length -  2);
while (G__23446__i < G__23446__a.length) {G__23446__a[G__23446__i] = arguments[G__23446__i + 2]; ++G__23446__i;}
G__23445 = new cljs.core.IndexedSeq(G__23446__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__23445);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3807__auto__ = (function (){var G__23451 = f;
return goog.isFunction(G__23451);
})();
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
var G__23452 = f;
if(G__23452){
var bit__4488__auto__ = null;
if(cljs.core.truth_((function (){var or__3807__auto____$1 = bit__4488__auto__;
if(cljs.core.truth_(or__3807__auto____$1)){
return or__3807__auto____$1;
} else {
return G__23452.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__23452.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__23452);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__23452);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__23918 = null;
var G__23918__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__23918__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23454 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__23454) : self__.afn.call(null,G__23454));
});
var G__23918__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23455 = a;
var G__23456 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__23455,G__23456) : self__.afn.call(null,G__23455,G__23456));
});
var G__23918__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23457 = a;
var G__23458 = b;
var G__23459 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__23457,G__23458,G__23459) : self__.afn.call(null,G__23457,G__23458,G__23459));
});
var G__23918__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23460 = a;
var G__23461 = b;
var G__23462 = c;
var G__23463 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__23460,G__23461,G__23462,G__23463) : self__.afn.call(null,G__23460,G__23461,G__23462,G__23463));
});
var G__23918__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23464 = a;
var G__23465 = b;
var G__23466 = c;
var G__23467 = d;
var G__23468 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__23464,G__23465,G__23466,G__23467,G__23468) : self__.afn.call(null,G__23464,G__23465,G__23466,G__23467,G__23468));
});
var G__23918__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23469 = a;
var G__23470 = b;
var G__23471 = c;
var G__23472 = d;
var G__23473 = e;
var G__23474 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__23469,G__23470,G__23471,G__23472,G__23473,G__23474) : self__.afn.call(null,G__23469,G__23470,G__23471,G__23472,G__23473,G__23474));
});
var G__23918__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23475 = a;
var G__23476 = b;
var G__23477 = c;
var G__23478 = d;
var G__23479 = e;
var G__23480 = f;
var G__23481 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__23475,G__23476,G__23477,G__23478,G__23479,G__23480,G__23481) : self__.afn.call(null,G__23475,G__23476,G__23477,G__23478,G__23479,G__23480,G__23481));
});
var G__23918__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23482 = a;
var G__23483 = b;
var G__23484 = c;
var G__23485 = d;
var G__23486 = e;
var G__23487 = f;
var G__23488 = g;
var G__23489 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__23482,G__23483,G__23484,G__23485,G__23486,G__23487,G__23488,G__23489) : self__.afn.call(null,G__23482,G__23483,G__23484,G__23485,G__23486,G__23487,G__23488,G__23489));
});
var G__23918__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23490 = a;
var G__23491 = b;
var G__23492 = c;
var G__23493 = d;
var G__23494 = e;
var G__23495 = f;
var G__23496 = g;
var G__23497 = h;
var G__23498 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__23490,G__23491,G__23492,G__23493,G__23494,G__23495,G__23496,G__23497,G__23498) : self__.afn.call(null,G__23490,G__23491,G__23492,G__23493,G__23494,G__23495,G__23496,G__23497,G__23498));
});
var G__23918__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23499 = a;
var G__23500 = b;
var G__23501 = c;
var G__23502 = d;
var G__23503 = e;
var G__23504 = f;
var G__23505 = g;
var G__23506 = h;
var G__23507 = i;
var G__23508 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__23499,G__23500,G__23501,G__23502,G__23503,G__23504,G__23505,G__23506,G__23507,G__23508) : self__.afn.call(null,G__23499,G__23500,G__23501,G__23502,G__23503,G__23504,G__23505,G__23506,G__23507,G__23508));
});
var G__23918__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23509 = a;
var G__23510 = b;
var G__23511 = c;
var G__23512 = d;
var G__23513 = e;
var G__23514 = f;
var G__23515 = g;
var G__23516 = h;
var G__23517 = i;
var G__23518 = j;
var G__23519 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__23509,G__23510,G__23511,G__23512,G__23513,G__23514,G__23515,G__23516,G__23517,G__23518,G__23519) : self__.afn.call(null,G__23509,G__23510,G__23511,G__23512,G__23513,G__23514,G__23515,G__23516,G__23517,G__23518,G__23519));
});
var G__23918__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23520 = a;
var G__23521 = b;
var G__23522 = c;
var G__23523 = d;
var G__23524 = e;
var G__23525 = f;
var G__23526 = g;
var G__23527 = h;
var G__23528 = i;
var G__23529 = j;
var G__23530 = k;
var G__23531 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__23520,G__23521,G__23522,G__23523,G__23524,G__23525,G__23526,G__23527,G__23528,G__23529,G__23530,G__23531) : self__.afn.call(null,G__23520,G__23521,G__23522,G__23523,G__23524,G__23525,G__23526,G__23527,G__23528,G__23529,G__23530,G__23531));
});
var G__23918__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23532 = a;
var G__23533 = b;
var G__23534 = c;
var G__23535 = d;
var G__23536 = e;
var G__23537 = f;
var G__23538 = g;
var G__23539 = h;
var G__23540 = i;
var G__23541 = j;
var G__23542 = k;
var G__23543 = l;
var G__23544 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__23532,G__23533,G__23534,G__23535,G__23536,G__23537,G__23538,G__23539,G__23540,G__23541,G__23542,G__23543,G__23544) : self__.afn.call(null,G__23532,G__23533,G__23534,G__23535,G__23536,G__23537,G__23538,G__23539,G__23540,G__23541,G__23542,G__23543,G__23544));
});
var G__23918__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23545 = a;
var G__23546 = b;
var G__23547 = c;
var G__23548 = d;
var G__23549 = e;
var G__23550 = f;
var G__23551 = g;
var G__23552 = h;
var G__23553 = i;
var G__23554 = j;
var G__23555 = k;
var G__23556 = l;
var G__23557 = m;
var G__23558 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__23545,G__23546,G__23547,G__23548,G__23549,G__23550,G__23551,G__23552,G__23553,G__23554,G__23555,G__23556,G__23557,G__23558) : self__.afn.call(null,G__23545,G__23546,G__23547,G__23548,G__23549,G__23550,G__23551,G__23552,G__23553,G__23554,G__23555,G__23556,G__23557,G__23558));
});
var G__23918__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23559 = a;
var G__23560 = b;
var G__23561 = c;
var G__23562 = d;
var G__23563 = e;
var G__23564 = f;
var G__23565 = g;
var G__23566 = h;
var G__23567 = i;
var G__23568 = j;
var G__23569 = k;
var G__23570 = l;
var G__23571 = m;
var G__23572 = n;
var G__23573 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__23559,G__23560,G__23561,G__23562,G__23563,G__23564,G__23565,G__23566,G__23567,G__23568,G__23569,G__23570,G__23571,G__23572,G__23573) : self__.afn.call(null,G__23559,G__23560,G__23561,G__23562,G__23563,G__23564,G__23565,G__23566,G__23567,G__23568,G__23569,G__23570,G__23571,G__23572,G__23573));
});
var G__23918__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23574 = a;
var G__23575 = b;
var G__23576 = c;
var G__23577 = d;
var G__23578 = e;
var G__23579 = f;
var G__23580 = g;
var G__23581 = h;
var G__23582 = i;
var G__23583 = j;
var G__23584 = k;
var G__23585 = l;
var G__23586 = m;
var G__23587 = n;
var G__23588 = o;
var G__23589 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__23574,G__23575,G__23576,G__23577,G__23578,G__23579,G__23580,G__23581,G__23582,G__23583,G__23584,G__23585,G__23586,G__23587,G__23588,G__23589) : self__.afn.call(null,G__23574,G__23575,G__23576,G__23577,G__23578,G__23579,G__23580,G__23581,G__23582,G__23583,G__23584,G__23585,G__23586,G__23587,G__23588,G__23589));
});
var G__23918__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23590 = a;
var G__23591 = b;
var G__23592 = c;
var G__23593 = d;
var G__23594 = e;
var G__23595 = f;
var G__23596 = g;
var G__23597 = h;
var G__23598 = i;
var G__23599 = j;
var G__23600 = k;
var G__23601 = l;
var G__23602 = m;
var G__23603 = n;
var G__23604 = o;
var G__23605 = p;
var G__23606 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__23590,G__23591,G__23592,G__23593,G__23594,G__23595,G__23596,G__23597,G__23598,G__23599,G__23600,G__23601,G__23602,G__23603,G__23604,G__23605,G__23606) : self__.afn.call(null,G__23590,G__23591,G__23592,G__23593,G__23594,G__23595,G__23596,G__23597,G__23598,G__23599,G__23600,G__23601,G__23602,G__23603,G__23604,G__23605,G__23606));
});
var G__23918__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23607 = a;
var G__23608 = b;
var G__23609 = c;
var G__23610 = d;
var G__23611 = e;
var G__23612 = f;
var G__23613 = g;
var G__23614 = h;
var G__23615 = i;
var G__23616 = j;
var G__23617 = k;
var G__23618 = l;
var G__23619 = m;
var G__23620 = n;
var G__23621 = o;
var G__23622 = p;
var G__23623 = q;
var G__23624 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__23607,G__23608,G__23609,G__23610,G__23611,G__23612,G__23613,G__23614,G__23615,G__23616,G__23617,G__23618,G__23619,G__23620,G__23621,G__23622,G__23623,G__23624) : self__.afn.call(null,G__23607,G__23608,G__23609,G__23610,G__23611,G__23612,G__23613,G__23614,G__23615,G__23616,G__23617,G__23618,G__23619,G__23620,G__23621,G__23622,G__23623,G__23624));
});
var G__23918__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23625 = a;
var G__23626 = b;
var G__23627 = c;
var G__23628 = d;
var G__23629 = e;
var G__23630 = f;
var G__23631 = g;
var G__23632 = h;
var G__23633 = i;
var G__23634 = j;
var G__23635 = k;
var G__23636 = l;
var G__23637 = m;
var G__23638 = n;
var G__23639 = o;
var G__23640 = p;
var G__23641 = q;
var G__23642 = r;
var G__23643 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__23625,G__23626,G__23627,G__23628,G__23629,G__23630,G__23631,G__23632,G__23633,G__23634,G__23635,G__23636,G__23637,G__23638,G__23639,G__23640,G__23641,G__23642,G__23643) : self__.afn.call(null,G__23625,G__23626,G__23627,G__23628,G__23629,G__23630,G__23631,G__23632,G__23633,G__23634,G__23635,G__23636,G__23637,G__23638,G__23639,G__23640,G__23641,G__23642,G__23643));
});
var G__23918__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23644 = a;
var G__23645 = b;
var G__23646 = c;
var G__23647 = d;
var G__23648 = e;
var G__23649 = f;
var G__23650 = g;
var G__23651 = h;
var G__23652 = i;
var G__23653 = j;
var G__23654 = k;
var G__23655 = l;
var G__23656 = m;
var G__23657 = n;
var G__23658 = o;
var G__23659 = p;
var G__23660 = q;
var G__23661 = r;
var G__23662 = s;
var G__23663 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__23644,G__23645,G__23646,G__23647,G__23648,G__23649,G__23650,G__23651,G__23652,G__23653,G__23654,G__23655,G__23656,G__23657,G__23658,G__23659,G__23660,G__23661,G__23662,G__23663) : self__.afn.call(null,G__23644,G__23645,G__23646,G__23647,G__23648,G__23649,G__23650,G__23651,G__23652,G__23653,G__23654,G__23655,G__23656,G__23657,G__23658,G__23659,G__23660,G__23661,G__23662,G__23663));
});
var G__23918__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23664 = self__.afn;
var G__23665 = a;
var G__23666 = b;
var G__23667 = c;
var G__23668 = d;
var G__23669 = e;
var G__23670 = f;
var G__23671 = g;
var G__23672 = h;
var G__23673 = i;
var G__23674 = j;
var G__23675 = k;
var G__23676 = l;
var G__23677 = m;
var G__23678 = n;
var G__23679 = o;
var G__23680 = p;
var G__23681 = q;
var G__23682 = r;
var G__23683 = s;
var G__23684 = t;
var G__23685 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23664,G__23665,G__23666,G__23667,G__23668,G__23669,G__23670,G__23671,G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682,G__23683,G__23684,G__23685) : cljs.core.apply.call(null,G__23664,G__23665,G__23666,G__23667,G__23668,G__23669,G__23670,G__23671,G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682,G__23683,G__23684,G__23685));
});
G__23918 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__23918__1.call(this,self__);
case 2:
return G__23918__2.call(this,self__,a);
case 3:
return G__23918__3.call(this,self__,a,b);
case 4:
return G__23918__4.call(this,self__,a,b,c);
case 5:
return G__23918__5.call(this,self__,a,b,c,d);
case 6:
return G__23918__6.call(this,self__,a,b,c,d,e);
case 7:
return G__23918__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__23918__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__23918__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__23918__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__23918__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__23918__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__23918__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__23918__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__23918__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__23918__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__23918__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__23918__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__23918__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__23918__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__23918__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__23918__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23918.cljs$core$IFn$_invoke$arity$1 = G__23918__1;
G__23918.cljs$core$IFn$_invoke$arity$2 = G__23918__2;
G__23918.cljs$core$IFn$_invoke$arity$3 = G__23918__3;
G__23918.cljs$core$IFn$_invoke$arity$4 = G__23918__4;
G__23918.cljs$core$IFn$_invoke$arity$5 = G__23918__5;
G__23918.cljs$core$IFn$_invoke$arity$6 = G__23918__6;
G__23918.cljs$core$IFn$_invoke$arity$7 = G__23918__7;
G__23918.cljs$core$IFn$_invoke$arity$8 = G__23918__8;
G__23918.cljs$core$IFn$_invoke$arity$9 = G__23918__9;
G__23918.cljs$core$IFn$_invoke$arity$10 = G__23918__10;
G__23918.cljs$core$IFn$_invoke$arity$11 = G__23918__11;
G__23918.cljs$core$IFn$_invoke$arity$12 = G__23918__12;
G__23918.cljs$core$IFn$_invoke$arity$13 = G__23918__13;
G__23918.cljs$core$IFn$_invoke$arity$14 = G__23918__14;
G__23918.cljs$core$IFn$_invoke$arity$15 = G__23918__15;
G__23918.cljs$core$IFn$_invoke$arity$16 = G__23918__16;
G__23918.cljs$core$IFn$_invoke$arity$17 = G__23918__17;
G__23918.cljs$core$IFn$_invoke$arity$18 = G__23918__18;
G__23918.cljs$core$IFn$_invoke$arity$19 = G__23918__19;
G__23918.cljs$core$IFn$_invoke$arity$20 = G__23918__20;
G__23918.cljs$core$IFn$_invoke$arity$21 = G__23918__21;
G__23918.cljs$core$IFn$_invoke$arity$22 = G__23918__22;
return G__23918;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args23453){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23453)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__23686 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__23686) : self__.afn.call(null,G__23686));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__23687 = a;
var G__23688 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__23687,G__23688) : self__.afn.call(null,G__23687,G__23688));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__23689 = a;
var G__23690 = b;
var G__23691 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__23689,G__23690,G__23691) : self__.afn.call(null,G__23689,G__23690,G__23691));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__23692 = a;
var G__23693 = b;
var G__23694 = c;
var G__23695 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__23692,G__23693,G__23694,G__23695) : self__.afn.call(null,G__23692,G__23693,G__23694,G__23695));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__23696 = a;
var G__23697 = b;
var G__23698 = c;
var G__23699 = d;
var G__23700 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__23696,G__23697,G__23698,G__23699,G__23700) : self__.afn.call(null,G__23696,G__23697,G__23698,G__23699,G__23700));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__23701 = a;
var G__23702 = b;
var G__23703 = c;
var G__23704 = d;
var G__23705 = e;
var G__23706 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__23701,G__23702,G__23703,G__23704,G__23705,G__23706) : self__.afn.call(null,G__23701,G__23702,G__23703,G__23704,G__23705,G__23706));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__23707 = a;
var G__23708 = b;
var G__23709 = c;
var G__23710 = d;
var G__23711 = e;
var G__23712 = f;
var G__23713 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__23707,G__23708,G__23709,G__23710,G__23711,G__23712,G__23713) : self__.afn.call(null,G__23707,G__23708,G__23709,G__23710,G__23711,G__23712,G__23713));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__23714 = a;
var G__23715 = b;
var G__23716 = c;
var G__23717 = d;
var G__23718 = e;
var G__23719 = f;
var G__23720 = g;
var G__23721 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__23714,G__23715,G__23716,G__23717,G__23718,G__23719,G__23720,G__23721) : self__.afn.call(null,G__23714,G__23715,G__23716,G__23717,G__23718,G__23719,G__23720,G__23721));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__23722 = a;
var G__23723 = b;
var G__23724 = c;
var G__23725 = d;
var G__23726 = e;
var G__23727 = f;
var G__23728 = g;
var G__23729 = h;
var G__23730 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__23722,G__23723,G__23724,G__23725,G__23726,G__23727,G__23728,G__23729,G__23730) : self__.afn.call(null,G__23722,G__23723,G__23724,G__23725,G__23726,G__23727,G__23728,G__23729,G__23730));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__23731 = a;
var G__23732 = b;
var G__23733 = c;
var G__23734 = d;
var G__23735 = e;
var G__23736 = f;
var G__23737 = g;
var G__23738 = h;
var G__23739 = i;
var G__23740 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__23731,G__23732,G__23733,G__23734,G__23735,G__23736,G__23737,G__23738,G__23739,G__23740) : self__.afn.call(null,G__23731,G__23732,G__23733,G__23734,G__23735,G__23736,G__23737,G__23738,G__23739,G__23740));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__23741 = a;
var G__23742 = b;
var G__23743 = c;
var G__23744 = d;
var G__23745 = e;
var G__23746 = f;
var G__23747 = g;
var G__23748 = h;
var G__23749 = i;
var G__23750 = j;
var G__23751 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__23741,G__23742,G__23743,G__23744,G__23745,G__23746,G__23747,G__23748,G__23749,G__23750,G__23751) : self__.afn.call(null,G__23741,G__23742,G__23743,G__23744,G__23745,G__23746,G__23747,G__23748,G__23749,G__23750,G__23751));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__23752 = a;
var G__23753 = b;
var G__23754 = c;
var G__23755 = d;
var G__23756 = e;
var G__23757 = f;
var G__23758 = g;
var G__23759 = h;
var G__23760 = i;
var G__23761 = j;
var G__23762 = k;
var G__23763 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__23752,G__23753,G__23754,G__23755,G__23756,G__23757,G__23758,G__23759,G__23760,G__23761,G__23762,G__23763) : self__.afn.call(null,G__23752,G__23753,G__23754,G__23755,G__23756,G__23757,G__23758,G__23759,G__23760,G__23761,G__23762,G__23763));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__23764 = a;
var G__23765 = b;
var G__23766 = c;
var G__23767 = d;
var G__23768 = e;
var G__23769 = f;
var G__23770 = g;
var G__23771 = h;
var G__23772 = i;
var G__23773 = j;
var G__23774 = k;
var G__23775 = l;
var G__23776 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770,G__23771,G__23772,G__23773,G__23774,G__23775,G__23776) : self__.afn.call(null,G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770,G__23771,G__23772,G__23773,G__23774,G__23775,G__23776));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__23777 = a;
var G__23778 = b;
var G__23779 = c;
var G__23780 = d;
var G__23781 = e;
var G__23782 = f;
var G__23783 = g;
var G__23784 = h;
var G__23785 = i;
var G__23786 = j;
var G__23787 = k;
var G__23788 = l;
var G__23789 = m;
var G__23790 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__23777,G__23778,G__23779,G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786,G__23787,G__23788,G__23789,G__23790) : self__.afn.call(null,G__23777,G__23778,G__23779,G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786,G__23787,G__23788,G__23789,G__23790));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__23791 = a;
var G__23792 = b;
var G__23793 = c;
var G__23794 = d;
var G__23795 = e;
var G__23796 = f;
var G__23797 = g;
var G__23798 = h;
var G__23799 = i;
var G__23800 = j;
var G__23801 = k;
var G__23802 = l;
var G__23803 = m;
var G__23804 = n;
var G__23805 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__23791,G__23792,G__23793,G__23794,G__23795,G__23796,G__23797,G__23798,G__23799,G__23800,G__23801,G__23802,G__23803,G__23804,G__23805) : self__.afn.call(null,G__23791,G__23792,G__23793,G__23794,G__23795,G__23796,G__23797,G__23798,G__23799,G__23800,G__23801,G__23802,G__23803,G__23804,G__23805));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__23806 = a;
var G__23807 = b;
var G__23808 = c;
var G__23809 = d;
var G__23810 = e;
var G__23811 = f;
var G__23812 = g;
var G__23813 = h;
var G__23814 = i;
var G__23815 = j;
var G__23816 = k;
var G__23817 = l;
var G__23818 = m;
var G__23819 = n;
var G__23820 = o;
var G__23821 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__23806,G__23807,G__23808,G__23809,G__23810,G__23811,G__23812,G__23813,G__23814,G__23815,G__23816,G__23817,G__23818,G__23819,G__23820,G__23821) : self__.afn.call(null,G__23806,G__23807,G__23808,G__23809,G__23810,G__23811,G__23812,G__23813,G__23814,G__23815,G__23816,G__23817,G__23818,G__23819,G__23820,G__23821));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__23822 = a;
var G__23823 = b;
var G__23824 = c;
var G__23825 = d;
var G__23826 = e;
var G__23827 = f;
var G__23828 = g;
var G__23829 = h;
var G__23830 = i;
var G__23831 = j;
var G__23832 = k;
var G__23833 = l;
var G__23834 = m;
var G__23835 = n;
var G__23836 = o;
var G__23837 = p;
var G__23838 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__23822,G__23823,G__23824,G__23825,G__23826,G__23827,G__23828,G__23829,G__23830,G__23831,G__23832,G__23833,G__23834,G__23835,G__23836,G__23837,G__23838) : self__.afn.call(null,G__23822,G__23823,G__23824,G__23825,G__23826,G__23827,G__23828,G__23829,G__23830,G__23831,G__23832,G__23833,G__23834,G__23835,G__23836,G__23837,G__23838));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__23839 = a;
var G__23840 = b;
var G__23841 = c;
var G__23842 = d;
var G__23843 = e;
var G__23844 = f;
var G__23845 = g;
var G__23846 = h;
var G__23847 = i;
var G__23848 = j;
var G__23849 = k;
var G__23850 = l;
var G__23851 = m;
var G__23852 = n;
var G__23853 = o;
var G__23854 = p;
var G__23855 = q;
var G__23856 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__23839,G__23840,G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847,G__23848,G__23849,G__23850,G__23851,G__23852,G__23853,G__23854,G__23855,G__23856) : self__.afn.call(null,G__23839,G__23840,G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847,G__23848,G__23849,G__23850,G__23851,G__23852,G__23853,G__23854,G__23855,G__23856));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__23857 = a;
var G__23858 = b;
var G__23859 = c;
var G__23860 = d;
var G__23861 = e;
var G__23862 = f;
var G__23863 = g;
var G__23864 = h;
var G__23865 = i;
var G__23866 = j;
var G__23867 = k;
var G__23868 = l;
var G__23869 = m;
var G__23870 = n;
var G__23871 = o;
var G__23872 = p;
var G__23873 = q;
var G__23874 = r;
var G__23875 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__23857,G__23858,G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866,G__23867,G__23868,G__23869,G__23870,G__23871,G__23872,G__23873,G__23874,G__23875) : self__.afn.call(null,G__23857,G__23858,G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866,G__23867,G__23868,G__23869,G__23870,G__23871,G__23872,G__23873,G__23874,G__23875));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__23876 = a;
var G__23877 = b;
var G__23878 = c;
var G__23879 = d;
var G__23880 = e;
var G__23881 = f;
var G__23882 = g;
var G__23883 = h;
var G__23884 = i;
var G__23885 = j;
var G__23886 = k;
var G__23887 = l;
var G__23888 = m;
var G__23889 = n;
var G__23890 = o;
var G__23891 = p;
var G__23892 = q;
var G__23893 = r;
var G__23894 = s;
var G__23895 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__23876,G__23877,G__23878,G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886,G__23887,G__23888,G__23889,G__23890,G__23891,G__23892,G__23893,G__23894,G__23895) : self__.afn.call(null,G__23876,G__23877,G__23878,G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886,G__23887,G__23888,G__23889,G__23890,G__23891,G__23892,G__23893,G__23894,G__23895));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__23896 = self__.afn;
var G__23897 = a;
var G__23898 = b;
var G__23899 = c;
var G__23900 = d;
var G__23901 = e;
var G__23902 = f;
var G__23903 = g;
var G__23904 = h;
var G__23905 = i;
var G__23906 = j;
var G__23907 = k;
var G__23908 = l;
var G__23909 = m;
var G__23910 = n;
var G__23911 = o;
var G__23912 = p;
var G__23913 = q;
var G__23914 = r;
var G__23915 = s;
var G__23916 = t;
var G__23917 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902,G__23903,G__23904,G__23905,G__23906,G__23907,G__23908,G__23909,G__23910,G__23911,G__23912,G__23913,G__23914,G__23915,G__23916,G__23917) : cljs.core.apply.call(null,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902,G__23903,G__23904,G__23905,G__23906,G__23907,G__23908,G__23909,G__23910,G__23911,G__23912,G__23913,G__23914,G__23915,G__23916,G__23917));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__23922 = o;
if(G__23922){
var bit__4488__auto__ = (G__23922.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4488__auto__) || (G__23922.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__23922.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__23922);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__23922);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3795__auto__ = !((o == null));
if(and__3795__auto__){
var G__23926 = o;
if(G__23926){
var bit__4488__auto__ = (G__23926.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4488__auto__) || (G__23926.cljs$core$IMeta$)){
return true;
} else {
if((!G__23926.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23926);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23926);
}
} else {
return and__3795__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__23929__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__23930 = ret;
var G__23931 = cljs.core.first(ks);
var G__23932 = cljs.core.next(ks);
coll = G__23930;
k = G__23931;
ks = G__23932;
continue;
} else {
return ret;
}
}
break;
}
};
var G__23929 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__23933__i = 0, G__23933__a = new Array(arguments.length -  2);
while (G__23933__i < G__23933__a.length) {G__23933__a[G__23933__i] = arguments[G__23933__i + 2]; ++G__23933__i;}
  ks = new cljs.core.IndexedSeq(G__23933__a,0);
} 
return G__23929__delegate.call(this,coll,k,ks);};
G__23929.cljs$lang$maxFixedArity = 2;
G__23929.cljs$lang$applyTo = (function (arglist__23934){
var coll = cljs.core.first(arglist__23934);
arglist__23934 = cljs.core.next(arglist__23934);
var k = cljs.core.first(arglist__23934);
var ks = cljs.core.rest(arglist__23934);
return G__23929__delegate(coll,k,ks);
});
G__23929.cljs$core$IFn$_invoke$arity$variadic = G__23929__delegate;
return G__23929;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__23935 = null;
if (arguments.length > 2) {
var G__23936__i = 0, G__23936__a = new Array(arguments.length -  2);
while (G__23936__i < G__23936__a.length) {G__23936__a[G__23936__i] = arguments[G__23936__i + 2]; ++G__23936__i;}
G__23935 = new cljs.core.IndexedSeq(G__23936__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__23935);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__23938 = x;
if(G__23938){
var bit__4488__auto__ = (G__23938.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4488__auto__) || (G__23938.cljs$core$ICollection$)){
return true;
} else {
if((!G__23938.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__23938);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__23938);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__23940 = x;
if(G__23940){
var bit__4488__auto__ = (G__23940.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4488__auto__) || (G__23940.cljs$core$ISet$)){
return true;
} else {
if((!G__23940.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__23940);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__23940);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__23942 = x;
if(G__23942){
var bit__4488__auto__ = (G__23942.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4488__auto__) || (G__23942.cljs$core$IAssociative$)){
return true;
} else {
if((!G__23942.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__23942);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__23942);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__23944 = x;
if(G__23944){
var bit__4488__auto__ = (G__23944.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4488__auto__) || (G__23944.cljs$core$ISequential$)){
return true;
} else {
if((!G__23944.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__23944);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__23944);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__23946 = x;
if(G__23946){
var bit__4488__auto__ = (G__23946.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4488__auto__) || (G__23946.cljs$core$ISorted$)){
return true;
} else {
if((!G__23946.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__23946);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__23946);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__23948 = x;
if(G__23948){
var bit__4488__auto__ = (G__23948.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4488__auto__) || (G__23948.cljs$core$IReduce$)){
return true;
} else {
if((!G__23948.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__23948);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__23948);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__23950 = x;
if(G__23950){
var bit__4488__auto__ = (G__23950.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4488__auto__) || (G__23950.cljs$core$IMap$)){
return true;
} else {
if((!G__23950.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__23950);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__23950);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__23952 = x;
if(G__23952){
var bit__4488__auto__ = (G__23952.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4488__auto__) || (G__23952.cljs$core$IVector$)){
return true;
} else {
if((!G__23952.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__23952);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__23952);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__23954 = x;
if(G__23954){
var bit__4481__auto__ = (G__23954.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4481__auto__) || (G__23954.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj23960 = {};
return obj23960;
});
var js_obj__1 = (function() { 
var G__23963__delegate = function (keyvals){
var G__23961 = goog.object.create;
var G__23962 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__23961,G__23962) : cljs.core.apply.call(null,G__23961,G__23962));
};
var G__23963 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__23964__i = 0, G__23964__a = new Array(arguments.length -  0);
while (G__23964__i < G__23964__a.length) {G__23964__a[G__23964__i] = arguments[G__23964__i + 0]; ++G__23964__i;}
  keyvals = new cljs.core.IndexedSeq(G__23964__a,0);
} 
return G__23963__delegate.call(this,keyvals);};
G__23963.cljs$lang$maxFixedArity = 0;
G__23963.cljs$lang$applyTo = (function (arglist__23965){
var keyvals = cljs.core.seq(arglist__23965);
return G__23963__delegate(keyvals);
});
G__23963.cljs$core$IFn$_invoke$arity$variadic = G__23963__delegate;
return G__23963;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__23966 = null;
if (arguments.length > 0) {
var G__23967__i = 0, G__23967__a = new Array(arguments.length -  0);
while (G__23967__i < G__23967__a.length) {G__23967__a[G__23967__i] = arguments[G__23967__i + 0]; ++G__23967__i;}
G__23966 = new cljs.core.IndexedSeq(G__23967__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__23966);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__23970_23972 = obj;
var G__23971_23973 = ((function (G__23970_23972,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__23970_23972,keys))
;
goog.object.forEach(G__23970_23972,G__23971_23973);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__23974 = (i__$1 + (1));
var G__23975 = (j__$1 + (1));
var G__23976 = (len__$1 - (1));
i__$1 = G__23974;
j__$1 = G__23975;
len__$1 = G__23976;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__23977 = (i__$1 - (1));
var G__23978 = (j__$1 - (1));
var G__23979 = (len__$1 - (1));
i__$1 = G__23977;
j__$1 = G__23978;
len__$1 = G__23979;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj23981 = {};
return obj23981;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__23983 = s;
if(G__23983){
var bit__4488__auto__ = (G__23983.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4488__auto__) || (G__23983.cljs$core$ISeq$)){
return true;
} else {
if((!G__23983.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23983);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23983);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__23985 = s;
if(G__23985){
var bit__4488__auto__ = (G__23985.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4488__auto__) || (G__23985.cljs$core$ISeqable$)){
return true;
} else {
if((!G__23985.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__23985);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__23985);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3807__auto__ = cljs.core.fn_QMARK_(f);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var G__23989 = f;
if(G__23989){
var bit__4488__auto__ = (G__23989.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4488__auto__) || (G__23989.cljs$core$IFn$)){
return true;
} else {
if((!G__23989.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__23989);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__23989);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__24002 = n;
return isNaN(G__24002);
})())) && (!((n === Infinity))) && (((function (){var G__24003 = n;
return parseFloat(G__24003);
})() === (function (){var G__24004 = n;
var G__24005 = (10);
return parseInt(G__24004,G__24005);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__24006__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__24007 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__24008 = etc;
s = G__24007;
xs = G__24008;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__24006 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24009__i = 0, G__24009__a = new Array(arguments.length -  2);
while (G__24009__i < G__24009__a.length) {G__24009__a[G__24009__i] = arguments[G__24009__i + 2]; ++G__24009__i;}
  more = new cljs.core.IndexedSeq(G__24009__a,0);
} 
return G__24006__delegate.call(this,x,y,more);};
G__24006.cljs$lang$maxFixedArity = 2;
G__24006.cljs$lang$applyTo = (function (arglist__24010){
var x = cljs.core.first(arglist__24010);
arglist__24010 = cljs.core.next(arglist__24010);
var y = cljs.core.first(arglist__24010);
var more = cljs.core.rest(arglist__24010);
return G__24006__delegate(x,y,more);
});
G__24006.cljs$core$IFn$_invoke$arity$variadic = G__24006__delegate;
return G__24006;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__24011 = null;
if (arguments.length > 2) {
var G__24012__i = 0, G__24012__a = new Array(arguments.length -  2);
while (G__24012__i < G__24012__a.length) {G__24012__a[G__24012__i] = arguments[G__24012__i + 2]; ++G__24012__i;}
G__24011 = new cljs.core.IndexedSeq(G__24012__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24011);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__24016 = x;
if(G__24016){
var bit__4481__auto__ = (G__24016.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4481__auto__) || (G__24016.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__24017 = x;
var G__24018 = y;
return goog.array.defaultCompare(G__24017,G__24018);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__24023 = xs;
var G__24024 = ys;
var G__24025 = len;
var G__24026 = (n + (1));
xs = G__24023;
ys = G__24024;
len = G__24025;
n = G__24026;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__24031 = x;
var G__24032 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24031,G__24032) : f.call(null,G__24031,G__24032));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__24033 = y;
var G__24034 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24033,G__24034) : f.call(null,G__24033,G__24034));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__24040 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__24040) : cljs.core.to_array.call(null,G__24040));
})();
var G__24041_24043 = a;
var G__24042_24044 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__24041_24043,G__24042_24044);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__24050 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24050) : keyfn.call(null,G__24050));
})(),(function (){var G__24051 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24051) : keyfn.call(null,G__24051));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__24057 = f;
var G__24058 = cljs.core.first(s);
var G__24059 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__24057,G__24058,G__24059) : cljs.core.reduce.call(null,G__24057,G__24058,G__24059));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__24060 = val__$1;
var G__24061 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24060,G__24061) : f.call(null,G__24060,G__24061));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24062 = nval;
var G__24063 = cljs.core.next(coll__$1);
val__$1 = G__24062;
coll__$1 = G__24063;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__24067 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__24067) : cljs.core.to_array.call(null,G__24067));
})();
var G__24068_24070 = a;
goog.array.shuffle(G__24068_24070);

var G__24069 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__24069) : cljs.core.vec.call(null,G__24069));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__24073 = coll;
if(G__24073){
var bit__4481__auto__ = (G__24073.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4481__auto__) || (G__24073.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__24074 = coll;
if(G__24074){
var bit__4481__auto__ = (G__24074.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4481__auto__) || (G__24074.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__24083 = null;
var G__24083__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__24083__1 = (function (x){
var G__24080 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__24080) : cf.call(null,G__24080));
});
var G__24083__2 = (function (x,y){
var G__24081 = x;
var G__24082 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24081,G__24082) : f.call(null,G__24081,G__24082));
});
G__24083 = function(x,y){
switch(arguments.length){
case 0:
return G__24083__0.call(this);
case 1:
return G__24083__1.call(this,x);
case 2:
return G__24083__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24083.cljs$core$IFn$_invoke$arity$0 = G__24083__0;
G__24083.cljs$core$IFn$_invoke$arity$1 = G__24083__1;
G__24083.cljs$core$IFn$_invoke$arity$2 = G__24083__2;
return G__24083;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__24090 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__24090) : xform.call(null,G__24090));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__24091 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__24091) : f__$1.call(null,G__24091));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__24092__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__24092 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24093__i = 0, G__24093__a = new Array(arguments.length -  2);
while (G__24093__i < G__24093__a.length) {G__24093__a[G__24093__i] = arguments[G__24093__i + 2]; ++G__24093__i;}
  more = new cljs.core.IndexedSeq(G__24093__a,0);
} 
return G__24092__delegate.call(this,x,y,more);};
G__24092.cljs$lang$maxFixedArity = 2;
G__24092.cljs$lang$applyTo = (function (arglist__24094){
var x = cljs.core.first(arglist__24094);
arglist__24094 = cljs.core.next(arglist__24094);
var y = cljs.core.first(arglist__24094);
var more = cljs.core.rest(arglist__24094);
return G__24092__delegate(x,y,more);
});
G__24092.cljs$core$IFn$_invoke$arity$variadic = G__24092__delegate;
return G__24092;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__24095 = null;
if (arguments.length > 2) {
var G__24096__i = 0, G__24096__a = new Array(arguments.length -  2);
while (G__24096__i < G__24096__a.length) {G__24096__a[G__24096__i] = arguments[G__24096__i + 2]; ++G__24096__i;}
G__24095 = new cljs.core.IndexedSeq(G__24096__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24095);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__24097__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__24097 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24098__i = 0, G__24098__a = new Array(arguments.length -  2);
while (G__24098__i < G__24098__a.length) {G__24098__a[G__24098__i] = arguments[G__24098__i + 2]; ++G__24098__i;}
  more = new cljs.core.IndexedSeq(G__24098__a,0);
} 
return G__24097__delegate.call(this,x,y,more);};
G__24097.cljs$lang$maxFixedArity = 2;
G__24097.cljs$lang$applyTo = (function (arglist__24099){
var x = cljs.core.first(arglist__24099);
arglist__24099 = cljs.core.next(arglist__24099);
var y = cljs.core.first(arglist__24099);
var more = cljs.core.rest(arglist__24099);
return G__24097__delegate(x,y,more);
});
G__24097.cljs$core$IFn$_invoke$arity$variadic = G__24097__delegate;
return G__24097;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__24100 = null;
if (arguments.length > 2) {
var G__24101__i = 0, G__24101__a = new Array(arguments.length -  2);
while (G__24101__i < G__24101__a.length) {G__24101__a[G__24101__i] = arguments[G__24101__i + 2]; ++G__24101__i;}
G__24100 = new cljs.core.IndexedSeq(G__24101__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24100);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__24102__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__24102 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24103__i = 0, G__24103__a = new Array(arguments.length -  2);
while (G__24103__i < G__24103__a.length) {G__24103__a[G__24103__i] = arguments[G__24103__i + 2]; ++G__24103__i;}
  more = new cljs.core.IndexedSeq(G__24103__a,0);
} 
return G__24102__delegate.call(this,x,y,more);};
G__24102.cljs$lang$maxFixedArity = 2;
G__24102.cljs$lang$applyTo = (function (arglist__24104){
var x = cljs.core.first(arglist__24104);
arglist__24104 = cljs.core.next(arglist__24104);
var y = cljs.core.first(arglist__24104);
var more = cljs.core.rest(arglist__24104);
return G__24102__delegate(x,y,more);
});
G__24102.cljs$core$IFn$_invoke$arity$variadic = G__24102__delegate;
return G__24102;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__24105 = null;
if (arguments.length > 2) {
var G__24106__i = 0, G__24106__a = new Array(arguments.length -  2);
while (G__24106__i < G__24106__a.length) {G__24106__a[G__24106__i] = arguments[G__24106__i + 2]; ++G__24106__i;}
G__24105 = new cljs.core.IndexedSeq(G__24106__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24105);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__24111__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__24111 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24112__i = 0, G__24112__a = new Array(arguments.length -  2);
while (G__24112__i < G__24112__a.length) {G__24112__a[G__24112__i] = arguments[G__24112__i + 2]; ++G__24112__i;}
  more = new cljs.core.IndexedSeq(G__24112__a,0);
} 
return G__24111__delegate.call(this,x,y,more);};
G__24111.cljs$lang$maxFixedArity = 2;
G__24111.cljs$lang$applyTo = (function (arglist__24113){
var x = cljs.core.first(arglist__24113);
arglist__24113 = cljs.core.next(arglist__24113);
var y = cljs.core.first(arglist__24113);
var more = cljs.core.rest(arglist__24113);
return G__24111__delegate(x,y,more);
});
G__24111.cljs$core$IFn$_invoke$arity$variadic = G__24111__delegate;
return G__24111;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__24114 = null;
if (arguments.length > 2) {
var G__24115__i = 0, G__24115__a = new Array(arguments.length -  2);
while (G__24115__i < G__24115__a.length) {G__24115__a[G__24115__i] = arguments[G__24115__i + 2]; ++G__24115__i;}
G__24114 = new cljs.core.IndexedSeq(G__24115__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24114);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__24116__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__24117 = y;
var G__24118 = cljs.core.first(more);
var G__24119 = cljs.core.next(more);
x = G__24117;
y = G__24118;
more = G__24119;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24116 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24120__i = 0, G__24120__a = new Array(arguments.length -  2);
while (G__24120__i < G__24120__a.length) {G__24120__a[G__24120__i] = arguments[G__24120__i + 2]; ++G__24120__i;}
  more = new cljs.core.IndexedSeq(G__24120__a,0);
} 
return G__24116__delegate.call(this,x,y,more);};
G__24116.cljs$lang$maxFixedArity = 2;
G__24116.cljs$lang$applyTo = (function (arglist__24121){
var x = cljs.core.first(arglist__24121);
arglist__24121 = cljs.core.next(arglist__24121);
var y = cljs.core.first(arglist__24121);
var more = cljs.core.rest(arglist__24121);
return G__24116__delegate(x,y,more);
});
G__24116.cljs$core$IFn$_invoke$arity$variadic = G__24116__delegate;
return G__24116;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__24122 = null;
if (arguments.length > 2) {
var G__24123__i = 0, G__24123__a = new Array(arguments.length -  2);
while (G__24123__i < G__24123__a.length) {G__24123__a[G__24123__i] = arguments[G__24123__i + 2]; ++G__24123__i;}
G__24122 = new cljs.core.IndexedSeq(G__24123__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24122);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__24124__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__24125 = y;
var G__24126 = cljs.core.first(more);
var G__24127 = cljs.core.next(more);
x = G__24125;
y = G__24126;
more = G__24127;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24124 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24128__i = 0, G__24128__a = new Array(arguments.length -  2);
while (G__24128__i < G__24128__a.length) {G__24128__a[G__24128__i] = arguments[G__24128__i + 2]; ++G__24128__i;}
  more = new cljs.core.IndexedSeq(G__24128__a,0);
} 
return G__24124__delegate.call(this,x,y,more);};
G__24124.cljs$lang$maxFixedArity = 2;
G__24124.cljs$lang$applyTo = (function (arglist__24129){
var x = cljs.core.first(arglist__24129);
arglist__24129 = cljs.core.next(arglist__24129);
var y = cljs.core.first(arglist__24129);
var more = cljs.core.rest(arglist__24129);
return G__24124__delegate(x,y,more);
});
G__24124.cljs$core$IFn$_invoke$arity$variadic = G__24124__delegate;
return G__24124;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__24130 = null;
if (arguments.length > 2) {
var G__24131__i = 0, G__24131__a = new Array(arguments.length -  2);
while (G__24131__i < G__24131__a.length) {G__24131__a[G__24131__i] = arguments[G__24131__i + 2]; ++G__24131__i;}
G__24130 = new cljs.core.IndexedSeq(G__24131__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24130);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__24132__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__24133 = y;
var G__24134 = cljs.core.first(more);
var G__24135 = cljs.core.next(more);
x = G__24133;
y = G__24134;
more = G__24135;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24132 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24136__i = 0, G__24136__a = new Array(arguments.length -  2);
while (G__24136__i < G__24136__a.length) {G__24136__a[G__24136__i] = arguments[G__24136__i + 2]; ++G__24136__i;}
  more = new cljs.core.IndexedSeq(G__24136__a,0);
} 
return G__24132__delegate.call(this,x,y,more);};
G__24132.cljs$lang$maxFixedArity = 2;
G__24132.cljs$lang$applyTo = (function (arglist__24137){
var x = cljs.core.first(arglist__24137);
arglist__24137 = cljs.core.next(arglist__24137);
var y = cljs.core.first(arglist__24137);
var more = cljs.core.rest(arglist__24137);
return G__24132__delegate(x,y,more);
});
G__24132.cljs$core$IFn$_invoke$arity$variadic = G__24132__delegate;
return G__24132;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__24138 = null;
if (arguments.length > 2) {
var G__24139__i = 0, G__24139__a = new Array(arguments.length -  2);
while (G__24139__i < G__24139__a.length) {G__24139__a[G__24139__i] = arguments[G__24139__i + 2]; ++G__24139__i;}
G__24138 = new cljs.core.IndexedSeq(G__24139__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24138);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__24140__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__24141 = y;
var G__24142 = cljs.core.first(more);
var G__24143 = cljs.core.next(more);
x = G__24141;
y = G__24142;
more = G__24143;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24140 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24144__i = 0, G__24144__a = new Array(arguments.length -  2);
while (G__24144__i < G__24144__a.length) {G__24144__a[G__24144__i] = arguments[G__24144__i + 2]; ++G__24144__i;}
  more = new cljs.core.IndexedSeq(G__24144__a,0);
} 
return G__24140__delegate.call(this,x,y,more);};
G__24140.cljs$lang$maxFixedArity = 2;
G__24140.cljs$lang$applyTo = (function (arglist__24145){
var x = cljs.core.first(arglist__24145);
arglist__24145 = cljs.core.next(arglist__24145);
var y = cljs.core.first(arglist__24145);
var more = cljs.core.rest(arglist__24145);
return G__24140__delegate(x,y,more);
});
G__24140.cljs$core$IFn$_invoke$arity$variadic = G__24140__delegate;
return G__24140;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__24146 = null;
if (arguments.length > 2) {
var G__24147__i = 0, G__24147__a = new Array(arguments.length -  2);
while (G__24147__i < G__24147__a.length) {G__24147__a[G__24147__i] = arguments[G__24147__i + 2]; ++G__24147__i;}
G__24146 = new cljs.core.IndexedSeq(G__24147__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24146);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4124__auto__ = x;
var y__4125__auto__ = y;
return ((x__4124__auto__ > y__4125__auto__) ? x__4124__auto__ : y__4125__auto__);
});
var max__3 = (function() { 
var G__24148__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4124__auto__ = x;
var y__4125__auto__ = y;
return ((x__4124__auto__ > y__4125__auto__) ? x__4124__auto__ : y__4125__auto__);
})(),more);
};
var G__24148 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24149__i = 0, G__24149__a = new Array(arguments.length -  2);
while (G__24149__i < G__24149__a.length) {G__24149__a[G__24149__i] = arguments[G__24149__i + 2]; ++G__24149__i;}
  more = new cljs.core.IndexedSeq(G__24149__a,0);
} 
return G__24148__delegate.call(this,x,y,more);};
G__24148.cljs$lang$maxFixedArity = 2;
G__24148.cljs$lang$applyTo = (function (arglist__24150){
var x = cljs.core.first(arglist__24150);
arglist__24150 = cljs.core.next(arglist__24150);
var y = cljs.core.first(arglist__24150);
var more = cljs.core.rest(arglist__24150);
return G__24148__delegate(x,y,more);
});
G__24148.cljs$core$IFn$_invoke$arity$variadic = G__24148__delegate;
return G__24148;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__24151 = null;
if (arguments.length > 2) {
var G__24152__i = 0, G__24152__a = new Array(arguments.length -  2);
while (G__24152__i < G__24152__a.length) {G__24152__a[G__24152__i] = arguments[G__24152__i + 2]; ++G__24152__i;}
G__24151 = new cljs.core.IndexedSeq(G__24152__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24151);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4131__auto__ = x;
var y__4132__auto__ = y;
return ((x__4131__auto__ < y__4132__auto__) ? x__4131__auto__ : y__4132__auto__);
});
var min__3 = (function() { 
var G__24153__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4131__auto__ = x;
var y__4132__auto__ = y;
return ((x__4131__auto__ < y__4132__auto__) ? x__4131__auto__ : y__4132__auto__);
})(),more);
};
var G__24153 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24154__i = 0, G__24154__a = new Array(arguments.length -  2);
while (G__24154__i < G__24154__a.length) {G__24154__a[G__24154__i] = arguments[G__24154__i + 2]; ++G__24154__i;}
  more = new cljs.core.IndexedSeq(G__24154__a,0);
} 
return G__24153__delegate.call(this,x,y,more);};
G__24153.cljs$lang$maxFixedArity = 2;
G__24153.cljs$lang$applyTo = (function (arglist__24155){
var x = cljs.core.first(arglist__24155);
arglist__24155 = cljs.core.next(arglist__24155);
var y = cljs.core.first(arglist__24155);
var more = cljs.core.rest(arglist__24155);
return G__24153__delegate(x,y,more);
});
G__24153.cljs$core$IFn$_invoke$arity$variadic = G__24153__delegate;
return G__24153;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__24156 = null;
if (arguments.length > 2) {
var G__24157__i = 0, G__24157__a = new Array(arguments.length -  2);
while (G__24157__i < G__24157__a.length) {G__24157__a[G__24157__i] = arguments[G__24157__i + 2]; ++G__24157__i;}
G__24156 = new cljs.core.IndexedSeq(G__24157__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24156);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__24158__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__24158 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24159__i = 0, G__24159__a = new Array(arguments.length -  2);
while (G__24159__i < G__24159__a.length) {G__24159__a[G__24159__i] = arguments[G__24159__i + 2]; ++G__24159__i;}
  more = new cljs.core.IndexedSeq(G__24159__a,0);
} 
return G__24158__delegate.call(this,x,y,more);};
G__24158.cljs$lang$maxFixedArity = 2;
G__24158.cljs$lang$applyTo = (function (arglist__24160){
var x = cljs.core.first(arglist__24160);
arglist__24160 = cljs.core.next(arglist__24160);
var y = cljs.core.first(arglist__24160);
var more = cljs.core.rest(arglist__24160);
return G__24158__delegate(x,y,more);
});
G__24158.cljs$core$IFn$_invoke$arity$variadic = G__24158__delegate;
return G__24158;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__24161 = null;
if (arguments.length > 2) {
var G__24162__i = 0, G__24162__a = new Array(arguments.length -  2);
while (G__24162__i < G__24162__a.length) {G__24162__a[G__24162__i] = arguments[G__24162__i + 2]; ++G__24162__i;}
G__24161 = new cljs.core.IndexedSeq(G__24162__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24161);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__24163__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__24163 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24164__i = 0, G__24164__a = new Array(arguments.length -  2);
while (G__24164__i < G__24164__a.length) {G__24164__a[G__24164__i] = arguments[G__24164__i + 2]; ++G__24164__i;}
  more = new cljs.core.IndexedSeq(G__24164__a,0);
} 
return G__24163__delegate.call(this,x,y,more);};
G__24163.cljs$lang$maxFixedArity = 2;
G__24163.cljs$lang$applyTo = (function (arglist__24165){
var x = cljs.core.first(arglist__24165);
arglist__24165 = cljs.core.next(arglist__24165);
var y = cljs.core.first(arglist__24165);
var more = cljs.core.rest(arglist__24165);
return G__24163__delegate(x,y,more);
});
G__24163.cljs$core$IFn$_invoke$arity$variadic = G__24163__delegate;
return G__24163;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__24166 = null;
if (arguments.length > 2) {
var G__24167__i = 0, G__24167__a = new Array(arguments.length -  2);
while (G__24167__i < G__24167__a.length) {G__24167__a[G__24167__i] = arguments[G__24167__i + 2]; ++G__24167__i;}
G__24166 = new cljs.core.IndexedSeq(G__24167__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24166);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__24172__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__24172 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24173__i = 0, G__24173__a = new Array(arguments.length -  2);
while (G__24173__i < G__24173__a.length) {G__24173__a[G__24173__i] = arguments[G__24173__i + 2]; ++G__24173__i;}
  more = new cljs.core.IndexedSeq(G__24173__a,0);
} 
return G__24172__delegate.call(this,x,y,more);};
G__24172.cljs$lang$maxFixedArity = 2;
G__24172.cljs$lang$applyTo = (function (arglist__24174){
var x = cljs.core.first(arglist__24174);
arglist__24174 = cljs.core.next(arglist__24174);
var y = cljs.core.first(arglist__24174);
var more = cljs.core.rest(arglist__24174);
return G__24172__delegate(x,y,more);
});
G__24172.cljs$core$IFn$_invoke$arity$variadic = G__24172__delegate;
return G__24172;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__24175 = null;
if (arguments.length > 2) {
var G__24176__i = 0, G__24176__a = new Array(arguments.length -  2);
while (G__24176__i < G__24176__a.length) {G__24176__a[G__24176__i] = arguments[G__24176__i + 2]; ++G__24176__i;}
G__24175 = new cljs.core.IndexedSeq(G__24176__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24175);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__24177__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__24177 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24178__i = 0, G__24178__a = new Array(arguments.length -  2);
while (G__24178__i < G__24178__a.length) {G__24178__a[G__24178__i] = arguments[G__24178__i + 2]; ++G__24178__i;}
  more = new cljs.core.IndexedSeq(G__24178__a,0);
} 
return G__24177__delegate.call(this,x,y,more);};
G__24177.cljs$lang$maxFixedArity = 2;
G__24177.cljs$lang$applyTo = (function (arglist__24179){
var x = cljs.core.first(arglist__24179);
arglist__24179 = cljs.core.next(arglist__24179);
var y = cljs.core.first(arglist__24179);
var more = cljs.core.rest(arglist__24179);
return G__24177__delegate(x,y,more);
});
G__24177.cljs$core$IFn$_invoke$arity$variadic = G__24177__delegate;
return G__24177;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__24180 = null;
if (arguments.length > 2) {
var G__24181__i = 0, G__24181__a = new Array(arguments.length -  2);
while (G__24181__i < G__24181__a.length) {G__24181__a[G__24181__i] = arguments[G__24181__i + 2]; ++G__24181__i;}
G__24180 = new cljs.core.IndexedSeq(G__24181__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24180);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__24182__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__24182 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24183__i = 0, G__24183__a = new Array(arguments.length -  2);
while (G__24183__i < G__24183__a.length) {G__24183__a[G__24183__i] = arguments[G__24183__i + 2]; ++G__24183__i;}
  more = new cljs.core.IndexedSeq(G__24183__a,0);
} 
return G__24182__delegate.call(this,x,y,more);};
G__24182.cljs$lang$maxFixedArity = 2;
G__24182.cljs$lang$applyTo = (function (arglist__24184){
var x = cljs.core.first(arglist__24184);
arglist__24184 = cljs.core.next(arglist__24184);
var y = cljs.core.first(arglist__24184);
var more = cljs.core.rest(arglist__24184);
return G__24182__delegate(x,y,more);
});
G__24182.cljs$core$IFn$_invoke$arity$variadic = G__24182__delegate;
return G__24182;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__24185 = null;
if (arguments.length > 2) {
var G__24186__i = 0, G__24186__a = new Array(arguments.length -  2);
while (G__24186__i < G__24186__a.length) {G__24186__a[G__24186__i] = arguments[G__24186__i + 2]; ++G__24186__i;}
G__24185 = new cljs.core.IndexedSeq(G__24186__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24185);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__24189 = x;
var G__24190 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__24189,G__24190) : cljs.core.mod.call(null,G__24189,G__24190));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__24191__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__24191 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24192__i = 0, G__24192__a = new Array(arguments.length -  2);
while (G__24192__i < G__24192__a.length) {G__24192__a[G__24192__i] = arguments[G__24192__i + 2]; ++G__24192__i;}
  more = new cljs.core.IndexedSeq(G__24192__a,0);
} 
return G__24191__delegate.call(this,x,y,more);};
G__24191.cljs$lang$maxFixedArity = 2;
G__24191.cljs$lang$applyTo = (function (arglist__24193){
var x = cljs.core.first(arglist__24193);
arglist__24193 = cljs.core.next(arglist__24193);
var y = cljs.core.first(arglist__24193);
var more = cljs.core.rest(arglist__24193);
return G__24191__delegate(x,y,more);
});
G__24191.cljs$core$IFn$_invoke$arity$variadic = G__24191__delegate;
return G__24191;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__24194 = null;
if (arguments.length > 2) {
var G__24195__i = 0, G__24195__a = new Array(arguments.length -  2);
while (G__24195__i < G__24195__a.length) {G__24195__a[G__24195__i] = arguments[G__24195__i + 2]; ++G__24195__i;}
G__24194 = new cljs.core.IndexedSeq(G__24195__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24194);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__24196__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__24196 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24197__i = 0, G__24197__a = new Array(arguments.length -  2);
while (G__24197__i < G__24197__a.length) {G__24197__a[G__24197__i] = arguments[G__24197__i + 2]; ++G__24197__i;}
  more = new cljs.core.IndexedSeq(G__24197__a,0);
} 
return G__24196__delegate.call(this,x,y,more);};
G__24196.cljs$lang$maxFixedArity = 2;
G__24196.cljs$lang$applyTo = (function (arglist__24198){
var x = cljs.core.first(arglist__24198);
arglist__24198 = cljs.core.next(arglist__24198);
var y = cljs.core.first(arglist__24198);
var more = cljs.core.rest(arglist__24198);
return G__24196__delegate(x,y,more);
});
G__24196.cljs$core$IFn$_invoke$arity$variadic = G__24196__delegate;
return G__24196;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__24199 = null;
if (arguments.length > 2) {
var G__24200__i = 0, G__24200__a = new Array(arguments.length -  2);
while (G__24200__i < G__24200__a.length) {G__24200__a[G__24200__i] = arguments[G__24200__i + 2]; ++G__24200__i;}
G__24199 = new cljs.core.IndexedSeq(G__24200__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24199);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__24203 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__24203) : Math.floor.call(null,G__24203));
} else {
var G__24204 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__24204) : Math.ceil.call(null,G__24204));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__24205__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__24205 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24206__i = 0, G__24206__a = new Array(arguments.length -  2);
while (G__24206__i < G__24206__a.length) {G__24206__a[G__24206__i] = arguments[G__24206__i + 2]; ++G__24206__i;}
  more = new cljs.core.IndexedSeq(G__24206__a,0);
} 
return G__24205__delegate.call(this,x,y,more);};
G__24205.cljs$lang$maxFixedArity = 2;
G__24205.cljs$lang$applyTo = (function (arglist__24207){
var x = cljs.core.first(arglist__24207);
arglist__24207 = cljs.core.next(arglist__24207);
var y = cljs.core.first(arglist__24207);
var more = cljs.core.rest(arglist__24207);
return G__24205__delegate(x,y,more);
});
G__24205.cljs$core$IFn$_invoke$arity$variadic = G__24205__delegate;
return G__24205;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__24208 = null;
if (arguments.length > 2) {
var G__24209__i = 0, G__24209__a = new Array(arguments.length -  2);
while (G__24209__i < G__24209__a.length) {G__24209__a[G__24209__i] = arguments[G__24209__i + 2]; ++G__24209__i;}
G__24208 = new cljs.core.IndexedSeq(G__24209__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24208);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__24210__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__24210 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24211__i = 0, G__24211__a = new Array(arguments.length -  2);
while (G__24211__i < G__24211__a.length) {G__24211__a[G__24211__i] = arguments[G__24211__i + 2]; ++G__24211__i;}
  more = new cljs.core.IndexedSeq(G__24211__a,0);
} 
return G__24210__delegate.call(this,x,y,more);};
G__24210.cljs$lang$maxFixedArity = 2;
G__24210.cljs$lang$applyTo = (function (arglist__24212){
var x = cljs.core.first(arglist__24212);
arglist__24212 = cljs.core.next(arglist__24212);
var y = cljs.core.first(arglist__24212);
var more = cljs.core.rest(arglist__24212);
return G__24210__delegate(x,y,more);
});
G__24210.cljs$core$IFn$_invoke$arity$variadic = G__24210__delegate;
return G__24210;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__24213 = null;
if (arguments.length > 2) {
var G__24214__i = 0, G__24214__a = new Array(arguments.length -  2);
while (G__24214__i < G__24214__a.length) {G__24214__a[G__24214__i] = arguments[G__24214__i + 2]; ++G__24214__i;}
G__24213 = new cljs.core.IndexedSeq(G__24214__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24213);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__24215__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__24215 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24216__i = 0, G__24216__a = new Array(arguments.length -  2);
while (G__24216__i < G__24216__a.length) {G__24216__a[G__24216__i] = arguments[G__24216__i + 2]; ++G__24216__i;}
  more = new cljs.core.IndexedSeq(G__24216__a,0);
} 
return G__24215__delegate.call(this,x,y,more);};
G__24215.cljs$lang$maxFixedArity = 2;
G__24215.cljs$lang$applyTo = (function (arglist__24217){
var x = cljs.core.first(arglist__24217);
arglist__24217 = cljs.core.next(arglist__24217);
var y = cljs.core.first(arglist__24217);
var more = cljs.core.rest(arglist__24217);
return G__24215__delegate(x,y,more);
});
G__24215.cljs$core$IFn$_invoke$arity$variadic = G__24215__delegate;
return G__24215;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__24218 = null;
if (arguments.length > 2) {
var G__24219__i = 0, G__24219__a = new Array(arguments.length -  2);
while (G__24219__i < G__24219__a.length) {G__24219__a[G__24219__i] = arguments[G__24219__i + 2]; ++G__24219__i;}
G__24218 = new cljs.core.IndexedSeq(G__24219__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24218);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__24220__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__24220 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24221__i = 0, G__24221__a = new Array(arguments.length -  2);
while (G__24221__i < G__24221__a.length) {G__24221__a[G__24221__i] = arguments[G__24221__i + 2]; ++G__24221__i;}
  more = new cljs.core.IndexedSeq(G__24221__a,0);
} 
return G__24220__delegate.call(this,x,y,more);};
G__24220.cljs$lang$maxFixedArity = 2;
G__24220.cljs$lang$applyTo = (function (arglist__24222){
var x = cljs.core.first(arglist__24222);
arglist__24222 = cljs.core.next(arglist__24222);
var y = cljs.core.first(arglist__24222);
var more = cljs.core.rest(arglist__24222);
return G__24220__delegate(x,y,more);
});
G__24220.cljs$core$IFn$_invoke$arity$variadic = G__24220__delegate;
return G__24220;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__24223 = null;
if (arguments.length > 2) {
var G__24224__i = 0, G__24224__a = new Array(arguments.length -  2);
while (G__24224__i < G__24224__a.length) {G__24224__a[G__24224__i] = arguments[G__24224__i + 2]; ++G__24224__i;}
G__24223 = new cljs.core.IndexedSeq(G__24224__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24223);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__24229__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__24230 = y;
var G__24231 = cljs.core.first(more);
var G__24232 = cljs.core.next(more);
x = G__24230;
y = G__24231;
more = G__24232;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24229 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24233__i = 0, G__24233__a = new Array(arguments.length -  2);
while (G__24233__i < G__24233__a.length) {G__24233__a[G__24233__i] = arguments[G__24233__i + 2]; ++G__24233__i;}
  more = new cljs.core.IndexedSeq(G__24233__a,0);
} 
return G__24229__delegate.call(this,x,y,more);};
G__24229.cljs$lang$maxFixedArity = 2;
G__24229.cljs$lang$applyTo = (function (arglist__24234){
var x = cljs.core.first(arglist__24234);
arglist__24234 = cljs.core.next(arglist__24234);
var y = cljs.core.first(arglist__24234);
var more = cljs.core.rest(arglist__24234);
return G__24229__delegate(x,y,more);
});
G__24229.cljs$core$IFn$_invoke$arity$variadic = G__24229__delegate;
return G__24229;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__24235 = null;
if (arguments.length > 2) {
var G__24236__i = 0, G__24236__a = new Array(arguments.length -  2);
while (G__24236__i < G__24236__a.length) {G__24236__a[G__24236__i] = arguments[G__24236__i + 2]; ++G__24236__i;}
G__24235 = new cljs.core.IndexedSeq(G__24236__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24235);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__24237 = (n__$1 - (1));
var G__24238 = cljs.core.next(xs);
n__$1 = G__24237;
xs = G__24238;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__24242 = x;
return goog.string.buildString(G__24242);
}
});
var str__2 = (function() { 
var G__24243__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__24244 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__24245 = cljs.core.next(more);
sb = G__24244;
more = G__24245;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__24243 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__24246__i = 0, G__24246__a = new Array(arguments.length -  1);
while (G__24246__i < G__24246__a.length) {G__24246__a[G__24246__i] = arguments[G__24246__i + 1]; ++G__24246__i;}
  ys = new cljs.core.IndexedSeq(G__24246__a,0);
} 
return G__24243__delegate.call(this,x,ys);};
G__24243.cljs$lang$maxFixedArity = 1;
G__24243.cljs$lang$applyTo = (function (arglist__24247){
var x = cljs.core.first(arglist__24247);
var ys = cljs.core.rest(arglist__24247);
return G__24243__delegate(x,ys);
});
G__24243.cljs$core$IFn$_invoke$arity$variadic = G__24243__delegate;
return G__24243;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__24248 = null;
if (arguments.length > 1) {
var G__24249__i = 0, G__24249__a = new Array(arguments.length -  1);
while (G__24249__i < G__24249__a.length) {G__24249__a[G__24249__i] = arguments[G__24249__i + 1]; ++G__24249__i;}
G__24248 = new cljs.core.IndexedSeq(G__24249__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__24248);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__24250 = cljs.core.next(xs);
var G__24251 = cljs.core.next(ys);
xs = G__24250;
ys = G__24251;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__24252 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__24253 = cljs.core.next(s);
res = G__24252;
s = G__24253;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__24258 = ((h + (cljs.core.hash((function (){var G__24256 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24256) : cljs.core.key.call(null,G__24256));
})()) ^ cljs.core.hash((function (){var G__24257 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24257) : cljs.core.val.call(null,G__24257));
})()))) % (4503599627370496));
var G__24259 = cljs.core.next(s);
h = G__24258;
s = G__24259;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__24260 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__24261 = cljs.core.next(s__$1);
h = G__24260;
s__$1 = G__24261;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__24272_24282 = cljs.core.seq(fn_map);
var chunk__24273_24283 = null;
var count__24274_24284 = (0);
var i__24275_24285 = (0);
while(true){
if((i__24275_24285 < count__24274_24284)){
var vec__24276_24286 = chunk__24273_24283.cljs$core$IIndexed$_nth$arity$2(null,i__24275_24285);
var key_name_24287 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24276_24286,(0),null);
var f_24288 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24276_24286,(1),null);
var str_name_24289 = (function (){var G__24277 = key_name_24287;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24277) : cljs.core.name.call(null,G__24277));
})();
(obj[str_name_24289] = f_24288);

var G__24290 = seq__24272_24282;
var G__24291 = chunk__24273_24283;
var G__24292 = count__24274_24284;
var G__24293 = (i__24275_24285 + (1));
seq__24272_24282 = G__24290;
chunk__24273_24283 = G__24291;
count__24274_24284 = G__24292;
i__24275_24285 = G__24293;
continue;
} else {
var temp__4126__auto___24294 = cljs.core.seq(seq__24272_24282);
if(temp__4126__auto___24294){
var seq__24272_24295__$1 = temp__4126__auto___24294;
if(cljs.core.chunked_seq_QMARK_(seq__24272_24295__$1)){
var c__4594__auto___24296 = (function (){var G__24278 = seq__24272_24295__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__24278) : cljs.core.chunk_first.call(null,G__24278));
})();
var G__24297 = (function (){var G__24279 = seq__24272_24295__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__24279) : cljs.core.chunk_rest.call(null,G__24279));
})();
var G__24298 = c__4594__auto___24296;
var G__24299 = cljs.core.count(c__4594__auto___24296);
var G__24300 = (0);
seq__24272_24282 = G__24297;
chunk__24273_24283 = G__24298;
count__24274_24284 = G__24299;
i__24275_24285 = G__24300;
continue;
} else {
var vec__24280_24301 = cljs.core.first(seq__24272_24295__$1);
var key_name_24302 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24280_24301,(0),null);
var f_24303 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24280_24301,(1),null);
var str_name_24304 = (function (){var G__24281 = key_name_24302;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24281) : cljs.core.name.call(null,G__24281));
})();
(obj[str_name_24304] = f_24303);

var G__24305 = cljs.core.next(seq__24272_24295__$1);
var G__24306 = null;
var G__24307 = (0);
var G__24308 = (0);
seq__24272_24282 = G__24305;
chunk__24273_24283 = G__24306;
count__24274_24284 = G__24307;
i__24275_24285 = G__24308;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__24310 = coll;
if(G__24310){
var bit__4488__auto__ = (G__24310.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4488__auto__) || (G__24310.cljs$core$IReversible$)){
return true;
} else {
if((!G__24310.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__24310);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__24310);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__24311 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__24311;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__24312 = (i - (1));
var G__24313 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__24312;
r = G__24313;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__24314__i = 0, G__24314__a = new Array(arguments.length -  0);
while (G__24314__i < G__24314__a.length) {G__24314__a[G__24314__i] = arguments[G__24314__i + 0]; ++G__24314__i;}
  xs = new cljs.core.IndexedSeq(G__24314__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__24315){
var xs = cljs.core.seq(arglist__24315);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3807__auto__ = (coll == null);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var G__24319 = coll;
if(G__24319){
var bit__4481__auto__ = (G__24319.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4481__auto__) || (G__24319.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__24321 = x;
if(G__24321){
var bit__4488__auto__ = (G__24321.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4488__auto__) || (G__24321.cljs$core$IList$)){
return true;
} else {
if((!G__24321.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__24321);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__24321);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3795__auto__ = cljs.core.not(a.ns);
if(and__3795__auto__){
return b.ns;
} else {
return and__3795__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__24328 = a.ns;
var G__24329 = b.ns;
return goog.array.defaultCompare(G__24328,G__24329);
})();
if(((0) === nsc)){
var G__24330 = a.name;
var G__24331 = b.name;
return goog.array.defaultCompare(G__24330,G__24331);
} else {
return nsc;
}
}
} else {
var G__24332 = a.name;
var G__24333 = b.name;
return goog.array.defaultCompare(G__24332,G__24333);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4228__auto__ = self__._hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__24335 = null;
var G__24335__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__24335__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__24335 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__24335__2.call(this,self__,coll);
case 3:
return G__24335__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24335.cljs$core$IFn$_invoke$arity$2 = G__24335__2;
G__24335.cljs$core$IFn$_invoke$arity$3 = G__24335__3;
return G__24335;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args24334){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24334)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__24337 = x;
if(G__24337){
var bit__4481__auto__ = (G__24337.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4481__auto__) || (G__24337.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__24339 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24339) : cljs.core.name.call(null,G__24339));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__24340 = ls.sval();
ls = G__24340;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__24342 = s;
if(G__24342){
var bit__4481__auto__ = (G__24342.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4481__auto__) || (G__24342.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__24343 = cljs.core.next(s__$1);
s__$1 = G__24343;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_24344 = (0);
var xs_24345 = cljs.core.seq(coll);
while(true){
if(xs_24345){
(ret[i_24344] = cljs.core.to_array(cljs.core.first(xs_24345)));

var G__24346 = (i_24344 + (1));
var G__24347 = cljs.core.next(xs_24345);
i_24344 = G__24346;
xs_24345 = G__24347;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24350 = (i + (1));
var G__24351 = cljs.core.next(s__$1);
i = G__24350;
s__$1 = G__24351;
continue;
} else {
return a;
}
break;
}
} else {
var n__4694__auto___24352 = size;
var i_24353 = (0);
while(true){
if((i_24353 < n__4694__auto___24352)){
(a[i_24353] = init_val_or_seq);

var G__24354 = (i_24353 + (1));
i_24353 = G__24354;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24357 = (i + (1));
var G__24358 = cljs.core.next(s__$1);
i = G__24357;
s__$1 = G__24358;
continue;
} else {
return a;
}
break;
}
} else {
var n__4694__auto___24359 = size;
var i_24360 = (0);
while(true){
if((i_24360 < n__4694__auto___24359)){
(a[i_24360] = init_val_or_seq);

var G__24361 = (i_24360 + (1));
i_24360 = G__24361;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24364 = (i + (1));
var G__24365 = cljs.core.next(s__$1);
i = G__24364;
s__$1 = G__24365;
continue;
} else {
return a;
}
break;
}
} else {
var n__4694__auto___24366 = size;
var i_24367 = (0);
while(true){
if((i_24367 < n__4694__auto___24366)){
(a[i_24367] = init_val_or_seq);

var G__24368 = (i_24367 + (1));
i_24367 = G__24368;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24371 = (i + (1));
var G__24372 = cljs.core.next(s__$1);
i = G__24371;
s__$1 = G__24372;
continue;
} else {
return a;
}
break;
}
} else {
var n__4694__auto___24373 = size;
var i_24374 = (0);
while(true){
if((i_24374 < n__4694__auto___24373)){
(a[i_24374] = init_val_or_seq);

var G__24375 = (i_24374 + (1));
i_24374 = G__24375;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__24376 = cljs.core.next(s__$1);
var G__24377 = (i - (1));
var G__24378 = (sum + (1));
s__$1 = G__24376;
i = G__24377;
sum = G__24378;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__24398__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__24398 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__24399__i = 0, G__24399__a = new Array(arguments.length -  2);
while (G__24399__i < G__24399__a.length) {G__24399__a[G__24399__i] = arguments[G__24399__i + 2]; ++G__24399__i;}
  zs = new cljs.core.IndexedSeq(G__24399__a,0);
} 
return G__24398__delegate.call(this,x,y,zs);};
G__24398.cljs$lang$maxFixedArity = 2;
G__24398.cljs$lang$applyTo = (function (arglist__24400){
var x = cljs.core.first(arglist__24400);
arglist__24400 = cljs.core.next(arglist__24400);
var y = cljs.core.first(arglist__24400);
var zs = cljs.core.rest(arglist__24400);
return G__24398__delegate(x,y,zs);
});
G__24398.cljs$core$IFn$_invoke$arity$variadic = G__24398__delegate;
return G__24398;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__24401 = null;
if (arguments.length > 2) {
var G__24402__i = 0, G__24402__a = new Array(arguments.length -  2);
while (G__24402__i < G__24402__a.length) {G__24402__a[G__24402__i] = arguments[G__24402__i + 2]; ++G__24402__i;}
G__24401 = new cljs.core.IndexedSeq(G__24402__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__24403__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__24403 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__24404__i = 0, G__24404__a = new Array(arguments.length -  4);
while (G__24404__i < G__24404__a.length) {G__24404__a[G__24404__i] = arguments[G__24404__i + 4]; ++G__24404__i;}
  more = new cljs.core.IndexedSeq(G__24404__a,0);
} 
return G__24403__delegate.call(this,a,b,c,d,more);};
G__24403.cljs$lang$maxFixedArity = 4;
G__24403.cljs$lang$applyTo = (function (arglist__24405){
var a = cljs.core.first(arglist__24405);
arglist__24405 = cljs.core.next(arglist__24405);
var b = cljs.core.first(arglist__24405);
arglist__24405 = cljs.core.next(arglist__24405);
var c = cljs.core.first(arglist__24405);
arglist__24405 = cljs.core.next(arglist__24405);
var d = cljs.core.first(arglist__24405);
var more = cljs.core.rest(arglist__24405);
return G__24403__delegate(a,b,c,d,more);
});
G__24403.cljs$core$IFn$_invoke$arity$variadic = G__24403__delegate;
return G__24403;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__24406 = null;
if (arguments.length > 4) {
var G__24407__i = 0, G__24407__a = new Array(arguments.length -  4);
while (G__24407__i < G__24407__a.length) {G__24407__a[G__24407__i] = arguments[G__24407__i + 4]; ++G__24407__i;}
G__24406 = new cljs.core.IndexedSeq(G__24407__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__24406);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__24408__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__24409 = ntcoll;
var G__24410 = cljs.core.first(vals);
var G__24411 = cljs.core.next(vals);
tcoll = G__24409;
val = G__24410;
vals = G__24411;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24408 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__24412__i = 0, G__24412__a = new Array(arguments.length -  2);
while (G__24412__i < G__24412__a.length) {G__24412__a[G__24412__i] = arguments[G__24412__i + 2]; ++G__24412__i;}
  vals = new cljs.core.IndexedSeq(G__24412__a,0);
} 
return G__24408__delegate.call(this,tcoll,val,vals);};
G__24408.cljs$lang$maxFixedArity = 2;
G__24408.cljs$lang$applyTo = (function (arglist__24413){
var tcoll = cljs.core.first(arglist__24413);
arglist__24413 = cljs.core.next(arglist__24413);
var val = cljs.core.first(arglist__24413);
var vals = cljs.core.rest(arglist__24413);
return G__24408__delegate(tcoll,val,vals);
});
G__24408.cljs$core$IFn$_invoke$arity$variadic = G__24408__delegate;
return G__24408;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__24414 = null;
if (arguments.length > 2) {
var G__24415__i = 0, G__24415__a = new Array(arguments.length -  2);
while (G__24415__i < G__24415__a.length) {G__24415__a[G__24415__i] = arguments[G__24415__i + 2]; ++G__24415__i;}
G__24414 = new cljs.core.IndexedSeq(G__24415__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__24414);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__24416__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__24417 = ntcoll;
var G__24418 = cljs.core.first(kvs);
var G__24419 = cljs.core.second(kvs);
var G__24420 = cljs.core.nnext(kvs);
tcoll = G__24417;
key = G__24418;
val = G__24419;
kvs = G__24420;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24416 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__24421__i = 0, G__24421__a = new Array(arguments.length -  3);
while (G__24421__i < G__24421__a.length) {G__24421__a[G__24421__i] = arguments[G__24421__i + 3]; ++G__24421__i;}
  kvs = new cljs.core.IndexedSeq(G__24421__a,0);
} 
return G__24416__delegate.call(this,tcoll,key,val,kvs);};
G__24416.cljs$lang$maxFixedArity = 3;
G__24416.cljs$lang$applyTo = (function (arglist__24422){
var tcoll = cljs.core.first(arglist__24422);
arglist__24422 = cljs.core.next(arglist__24422);
var key = cljs.core.first(arglist__24422);
arglist__24422 = cljs.core.next(arglist__24422);
var val = cljs.core.first(arglist__24422);
var kvs = cljs.core.rest(arglist__24422);
return G__24416__delegate(tcoll,key,val,kvs);
});
G__24416.cljs$core$IFn$_invoke$arity$variadic = G__24416__delegate;
return G__24416;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__24423 = null;
if (arguments.length > 3) {
var G__24424__i = 0, G__24424__a = new Array(arguments.length -  3);
while (G__24424__i < G__24424__a.length) {G__24424__a[G__24424__i] = arguments[G__24424__i + 3]; ++G__24424__i;}
G__24423 = new cljs.core.IndexedSeq(G__24424__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__24423);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__24425__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__24426 = ntcoll;
var G__24427 = cljs.core.first(ks);
var G__24428 = cljs.core.next(ks);
tcoll = G__24426;
key = G__24427;
ks = G__24428;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24425 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24429__i = 0, G__24429__a = new Array(arguments.length -  2);
while (G__24429__i < G__24429__a.length) {G__24429__a[G__24429__i] = arguments[G__24429__i + 2]; ++G__24429__i;}
  ks = new cljs.core.IndexedSeq(G__24429__a,0);
} 
return G__24425__delegate.call(this,tcoll,key,ks);};
G__24425.cljs$lang$maxFixedArity = 2;
G__24425.cljs$lang$applyTo = (function (arglist__24430){
var tcoll = cljs.core.first(arglist__24430);
arglist__24430 = cljs.core.next(arglist__24430);
var key = cljs.core.first(arglist__24430);
var ks = cljs.core.rest(arglist__24430);
return G__24425__delegate(tcoll,key,ks);
});
G__24425.cljs$core$IFn$_invoke$arity$variadic = G__24425__delegate;
return G__24425;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__24431 = null;
if (arguments.length > 2) {
var G__24432__i = 0, G__24432__a = new Array(arguments.length -  2);
while (G__24432__i < G__24432__a.length) {G__24432__a[G__24432__i] = arguments[G__24432__i + 2]; ++G__24432__i;}
G__24431 = new cljs.core.IndexedSeq(G__24432__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__24431);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__24433__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__24434 = ntcoll;
var G__24435 = cljs.core.first(vals);
var G__24436 = cljs.core.next(vals);
tcoll = G__24434;
val = G__24435;
vals = G__24436;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24433 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__24437__i = 0, G__24437__a = new Array(arguments.length -  2);
while (G__24437__i < G__24437__a.length) {G__24437__a[G__24437__i] = arguments[G__24437__i + 2]; ++G__24437__i;}
  vals = new cljs.core.IndexedSeq(G__24437__a,0);
} 
return G__24433__delegate.call(this,tcoll,val,vals);};
G__24433.cljs$lang$maxFixedArity = 2;
G__24433.cljs$lang$applyTo = (function (arglist__24438){
var tcoll = cljs.core.first(arglist__24438);
arglist__24438 = cljs.core.next(arglist__24438);
var val = cljs.core.first(arglist__24438);
var vals = cljs.core.rest(arglist__24438);
return G__24433__delegate(tcoll,val,vals);
});
G__24433.cljs$core$IFn$_invoke$arity$variadic = G__24433__delegate;
return G__24433;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__24439 = null;
if (arguments.length > 2) {
var G__24440__i = 0, G__24440__a = new Array(arguments.length -  2);
while (G__24440__i < G__24440__a.length) {G__24440__a[G__24440__i] = arguments[G__24440__i + 2]; ++G__24440__i;}
G__24439 = new cljs.core.IndexedSeq(G__24440__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__24439);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4738 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4738);
} else {
var G__24651 = a4738;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24651) : f.call(null,G__24651));
}
} else {
var b4739 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4738,b4739);
} else {
var G__24652 = a4738;
var G__24653 = b4739;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24652,G__24653) : f.call(null,G__24652,G__24653));
}
} else {
var c4740 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4738,b4739,c4740);
} else {
var G__24654 = a4738;
var G__24655 = b4739;
var G__24656 = c4740;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24654,G__24655,G__24656) : f.call(null,G__24654,G__24655,G__24656));
}
} else {
var d4741 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4738,b4739,c4740,d4741);
} else {
var G__24657 = a4738;
var G__24658 = b4739;
var G__24659 = c4740;
var G__24660 = d4741;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24657,G__24658,G__24659,G__24660) : f.call(null,G__24657,G__24658,G__24659,G__24660));
}
} else {
var e4742 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4738,b4739,c4740,d4741,e4742);
} else {
var G__24661 = a4738;
var G__24662 = b4739;
var G__24663 = c4740;
var G__24664 = d4741;
var G__24665 = e4742;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__24661,G__24662,G__24663,G__24664,G__24665) : f.call(null,G__24661,G__24662,G__24663,G__24664,G__24665));
}
} else {
var f4743 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4738,b4739,c4740,d4741,e4742,f4743);
} else {
var G__24666 = a4738;
var G__24667 = b4739;
var G__24668 = c4740;
var G__24669 = d4741;
var G__24670 = e4742;
var G__24671 = f4743;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__24666,G__24667,G__24668,G__24669,G__24670,G__24671) : f.call(null,G__24666,G__24667,G__24668,G__24669,G__24670,G__24671));
}
} else {
var g4744 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4738,b4739,c4740,d4741,e4742,f4743,g4744);
} else {
var G__24672 = a4738;
var G__24673 = b4739;
var G__24674 = c4740;
var G__24675 = d4741;
var G__24676 = e4742;
var G__24677 = f4743;
var G__24678 = g4744;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__24672,G__24673,G__24674,G__24675,G__24676,G__24677,G__24678) : f.call(null,G__24672,G__24673,G__24674,G__24675,G__24676,G__24677,G__24678));
}
} else {
var h4745 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4738,b4739,c4740,d4741,e4742,f4743,g4744,h4745);
} else {
var G__24679 = a4738;
var G__24680 = b4739;
var G__24681 = c4740;
var G__24682 = d4741;
var G__24683 = e4742;
var G__24684 = f4743;
var G__24685 = g4744;
var G__24686 = h4745;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__24679,G__24680,G__24681,G__24682,G__24683,G__24684,G__24685,G__24686) : f.call(null,G__24679,G__24680,G__24681,G__24682,G__24683,G__24684,G__24685,G__24686));
}
} else {
var i4746 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4738,b4739,c4740,d4741,e4742,f4743,g4744,h4745,i4746);
} else {
var G__24687 = a4738;
var G__24688 = b4739;
var G__24689 = c4740;
var G__24690 = d4741;
var G__24691 = e4742;
var G__24692 = f4743;
var G__24693 = g4744;
var G__24694 = h4745;
var G__24695 = i4746;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__24687,G__24688,G__24689,G__24690,G__24691,G__24692,G__24693,G__24694,G__24695) : f.call(null,G__24687,G__24688,G__24689,G__24690,G__24691,G__24692,G__24693,G__24694,G__24695));
}
} else {
var j4747 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4738,b4739,c4740,d4741,e4742,f4743,g4744,h4745,i4746,j4747);
} else {
var G__24696 = a4738;
var G__24697 = b4739;
var G__24698 = c4740;
var G__24699 = d4741;
var G__24700 = e4742;
var G__24701 = f4743;
var G__24702 = g4744;
var G__24703 = h4745;
var G__24704 = i4746;
var G__24705 = j4747;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__24696,G__24697,G__24698,G__24699,G__24700,G__24701,G__24702,G__24703,G__24704,G__24705) : f.call(null,G__24696,G__24697,G__24698,G__24699,G__24700,G__24701,G__24702,G__24703,G__24704,G__24705));
}
} else {
var k4748 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4738,b4739,c4740,d4741,e4742,f4743,g4744,h4745,i4746,j4747,k4748);
} else {
var G__24706 = a4738;
var G__24707 = b4739;
var G__24708 = c4740;
var G__24709 = d4741;
var G__24710 = e4742;
var G__24711 = f4743;
var G__24712 = g4744;
var G__24713 = h4745;
var G__24714 = i4746;
var G__24715 = j4747;
var G__24716 = k4748;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__24706,G__24707,G__24708,G__24709,G__24710,G__24711,G__24712,G__24713,G__24714,G__24715,G__24716) : f.call(null,G__24706,G__24707,G__24708,G__24709,G__24710,G__24711,G__24712,G__24713,G__24714,G__24715,G__24716));
}
} else {
var l4749 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4738,b4739,c4740,d4741,e4742,f4743,g4744,h4745,i4746,j4747,k4748,l4749);
} else {
var G__24717 = a4738;
var G__24718 = b4739;
var G__24719 = c4740;
var G__24720 = d4741;
var G__24721 = e4742;
var G__24722 = f4743;
var G__24723 = g4744;
var G__24724 = h4745;
var G__24725 = i4746;
var G__24726 = j4747;
var G__24727 = k4748;
var G__24728 = l4749;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__24717,G__24718,G__24719,G__24720,G__24721,G__24722,G__24723,G__24724,G__24725,G__24726,G__24727,G__24728) : f.call(null,G__24717,G__24718,G__24719,G__24720,G__24721,G__24722,G__24723,G__24724,G__24725,G__24726,G__24727,G__24728));
}
} else {
var m4750 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4738,b4739,c4740,d4741,e4742,f4743,g4744,h4745,i4746,j4747,k4748,l4749,m4750);
} else {
var G__24729 = a4738;
var G__24730 = b4739;
var G__24731 = c4740;
var G__24732 = d4741;
var G__24733 = e4742;
var G__24734 = f4743;
var G__24735 = g4744;
var G__24736 = h4745;
var G__24737 = i4746;
var G__24738 = j4747;
var G__24739 = k4748;
var G__24740 = l4749;
var G__24741 = m4750;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__24729,G__24730,G__24731,G__24732,G__24733,G__24734,G__24735,G__24736,G__24737,G__24738,G__24739,G__24740,G__24741) : f.call(null,G__24729,G__24730,G__24731,G__24732,G__24733,G__24734,G__24735,G__24736,G__24737,G__24738,G__24739,G__24740,G__24741));
}
} else {
var n4751 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4738,b4739,c4740,d4741,e4742,f4743,g4744,h4745,i4746,j4747,k4748,l4749,m4750,n4751);
} else {
var G__24742 = a4738;
var G__24743 = b4739;
var G__24744 = c4740;
var G__24745 = d4741;
var G__24746 = e4742;
var G__24747 = f4743;
var G__24748 = g4744;
var G__24749 = h4745;
var G__24750 = i4746;
var G__24751 = j4747;
var G__24752 = k4748;
var G__24753 = l4749;
var G__24754 = m4750;
var G__24755 = n4751;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__24742,G__24743,G__24744,G__24745,G__24746,G__24747,G__24748,G__24749,G__24750,G__24751,G__24752,G__24753,G__24754,G__24755) : f.call(null,G__24742,G__24743,G__24744,G__24745,G__24746,G__24747,G__24748,G__24749,G__24750,G__24751,G__24752,G__24753,G__24754,G__24755));
}
} else {
var o4752 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4738,b4739,c4740,d4741,e4742,f4743,g4744,h4745,i4746,j4747,k4748,l4749,m4750,n4751,o4752);
} else {
var G__24756 = a4738;
var G__24757 = b4739;
var G__24758 = c4740;
var G__24759 = d4741;
var G__24760 = e4742;
var G__24761 = f4743;
var G__24762 = g4744;
var G__24763 = h4745;
var G__24764 = i4746;
var G__24765 = j4747;
var G__24766 = k4748;
var G__24767 = l4749;
var G__24768 = m4750;
var G__24769 = n4751;
var G__24770 = o4752;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__24756,G__24757,G__24758,G__24759,G__24760,G__24761,G__24762,G__24763,G__24764,G__24765,G__24766,G__24767,G__24768,G__24769,G__24770) : f.call(null,G__24756,G__24757,G__24758,G__24759,G__24760,G__24761,G__24762,G__24763,G__24764,G__24765,G__24766,G__24767,G__24768,G__24769,G__24770));
}
} else {
var p4753 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4738,b4739,c4740,d4741,e4742,f4743,g4744,h4745,i4746,j4747,k4748,l4749,m4750,n4751,o4752,p4753);
} else {
var G__24771 = a4738;
var G__24772 = b4739;
var G__24773 = c4740;
var G__24774 = d4741;
var G__24775 = e4742;
var G__24776 = f4743;
var G__24777 = g4744;
var G__24778 = h4745;
var G__24779 = i4746;
var G__24780 = j4747;
var G__24781 = k4748;
var G__24782 = l4749;
var G__24783 = m4750;
var G__24784 = n4751;
var G__24785 = o4752;
var G__24786 = p4753;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__24771,G__24772,G__24773,G__24774,G__24775,G__24776,G__24777,G__24778,G__24779,G__24780,G__24781,G__24782,G__24783,G__24784,G__24785,G__24786) : f.call(null,G__24771,G__24772,G__24773,G__24774,G__24775,G__24776,G__24777,G__24778,G__24779,G__24780,G__24781,G__24782,G__24783,G__24784,G__24785,G__24786));
}
} else {
var q4754 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4738,b4739,c4740,d4741,e4742,f4743,g4744,h4745,i4746,j4747,k4748,l4749,m4750,n4751,o4752,p4753,q4754);
} else {
var G__24787 = a4738;
var G__24788 = b4739;
var G__24789 = c4740;
var G__24790 = d4741;
var G__24791 = e4742;
var G__24792 = f4743;
var G__24793 = g4744;
var G__24794 = h4745;
var G__24795 = i4746;
var G__24796 = j4747;
var G__24797 = k4748;
var G__24798 = l4749;
var G__24799 = m4750;
var G__24800 = n4751;
var G__24801 = o4752;
var G__24802 = p4753;
var G__24803 = q4754;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__24787,G__24788,G__24789,G__24790,G__24791,G__24792,G__24793,G__24794,G__24795,G__24796,G__24797,G__24798,G__24799,G__24800,G__24801,G__24802,G__24803) : f.call(null,G__24787,G__24788,G__24789,G__24790,G__24791,G__24792,G__24793,G__24794,G__24795,G__24796,G__24797,G__24798,G__24799,G__24800,G__24801,G__24802,G__24803));
}
} else {
var r4755 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4738,b4739,c4740,d4741,e4742,f4743,g4744,h4745,i4746,j4747,k4748,l4749,m4750,n4751,o4752,p4753,q4754,r4755);
} else {
var G__24804 = a4738;
var G__24805 = b4739;
var G__24806 = c4740;
var G__24807 = d4741;
var G__24808 = e4742;
var G__24809 = f4743;
var G__24810 = g4744;
var G__24811 = h4745;
var G__24812 = i4746;
var G__24813 = j4747;
var G__24814 = k4748;
var G__24815 = l4749;
var G__24816 = m4750;
var G__24817 = n4751;
var G__24818 = o4752;
var G__24819 = p4753;
var G__24820 = q4754;
var G__24821 = r4755;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__24804,G__24805,G__24806,G__24807,G__24808,G__24809,G__24810,G__24811,G__24812,G__24813,G__24814,G__24815,G__24816,G__24817,G__24818,G__24819,G__24820,G__24821) : f.call(null,G__24804,G__24805,G__24806,G__24807,G__24808,G__24809,G__24810,G__24811,G__24812,G__24813,G__24814,G__24815,G__24816,G__24817,G__24818,G__24819,G__24820,G__24821));
}
} else {
var s4756 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4738,b4739,c4740,d4741,e4742,f4743,g4744,h4745,i4746,j4747,k4748,l4749,m4750,n4751,o4752,p4753,q4754,r4755,s4756);
} else {
var G__24822 = a4738;
var G__24823 = b4739;
var G__24824 = c4740;
var G__24825 = d4741;
var G__24826 = e4742;
var G__24827 = f4743;
var G__24828 = g4744;
var G__24829 = h4745;
var G__24830 = i4746;
var G__24831 = j4747;
var G__24832 = k4748;
var G__24833 = l4749;
var G__24834 = m4750;
var G__24835 = n4751;
var G__24836 = o4752;
var G__24837 = p4753;
var G__24838 = q4754;
var G__24839 = r4755;
var G__24840 = s4756;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__24822,G__24823,G__24824,G__24825,G__24826,G__24827,G__24828,G__24829,G__24830,G__24831,G__24832,G__24833,G__24834,G__24835,G__24836,G__24837,G__24838,G__24839,G__24840) : f.call(null,G__24822,G__24823,G__24824,G__24825,G__24826,G__24827,G__24828,G__24829,G__24830,G__24831,G__24832,G__24833,G__24834,G__24835,G__24836,G__24837,G__24838,G__24839,G__24840));
}
} else {
var t4757 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4738,b4739,c4740,d4741,e4742,f4743,g4744,h4745,i4746,j4747,k4748,l4749,m4750,n4751,o4752,p4753,q4754,r4755,s4756,t4757);
} else {
var G__24841 = a4738;
var G__24842 = b4739;
var G__24843 = c4740;
var G__24844 = d4741;
var G__24845 = e4742;
var G__24846 = f4743;
var G__24847 = g4744;
var G__24848 = h4745;
var G__24849 = i4746;
var G__24850 = j4747;
var G__24851 = k4748;
var G__24852 = l4749;
var G__24853 = m4750;
var G__24854 = n4751;
var G__24855 = o4752;
var G__24856 = p4753;
var G__24857 = q4754;
var G__24858 = r4755;
var G__24859 = s4756;
var G__24860 = t4757;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__24841,G__24842,G__24843,G__24844,G__24845,G__24846,G__24847,G__24848,G__24849,G__24850,G__24851,G__24852,G__24853,G__24854,G__24855,G__24856,G__24857,G__24858,G__24859,G__24860) : f.call(null,G__24841,G__24842,G__24843,G__24844,G__24845,G__24846,G__24847,G__24848,G__24849,G__24850,G__24851,G__24852,G__24853,G__24854,G__24855,G__24856,G__24857,G__24858,G__24859,G__24860));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__24861__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__24861 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__24862__i = 0, G__24862__a = new Array(arguments.length -  5);
while (G__24862__i < G__24862__a.length) {G__24862__a[G__24862__i] = arguments[G__24862__i + 5]; ++G__24862__i;}
  args = new cljs.core.IndexedSeq(G__24862__a,0);
} 
return G__24861__delegate.call(this,f,a,b,c,d,args);};
G__24861.cljs$lang$maxFixedArity = 5;
G__24861.cljs$lang$applyTo = (function (arglist__24863){
var f = cljs.core.first(arglist__24863);
arglist__24863 = cljs.core.next(arglist__24863);
var a = cljs.core.first(arglist__24863);
arglist__24863 = cljs.core.next(arglist__24863);
var b = cljs.core.first(arglist__24863);
arglist__24863 = cljs.core.next(arglist__24863);
var c = cljs.core.first(arglist__24863);
arglist__24863 = cljs.core.next(arglist__24863);
var d = cljs.core.first(arglist__24863);
var args = cljs.core.rest(arglist__24863);
return G__24861__delegate(f,a,b,c,d,args);
});
G__24861.cljs$core$IFn$_invoke$arity$variadic = G__24861__delegate;
return G__24861;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__24864 = null;
if (arguments.length > 5) {
var G__24865__i = 0, G__24865__a = new Array(arguments.length -  5);
while (G__24865__i < G__24865__a.length) {G__24865__a[G__24865__i] = arguments[G__24865__i + 5]; ++G__24865__i;}
G__24864 = new cljs.core.IndexedSeq(G__24865__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__24864);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__24881 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24881) : f.call(null,G__24881));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__24882 = cljs.core.meta(obj);
var G__24883 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24882,G__24883) : f.call(null,G__24882,G__24883));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__24884 = cljs.core.meta(obj);
var G__24885 = a;
var G__24886 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24884,G__24885,G__24886) : f.call(null,G__24884,G__24885,G__24886));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__24887 = cljs.core.meta(obj);
var G__24888 = a;
var G__24889 = b;
var G__24890 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24887,G__24888,G__24889,G__24890) : f.call(null,G__24887,G__24888,G__24889,G__24890));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__24891 = cljs.core.meta(obj);
var G__24892 = a;
var G__24893 = b;
var G__24894 = c;
var G__24895 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__24891,G__24892,G__24893,G__24894,G__24895) : f.call(null,G__24891,G__24892,G__24893,G__24894,G__24895));
})());
});
var vary_meta__7 = (function() { 
var G__24896__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__24896 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__24897__i = 0, G__24897__a = new Array(arguments.length -  6);
while (G__24897__i < G__24897__a.length) {G__24897__a[G__24897__i] = arguments[G__24897__i + 6]; ++G__24897__i;}
  args = new cljs.core.IndexedSeq(G__24897__a,0);
} 
return G__24896__delegate.call(this,obj,f,a,b,c,d,args);};
G__24896.cljs$lang$maxFixedArity = 6;
G__24896.cljs$lang$applyTo = (function (arglist__24898){
var obj = cljs.core.first(arglist__24898);
arglist__24898 = cljs.core.next(arglist__24898);
var f = cljs.core.first(arglist__24898);
arglist__24898 = cljs.core.next(arglist__24898);
var a = cljs.core.first(arglist__24898);
arglist__24898 = cljs.core.next(arglist__24898);
var b = cljs.core.first(arglist__24898);
arglist__24898 = cljs.core.next(arglist__24898);
var c = cljs.core.first(arglist__24898);
arglist__24898 = cljs.core.next(arglist__24898);
var d = cljs.core.first(arglist__24898);
var args = cljs.core.rest(arglist__24898);
return G__24896__delegate(obj,f,a,b,c,d,args);
});
G__24896.cljs$core$IFn$_invoke$arity$variadic = G__24896__delegate;
return G__24896;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__24899 = null;
if (arguments.length > 6) {
var G__24900__i = 0, G__24900__a = new Array(arguments.length -  6);
while (G__24900__i < G__24900__a.length) {G__24900__a[G__24900__i] = arguments[G__24900__i + 6]; ++G__24900__i;}
G__24899 = new cljs.core.IndexedSeq(G__24900__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__24899);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__24901__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__24901 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24902__i = 0, G__24902__a = new Array(arguments.length -  2);
while (G__24902__i < G__24902__a.length) {G__24902__a[G__24902__i] = arguments[G__24902__i + 2]; ++G__24902__i;}
  more = new cljs.core.IndexedSeq(G__24902__a,0);
} 
return G__24901__delegate.call(this,x,y,more);};
G__24901.cljs$lang$maxFixedArity = 2;
G__24901.cljs$lang$applyTo = (function (arglist__24903){
var x = cljs.core.first(arglist__24903);
arglist__24903 = cljs.core.next(arglist__24903);
var y = cljs.core.first(arglist__24903);
var more = cljs.core.rest(arglist__24903);
return G__24901__delegate(x,y,more);
});
G__24901.cljs$core$IFn$_invoke$arity$variadic = G__24901__delegate;
return G__24901;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__24904 = null;
if (arguments.length > 2) {
var G__24905__i = 0, G__24905__a = new Array(arguments.length -  2);
while (G__24905__i < G__24905__a.length) {G__24905__a[G__24905__i] = arguments[G__24905__i + 2]; ++G__24905__i;}
G__24904 = new cljs.core.IndexedSeq(G__24905__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24904);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t24909 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t24909 = (function (nil_iter,meta24910){
this.nil_iter = nil_iter;
this.meta24910 = meta24910;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t24909.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t24909.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t24909.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t24909.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_24911){
var self__ = this;
var _24911__$1 = this;
return self__.meta24910;
});

cljs.core.t24909.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_24911,meta24910__$1){
var self__ = this;
var _24911__$1 = this;
return (new cljs.core.t24909(self__.nil_iter,meta24910__$1));
});

cljs.core.t24909.cljs$lang$type = true;

cljs.core.t24909.cljs$lang$ctorStr = "cljs.core/t24909";

cljs.core.t24909.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/t24909");
});

cljs.core.__GT_t24909 = (function __GT_t24909(nil_iter__$1,meta24910){
return (new cljs.core.t24909(nil_iter__$1,meta24910));
});

}

return (new cljs.core.t24909(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3795__auto__ = !((lt.stepper == null));
if(and__3795__auto__){
return self__.iter.hasNext();
} else {
return and__3795__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__24912 = lt;
var G__24913 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__24912,G__24913) : self__.xform.call(null,G__24912,G__24913));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__24914 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__24914) : self__.xform.call(null,G__24914));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__24916 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__24916) : xform.call(null,G__24916));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__24918 = cljs.core.next(iters__$1);
iters__$1 = G__24918;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4694__auto___24919 = self__.iters.length;
var i_24920 = (0);
while(true){
if((i_24920 < n__4694__auto___24919)){
(self__.nexts[i_24920] = (self__.iters[i_24920]).next());

var G__24921 = (i_24920 + (1));
i_24920 = G__24921;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3795__auto__ = !((lt.stepper == null));
if(and__3795__auto__){
return this$.hasNext();
} else {
return and__3795__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__24917 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__24917) : self__.xform.call(null,G__24917));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__24926 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__24926) : xform.call(null,G__24926));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__24927_24931 = cljs.core.seq(colls);
var chunk__24928_24932 = null;
var count__24929_24933 = (0);
var i__24930_24934 = (0);
while(true){
if((i__24930_24934 < count__24929_24933)){
var coll_24935 = chunk__24928_24932.cljs$core$IIndexed$_nth$arity$2(null,i__24930_24934);
iters.push(cljs.core.iter(coll_24935));

var G__24936 = seq__24927_24931;
var G__24937 = chunk__24928_24932;
var G__24938 = count__24929_24933;
var G__24939 = (i__24930_24934 + (1));
seq__24927_24931 = G__24936;
chunk__24928_24932 = G__24937;
count__24929_24933 = G__24938;
i__24930_24934 = G__24939;
continue;
} else {
var temp__4126__auto___24940 = cljs.core.seq(seq__24927_24931);
if(temp__4126__auto___24940){
var seq__24927_24941__$1 = temp__4126__auto___24940;
if(cljs.core.chunked_seq_QMARK_(seq__24927_24941__$1)){
var c__4594__auto___24942 = cljs.core.chunk_first(seq__24927_24941__$1);
var G__24943 = cljs.core.chunk_rest(seq__24927_24941__$1);
var G__24944 = c__4594__auto___24942;
var G__24945 = cljs.core.count(c__4594__auto___24942);
var G__24946 = (0);
seq__24927_24931 = G__24943;
chunk__24928_24932 = G__24944;
count__24929_24933 = G__24945;
i__24930_24934 = G__24946;
continue;
} else {
var coll_24947 = cljs.core.first(seq__24927_24941__$1);
iters.push(cljs.core.iter(coll_24947));

var G__24948 = cljs.core.next(seq__24927_24941__$1);
var G__24949 = null;
var G__24950 = (0);
var G__24951 = (0);
seq__24927_24931 = G__24948;
chunk__24928_24932 = G__24949;
count__24929_24933 = G__24950;
i__24930_24934 = G__24951;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3807__auto__ = cljs.core.seq(coll);
if(or__3807__auto__){
return or__3807__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__24952__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__24952 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__24953__i = 0, G__24953__a = new Array(arguments.length -  2);
while (G__24953__i < G__24953__a.length) {G__24953__a[G__24953__i] = arguments[G__24953__i + 2]; ++G__24953__i;}
  colls = new cljs.core.IndexedSeq(G__24953__a,0);
} 
return G__24952__delegate.call(this,xform,coll,colls);};
G__24952.cljs$lang$maxFixedArity = 2;
G__24952.cljs$lang$applyTo = (function (arglist__24954){
var xform = cljs.core.first(arglist__24954);
arglist__24954 = cljs.core.next(arglist__24954);
var coll = cljs.core.first(arglist__24954);
var colls = cljs.core.rest(arglist__24954);
return G__24952__delegate(xform,coll,colls);
});
G__24952.cljs$core$IFn$_invoke$arity$variadic = G__24952__delegate;
return G__24952;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__24955 = null;
if (arguments.length > 2) {
var G__24956__i = 0, G__24956__a = new Array(arguments.length -  2);
while (G__24956__i < G__24956__a.length) {G__24956__a[G__24956__i] = arguments[G__24956__i + 2]; ++G__24956__i;}
G__24955 = new cljs.core.IndexedSeq(G__24956__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__24955);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__24958 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24958) : pred.call(null,G__24958));
})())){
var G__24959 = pred;
var G__24960 = cljs.core.next(coll);
pred = G__24959;
coll = G__24960;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3807__auto__ = (function (){var G__24964 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24964) : pred.call(null,G__24964));
})();
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
var G__24965 = pred;
var G__24966 = cljs.core.next(coll);
pred = G__24965;
coll = G__24966;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__24973 = null;
var G__24973__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__24973__1 = (function (x){
return cljs.core.not((function (){var G__24970 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24970) : f.call(null,G__24970));
})());
});
var G__24973__2 = (function (x,y){
return cljs.core.not((function (){var G__24971 = x;
var G__24972 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24971,G__24972) : f.call(null,G__24971,G__24972));
})());
});
var G__24973__3 = (function() { 
var G__24974__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__24974 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__24975__i = 0, G__24975__a = new Array(arguments.length -  2);
while (G__24975__i < G__24975__a.length) {G__24975__a[G__24975__i] = arguments[G__24975__i + 2]; ++G__24975__i;}
  zs = new cljs.core.IndexedSeq(G__24975__a,0);
} 
return G__24974__delegate.call(this,x,y,zs);};
G__24974.cljs$lang$maxFixedArity = 2;
G__24974.cljs$lang$applyTo = (function (arglist__24976){
var x = cljs.core.first(arglist__24976);
arglist__24976 = cljs.core.next(arglist__24976);
var y = cljs.core.first(arglist__24976);
var zs = cljs.core.rest(arglist__24976);
return G__24974__delegate(x,y,zs);
});
G__24974.cljs$core$IFn$_invoke$arity$variadic = G__24974__delegate;
return G__24974;
})()
;
G__24973 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__24973__0.call(this);
case 1:
return G__24973__1.call(this,x);
case 2:
return G__24973__2.call(this,x,y);
default:
var G__24977 = null;
if (arguments.length > 2) {
var G__24978__i = 0, G__24978__a = new Array(arguments.length -  2);
while (G__24978__i < G__24978__a.length) {G__24978__a[G__24978__i] = arguments[G__24978__i + 2]; ++G__24978__i;}
G__24977 = new cljs.core.IndexedSeq(G__24978__a,0);
}
return G__24973__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24977);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24973.cljs$lang$maxFixedArity = 2;
G__24973.cljs$lang$applyTo = G__24973__3.cljs$lang$applyTo;
G__24973.cljs$core$IFn$_invoke$arity$0 = G__24973__0;
G__24973.cljs$core$IFn$_invoke$arity$1 = G__24973__1;
G__24973.cljs$core$IFn$_invoke$arity$2 = G__24973__2;
G__24973.cljs$core$IFn$_invoke$arity$variadic = G__24973__3.cljs$core$IFn$_invoke$arity$variadic;
return G__24973;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__24979__delegate = function (args){
return x;
};
var G__24979 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__24980__i = 0, G__24980__a = new Array(arguments.length -  0);
while (G__24980__i < G__24980__a.length) {G__24980__a[G__24980__i] = arguments[G__24980__i + 0]; ++G__24980__i;}
  args = new cljs.core.IndexedSeq(G__24980__a,0);
} 
return G__24979__delegate.call(this,args);};
G__24979.cljs$lang$maxFixedArity = 0;
G__24979.cljs$lang$applyTo = (function (arglist__24981){
var args = cljs.core.seq(arglist__24981);
return G__24979__delegate(args);
});
G__24979.cljs$core$IFn$_invoke$arity$variadic = G__24979__delegate;
return G__24979;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__25036 = null;
var G__25036__0 = (function (){
var G__25009 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25009) : f.call(null,G__25009));
});
var G__25036__1 = (function (x){
var G__25010 = (function (){var G__25011 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25011) : g.call(null,G__25011));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25010) : f.call(null,G__25010));
});
var G__25036__2 = (function (x,y){
var G__25012 = (function (){var G__25013 = x;
var G__25014 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25013,G__25014) : g.call(null,G__25013,G__25014));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25012) : f.call(null,G__25012));
});
var G__25036__3 = (function (x,y,z){
var G__25015 = (function (){var G__25016 = x;
var G__25017 = y;
var G__25018 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25016,G__25017,G__25018) : g.call(null,G__25016,G__25017,G__25018));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25015) : f.call(null,G__25015));
});
var G__25036__4 = (function() { 
var G__25037__delegate = function (x,y,z,args){
var G__25019 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25019) : f.call(null,G__25019));
};
var G__25037 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25038__i = 0, G__25038__a = new Array(arguments.length -  3);
while (G__25038__i < G__25038__a.length) {G__25038__a[G__25038__i] = arguments[G__25038__i + 3]; ++G__25038__i;}
  args = new cljs.core.IndexedSeq(G__25038__a,0);
} 
return G__25037__delegate.call(this,x,y,z,args);};
G__25037.cljs$lang$maxFixedArity = 3;
G__25037.cljs$lang$applyTo = (function (arglist__25039){
var x = cljs.core.first(arglist__25039);
arglist__25039 = cljs.core.next(arglist__25039);
var y = cljs.core.first(arglist__25039);
arglist__25039 = cljs.core.next(arglist__25039);
var z = cljs.core.first(arglist__25039);
var args = cljs.core.rest(arglist__25039);
return G__25037__delegate(x,y,z,args);
});
G__25037.cljs$core$IFn$_invoke$arity$variadic = G__25037__delegate;
return G__25037;
})()
;
G__25036 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25036__0.call(this);
case 1:
return G__25036__1.call(this,x);
case 2:
return G__25036__2.call(this,x,y);
case 3:
return G__25036__3.call(this,x,y,z);
default:
var G__25040 = null;
if (arguments.length > 3) {
var G__25041__i = 0, G__25041__a = new Array(arguments.length -  3);
while (G__25041__i < G__25041__a.length) {G__25041__a[G__25041__i] = arguments[G__25041__i + 3]; ++G__25041__i;}
G__25040 = new cljs.core.IndexedSeq(G__25041__a,0);
}
return G__25036__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25040);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25036.cljs$lang$maxFixedArity = 3;
G__25036.cljs$lang$applyTo = G__25036__4.cljs$lang$applyTo;
G__25036.cljs$core$IFn$_invoke$arity$0 = G__25036__0;
G__25036.cljs$core$IFn$_invoke$arity$1 = G__25036__1;
G__25036.cljs$core$IFn$_invoke$arity$2 = G__25036__2;
G__25036.cljs$core$IFn$_invoke$arity$3 = G__25036__3;
G__25036.cljs$core$IFn$_invoke$arity$variadic = G__25036__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25036;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__25042 = null;
var G__25042__0 = (function (){
var G__25020 = (function (){var G__25021 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25021) : g.call(null,G__25021));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25020) : f.call(null,G__25020));
});
var G__25042__1 = (function (x){
var G__25022 = (function (){var G__25023 = (function (){var G__25024 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__25024) : h.call(null,G__25024));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25023) : g.call(null,G__25023));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25022) : f.call(null,G__25022));
});
var G__25042__2 = (function (x,y){
var G__25025 = (function (){var G__25026 = (function (){var G__25027 = x;
var G__25028 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__25027,G__25028) : h.call(null,G__25027,G__25028));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25026) : g.call(null,G__25026));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25025) : f.call(null,G__25025));
});
var G__25042__3 = (function (x,y,z){
var G__25029 = (function (){var G__25030 = (function (){var G__25031 = x;
var G__25032 = y;
var G__25033 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__25031,G__25032,G__25033) : h.call(null,G__25031,G__25032,G__25033));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25030) : g.call(null,G__25030));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25029) : f.call(null,G__25029));
});
var G__25042__4 = (function() { 
var G__25043__delegate = function (x,y,z,args){
var G__25034 = (function (){var G__25035 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25035) : g.call(null,G__25035));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25034) : f.call(null,G__25034));
};
var G__25043 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25044__i = 0, G__25044__a = new Array(arguments.length -  3);
while (G__25044__i < G__25044__a.length) {G__25044__a[G__25044__i] = arguments[G__25044__i + 3]; ++G__25044__i;}
  args = new cljs.core.IndexedSeq(G__25044__a,0);
} 
return G__25043__delegate.call(this,x,y,z,args);};
G__25043.cljs$lang$maxFixedArity = 3;
G__25043.cljs$lang$applyTo = (function (arglist__25045){
var x = cljs.core.first(arglist__25045);
arglist__25045 = cljs.core.next(arglist__25045);
var y = cljs.core.first(arglist__25045);
arglist__25045 = cljs.core.next(arglist__25045);
var z = cljs.core.first(arglist__25045);
var args = cljs.core.rest(arglist__25045);
return G__25043__delegate(x,y,z,args);
});
G__25043.cljs$core$IFn$_invoke$arity$variadic = G__25043__delegate;
return G__25043;
})()
;
G__25042 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25042__0.call(this);
case 1:
return G__25042__1.call(this,x);
case 2:
return G__25042__2.call(this,x,y);
case 3:
return G__25042__3.call(this,x,y,z);
default:
var G__25046 = null;
if (arguments.length > 3) {
var G__25047__i = 0, G__25047__a = new Array(arguments.length -  3);
while (G__25047__i < G__25047__a.length) {G__25047__a[G__25047__i] = arguments[G__25047__i + 3]; ++G__25047__i;}
G__25046 = new cljs.core.IndexedSeq(G__25047__a,0);
}
return G__25042__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25046);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25042.cljs$lang$maxFixedArity = 3;
G__25042.cljs$lang$applyTo = G__25042__4.cljs$lang$applyTo;
G__25042.cljs$core$IFn$_invoke$arity$0 = G__25042__0;
G__25042.cljs$core$IFn$_invoke$arity$1 = G__25042__1;
G__25042.cljs$core$IFn$_invoke$arity$2 = G__25042__2;
G__25042.cljs$core$IFn$_invoke$arity$3 = G__25042__3;
G__25042.cljs$core$IFn$_invoke$arity$variadic = G__25042__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25042;
})()
});
var comp__4 = (function() { 
var G__25048__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__25049__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__25050 = cljs.core.first(fs__$2).call(null,ret);
var G__25051 = cljs.core.next(fs__$2);
ret = G__25050;
fs__$2 = G__25051;
continue;
} else {
return ret;
}
break;
}
};
var G__25049 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25052__i = 0, G__25052__a = new Array(arguments.length -  0);
while (G__25052__i < G__25052__a.length) {G__25052__a[G__25052__i] = arguments[G__25052__i + 0]; ++G__25052__i;}
  args = new cljs.core.IndexedSeq(G__25052__a,0);
} 
return G__25049__delegate.call(this,args);};
G__25049.cljs$lang$maxFixedArity = 0;
G__25049.cljs$lang$applyTo = (function (arglist__25053){
var args = cljs.core.seq(arglist__25053);
return G__25049__delegate(args);
});
G__25049.cljs$core$IFn$_invoke$arity$variadic = G__25049__delegate;
return G__25049;
})()
;
;})(fs__$1))
};
var G__25048 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__25054__i = 0, G__25054__a = new Array(arguments.length -  3);
while (G__25054__i < G__25054__a.length) {G__25054__a[G__25054__i] = arguments[G__25054__i + 3]; ++G__25054__i;}
  fs = new cljs.core.IndexedSeq(G__25054__a,0);
} 
return G__25048__delegate.call(this,f1,f2,f3,fs);};
G__25048.cljs$lang$maxFixedArity = 3;
G__25048.cljs$lang$applyTo = (function (arglist__25055){
var f1 = cljs.core.first(arglist__25055);
arglist__25055 = cljs.core.next(arglist__25055);
var f2 = cljs.core.first(arglist__25055);
arglist__25055 = cljs.core.next(arglist__25055);
var f3 = cljs.core.first(arglist__25055);
var fs = cljs.core.rest(arglist__25055);
return G__25048__delegate(f1,f2,f3,fs);
});
G__25048.cljs$core$IFn$_invoke$arity$variadic = G__25048__delegate;
return G__25048;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__25056 = null;
if (arguments.length > 3) {
var G__25057__i = 0, G__25057__a = new Array(arguments.length -  3);
while (G__25057__i < G__25057__a.length) {G__25057__a[G__25057__i] = arguments[G__25057__i + 3]; ++G__25057__i;}
G__25056 = new cljs.core.IndexedSeq(G__25057__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__25056);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__25142 = null;
var G__25142__0 = (function (){
var G__25100 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25100) : f.call(null,G__25100));
});
var G__25142__1 = (function (x){
var G__25101 = arg1;
var G__25102 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25101,G__25102) : f.call(null,G__25101,G__25102));
});
var G__25142__2 = (function (x,y){
var G__25103 = arg1;
var G__25104 = x;
var G__25105 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25103,G__25104,G__25105) : f.call(null,G__25103,G__25104,G__25105));
});
var G__25142__3 = (function (x,y,z){
var G__25106 = arg1;
var G__25107 = x;
var G__25108 = y;
var G__25109 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25106,G__25107,G__25108,G__25109) : f.call(null,G__25106,G__25107,G__25108,G__25109));
});
var G__25142__4 = (function() { 
var G__25143__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__25143 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25144__i = 0, G__25144__a = new Array(arguments.length -  3);
while (G__25144__i < G__25144__a.length) {G__25144__a[G__25144__i] = arguments[G__25144__i + 3]; ++G__25144__i;}
  args = new cljs.core.IndexedSeq(G__25144__a,0);
} 
return G__25143__delegate.call(this,x,y,z,args);};
G__25143.cljs$lang$maxFixedArity = 3;
G__25143.cljs$lang$applyTo = (function (arglist__25145){
var x = cljs.core.first(arglist__25145);
arglist__25145 = cljs.core.next(arglist__25145);
var y = cljs.core.first(arglist__25145);
arglist__25145 = cljs.core.next(arglist__25145);
var z = cljs.core.first(arglist__25145);
var args = cljs.core.rest(arglist__25145);
return G__25143__delegate(x,y,z,args);
});
G__25143.cljs$core$IFn$_invoke$arity$variadic = G__25143__delegate;
return G__25143;
})()
;
G__25142 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25142__0.call(this);
case 1:
return G__25142__1.call(this,x);
case 2:
return G__25142__2.call(this,x,y);
case 3:
return G__25142__3.call(this,x,y,z);
default:
var G__25146 = null;
if (arguments.length > 3) {
var G__25147__i = 0, G__25147__a = new Array(arguments.length -  3);
while (G__25147__i < G__25147__a.length) {G__25147__a[G__25147__i] = arguments[G__25147__i + 3]; ++G__25147__i;}
G__25146 = new cljs.core.IndexedSeq(G__25147__a,0);
}
return G__25142__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25146);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25142.cljs$lang$maxFixedArity = 3;
G__25142.cljs$lang$applyTo = G__25142__4.cljs$lang$applyTo;
G__25142.cljs$core$IFn$_invoke$arity$0 = G__25142__0;
G__25142.cljs$core$IFn$_invoke$arity$1 = G__25142__1;
G__25142.cljs$core$IFn$_invoke$arity$2 = G__25142__2;
G__25142.cljs$core$IFn$_invoke$arity$3 = G__25142__3;
G__25142.cljs$core$IFn$_invoke$arity$variadic = G__25142__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25142;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__25148 = null;
var G__25148__0 = (function (){
var G__25110 = arg1;
var G__25111 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25110,G__25111) : f.call(null,G__25110,G__25111));
});
var G__25148__1 = (function (x){
var G__25112 = arg1;
var G__25113 = arg2;
var G__25114 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25112,G__25113,G__25114) : f.call(null,G__25112,G__25113,G__25114));
});
var G__25148__2 = (function (x,y){
var G__25115 = arg1;
var G__25116 = arg2;
var G__25117 = x;
var G__25118 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25115,G__25116,G__25117,G__25118) : f.call(null,G__25115,G__25116,G__25117,G__25118));
});
var G__25148__3 = (function (x,y,z){
var G__25119 = arg1;
var G__25120 = arg2;
var G__25121 = x;
var G__25122 = y;
var G__25123 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25119,G__25120,G__25121,G__25122,G__25123) : f.call(null,G__25119,G__25120,G__25121,G__25122,G__25123));
});
var G__25148__4 = (function() { 
var G__25149__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__25149 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25150__i = 0, G__25150__a = new Array(arguments.length -  3);
while (G__25150__i < G__25150__a.length) {G__25150__a[G__25150__i] = arguments[G__25150__i + 3]; ++G__25150__i;}
  args = new cljs.core.IndexedSeq(G__25150__a,0);
} 
return G__25149__delegate.call(this,x,y,z,args);};
G__25149.cljs$lang$maxFixedArity = 3;
G__25149.cljs$lang$applyTo = (function (arglist__25151){
var x = cljs.core.first(arglist__25151);
arglist__25151 = cljs.core.next(arglist__25151);
var y = cljs.core.first(arglist__25151);
arglist__25151 = cljs.core.next(arglist__25151);
var z = cljs.core.first(arglist__25151);
var args = cljs.core.rest(arglist__25151);
return G__25149__delegate(x,y,z,args);
});
G__25149.cljs$core$IFn$_invoke$arity$variadic = G__25149__delegate;
return G__25149;
})()
;
G__25148 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25148__0.call(this);
case 1:
return G__25148__1.call(this,x);
case 2:
return G__25148__2.call(this,x,y);
case 3:
return G__25148__3.call(this,x,y,z);
default:
var G__25152 = null;
if (arguments.length > 3) {
var G__25153__i = 0, G__25153__a = new Array(arguments.length -  3);
while (G__25153__i < G__25153__a.length) {G__25153__a[G__25153__i] = arguments[G__25153__i + 3]; ++G__25153__i;}
G__25152 = new cljs.core.IndexedSeq(G__25153__a,0);
}
return G__25148__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25152);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25148.cljs$lang$maxFixedArity = 3;
G__25148.cljs$lang$applyTo = G__25148__4.cljs$lang$applyTo;
G__25148.cljs$core$IFn$_invoke$arity$0 = G__25148__0;
G__25148.cljs$core$IFn$_invoke$arity$1 = G__25148__1;
G__25148.cljs$core$IFn$_invoke$arity$2 = G__25148__2;
G__25148.cljs$core$IFn$_invoke$arity$3 = G__25148__3;
G__25148.cljs$core$IFn$_invoke$arity$variadic = G__25148__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25148;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__25154 = null;
var G__25154__0 = (function (){
var G__25124 = arg1;
var G__25125 = arg2;
var G__25126 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25124,G__25125,G__25126) : f.call(null,G__25124,G__25125,G__25126));
});
var G__25154__1 = (function (x){
var G__25127 = arg1;
var G__25128 = arg2;
var G__25129 = arg3;
var G__25130 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25127,G__25128,G__25129,G__25130) : f.call(null,G__25127,G__25128,G__25129,G__25130));
});
var G__25154__2 = (function (x,y){
var G__25131 = arg1;
var G__25132 = arg2;
var G__25133 = arg3;
var G__25134 = x;
var G__25135 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25131,G__25132,G__25133,G__25134,G__25135) : f.call(null,G__25131,G__25132,G__25133,G__25134,G__25135));
});
var G__25154__3 = (function (x,y,z){
var G__25136 = arg1;
var G__25137 = arg2;
var G__25138 = arg3;
var G__25139 = x;
var G__25140 = y;
var G__25141 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__25136,G__25137,G__25138,G__25139,G__25140,G__25141) : f.call(null,G__25136,G__25137,G__25138,G__25139,G__25140,G__25141));
});
var G__25154__4 = (function() { 
var G__25155__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__25155 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25156__i = 0, G__25156__a = new Array(arguments.length -  3);
while (G__25156__i < G__25156__a.length) {G__25156__a[G__25156__i] = arguments[G__25156__i + 3]; ++G__25156__i;}
  args = new cljs.core.IndexedSeq(G__25156__a,0);
} 
return G__25155__delegate.call(this,x,y,z,args);};
G__25155.cljs$lang$maxFixedArity = 3;
G__25155.cljs$lang$applyTo = (function (arglist__25157){
var x = cljs.core.first(arglist__25157);
arglist__25157 = cljs.core.next(arglist__25157);
var y = cljs.core.first(arglist__25157);
arglist__25157 = cljs.core.next(arglist__25157);
var z = cljs.core.first(arglist__25157);
var args = cljs.core.rest(arglist__25157);
return G__25155__delegate(x,y,z,args);
});
G__25155.cljs$core$IFn$_invoke$arity$variadic = G__25155__delegate;
return G__25155;
})()
;
G__25154 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25154__0.call(this);
case 1:
return G__25154__1.call(this,x);
case 2:
return G__25154__2.call(this,x,y);
case 3:
return G__25154__3.call(this,x,y,z);
default:
var G__25158 = null;
if (arguments.length > 3) {
var G__25159__i = 0, G__25159__a = new Array(arguments.length -  3);
while (G__25159__i < G__25159__a.length) {G__25159__a[G__25159__i] = arguments[G__25159__i + 3]; ++G__25159__i;}
G__25158 = new cljs.core.IndexedSeq(G__25159__a,0);
}
return G__25154__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25158);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25154.cljs$lang$maxFixedArity = 3;
G__25154.cljs$lang$applyTo = G__25154__4.cljs$lang$applyTo;
G__25154.cljs$core$IFn$_invoke$arity$0 = G__25154__0;
G__25154.cljs$core$IFn$_invoke$arity$1 = G__25154__1;
G__25154.cljs$core$IFn$_invoke$arity$2 = G__25154__2;
G__25154.cljs$core$IFn$_invoke$arity$3 = G__25154__3;
G__25154.cljs$core$IFn$_invoke$arity$variadic = G__25154__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25154;
})()
});
var partial__5 = (function() { 
var G__25160__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__25161__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__25161 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25162__i = 0, G__25162__a = new Array(arguments.length -  0);
while (G__25162__i < G__25162__a.length) {G__25162__a[G__25162__i] = arguments[G__25162__i + 0]; ++G__25162__i;}
  args = new cljs.core.IndexedSeq(G__25162__a,0);
} 
return G__25161__delegate.call(this,args);};
G__25161.cljs$lang$maxFixedArity = 0;
G__25161.cljs$lang$applyTo = (function (arglist__25163){
var args = cljs.core.seq(arglist__25163);
return G__25161__delegate(args);
});
G__25161.cljs$core$IFn$_invoke$arity$variadic = G__25161__delegate;
return G__25161;
})()
;
};
var G__25160 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__25164__i = 0, G__25164__a = new Array(arguments.length -  4);
while (G__25164__i < G__25164__a.length) {G__25164__a[G__25164__i] = arguments[G__25164__i + 4]; ++G__25164__i;}
  more = new cljs.core.IndexedSeq(G__25164__a,0);
} 
return G__25160__delegate.call(this,f,arg1,arg2,arg3,more);};
G__25160.cljs$lang$maxFixedArity = 4;
G__25160.cljs$lang$applyTo = (function (arglist__25165){
var f = cljs.core.first(arglist__25165);
arglist__25165 = cljs.core.next(arglist__25165);
var arg1 = cljs.core.first(arglist__25165);
arglist__25165 = cljs.core.next(arglist__25165);
var arg2 = cljs.core.first(arglist__25165);
arglist__25165 = cljs.core.next(arglist__25165);
var arg3 = cljs.core.first(arglist__25165);
var more = cljs.core.rest(arglist__25165);
return G__25160__delegate(f,arg1,arg2,arg3,more);
});
G__25160.cljs$core$IFn$_invoke$arity$variadic = G__25160__delegate;
return G__25160;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__25166 = null;
if (arguments.length > 4) {
var G__25167__i = 0, G__25167__a = new Array(arguments.length -  4);
while (G__25167__i < G__25167__a.length) {G__25167__a[G__25167__i] = arguments[G__25167__i + 4]; ++G__25167__i;}
G__25166 = new cljs.core.IndexedSeq(G__25167__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__25166);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__25200 = null;
var G__25200__1 = (function (a){
var G__25184 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25184) : f.call(null,G__25184));
});
var G__25200__2 = (function (a,b){
var G__25185 = (((a == null))?x:a);
var G__25186 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25185,G__25186) : f.call(null,G__25185,G__25186));
});
var G__25200__3 = (function (a,b,c){
var G__25187 = (((a == null))?x:a);
var G__25188 = b;
var G__25189 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25187,G__25188,G__25189) : f.call(null,G__25187,G__25188,G__25189));
});
var G__25200__4 = (function() { 
var G__25201__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__25201 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25202__i = 0, G__25202__a = new Array(arguments.length -  3);
while (G__25202__i < G__25202__a.length) {G__25202__a[G__25202__i] = arguments[G__25202__i + 3]; ++G__25202__i;}
  ds = new cljs.core.IndexedSeq(G__25202__a,0);
} 
return G__25201__delegate.call(this,a,b,c,ds);};
G__25201.cljs$lang$maxFixedArity = 3;
G__25201.cljs$lang$applyTo = (function (arglist__25203){
var a = cljs.core.first(arglist__25203);
arglist__25203 = cljs.core.next(arglist__25203);
var b = cljs.core.first(arglist__25203);
arglist__25203 = cljs.core.next(arglist__25203);
var c = cljs.core.first(arglist__25203);
var ds = cljs.core.rest(arglist__25203);
return G__25201__delegate(a,b,c,ds);
});
G__25201.cljs$core$IFn$_invoke$arity$variadic = G__25201__delegate;
return G__25201;
})()
;
G__25200 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__25200__1.call(this,a);
case 2:
return G__25200__2.call(this,a,b);
case 3:
return G__25200__3.call(this,a,b,c);
default:
var G__25204 = null;
if (arguments.length > 3) {
var G__25205__i = 0, G__25205__a = new Array(arguments.length -  3);
while (G__25205__i < G__25205__a.length) {G__25205__a[G__25205__i] = arguments[G__25205__i + 3]; ++G__25205__i;}
G__25204 = new cljs.core.IndexedSeq(G__25205__a,0);
}
return G__25200__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25204);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25200.cljs$lang$maxFixedArity = 3;
G__25200.cljs$lang$applyTo = G__25200__4.cljs$lang$applyTo;
G__25200.cljs$core$IFn$_invoke$arity$1 = G__25200__1;
G__25200.cljs$core$IFn$_invoke$arity$2 = G__25200__2;
G__25200.cljs$core$IFn$_invoke$arity$3 = G__25200__3;
G__25200.cljs$core$IFn$_invoke$arity$variadic = G__25200__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25200;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__25206 = null;
var G__25206__2 = (function (a,b){
var G__25190 = (((a == null))?x:a);
var G__25191 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25190,G__25191) : f.call(null,G__25190,G__25191));
});
var G__25206__3 = (function (a,b,c){
var G__25192 = (((a == null))?x:a);
var G__25193 = (((b == null))?y:b);
var G__25194 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25192,G__25193,G__25194) : f.call(null,G__25192,G__25193,G__25194));
});
var G__25206__4 = (function() { 
var G__25207__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__25207 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25208__i = 0, G__25208__a = new Array(arguments.length -  3);
while (G__25208__i < G__25208__a.length) {G__25208__a[G__25208__i] = arguments[G__25208__i + 3]; ++G__25208__i;}
  ds = new cljs.core.IndexedSeq(G__25208__a,0);
} 
return G__25207__delegate.call(this,a,b,c,ds);};
G__25207.cljs$lang$maxFixedArity = 3;
G__25207.cljs$lang$applyTo = (function (arglist__25209){
var a = cljs.core.first(arglist__25209);
arglist__25209 = cljs.core.next(arglist__25209);
var b = cljs.core.first(arglist__25209);
arglist__25209 = cljs.core.next(arglist__25209);
var c = cljs.core.first(arglist__25209);
var ds = cljs.core.rest(arglist__25209);
return G__25207__delegate(a,b,c,ds);
});
G__25207.cljs$core$IFn$_invoke$arity$variadic = G__25207__delegate;
return G__25207;
})()
;
G__25206 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__25206__2.call(this,a,b);
case 3:
return G__25206__3.call(this,a,b,c);
default:
var G__25210 = null;
if (arguments.length > 3) {
var G__25211__i = 0, G__25211__a = new Array(arguments.length -  3);
while (G__25211__i < G__25211__a.length) {G__25211__a[G__25211__i] = arguments[G__25211__i + 3]; ++G__25211__i;}
G__25210 = new cljs.core.IndexedSeq(G__25211__a,0);
}
return G__25206__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25210);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25206.cljs$lang$maxFixedArity = 3;
G__25206.cljs$lang$applyTo = G__25206__4.cljs$lang$applyTo;
G__25206.cljs$core$IFn$_invoke$arity$2 = G__25206__2;
G__25206.cljs$core$IFn$_invoke$arity$3 = G__25206__3;
G__25206.cljs$core$IFn$_invoke$arity$variadic = G__25206__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25206;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__25212 = null;
var G__25212__2 = (function (a,b){
var G__25195 = (((a == null))?x:a);
var G__25196 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25195,G__25196) : f.call(null,G__25195,G__25196));
});
var G__25212__3 = (function (a,b,c){
var G__25197 = (((a == null))?x:a);
var G__25198 = (((b == null))?y:b);
var G__25199 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25197,G__25198,G__25199) : f.call(null,G__25197,G__25198,G__25199));
});
var G__25212__4 = (function() { 
var G__25213__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__25213 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25214__i = 0, G__25214__a = new Array(arguments.length -  3);
while (G__25214__i < G__25214__a.length) {G__25214__a[G__25214__i] = arguments[G__25214__i + 3]; ++G__25214__i;}
  ds = new cljs.core.IndexedSeq(G__25214__a,0);
} 
return G__25213__delegate.call(this,a,b,c,ds);};
G__25213.cljs$lang$maxFixedArity = 3;
G__25213.cljs$lang$applyTo = (function (arglist__25215){
var a = cljs.core.first(arglist__25215);
arglist__25215 = cljs.core.next(arglist__25215);
var b = cljs.core.first(arglist__25215);
arglist__25215 = cljs.core.next(arglist__25215);
var c = cljs.core.first(arglist__25215);
var ds = cljs.core.rest(arglist__25215);
return G__25213__delegate(a,b,c,ds);
});
G__25213.cljs$core$IFn$_invoke$arity$variadic = G__25213__delegate;
return G__25213;
})()
;
G__25212 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__25212__2.call(this,a,b);
case 3:
return G__25212__3.call(this,a,b,c);
default:
var G__25216 = null;
if (arguments.length > 3) {
var G__25217__i = 0, G__25217__a = new Array(arguments.length -  3);
while (G__25217__i < G__25217__a.length) {G__25217__a[G__25217__i] = arguments[G__25217__i + 3]; ++G__25217__i;}
G__25216 = new cljs.core.IndexedSeq(G__25217__a,0);
}
return G__25212__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25216);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25212.cljs$lang$maxFixedArity = 3;
G__25212.cljs$lang$applyTo = G__25212__4.cljs$lang$applyTo;
G__25212.cljs$core$IFn$_invoke$arity$2 = G__25212__2;
G__25212.cljs$core$IFn$_invoke$arity$3 = G__25212__3;
G__25212.cljs$core$IFn$_invoke$arity$variadic = G__25212__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25212;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__25248 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__25248) : cljs.core.volatile_BANG_.call(null,G__25248));
})();
return ((function (i){
return (function() {
var G__25278 = null;
var G__25278__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25278__1 = (function (result){
var G__25249 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25249) : rf.call(null,G__25249));
});
var G__25278__2 = (function (result,input){
var G__25250 = result;
var G__25251 = (function (){var G__25252 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__25253 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25252,G__25253) : f.call(null,G__25252,G__25253));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25250,G__25251) : rf.call(null,G__25250,G__25251));
});
G__25278 = function(result,input){
switch(arguments.length){
case 0:
return G__25278__0.call(this);
case 1:
return G__25278__1.call(this,result);
case 2:
return G__25278__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25278.cljs$core$IFn$_invoke$arity$0 = G__25278__0;
G__25278.cljs$core$IFn$_invoke$arity$1 = G__25278__1;
G__25278.cljs$core$IFn$_invoke$arity$2 = G__25278__2;
return G__25278;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4694__auto___25279 = size;
var i_25280 = (0);
while(true){
if((i_25280 < n__4694__auto___25279)){
cljs.core.chunk_append(b,(function (){var G__25274 = (idx + i_25280);
var G__25275 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25280);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25274,G__25275) : f.call(null,G__25274,G__25275));
})());

var G__25281 = (i_25280 + (1));
i_25280 = G__25281;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__25276 = idx;
var G__25277 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25276,G__25277) : f.call(null,G__25276,G__25277));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__25300 = null;
var G__25300__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25300__1 = (function (result){
var G__25294 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25294) : rf.call(null,G__25294));
});
var G__25300__2 = (function (result,input){
var v = (function (){var G__25295 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25295) : f.call(null,G__25295));
})();
if((v == null)){
return result;
} else {
var G__25296 = result;
var G__25297 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25296,G__25297) : rf.call(null,G__25296,G__25297));
}
});
G__25300 = function(result,input){
switch(arguments.length){
case 0:
return G__25300__0.call(this);
case 1:
return G__25300__1.call(this,result);
case 2:
return G__25300__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25300.cljs$core$IFn$_invoke$arity$0 = G__25300__0;
G__25300.cljs$core$IFn$_invoke$arity$1 = G__25300__1;
G__25300.cljs$core$IFn$_invoke$arity$2 = G__25300__2;
return G__25300;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4694__auto___25301 = size;
var i_25302 = (0);
while(true){
if((i_25302 < n__4694__auto___25301)){
var x_25303 = (function (){var G__25298 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25302);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25298) : f.call(null,G__25298));
})();
if((x_25303 == null)){
} else {
cljs.core.chunk_append(b,x_25303);
}

var G__25304 = (i_25302 + (1));
i_25302 = G__25304;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__25299 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25299) : f.call(null,G__25299));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__25305 = this$__$1;
return goog.getUid(G__25305);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__25306 = cljs.core.seq(self__.watches);
var chunk__25307 = null;
var count__25308 = (0);
var i__25309 = (0);
while(true){
if((i__25309 < count__25308)){
var vec__25310 = chunk__25307.cljs$core$IIndexed$_nth$arity$2(null,i__25309);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25310,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25310,(1),null);
var G__25311_25320 = key;
var G__25312_25321 = this$__$1;
var G__25313_25322 = oldval;
var G__25314_25323 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25311_25320,G__25312_25321,G__25313_25322,G__25314_25323) : f.call(null,G__25311_25320,G__25312_25321,G__25313_25322,G__25314_25323));

var G__25324 = seq__25306;
var G__25325 = chunk__25307;
var G__25326 = count__25308;
var G__25327 = (i__25309 + (1));
seq__25306 = G__25324;
chunk__25307 = G__25325;
count__25308 = G__25326;
i__25309 = G__25327;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25306);
if(temp__4126__auto__){
var seq__25306__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25306__$1)){
var c__4594__auto__ = cljs.core.chunk_first(seq__25306__$1);
var G__25328 = cljs.core.chunk_rest(seq__25306__$1);
var G__25329 = c__4594__auto__;
var G__25330 = cljs.core.count(c__4594__auto__);
var G__25331 = (0);
seq__25306 = G__25328;
chunk__25307 = G__25329;
count__25308 = G__25330;
i__25309 = G__25331;
continue;
} else {
var vec__25315 = cljs.core.first(seq__25306__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25315,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25315,(1),null);
var G__25316_25332 = key;
var G__25317_25333 = this$__$1;
var G__25318_25334 = oldval;
var G__25319_25335 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25316_25332,G__25317_25333,G__25318_25334,G__25319_25335) : f.call(null,G__25316_25332,G__25317_25333,G__25318_25334,G__25319_25335));

var G__25336 = cljs.core.next(seq__25306__$1);
var G__25337 = null;
var G__25338 = (0);
var G__25339 = (0);
seq__25306 = G__25336;
chunk__25307 = G__25337;
count__25308 = G__25338;
i__25309 = G__25339;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__25343__delegate = function (x,p__25340){
var map__25342 = p__25340;
var map__25342__$1 = ((cljs.core.seq_QMARK_(map__25342))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__25342):map__25342);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25342__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25342__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__25343 = function (x,var_args){
var p__25340 = null;
if (arguments.length > 1) {
var G__25344__i = 0, G__25344__a = new Array(arguments.length -  1);
while (G__25344__i < G__25344__a.length) {G__25344__a[G__25344__i] = arguments[G__25344__i + 1]; ++G__25344__i;}
  p__25340 = new cljs.core.IndexedSeq(G__25344__a,0);
} 
return G__25343__delegate.call(this,x,p__25340);};
G__25343.cljs$lang$maxFixedArity = 1;
G__25343.cljs$lang$applyTo = (function (arglist__25345){
var x = cljs.core.first(arglist__25345);
var p__25340 = cljs.core.rest(arglist__25345);
return G__25343__delegate(x,p__25340);
});
G__25343.cljs$core$IFn$_invoke$arity$variadic = G__25343__delegate;
return G__25343;
})()
;
atom = function(x,var_args){
var p__25340 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__25346 = null;
if (arguments.length > 1) {
var G__25347__i = 0, G__25347__a = new Array(arguments.length -  1);
while (G__25347__i < G__25347__a.length) {G__25347__a[G__25347__i] = arguments[G__25347__i + 1]; ++G__25347__i;}
G__25346 = new cljs.core.IndexedSeq(G__25347__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__25346);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__25350 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__25350) : validate.call(null,G__25350));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__25351 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__25351) : cljs.core.pr_str.call(null,G__25351));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25358 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25358) : f.call(null,G__25358));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25359 = a.state;
var G__25360 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25359,G__25360) : f.call(null,G__25359,G__25360));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25361 = a.state;
var G__25362 = x;
var G__25363 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25361,G__25362,G__25363) : f.call(null,G__25361,G__25362,G__25363));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__25364__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__25364 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__25365__i = 0, G__25365__a = new Array(arguments.length -  4);
while (G__25365__i < G__25365__a.length) {G__25365__a[G__25365__i] = arguments[G__25365__i + 4]; ++G__25365__i;}
  more = new cljs.core.IndexedSeq(G__25365__a,0);
} 
return G__25364__delegate.call(this,a,f,x,y,more);};
G__25364.cljs$lang$maxFixedArity = 4;
G__25364.cljs$lang$applyTo = (function (arglist__25366){
var a = cljs.core.first(arglist__25366);
arglist__25366 = cljs.core.next(arglist__25366);
var f = cljs.core.first(arglist__25366);
arglist__25366 = cljs.core.next(arglist__25366);
var x = cljs.core.first(arglist__25366);
arglist__25366 = cljs.core.next(arglist__25366);
var y = cljs.core.first(arglist__25366);
var more = cljs.core.rest(arglist__25366);
return G__25364__delegate(a,f,x,y,more);
});
G__25364.cljs$core$IFn$_invoke$arity$variadic = G__25364__delegate;
return G__25364;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__25367 = null;
if (arguments.length > 4) {
var G__25368__i = 0, G__25368__a = new Array(arguments.length -  4);
while (G__25368__i < G__25368__a.length) {G__25368__a[G__25368__i] = arguments[G__25368__i + 4]; ++G__25368__i;}
G__25367 = new cljs.core.IndexedSeq(G__25368__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__25367);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__25435 = null;
var G__25435__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25435__1 = (function (result){
var G__25402 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25402) : rf.call(null,G__25402));
});
var G__25435__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__25403 = i;
var G__25404 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25403,G__25404) : f.call(null,G__25403,G__25404));
})();
if((v == null)){
return result;
} else {
var G__25405 = result;
var G__25406 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25405,G__25406) : rf.call(null,G__25405,G__25406));
}
});
G__25435 = function(result,input){
switch(arguments.length){
case 0:
return G__25435__0.call(this);
case 1:
return G__25435__1.call(this,result);
case 2:
return G__25435__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25435.cljs$core$IFn$_invoke$arity$0 = G__25435__0;
G__25435.cljs$core$IFn$_invoke$arity$1 = G__25435__1;
G__25435.cljs$core$IFn$_invoke$arity$2 = G__25435__2;
return G__25435;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4694__auto___25436 = size;
var i_25437 = (0);
while(true){
if((i_25437 < n__4694__auto___25436)){
var x_25438 = (function (){var G__25431 = (idx + i_25437);
var G__25432 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25437);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25431,G__25432) : f.call(null,G__25431,G__25432));
})();
if((x_25438 == null)){
} else {
cljs.core.chunk_append(b,x_25438);
}

var G__25439 = (i_25437 + (1));
i_25437 = G__25439;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__25433 = idx;
var G__25434 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25433,G__25434) : f.call(null,G__25433,G__25434));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__25653 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25653) : p.call(null,G__25653));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3795__auto__ = (function (){var G__25655 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25655) : p.call(null,G__25655));
})();
if(cljs.core.truth_(and__3795__auto__)){
var G__25656 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25656) : p.call(null,G__25656));
} else {
return and__3795__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3795__auto__ = (function (){var G__25658 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25658) : p.call(null,G__25658));
})();
if(cljs.core.truth_(and__3795__auto__)){
var and__3795__auto____$1 = (function (){var G__25660 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25660) : p.call(null,G__25660));
})();
if(cljs.core.truth_(and__3795__auto____$1)){
var G__25661 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25661) : p.call(null,G__25661));
} else {
return and__3795__auto____$1;
}
} else {
return and__3795__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__25830__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__25830 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25831__i = 0, G__25831__a = new Array(arguments.length -  3);
while (G__25831__i < G__25831__a.length) {G__25831__a[G__25831__i] = arguments[G__25831__i + 3]; ++G__25831__i;}
  args = new cljs.core.IndexedSeq(G__25831__a,0);
} 
return G__25830__delegate.call(this,x,y,z,args);};
G__25830.cljs$lang$maxFixedArity = 3;
G__25830.cljs$lang$applyTo = (function (arglist__25832){
var x = cljs.core.first(arglist__25832);
arglist__25832 = cljs.core.next(arglist__25832);
var y = cljs.core.first(arglist__25832);
arglist__25832 = cljs.core.next(arglist__25832);
var z = cljs.core.first(arglist__25832);
var args = cljs.core.rest(arglist__25832);
return G__25830__delegate(x,y,z,args);
});
G__25830.cljs$core$IFn$_invoke$arity$variadic = G__25830__delegate;
return G__25830;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__25833 = null;
if (arguments.length > 3) {
var G__25834__i = 0, G__25834__a = new Array(arguments.length -  3);
while (G__25834__i < G__25834__a.length) {G__25834__a[G__25834__i] = arguments[G__25834__i + 3]; ++G__25834__i;}
G__25833 = new cljs.core.IndexedSeq(G__25834__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25833);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3795__auto__ = (function (){var G__25693 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25693) : p1.call(null,G__25693));
})();
if(cljs.core.truth_(and__3795__auto__)){
var G__25694 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25694) : p2.call(null,G__25694));
} else {
return and__3795__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3795__auto__ = (function (){var G__25696 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25696) : p1.call(null,G__25696));
})();
if(cljs.core.truth_(and__3795__auto__)){
var and__3795__auto____$1 = (function (){var G__25698 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25698) : p1.call(null,G__25698));
})();
if(cljs.core.truth_(and__3795__auto____$1)){
var and__3795__auto____$2 = (function (){var G__25700 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25700) : p2.call(null,G__25700));
})();
if(cljs.core.truth_(and__3795__auto____$2)){
var G__25701 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25701) : p2.call(null,G__25701));
} else {
return and__3795__auto____$2;
}
} else {
return and__3795__auto____$1;
}
} else {
return and__3795__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3795__auto__ = (function (){var G__25703 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25703) : p1.call(null,G__25703));
})();
if(cljs.core.truth_(and__3795__auto__)){
var and__3795__auto____$1 = (function (){var G__25705 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25705) : p1.call(null,G__25705));
})();
if(cljs.core.truth_(and__3795__auto____$1)){
var and__3795__auto____$2 = (function (){var G__25707 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25707) : p1.call(null,G__25707));
})();
if(cljs.core.truth_(and__3795__auto____$2)){
var and__3795__auto____$3 = (function (){var G__25709 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25709) : p2.call(null,G__25709));
})();
if(cljs.core.truth_(and__3795__auto____$3)){
var and__3795__auto____$4 = (function (){var G__25711 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25711) : p2.call(null,G__25711));
})();
if(cljs.core.truth_(and__3795__auto____$4)){
var G__25712 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25712) : p2.call(null,G__25712));
} else {
return and__3795__auto____$4;
}
} else {
return and__3795__auto____$3;
}
} else {
return and__3795__auto____$2;
}
} else {
return and__3795__auto____$1;
}
} else {
return and__3795__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__25835__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__25440_SHARP_){
var and__3795__auto__ = (function (){var G__25717 = p1__25440_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25717) : p1.call(null,G__25717));
})();
if(cljs.core.truth_(and__3795__auto__)){
var G__25718 = p1__25440_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25718) : p2.call(null,G__25718));
} else {
return and__3795__auto__;
}
}),args)));
};
var G__25835 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25836__i = 0, G__25836__a = new Array(arguments.length -  3);
while (G__25836__i < G__25836__a.length) {G__25836__a[G__25836__i] = arguments[G__25836__i + 3]; ++G__25836__i;}
  args = new cljs.core.IndexedSeq(G__25836__a,0);
} 
return G__25835__delegate.call(this,x,y,z,args);};
G__25835.cljs$lang$maxFixedArity = 3;
G__25835.cljs$lang$applyTo = (function (arglist__25837){
var x = cljs.core.first(arglist__25837);
arglist__25837 = cljs.core.next(arglist__25837);
var y = cljs.core.first(arglist__25837);
arglist__25837 = cljs.core.next(arglist__25837);
var z = cljs.core.first(arglist__25837);
var args = cljs.core.rest(arglist__25837);
return G__25835__delegate(x,y,z,args);
});
G__25835.cljs$core$IFn$_invoke$arity$variadic = G__25835__delegate;
return G__25835;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__25838 = null;
if (arguments.length > 3) {
var G__25839__i = 0, G__25839__a = new Array(arguments.length -  3);
while (G__25839__i < G__25839__a.length) {G__25839__a[G__25839__i] = arguments[G__25839__i + 3]; ++G__25839__i;}
G__25838 = new cljs.core.IndexedSeq(G__25839__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25838);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3795__auto__ = (function (){var G__25764 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25764) : p1.call(null,G__25764));
})();
if(cljs.core.truth_(and__3795__auto__)){
var and__3795__auto____$1 = (function (){var G__25766 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25766) : p2.call(null,G__25766));
})();
if(cljs.core.truth_(and__3795__auto____$1)){
var G__25767 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25767) : p3.call(null,G__25767));
} else {
return and__3795__auto____$1;
}
} else {
return and__3795__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3795__auto__ = (function (){var G__25769 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25769) : p1.call(null,G__25769));
})();
if(cljs.core.truth_(and__3795__auto__)){
var and__3795__auto____$1 = (function (){var G__25771 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25771) : p2.call(null,G__25771));
})();
if(cljs.core.truth_(and__3795__auto____$1)){
var and__3795__auto____$2 = (function (){var G__25773 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25773) : p3.call(null,G__25773));
})();
if(cljs.core.truth_(and__3795__auto____$2)){
var and__3795__auto____$3 = (function (){var G__25775 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25775) : p1.call(null,G__25775));
})();
if(cljs.core.truth_(and__3795__auto____$3)){
var and__3795__auto____$4 = (function (){var G__25777 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25777) : p2.call(null,G__25777));
})();
if(cljs.core.truth_(and__3795__auto____$4)){
var G__25778 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25778) : p3.call(null,G__25778));
} else {
return and__3795__auto____$4;
}
} else {
return and__3795__auto____$3;
}
} else {
return and__3795__auto____$2;
}
} else {
return and__3795__auto____$1;
}
} else {
return and__3795__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3795__auto__ = (function (){var G__25780 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25780) : p1.call(null,G__25780));
})();
if(cljs.core.truth_(and__3795__auto__)){
var and__3795__auto____$1 = (function (){var G__25782 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25782) : p2.call(null,G__25782));
})();
if(cljs.core.truth_(and__3795__auto____$1)){
var and__3795__auto____$2 = (function (){var G__25784 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25784) : p3.call(null,G__25784));
})();
if(cljs.core.truth_(and__3795__auto____$2)){
var and__3795__auto____$3 = (function (){var G__25786 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25786) : p1.call(null,G__25786));
})();
if(cljs.core.truth_(and__3795__auto____$3)){
var and__3795__auto____$4 = (function (){var G__25788 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25788) : p2.call(null,G__25788));
})();
if(cljs.core.truth_(and__3795__auto____$4)){
var and__3795__auto____$5 = (function (){var G__25790 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25790) : p3.call(null,G__25790));
})();
if(cljs.core.truth_(and__3795__auto____$5)){
var and__3795__auto____$6 = (function (){var G__25792 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25792) : p1.call(null,G__25792));
})();
if(cljs.core.truth_(and__3795__auto____$6)){
var and__3795__auto____$7 = (function (){var G__25794 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25794) : p2.call(null,G__25794));
})();
if(cljs.core.truth_(and__3795__auto____$7)){
var G__25795 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25795) : p3.call(null,G__25795));
} else {
return and__3795__auto____$7;
}
} else {
return and__3795__auto____$6;
}
} else {
return and__3795__auto____$5;
}
} else {
return and__3795__auto____$4;
}
} else {
return and__3795__auto____$3;
}
} else {
return and__3795__auto____$2;
}
} else {
return and__3795__auto____$1;
}
} else {
return and__3795__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__25840__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__25441_SHARP_){
var and__3795__auto__ = (function (){var G__25802 = p1__25441_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25802) : p1.call(null,G__25802));
})();
if(cljs.core.truth_(and__3795__auto__)){
var and__3795__auto____$1 = (function (){var G__25804 = p1__25441_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25804) : p2.call(null,G__25804));
})();
if(cljs.core.truth_(and__3795__auto____$1)){
var G__25805 = p1__25441_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25805) : p3.call(null,G__25805));
} else {
return and__3795__auto____$1;
}
} else {
return and__3795__auto__;
}
}),args)));
};
var G__25840 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25841__i = 0, G__25841__a = new Array(arguments.length -  3);
while (G__25841__i < G__25841__a.length) {G__25841__a[G__25841__i] = arguments[G__25841__i + 3]; ++G__25841__i;}
  args = new cljs.core.IndexedSeq(G__25841__a,0);
} 
return G__25840__delegate.call(this,x,y,z,args);};
G__25840.cljs$lang$maxFixedArity = 3;
G__25840.cljs$lang$applyTo = (function (arglist__25842){
var x = cljs.core.first(arglist__25842);
arglist__25842 = cljs.core.next(arglist__25842);
var y = cljs.core.first(arglist__25842);
arglist__25842 = cljs.core.next(arglist__25842);
var z = cljs.core.first(arglist__25842);
var args = cljs.core.rest(arglist__25842);
return G__25840__delegate(x,y,z,args);
});
G__25840.cljs$core$IFn$_invoke$arity$variadic = G__25840__delegate;
return G__25840;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__25843 = null;
if (arguments.length > 3) {
var G__25844__i = 0, G__25844__a = new Array(arguments.length -  3);
while (G__25844__i < G__25844__a.length) {G__25844__a[G__25844__i] = arguments[G__25844__i + 3]; ++G__25844__i;}
G__25843 = new cljs.core.IndexedSeq(G__25844__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25843);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__25845__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25442_SHARP_){
var G__25821 = x;
return (p1__25442_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25442_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25821) : p1__25442_SHARP_.call(null,G__25821));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25443_SHARP_){
var and__3795__auto__ = (function (){var G__25823 = x;
return (p1__25443_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25443_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25823) : p1__25443_SHARP_.call(null,G__25823));
})();
if(cljs.core.truth_(and__3795__auto__)){
var G__25824 = y;
return (p1__25443_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25443_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25824) : p1__25443_SHARP_.call(null,G__25824));
} else {
return and__3795__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25444_SHARP_){
var and__3795__auto__ = (function (){var G__25826 = x;
return (p1__25444_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25444_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25826) : p1__25444_SHARP_.call(null,G__25826));
})();
if(cljs.core.truth_(and__3795__auto__)){
var and__3795__auto____$1 = (function (){var G__25828 = y;
return (p1__25444_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25444_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25828) : p1__25444_SHARP_.call(null,G__25828));
})();
if(cljs.core.truth_(and__3795__auto____$1)){
var G__25829 = z;
return (p1__25444_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25444_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25829) : p1__25444_SHARP_.call(null,G__25829));
} else {
return and__3795__auto____$1;
}
} else {
return and__3795__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__25846__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25445_SHARP_){
return cljs.core.every_QMARK_(p1__25445_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__25846 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25847__i = 0, G__25847__a = new Array(arguments.length -  3);
while (G__25847__i < G__25847__a.length) {G__25847__a[G__25847__i] = arguments[G__25847__i + 3]; ++G__25847__i;}
  args = new cljs.core.IndexedSeq(G__25847__a,0);
} 
return G__25846__delegate.call(this,x,y,z,args);};
G__25846.cljs$lang$maxFixedArity = 3;
G__25846.cljs$lang$applyTo = (function (arglist__25848){
var x = cljs.core.first(arglist__25848);
arglist__25848 = cljs.core.next(arglist__25848);
var y = cljs.core.first(arglist__25848);
arglist__25848 = cljs.core.next(arglist__25848);
var z = cljs.core.first(arglist__25848);
var args = cljs.core.rest(arglist__25848);
return G__25846__delegate(x,y,z,args);
});
G__25846.cljs$core$IFn$_invoke$arity$variadic = G__25846__delegate;
return G__25846;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__25849 = null;
if (arguments.length > 3) {
var G__25850__i = 0, G__25850__a = new Array(arguments.length -  3);
while (G__25850__i < G__25850__a.length) {G__25850__a[G__25850__i] = arguments[G__25850__i + 3]; ++G__25850__i;}
G__25849 = new cljs.core.IndexedSeq(G__25850__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25849);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__25845 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__25851__i = 0, G__25851__a = new Array(arguments.length -  3);
while (G__25851__i < G__25851__a.length) {G__25851__a[G__25851__i] = arguments[G__25851__i + 3]; ++G__25851__i;}
  ps = new cljs.core.IndexedSeq(G__25851__a,0);
} 
return G__25845__delegate.call(this,p1,p2,p3,ps);};
G__25845.cljs$lang$maxFixedArity = 3;
G__25845.cljs$lang$applyTo = (function (arglist__25852){
var p1 = cljs.core.first(arglist__25852);
arglist__25852 = cljs.core.next(arglist__25852);
var p2 = cljs.core.first(arglist__25852);
arglist__25852 = cljs.core.next(arglist__25852);
var p3 = cljs.core.first(arglist__25852);
var ps = cljs.core.rest(arglist__25852);
return G__25845__delegate(p1,p2,p3,ps);
});
G__25845.cljs$core$IFn$_invoke$arity$variadic = G__25845__delegate;
return G__25845;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__25853 = null;
if (arguments.length > 3) {
var G__25854__i = 0, G__25854__a = new Array(arguments.length -  3);
while (G__25854__i < G__25854__a.length) {G__25854__a[G__25854__i] = arguments[G__25854__i + 3]; ++G__25854__i;}
G__25853 = new cljs.core.IndexedSeq(G__25854__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__25853);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__26060 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26060) : p.call(null,G__26060));
});
var sp1__2 = (function (x,y){
var or__3807__auto__ = (function (){var G__26062 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26062) : p.call(null,G__26062));
})();
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
var G__26063 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26063) : p.call(null,G__26063));
}
});
var sp1__3 = (function (x,y,z){
var or__3807__auto__ = (function (){var G__26065 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26065) : p.call(null,G__26065));
})();
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (function (){var G__26067 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26067) : p.call(null,G__26067));
})();
if(cljs.core.truth_(or__3807__auto____$1)){
return or__3807__auto____$1;
} else {
var G__26068 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26068) : p.call(null,G__26068));
}
}
});
var sp1__4 = (function() { 
var G__26229__delegate = function (x,y,z,args){
var or__3807__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__26229 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26230__i = 0, G__26230__a = new Array(arguments.length -  3);
while (G__26230__i < G__26230__a.length) {G__26230__a[G__26230__i] = arguments[G__26230__i + 3]; ++G__26230__i;}
  args = new cljs.core.IndexedSeq(G__26230__a,0);
} 
return G__26229__delegate.call(this,x,y,z,args);};
G__26229.cljs$lang$maxFixedArity = 3;
G__26229.cljs$lang$applyTo = (function (arglist__26231){
var x = cljs.core.first(arglist__26231);
arglist__26231 = cljs.core.next(arglist__26231);
var y = cljs.core.first(arglist__26231);
arglist__26231 = cljs.core.next(arglist__26231);
var z = cljs.core.first(arglist__26231);
var args = cljs.core.rest(arglist__26231);
return G__26229__delegate(x,y,z,args);
});
G__26229.cljs$core$IFn$_invoke$arity$variadic = G__26229__delegate;
return G__26229;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__26232 = null;
if (arguments.length > 3) {
var G__26233__i = 0, G__26233__a = new Array(arguments.length -  3);
while (G__26233__i < G__26233__a.length) {G__26233__a[G__26233__i] = arguments[G__26233__i + 3]; ++G__26233__i;}
G__26232 = new cljs.core.IndexedSeq(G__26233__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26232);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3807__auto__ = (function (){var G__26100 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26100) : p1.call(null,G__26100));
})();
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
var G__26101 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26101) : p2.call(null,G__26101));
}
});
var sp2__2 = (function (x,y){
var or__3807__auto__ = (function (){var G__26103 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26103) : p1.call(null,G__26103));
})();
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (function (){var G__26105 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26105) : p1.call(null,G__26105));
})();
if(cljs.core.truth_(or__3807__auto____$1)){
return or__3807__auto____$1;
} else {
var or__3807__auto____$2 = (function (){var G__26107 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26107) : p2.call(null,G__26107));
})();
if(cljs.core.truth_(or__3807__auto____$2)){
return or__3807__auto____$2;
} else {
var G__26108 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26108) : p2.call(null,G__26108));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3807__auto__ = (function (){var G__26110 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26110) : p1.call(null,G__26110));
})();
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (function (){var G__26112 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26112) : p1.call(null,G__26112));
})();
if(cljs.core.truth_(or__3807__auto____$1)){
return or__3807__auto____$1;
} else {
var or__3807__auto____$2 = (function (){var G__26114 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26114) : p1.call(null,G__26114));
})();
if(cljs.core.truth_(or__3807__auto____$2)){
return or__3807__auto____$2;
} else {
var or__3807__auto____$3 = (function (){var G__26116 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26116) : p2.call(null,G__26116));
})();
if(cljs.core.truth_(or__3807__auto____$3)){
return or__3807__auto____$3;
} else {
var or__3807__auto____$4 = (function (){var G__26118 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26118) : p2.call(null,G__26118));
})();
if(cljs.core.truth_(or__3807__auto____$4)){
return or__3807__auto____$4;
} else {
var G__26119 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26119) : p2.call(null,G__26119));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__26234__delegate = function (x,y,z,args){
var or__3807__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return cljs.core.some(((function (or__3807__auto__){
return (function (p1__25855_SHARP_){
var or__3807__auto____$1 = (function (){var G__26121 = p1__25855_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26121) : p1.call(null,G__26121));
})();
if(cljs.core.truth_(or__3807__auto____$1)){
return or__3807__auto____$1;
} else {
var G__26122 = p1__25855_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26122) : p2.call(null,G__26122));
}
});})(or__3807__auto__))
,args);
}
};
var G__26234 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26235__i = 0, G__26235__a = new Array(arguments.length -  3);
while (G__26235__i < G__26235__a.length) {G__26235__a[G__26235__i] = arguments[G__26235__i + 3]; ++G__26235__i;}
  args = new cljs.core.IndexedSeq(G__26235__a,0);
} 
return G__26234__delegate.call(this,x,y,z,args);};
G__26234.cljs$lang$maxFixedArity = 3;
G__26234.cljs$lang$applyTo = (function (arglist__26236){
var x = cljs.core.first(arglist__26236);
arglist__26236 = cljs.core.next(arglist__26236);
var y = cljs.core.first(arglist__26236);
arglist__26236 = cljs.core.next(arglist__26236);
var z = cljs.core.first(arglist__26236);
var args = cljs.core.rest(arglist__26236);
return G__26234__delegate(x,y,z,args);
});
G__26234.cljs$core$IFn$_invoke$arity$variadic = G__26234__delegate;
return G__26234;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__26237 = null;
if (arguments.length > 3) {
var G__26238__i = 0, G__26238__a = new Array(arguments.length -  3);
while (G__26238__i < G__26238__a.length) {G__26238__a[G__26238__i] = arguments[G__26238__i + 3]; ++G__26238__i;}
G__26237 = new cljs.core.IndexedSeq(G__26238__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26237);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3807__auto__ = (function (){var G__26168 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26168) : p1.call(null,G__26168));
})();
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (function (){var G__26170 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26170) : p2.call(null,G__26170));
})();
if(cljs.core.truth_(or__3807__auto____$1)){
return or__3807__auto____$1;
} else {
var G__26171 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26171) : p3.call(null,G__26171));
}
}
});
var sp3__2 = (function (x,y){
var or__3807__auto__ = (function (){var G__26173 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26173) : p1.call(null,G__26173));
})();
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (function (){var G__26175 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26175) : p2.call(null,G__26175));
})();
if(cljs.core.truth_(or__3807__auto____$1)){
return or__3807__auto____$1;
} else {
var or__3807__auto____$2 = (function (){var G__26177 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26177) : p3.call(null,G__26177));
})();
if(cljs.core.truth_(or__3807__auto____$2)){
return or__3807__auto____$2;
} else {
var or__3807__auto____$3 = (function (){var G__26179 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26179) : p1.call(null,G__26179));
})();
if(cljs.core.truth_(or__3807__auto____$3)){
return or__3807__auto____$3;
} else {
var or__3807__auto____$4 = (function (){var G__26181 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26181) : p2.call(null,G__26181));
})();
if(cljs.core.truth_(or__3807__auto____$4)){
return or__3807__auto____$4;
} else {
var G__26182 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26182) : p3.call(null,G__26182));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3807__auto__ = (function (){var G__26184 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26184) : p1.call(null,G__26184));
})();
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (function (){var G__26186 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26186) : p2.call(null,G__26186));
})();
if(cljs.core.truth_(or__3807__auto____$1)){
return or__3807__auto____$1;
} else {
var or__3807__auto____$2 = (function (){var G__26188 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26188) : p3.call(null,G__26188));
})();
if(cljs.core.truth_(or__3807__auto____$2)){
return or__3807__auto____$2;
} else {
var or__3807__auto____$3 = (function (){var G__26190 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26190) : p1.call(null,G__26190));
})();
if(cljs.core.truth_(or__3807__auto____$3)){
return or__3807__auto____$3;
} else {
var or__3807__auto____$4 = (function (){var G__26192 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26192) : p2.call(null,G__26192));
})();
if(cljs.core.truth_(or__3807__auto____$4)){
return or__3807__auto____$4;
} else {
var or__3807__auto____$5 = (function (){var G__26194 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26194) : p3.call(null,G__26194));
})();
if(cljs.core.truth_(or__3807__auto____$5)){
return or__3807__auto____$5;
} else {
var or__3807__auto____$6 = (function (){var G__26196 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26196) : p1.call(null,G__26196));
})();
if(cljs.core.truth_(or__3807__auto____$6)){
return or__3807__auto____$6;
} else {
var or__3807__auto____$7 = (function (){var G__26198 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26198) : p2.call(null,G__26198));
})();
if(cljs.core.truth_(or__3807__auto____$7)){
return or__3807__auto____$7;
} else {
var G__26199 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26199) : p3.call(null,G__26199));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__26239__delegate = function (x,y,z,args){
var or__3807__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return cljs.core.some(((function (or__3807__auto__){
return (function (p1__25856_SHARP_){
var or__3807__auto____$1 = (function (){var G__26201 = p1__25856_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26201) : p1.call(null,G__26201));
})();
if(cljs.core.truth_(or__3807__auto____$1)){
return or__3807__auto____$1;
} else {
var or__3807__auto____$2 = (function (){var G__26203 = p1__25856_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26203) : p2.call(null,G__26203));
})();
if(cljs.core.truth_(or__3807__auto____$2)){
return or__3807__auto____$2;
} else {
var G__26204 = p1__25856_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26204) : p3.call(null,G__26204));
}
}
});})(or__3807__auto__))
,args);
}
};
var G__26239 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26240__i = 0, G__26240__a = new Array(arguments.length -  3);
while (G__26240__i < G__26240__a.length) {G__26240__a[G__26240__i] = arguments[G__26240__i + 3]; ++G__26240__i;}
  args = new cljs.core.IndexedSeq(G__26240__a,0);
} 
return G__26239__delegate.call(this,x,y,z,args);};
G__26239.cljs$lang$maxFixedArity = 3;
G__26239.cljs$lang$applyTo = (function (arglist__26241){
var x = cljs.core.first(arglist__26241);
arglist__26241 = cljs.core.next(arglist__26241);
var y = cljs.core.first(arglist__26241);
arglist__26241 = cljs.core.next(arglist__26241);
var z = cljs.core.first(arglist__26241);
var args = cljs.core.rest(arglist__26241);
return G__26239__delegate(x,y,z,args);
});
G__26239.cljs$core$IFn$_invoke$arity$variadic = G__26239__delegate;
return G__26239;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__26242 = null;
if (arguments.length > 3) {
var G__26243__i = 0, G__26243__a = new Array(arguments.length -  3);
while (G__26243__i < G__26243__a.length) {G__26243__a[G__26243__i] = arguments[G__26243__i + 3]; ++G__26243__i;}
G__26242 = new cljs.core.IndexedSeq(G__26243__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26242);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__26244__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__25857_SHARP_){
var G__26220 = x;
return (p1__25857_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25857_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26220) : p1__25857_SHARP_.call(null,G__26220));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__25858_SHARP_){
var or__3807__auto__ = (function (){var G__26222 = x;
return (p1__25858_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25858_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26222) : p1__25858_SHARP_.call(null,G__26222));
})();
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
var G__26223 = y;
return (p1__25858_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25858_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26223) : p1__25858_SHARP_.call(null,G__26223));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__25859_SHARP_){
var or__3807__auto__ = (function (){var G__26225 = x;
return (p1__25859_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25859_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26225) : p1__25859_SHARP_.call(null,G__26225));
})();
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (function (){var G__26227 = y;
return (p1__25859_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25859_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26227) : p1__25859_SHARP_.call(null,G__26227));
})();
if(cljs.core.truth_(or__3807__auto____$1)){
return or__3807__auto____$1;
} else {
var G__26228 = z;
return (p1__25859_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25859_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26228) : p1__25859_SHARP_.call(null,G__26228));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__26245__delegate = function (x,y,z,args){
var or__3807__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return cljs.core.some(((function (or__3807__auto__,ps__$1){
return (function (p1__25860_SHARP_){
return cljs.core.some(p1__25860_SHARP_,args);
});})(or__3807__auto__,ps__$1))
,ps__$1);
}
};
var G__26245 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26246__i = 0, G__26246__a = new Array(arguments.length -  3);
while (G__26246__i < G__26246__a.length) {G__26246__a[G__26246__i] = arguments[G__26246__i + 3]; ++G__26246__i;}
  args = new cljs.core.IndexedSeq(G__26246__a,0);
} 
return G__26245__delegate.call(this,x,y,z,args);};
G__26245.cljs$lang$maxFixedArity = 3;
G__26245.cljs$lang$applyTo = (function (arglist__26247){
var x = cljs.core.first(arglist__26247);
arglist__26247 = cljs.core.next(arglist__26247);
var y = cljs.core.first(arglist__26247);
arglist__26247 = cljs.core.next(arglist__26247);
var z = cljs.core.first(arglist__26247);
var args = cljs.core.rest(arglist__26247);
return G__26245__delegate(x,y,z,args);
});
G__26245.cljs$core$IFn$_invoke$arity$variadic = G__26245__delegate;
return G__26245;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__26248 = null;
if (arguments.length > 3) {
var G__26249__i = 0, G__26249__a = new Array(arguments.length -  3);
while (G__26249__i < G__26249__a.length) {G__26249__a[G__26249__i] = arguments[G__26249__i + 3]; ++G__26249__i;}
G__26248 = new cljs.core.IndexedSeq(G__26249__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26248);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__26244 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__26250__i = 0, G__26250__a = new Array(arguments.length -  3);
while (G__26250__i < G__26250__a.length) {G__26250__a[G__26250__i] = arguments[G__26250__i + 3]; ++G__26250__i;}
  ps = new cljs.core.IndexedSeq(G__26250__a,0);
} 
return G__26244__delegate.call(this,p1,p2,p3,ps);};
G__26244.cljs$lang$maxFixedArity = 3;
G__26244.cljs$lang$applyTo = (function (arglist__26251){
var p1 = cljs.core.first(arglist__26251);
arglist__26251 = cljs.core.next(arglist__26251);
var p2 = cljs.core.first(arglist__26251);
arglist__26251 = cljs.core.next(arglist__26251);
var p3 = cljs.core.first(arglist__26251);
var ps = cljs.core.rest(arglist__26251);
return G__26244__delegate(p1,p2,p3,ps);
});
G__26244.cljs$core$IFn$_invoke$arity$variadic = G__26244__delegate;
return G__26244;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__26252 = null;
if (arguments.length > 3) {
var G__26253__i = 0, G__26253__a = new Array(arguments.length -  3);
while (G__26253__i < G__26253__a.length) {G__26253__a[G__26253__i] = arguments[G__26253__i + 3]; ++G__26253__i;}
G__26252 = new cljs.core.IndexedSeq(G__26253__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__26252);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__26308 = null;
var G__26308__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26308__1 = (function (result){
var G__26294 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26294) : rf.call(null,G__26294));
});
var G__26308__2 = (function (result,input){
var G__26295 = result;
var G__26296 = (function (){var G__26297 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26297) : f.call(null,G__26297));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26295,G__26296) : rf.call(null,G__26295,G__26296));
});
var G__26308__3 = (function() { 
var G__26309__delegate = function (result,input,inputs){
var G__26298 = result;
var G__26299 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26298,G__26299) : rf.call(null,G__26298,G__26299));
};
var G__26309 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__26310__i = 0, G__26310__a = new Array(arguments.length -  2);
while (G__26310__i < G__26310__a.length) {G__26310__a[G__26310__i] = arguments[G__26310__i + 2]; ++G__26310__i;}
  inputs = new cljs.core.IndexedSeq(G__26310__a,0);
} 
return G__26309__delegate.call(this,result,input,inputs);};
G__26309.cljs$lang$maxFixedArity = 2;
G__26309.cljs$lang$applyTo = (function (arglist__26311){
var result = cljs.core.first(arglist__26311);
arglist__26311 = cljs.core.next(arglist__26311);
var input = cljs.core.first(arglist__26311);
var inputs = cljs.core.rest(arglist__26311);
return G__26309__delegate(result,input,inputs);
});
G__26309.cljs$core$IFn$_invoke$arity$variadic = G__26309__delegate;
return G__26309;
})()
;
G__26308 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__26308__0.call(this);
case 1:
return G__26308__1.call(this,result);
case 2:
return G__26308__2.call(this,result,input);
default:
var G__26312 = null;
if (arguments.length > 2) {
var G__26313__i = 0, G__26313__a = new Array(arguments.length -  2);
while (G__26313__i < G__26313__a.length) {G__26313__a[G__26313__i] = arguments[G__26313__i + 2]; ++G__26313__i;}
G__26312 = new cljs.core.IndexedSeq(G__26313__a,0);
}
return G__26308__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__26312);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26308.cljs$lang$maxFixedArity = 2;
G__26308.cljs$lang$applyTo = G__26308__3.cljs$lang$applyTo;
G__26308.cljs$core$IFn$_invoke$arity$0 = G__26308__0;
G__26308.cljs$core$IFn$_invoke$arity$1 = G__26308__1;
G__26308.cljs$core$IFn$_invoke$arity$2 = G__26308__2;
G__26308.cljs$core$IFn$_invoke$arity$variadic = G__26308__3.cljs$core$IFn$_invoke$arity$variadic;
return G__26308;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4694__auto___26314 = size;
var i_26315 = (0);
while(true){
if((i_26315 < n__4694__auto___26314)){
cljs.core.chunk_append(b,(function (){var G__26300 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26315);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26300) : f.call(null,G__26300));
})());

var G__26316 = (i_26315 + (1));
i_26315 = G__26316;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__26301 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26301) : f.call(null,G__26301));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__26302 = cljs.core.first(s1);
var G__26303 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26302,G__26303) : f.call(null,G__26302,G__26303));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__26304 = cljs.core.first(s1);
var G__26305 = cljs.core.first(s2);
var G__26306 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26304,G__26305,G__26306) : f.call(null,G__26304,G__26305,G__26306));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__26317__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__26254_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__26254_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__26317 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__26318__i = 0, G__26318__a = new Array(arguments.length -  4);
while (G__26318__i < G__26318__a.length) {G__26318__a[G__26318__i] = arguments[G__26318__i + 4]; ++G__26318__i;}
  colls = new cljs.core.IndexedSeq(G__26318__a,0);
} 
return G__26317__delegate.call(this,f,c1,c2,c3,colls);};
G__26317.cljs$lang$maxFixedArity = 4;
G__26317.cljs$lang$applyTo = (function (arglist__26319){
var f = cljs.core.first(arglist__26319);
arglist__26319 = cljs.core.next(arglist__26319);
var c1 = cljs.core.first(arglist__26319);
arglist__26319 = cljs.core.next(arglist__26319);
var c2 = cljs.core.first(arglist__26319);
arglist__26319 = cljs.core.next(arglist__26319);
var c3 = cljs.core.first(arglist__26319);
var colls = cljs.core.rest(arglist__26319);
return G__26317__delegate(f,c1,c2,c3,colls);
});
G__26317.cljs$core$IFn$_invoke$arity$variadic = G__26317__delegate;
return G__26317;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__26320 = null;
if (arguments.length > 4) {
var G__26321__i = 0, G__26321__a = new Array(arguments.length -  4);
while (G__26321__i < G__26321__a.length) {G__26321__a[G__26321__i] = arguments[G__26321__i + 4]; ++G__26321__i;}
G__26320 = new cljs.core.IndexedSeq(G__26321__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__26320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__26330 = null;
var G__26330__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26330__1 = (function (result){
var G__26327 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26327) : rf.call(null,G__26327));
});
var G__26330__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__26328 = result;
var G__26329 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26328,G__26329) : rf.call(null,G__26328,G__26329));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__26330 = function(result,input){
switch(arguments.length){
case 0:
return G__26330__0.call(this);
case 1:
return G__26330__1.call(this,result);
case 2:
return G__26330__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26330.cljs$core$IFn$_invoke$arity$0 = G__26330__0;
G__26330.cljs$core$IFn$_invoke$arity$1 = G__26330__1;
G__26330.cljs$core$IFn$_invoke$arity$2 = G__26330__2;
return G__26330;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__26337 = null;
var G__26337__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26337__1 = (function (result){
var G__26334 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26334) : rf.call(null,G__26334));
});
var G__26337__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__26335 = result;
var G__26336 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26335,G__26336) : rf.call(null,G__26335,G__26336));
}
});
G__26337 = function(result,input){
switch(arguments.length){
case 0:
return G__26337__0.call(this);
case 1:
return G__26337__1.call(this,result);
case 2:
return G__26337__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26337.cljs$core$IFn$_invoke$arity$0 = G__26337__0;
G__26337.cljs$core$IFn$_invoke$arity$1 = G__26337__1;
G__26337.cljs$core$IFn$_invoke$arity$2 = G__26337__2;
return G__26337;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__26338 = (n__$1 - (1));
var G__26339 = cljs.core.rest(s);
n__$1 = G__26338;
coll__$1 = G__26339;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__26342 = cljs.core.next(s);
var G__26343 = cljs.core.next(lead);
s = G__26342;
lead = G__26343;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__26356 = null;
var G__26356__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26356__1 = (function (result){
var G__26350 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26350) : rf.call(null,G__26350));
});
var G__26356__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3795__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3795__auto__)){
var G__26351 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26351) : pred.call(null,G__26351));
} else {
return and__3795__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__26352 = result;
var G__26353 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26352,G__26353) : rf.call(null,G__26352,G__26353));
}
});
G__26356 = function(result,input){
switch(arguments.length){
case 0:
return G__26356__0.call(this);
case 1:
return G__26356__1.call(this,result);
case 2:
return G__26356__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26356.cljs$core$IFn$_invoke$arity$0 = G__26356__0;
G__26356.cljs$core$IFn$_invoke$arity$1 = G__26356__1;
G__26356.cljs$core$IFn$_invoke$arity$2 = G__26356__2;
return G__26356;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3795__auto__ = s;
if(and__3795__auto__){
var G__26355 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__26355) : pred__$1.call(null,G__26355));
} else {
return and__3795__auto__;
}
})())){
var G__26357 = pred__$1;
var G__26358 = cljs.core.rest(s);
pred__$1 = G__26357;
coll__$1 = G__26358;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__26367 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26367) : f.call(null,G__26367));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__26370__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__26370 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__26371__i = 0, G__26371__a = new Array(arguments.length -  2);
while (G__26371__i < G__26371__a.length) {G__26371__a[G__26371__i] = arguments[G__26371__i + 2]; ++G__26371__i;}
  colls = new cljs.core.IndexedSeq(G__26371__a,0);
} 
return G__26370__delegate.call(this,c1,c2,colls);};
G__26370.cljs$lang$maxFixedArity = 2;
G__26370.cljs$lang$applyTo = (function (arglist__26372){
var c1 = cljs.core.first(arglist__26372);
arglist__26372 = cljs.core.next(arglist__26372);
var c2 = cljs.core.first(arglist__26372);
var colls = cljs.core.rest(arglist__26372);
return G__26370__delegate(c1,c2,colls);
});
G__26370.cljs$core$IFn$_invoke$arity$variadic = G__26370__delegate;
return G__26370;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__26373 = null;
if (arguments.length > 2) {
var G__26374__i = 0, G__26374__a = new Array(arguments.length -  2);
while (G__26374__i < G__26374__a.length) {G__26374__a[G__26374__i] = arguments[G__26374__i + 2]; ++G__26374__i;}
G__26373 = new cljs.core.IndexedSeq(G__26374__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__26373);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__26389 = null;
var G__26389__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26389__1 = (function (result){
var G__26382 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26382) : rf.call(null,G__26382));
});
var G__26389__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__26383 = result;
var G__26384 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26383,G__26384) : rf.call(null,G__26383,G__26384));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__26385 = sepr;
var G__26386 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26385,G__26386) : rf.call(null,G__26385,G__26386));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__26387 = result;
var G__26388 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26387,G__26388) : rf.call(null,G__26387,G__26388));
}
});
G__26389 = function(result,input){
switch(arguments.length){
case 0:
return G__26389__0.call(this);
case 1:
return G__26389__1.call(this,result);
case 2:
return G__26389__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26389.cljs$core$IFn$_invoke$arity$0 = G__26389__0;
G__26389.cljs$core$IFn$_invoke$arity$1 = G__26389__1;
G__26389.cljs$core$IFn$_invoke$arity$2 = G__26389__2;
return G__26389;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__26398__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__26398 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__26399__i = 0, G__26399__a = new Array(arguments.length -  1);
while (G__26399__i < G__26399__a.length) {G__26399__a[G__26399__i] = arguments[G__26399__i + 1]; ++G__26399__i;}
  colls = new cljs.core.IndexedSeq(G__26399__a,0);
} 
return G__26398__delegate.call(this,f,colls);};
G__26398.cljs$lang$maxFixedArity = 1;
G__26398.cljs$lang$applyTo = (function (arglist__26400){
var f = cljs.core.first(arglist__26400);
var colls = cljs.core.rest(arglist__26400);
return G__26398__delegate(f,colls);
});
G__26398.cljs$core$IFn$_invoke$arity$variadic = G__26398__delegate;
return G__26398;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__26401 = null;
if (arguments.length > 1) {
var G__26402__i = 0, G__26402__a = new Array(arguments.length -  1);
while (G__26402__i < G__26402__a.length) {G__26402__a[G__26402__i] = arguments[G__26402__i + 1]; ++G__26402__i;}
G__26401 = new cljs.core.IndexedSeq(G__26402__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__26401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__26421 = null;
var G__26421__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26421__1 = (function (result){
var G__26415 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26415) : rf.call(null,G__26415));
});
var G__26421__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__26416 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26416) : pred.call(null,G__26416));
})())){
var G__26417 = result;
var G__26418 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26417,G__26418) : rf.call(null,G__26417,G__26418));
} else {
return result;
}
});
G__26421 = function(result,input){
switch(arguments.length){
case 0:
return G__26421__0.call(this);
case 1:
return G__26421__1.call(this,result);
case 2:
return G__26421__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26421.cljs$core$IFn$_invoke$arity$0 = G__26421__0;
G__26421.cljs$core$IFn$_invoke$arity$1 = G__26421__1;
G__26421.cljs$core$IFn$_invoke$arity$2 = G__26421__2;
return G__26421;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4694__auto___26422 = size;
var i_26423 = (0);
while(true){
if((i_26423 < n__4694__auto___26422)){
if(cljs.core.truth_((function (){var G__26419 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26423);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26419) : pred.call(null,G__26419));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26423));
} else {
}

var G__26424 = (i_26423 + (1));
i_26423 = G__26424;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__26420 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26420) : pred.call(null,G__26420));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__26431 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__26431) : branch_QMARK_.call(null,G__26431));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__26432 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__26432) : children.call(null,G__26432));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__26433_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__26433_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__26436 = to;
if(G__26436){
var bit__4481__auto__ = (G__26436.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4481__auto__) || (G__26436.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__26437 = to;
if(G__26437){
var bit__4481__auto__ = (G__26437.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4481__auto__) || (G__26437.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__26439 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26439) : f.call(null,G__26439));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__26440__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__26440 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__26441__i = 0, G__26441__a = new Array(arguments.length -  4);
while (G__26441__i < G__26441__a.length) {G__26441__a[G__26441__i] = arguments[G__26441__i + 4]; ++G__26441__i;}
  colls = new cljs.core.IndexedSeq(G__26441__a,0);
} 
return G__26440__delegate.call(this,f,c1,c2,c3,colls);};
G__26440.cljs$lang$maxFixedArity = 4;
G__26440.cljs$lang$applyTo = (function (arglist__26442){
var f = cljs.core.first(arglist__26442);
arglist__26442 = cljs.core.next(arglist__26442);
var c1 = cljs.core.first(arglist__26442);
arglist__26442 = cljs.core.next(arglist__26442);
var c2 = cljs.core.first(arglist__26442);
arglist__26442 = cljs.core.next(arglist__26442);
var c3 = cljs.core.first(arglist__26442);
var colls = cljs.core.rest(arglist__26442);
return G__26440__delegate(f,c1,c2,c3,colls);
});
G__26440.cljs$core$IFn$_invoke$arity$variadic = G__26440__delegate;
return G__26440;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__26443 = null;
if (arguments.length > 4) {
var G__26444__i = 0, G__26444__a = new Array(arguments.length -  4);
while (G__26444__i < G__26444__a.length) {G__26444__a[G__26444__i] = arguments[G__26444__i + 4]; ++G__26444__i;}
G__26443 = new cljs.core.IndexedSeq(G__26444__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__26443);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__26446 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26446) : pred.call(null,G__26446));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__26461 = m__$1;
if(G__26461){
var bit__4488__auto__ = (G__26461.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4488__auto__) || (G__26461.cljs$core$ILookup$)){
return true;
} else {
if((!G__26461.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__26461);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__26461);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__26462 = sentinel;
var G__26463 = m__$2;
var G__26464 = cljs.core.next(ks__$1);
sentinel = G__26462;
m__$1 = G__26463;
ks__$1 = G__26464;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__26465,v){
var vec__26470 = p__26465;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26470,(0),null);
var ks = cljs.core.nthnext(vec__26470,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__26471,f){
var vec__26509 = p__26471;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26509,(0),null);
var ks = cljs.core.nthnext(vec__26509,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26510 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26510) : f.call(null,G__26510));
})());
}
});
var update_in__4 = (function (m,p__26472,f,a){
var vec__26511 = p__26472;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26511,(0),null);
var ks = cljs.core.nthnext(vec__26511,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26512 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26513 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26512,G__26513) : f.call(null,G__26512,G__26513));
})());
}
});
var update_in__5 = (function (m,p__26473,f,a,b){
var vec__26514 = p__26473;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26514,(0),null);
var ks = cljs.core.nthnext(vec__26514,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26515 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26516 = a;
var G__26517 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26515,G__26516,G__26517) : f.call(null,G__26515,G__26516,G__26517));
})());
}
});
var update_in__6 = (function (m,p__26474,f,a,b,c){
var vec__26518 = p__26474;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26518,(0),null);
var ks = cljs.core.nthnext(vec__26518,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26519 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26520 = a;
var G__26521 = b;
var G__26522 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26519,G__26520,G__26521,G__26522) : f.call(null,G__26519,G__26520,G__26521,G__26522));
})());
}
});
var update_in__7 = (function() { 
var G__26524__delegate = function (m,p__26475,f,a,b,c,args){
var vec__26523 = p__26475;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26523,(0),null);
var ks = cljs.core.nthnext(vec__26523,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__26524 = function (m,p__26475,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__26525__i = 0, G__26525__a = new Array(arguments.length -  6);
while (G__26525__i < G__26525__a.length) {G__26525__a[G__26525__i] = arguments[G__26525__i + 6]; ++G__26525__i;}
  args = new cljs.core.IndexedSeq(G__26525__a,0);
} 
return G__26524__delegate.call(this,m,p__26475,f,a,b,c,args);};
G__26524.cljs$lang$maxFixedArity = 6;
G__26524.cljs$lang$applyTo = (function (arglist__26526){
var m = cljs.core.first(arglist__26526);
arglist__26526 = cljs.core.next(arglist__26526);
var p__26475 = cljs.core.first(arglist__26526);
arglist__26526 = cljs.core.next(arglist__26526);
var f = cljs.core.first(arglist__26526);
arglist__26526 = cljs.core.next(arglist__26526);
var a = cljs.core.first(arglist__26526);
arglist__26526 = cljs.core.next(arglist__26526);
var b = cljs.core.first(arglist__26526);
arglist__26526 = cljs.core.next(arglist__26526);
var c = cljs.core.first(arglist__26526);
var args = cljs.core.rest(arglist__26526);
return G__26524__delegate(m,p__26475,f,a,b,c,args);
});
G__26524.cljs$core$IFn$_invoke$arity$variadic = G__26524__delegate;
return G__26524;
})()
;
update_in = function(m,p__26475,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__26475,f);
case 4:
return update_in__4.call(this,m,p__26475,f,a);
case 5:
return update_in__5.call(this,m,p__26475,f,a,b);
case 6:
return update_in__6.call(this,m,p__26475,f,a,b,c);
default:
var G__26527 = null;
if (arguments.length > 6) {
var G__26528__i = 0, G__26528__a = new Array(arguments.length -  6);
while (G__26528__i < G__26528__a.length) {G__26528__a[G__26528__i] = arguments[G__26528__i + 6]; ++G__26528__i;}
G__26527 = new cljs.core.IndexedSeq(G__26528__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__26475,f,a,b,c, G__26527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26539 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26539) : f.call(null,G__26539));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26540 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26541 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26540,G__26541) : f.call(null,G__26540,G__26541));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26542 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26543 = x;
var G__26544 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26542,G__26543,G__26544) : f.call(null,G__26542,G__26543,G__26544));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26545 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26546 = x;
var G__26547 = y;
var G__26548 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26545,G__26546,G__26547,G__26548) : f.call(null,G__26545,G__26546,G__26547,G__26548));
})());
});
var update__7 = (function() { 
var G__26549__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__26549 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__26550__i = 0, G__26550__a = new Array(arguments.length -  6);
while (G__26550__i < G__26550__a.length) {G__26550__a[G__26550__i] = arguments[G__26550__i + 6]; ++G__26550__i;}
  more = new cljs.core.IndexedSeq(G__26550__a,0);
} 
return G__26549__delegate.call(this,m,k,f,x,y,z,more);};
G__26549.cljs$lang$maxFixedArity = 6;
G__26549.cljs$lang$applyTo = (function (arglist__26551){
var m = cljs.core.first(arglist__26551);
arglist__26551 = cljs.core.next(arglist__26551);
var k = cljs.core.first(arglist__26551);
arglist__26551 = cljs.core.next(arglist__26551);
var f = cljs.core.first(arglist__26551);
arglist__26551 = cljs.core.next(arglist__26551);
var x = cljs.core.first(arglist__26551);
arglist__26551 = cljs.core.next(arglist__26551);
var y = cljs.core.first(arglist__26551);
arglist__26551 = cljs.core.next(arglist__26551);
var z = cljs.core.first(arglist__26551);
var more = cljs.core.rest(arglist__26551);
return G__26549__delegate(m,k,f,x,y,z,more);
});
G__26549.cljs$core$IFn$_invoke$arity$variadic = G__26549__delegate;
return G__26549;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__26552 = null;
if (arguments.length > 6) {
var G__26553__i = 0, G__26553__a = new Array(arguments.length -  6);
while (G__26553__i < G__26553__a.length) {G__26553__a[G__26553__i] = arguments[G__26553__i + 6]; ++G__26553__i;}
G__26552 = new cljs.core.IndexedSeq(G__26553__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__26552);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__26554 = (ll - (5));
var G__26555 = r;
ll = G__26554;
ret = G__26555;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__26560 = cljs.core.pv_aget(node,(0));
var G__26561 = (level - (5));
node = G__26560;
level = G__26561;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__26562 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__26563 = (level - (5));
node = G__26562;
level = G__26563;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__26573 = init__$2;
var G__26574 = (j + i);
var G__26575 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26573,G__26574,G__26575) : f.call(null,G__26573,G__26574,G__26575));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__26586 = (j + (1));
var G__26587 = init__$3;
j = G__26586;
init__$2 = G__26587;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26576 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26576) : cljs.core.deref.call(null,G__26576));
} else {
var G__26588 = (i + len);
var G__26589 = init__$2;
i = G__26588;
init__$1 = G__26589;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__26577 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__26577) : cljs.core.tv_editable_root.call(null,G__26577));
})(),(function (){var G__26578 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__26578) : cljs.core.tv_editable_tail.call(null,G__26578));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__26579 = init__$2;
var G__26580 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26579,G__26580) : f.call(null,G__26579,G__26580));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__26590 = (j + (1));
var G__26591 = init__$3;
j = G__26590;
init__$2 = G__26591;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26581 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26581) : cljs.core.deref.call(null,G__26581));
} else {
var G__26592 = (i + len);
var G__26593 = init__$2;
i = G__26592;
init__$1 = G__26593;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__26582 = coll__$1;
var G__26583 = cljs.core.first_array_for_longvec(coll__$1);
var G__26584 = (0);
var G__26585 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26582,G__26583,G__26584,G__26585) : cljs.core.chunked_seq.call(null,G__26582,G__26583,G__26584,G__26585));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4694__auto___26594 = len;
var i_26595 = (0);
while(true){
if((i_26595 < n__4694__auto___26594)){
(new_tail[i_26595] = (self__.tail[i_26595]));

var G__26596 = (i_26595 + (1));
i_26595 = G__26596;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__26597 = null;
var G__26597__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__26597__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__26597 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26597__2.call(this,self__,k);
case 3:
return G__26597__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26597.cljs$core$IFn$_invoke$arity$2 = G__26597__2;
G__26597.cljs$core$IFn$_invoke$arity$3 = G__26597__3;
return G__26597;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args26572){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26572)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__26598 = (i + (1));
var G__26599 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__26598;
out = G__26599;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26600__i = 0, G__26600__a = new Array(arguments.length -  0);
while (G__26600__i < G__26600__a.length) {G__26600__a[G__26600__i] = arguments[G__26600__i + 0]; ++G__26600__i;}
  args = new cljs.core.IndexedSeq(G__26600__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__26601){
var args = cljs.core.seq(arglist__26601);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__26602 = self__.vec;
var G__26603 = self__.node;
var G__26604 = self__.i;
var G__26605 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26602,G__26603,G__26604,G__26605) : cljs.core.chunked_seq.call(null,G__26602,G__26603,G__26604,G__26605));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__26606 = self__.vec;
var G__26607 = (self__.i + self__.off);
var G__26608 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__26606,G__26607,G__26608) : cljs.core.subvec.call(null,G__26606,G__26607,G__26608));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__26609 = self__.vec;
var G__26610 = (self__.i + self__.off);
var G__26611 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__26609,G__26610,G__26611) : cljs.core.subvec.call(null,G__26609,G__26610,G__26611));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__26612 = self__.vec;
var G__26613 = self__.node;
var G__26614 = self__.i;
var G__26615 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26612,G__26613,G__26614,G__26615) : cljs.core.chunked_seq.call(null,G__26612,G__26613,G__26614,G__26615));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__26616 = self__.vec;
var G__26617 = cljs.core.unchecked_array_for(self__.vec,end);
var G__26618 = end;
var G__26619 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26616,G__26617,G__26618,G__26619) : cljs.core.chunked_seq.call(null,G__26616,G__26617,G__26618,G__26619));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__26620 = self__.vec;
var G__26621 = self__.node;
var G__26622 = self__.i;
var G__26623 = self__.off;
var G__26624 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__26620,G__26621,G__26622,G__26623,G__26624) : cljs.core.chunked_seq.call(null,G__26620,G__26621,G__26622,G__26623,G__26624));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__26625 = self__.vec;
var G__26626 = cljs.core.unchecked_array_for(self__.vec,end);
var G__26627 = end;
var G__26628 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26625,G__26626,G__26627,G__26628) : cljs.core.chunked_seq.call(null,G__26625,G__26626,G__26627,G__26628));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__26630 = self__.meta;
var G__26631 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__26632 = self__.start;
var G__26633 = (function (){var x__4124__auto__ = self__.end;
var y__4125__auto__ = (v_pos + (1));
return ((x__4124__auto__ > y__4125__auto__) ? x__4124__auto__ : y__4125__auto__);
})();
var G__26634 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26630,G__26631,G__26632,G__26633,G__26634) : cljs.core.build_subvec.call(null,G__26630,G__26631,G__26632,G__26633,G__26634));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__26635 = self__.meta;
var G__26636 = self__.v;
var G__26637 = self__.start;
var G__26638 = (self__.end - (1));
var G__26639 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26635,G__26636,G__26637,G__26638,G__26639) : cljs.core.build_subvec.call(null,G__26635,G__26636,G__26637,G__26638,G__26639));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__26641 = meta__$1;
var G__26642 = self__.v;
var G__26643 = self__.start;
var G__26644 = self__.end;
var G__26645 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26641,G__26642,G__26643,G__26644,G__26645) : cljs.core.build_subvec.call(null,G__26641,G__26642,G__26643,G__26644,G__26645));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__26646 = self__.meta;
var G__26647 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__26648 = self__.start;
var G__26649 = (self__.end + (1));
var G__26650 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26646,G__26647,G__26648,G__26649,G__26650) : cljs.core.build_subvec.call(null,G__26646,G__26647,G__26648,G__26649,G__26650));
});

cljs.core.Subvec.prototype.call = (function() {
var G__26651 = null;
var G__26651__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__26651__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__26651 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26651__2.call(this,self__,k);
case 3:
return G__26651__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26651.cljs$core$IFn$_invoke$arity$2 = G__26651__2;
G__26651.cljs$core$IFn$_invoke$arity$3 = G__26651__3;
return G__26651;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args26629){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26629)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__26652 = meta;
var G__26653 = v.v;
var G__26654 = (v.start + start);
var G__26655 = (v.start + end);
var G__26656 = __hash;
meta = G__26652;
v = G__26653;
start = G__26654;
end = G__26655;
__hash = G__26656;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj26663 = {};
return obj26663;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__26671 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__26672 = (level - (5));
node = G__26671;
level = G__26672;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__26676 = null;
var G__26676__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26676__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26676 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26676__2.call(this,self__,k);
case 3:
return G__26676__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26676.cljs$core$IFn$_invoke$arity$2 = G__26676__2;
G__26676.cljs$core$IFn$_invoke$arity$3 = G__26676__3;
return G__26676;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args26673){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26673)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3807__auto__ = self__.front;
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3807__auto__ = self__.rear;
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__26677 = (i + incr);
i = G__26677;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__26678 = (i + (1));
var G__26679 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__26678;
out = G__26679;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj26683 = {};
return obj26683;
})();
var l = ks.length;
var i_26684 = (0);
while(true){
if((i_26684 < l)){
var k_26685 = (ks[i_26684]);
(new_obj[k_26685] = (obj[k_26685]));

var G__26686 = (i_26684 + (1));
i_26684 = G__26686;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3795__auto__ = (function (){var G__26690 = k;
return goog.isString(G__26690);
})();
if(cljs.core.truth_(and__3795__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3795__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__26691 = init__$1;
var G__26692 = k;
var G__26693 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26691,G__26692,G__26693) : f.call(null,G__26691,G__26692,G__26693));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26694 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26694) : cljs.core.deref.call(null,G__26694));
} else {
var G__26700 = cljs.core.rest(keys__$1);
var G__26701 = init__$2;
keys__$1 = G__26700;
init__$1 = G__26701;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3795__auto__ = (function (){var G__26696 = k;
return goog.isString(G__26696);
})();
if(cljs.core.truth_(and__3795__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3795__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__26697 = k;
return goog.isString(G__26697);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3795__auto__ = (function (){var G__26699 = k;
return goog.isString(G__26699);
})();
if(cljs.core.truth_(and__3795__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3795__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__26687_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__26687_SHARP_,(self__.strobj[p1__26687_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__26702 = null;
var G__26702__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26702__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26702 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26702__2.call(this,self__,k);
case 3:
return G__26702__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26702.cljs$core$IFn$_invoke$arity$2 = G__26702__2;
G__26702.cljs$core$IFn$_invoke$arity$3 = G__26702__3;
return G__26702;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args26688){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26688)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj26704 = {};
return obj26704;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__26705 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26705,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26705,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__26706 = (i + (2));
i = G__26706;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__26707 = (i + (2));
i = G__26707;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__26708 = (i + (2));
i = G__26708;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__26709 = (i + (2));
i = G__26709;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__26710 = (i + (2));
i = G__26710;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3807__auto__ = (function (){var G__26714 = k;
return goog.isString(G__26714);
})();
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_26715 = (0);
while(true){
if((i_26715 < l)){
(narr[i_26715] = (arr[i_26715]));

var G__26716 = (i_26715 + (1));
i_26715 = G__26716;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26718 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__26718) : cljs.core.keys.call(null,G__26718));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26719 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__26719) : cljs.core.vals.call(null,G__26719));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__26720 = cljs.core.seq(coll);
var chunk__26721 = null;
var count__26722 = (0);
var i__26723 = (0);
while(true){
if((i__26723 < count__26722)){
var vec__26724 = chunk__26721.cljs$core$IIndexed$_nth$arity$2(null,i__26723);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26724,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26724,(1),null);
var G__26725_26738 = v;
var G__26726_26739 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26725_26738,G__26726_26739) : f.call(null,G__26725_26738,G__26726_26739));

var G__26740 = seq__26720;
var G__26741 = chunk__26721;
var G__26742 = count__26722;
var G__26743 = (i__26723 + (1));
seq__26720 = G__26740;
chunk__26721 = G__26741;
count__26722 = G__26742;
i__26723 = G__26743;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__26720);
if(temp__4126__auto__){
var seq__26720__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26720__$1)){
var c__4594__auto__ = cljs.core.chunk_first(seq__26720__$1);
var G__26744 = cljs.core.chunk_rest(seq__26720__$1);
var G__26745 = c__4594__auto__;
var G__26746 = cljs.core.count(c__4594__auto__);
var G__26747 = (0);
seq__26720 = G__26744;
chunk__26721 = G__26745;
count__26722 = G__26746;
i__26723 = G__26747;
continue;
} else {
var vec__26727 = cljs.core.first(seq__26720__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26727,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26727,(1),null);
var G__26728_26748 = v;
var G__26729_26749 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26728_26748,G__26729_26749) : f.call(null,G__26728_26748,G__26729_26749));

var G__26750 = cljs.core.next(seq__26720__$1);
var G__26751 = null;
var G__26752 = (0);
var G__26753 = (0);
seq__26720 = G__26750;
chunk__26721 = G__26751;
count__26722 = G__26752;
i__26723 = G__26753;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__26730 = init__$1;
var G__26731 = (self__.arr[i]);
var G__26732 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26730,G__26731,G__26732) : f.call(null,G__26730,G__26731,G__26732));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26733 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26733) : cljs.core.deref.call(null,G__26733));
} else {
var G__26754 = (i + (2));
var G__26755 = init__$2;
i = G__26754;
init__$1 = G__26755;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__26734 = other;
if(G__26734){
var bit__4481__auto__ = (G__26734.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4481__auto__) || (G__26734.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__26756 = (i + (2));
i = G__26756;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj26736 = {};
return obj26736;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__26757 = (s + (2));
var G__26758 = d;
s = G__26757;
d = G__26758;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__26759 = (s + (2));
var G__26760 = (d + (2));
s = G__26759;
d = G__26760;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__26737 = cljs.core.aclone(self__.arr);
(G__26737[(idx + (1))] = v);

return G__26737;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__26761 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__26762 = cljs.core.next(es);
ret = G__26761;
es = G__26762;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__26763 = null;
var G__26763__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26763__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26763 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26763__2.call(this,self__,k);
case 3:
return G__26763__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26763.cljs$core$IFn$_invoke$arity$2 = G__26763__2;
G__26763.cljs$core$IFn$_invoke$arity$3 = G__26763__3;
return G__26763;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args26717){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26717)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__26764 = (i + (2));
var G__26765 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__26764;
ret = G__26765;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__26766_26774 = self__.arr;
G__26766_26774.pop();

G__26766_26774.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__26767 = self__.len;
var G__26768 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__26767,G__26768) : cljs.core.array__GT_transient_hash_map.call(null,G__26767,G__26768));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__26769 = o;
if(G__26769){
var bit__4488__auto__ = (G__26769.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4488__auto__) || (G__26769.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__26769.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__26769);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__26769);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__26770 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26770) : cljs.core.key.call(null,G__26770));
})(),(function (){var G__26771 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__26771) : cljs.core.val.call(null,G__26771));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__26775 = cljs.core.next(es);
var G__26776 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__26772 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26772) : cljs.core.key.call(null,G__26772));
})(),(function (){var G__26773 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__26773) : cljs.core.val.call(null,G__26773));
})());
es = G__26775;
tcoll__$2 = G__26776;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__26777 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__26778 = (i + (2));
out = G__26777;
i = G__26778;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__26781 = cljs.core.aclone(arr);
(G__26781[i] = a);

return G__26781;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__26782 = cljs.core.aclone(arr);
(G__26782[i] = a);

(G__26782[j] = b);

return G__26782;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__26787 = init__$1;
var G__26788 = k;
var G__26789 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26787,G__26788,G__26789) : f.call(null,G__26787,G__26788,G__26789));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26790 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26790) : cljs.core.deref.call(null,G__26790));
} else {
var G__26791 = (i + (2));
var G__26792 = init__$2;
i = G__26791;
init__$1 = G__26792;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__26793 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__26793) : cljs.core.create_inode_seq.call(null,G__26793));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_26807 = (0);
var j_26808 = (0);
while(true){
if((i_26807 < (32))){
if((((self__.bitmap >>> i_26807) & (1)) === (0))){
var G__26809 = (i_26807 + (1));
var G__26810 = j_26808;
i_26807 = G__26809;
j_26808 = G__26810;
continue;
} else {
(nodes[i_26807] = ((!(((self__.arr[j_26808]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_26808])),(self__.arr[j_26808]),(self__.arr[(j_26808 + (1))]),added_leaf_QMARK_):(self__.arr[(j_26808 + (1))])));

var G__26811 = (i_26807 + (1));
var G__26812 = (j_26808 + (2));
i_26807 = G__26811;
j_26808 = G__26812;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__26794 = edit__$1;
var G__26795 = (shift + (5));
var G__26796 = key_or_nil;
var G__26797 = val_or_node;
var G__26798 = hash;
var G__26799 = key;
var G__26800 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__26794,G__26795,G__26796,G__26797,G__26798,G__26799,G__26800) : cljs.core.create_node.call(null,G__26794,G__26795,G__26796,G__26797,G__26798,G__26799,G__26800));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_26813 = (0);
var j_26814 = (0);
while(true){
if((i_26813 < (32))){
if((((self__.bitmap >>> i_26813) & (1)) === (0))){
var G__26815 = (i_26813 + (1));
var G__26816 = j_26814;
i_26813 = G__26815;
j_26814 = G__26816;
continue;
} else {
(nodes[i_26813] = ((!(((self__.arr[j_26814]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_26814])),(self__.arr[j_26814]),(self__.arr[(j_26814 + (1))]),added_leaf_QMARK_):(self__.arr[(j_26814 + (1))])));

var G__26817 = (i_26813 + (1));
var G__26818 = (j_26814 + (2));
i_26813 = G__26817;
j_26814 = G__26818;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__26801 = (shift + (5));
var G__26802 = key_or_nil;
var G__26803 = val_or_node;
var G__26804 = hash;
var G__26805 = key;
var G__26806 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__26801,G__26802,G__26803,G__26804,G__26805,G__26806) : cljs.core.create_node.call(null,G__26801,G__26802,G__26803,G__26804,G__26805,G__26806));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__26819 = (i + (1));
var G__26820 = (j + (2));
var G__26821 = (bitmap | ((1) << i));
i = G__26819;
j = G__26820;
bitmap = G__26821;
continue;
} else {
var G__26822 = (i + (1));
var G__26823 = j;
var G__26824 = bitmap;
i = G__26822;
j = G__26823;
bitmap = G__26824;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__26825 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__26825) : cljs.core.create_array_node_seq.call(null,G__26825));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26826 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26826) : cljs.core.deref.call(null,G__26826));
} else {
var G__26827 = (i + (1));
var G__26828 = init__$2;
i = G__26827;
init__$1 = G__26828;
continue;
}
} else {
var G__26829 = (i + (1));
var G__26830 = init__$1;
i = G__26829;
init__$1 = G__26830;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__26831 = (i + (2));
i = G__26831;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__26832 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__26832) : cljs.core.create_inode_seq.call(null,G__26832));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__26833 = self__.nodes;
var G__26834 = (self__.i + (2));
var G__26835 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__26833,G__26834,G__26835) : cljs.core.create_inode_seq.call(null,G__26833,G__26834,G__26835));
} else {
var G__26836 = self__.nodes;
var G__26837 = self__.i;
var G__26838 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__26836,G__26837,G__26838) : cljs.core.create_inode_seq.call(null,G__26836,G__26837,G__26838));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__26842 = (j + (2));
j = G__26842;
continue;
}
} else {
var G__26843 = (j + (2));
j = G__26843;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__26844 = null;
var G__26845 = self__.nodes;
var G__26846 = self__.i;
var G__26847 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__26844,G__26845,G__26846,G__26847) : cljs.core.create_array_node_seq.call(null,G__26844,G__26845,G__26846,G__26847));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__26852 = (j + (1));
j = G__26852;
continue;
}
} else {
var G__26853 = (j + (1));
j = G__26853;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26855 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__26855) : cljs.core.keys.call(null,G__26855));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26856 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__26856) : cljs.core.vals.call(null,G__26856));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__26857 = cljs.core.seq(coll);
var chunk__26858 = null;
var count__26859 = (0);
var i__26860 = (0);
while(true){
if((i__26860 < count__26859)){
var vec__26861 = chunk__26858.cljs$core$IIndexed$_nth$arity$2(null,i__26860);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26861,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26861,(1),null);
var G__26862_26873 = v;
var G__26863_26874 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26862_26873,G__26863_26874) : f.call(null,G__26862_26873,G__26863_26874));

var G__26875 = seq__26857;
var G__26876 = chunk__26858;
var G__26877 = count__26859;
var G__26878 = (i__26860 + (1));
seq__26857 = G__26875;
chunk__26858 = G__26876;
count__26859 = G__26877;
i__26860 = G__26878;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__26857);
if(temp__4126__auto__){
var seq__26857__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26857__$1)){
var c__4594__auto__ = cljs.core.chunk_first(seq__26857__$1);
var G__26879 = cljs.core.chunk_rest(seq__26857__$1);
var G__26880 = c__4594__auto__;
var G__26881 = cljs.core.count(c__4594__auto__);
var G__26882 = (0);
seq__26857 = G__26879;
chunk__26858 = G__26880;
count__26859 = G__26881;
i__26860 = G__26882;
continue;
} else {
var vec__26864 = cljs.core.first(seq__26857__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26864,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26864,(1),null);
var G__26865_26883 = v;
var G__26866_26884 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26865_26883,G__26866_26884) : f.call(null,G__26865_26883,G__26866_26884));

var G__26885 = cljs.core.next(seq__26857__$1);
var G__26886 = null;
var G__26887 = (0);
var G__26888 = (0);
seq__26857 = G__26885;
chunk__26858 = G__26886;
count__26859 = G__26887;
i__26860 = G__26888;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__26867 = init;
var G__26868 = null;
var G__26869 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26867,G__26868,G__26869) : f.call(null,G__26867,G__26868,G__26869));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__26870 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26870) : cljs.core.deref.call(null,G__26870));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj26872 = {};
return obj26872;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__26889 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__26890 = cljs.core.next(es);
ret = G__26889;
es = G__26890;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__26891 = null;
var G__26891__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26891__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26891 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26891__2.call(this,self__,k);
case 3:
return G__26891__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26891.cljs$core$IFn$_invoke$arity$2 = G__26891__2;
G__26891.cljs$core$IFn$_invoke$arity$3 = G__26891__3;
return G__26891;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args26854){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26854)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__26892 = (i + (2));
var G__26893 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__26892;
ret = G__26893;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__26894 = (i + (1));
var G__26895 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__26894;
out = G__26895;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__26896 = o;
if(G__26896){
var bit__4488__auto__ = (G__26896.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4488__auto__) || (G__26896.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__26896.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__26896);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__26896);
}
})()){
return tcoll.assoc_BANG_((function (){var G__26897 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26897) : cljs.core.key.call(null,G__26897));
})(),(function (){var G__26898 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__26898) : cljs.core.val.call(null,G__26898));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__26901 = cljs.core.next(es);
var G__26902 = tcoll__$1.assoc_BANG_((function (){var G__26899 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26899) : cljs.core.key.call(null,G__26899));
})(),(function (){var G__26900 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__26900) : cljs.core.val.call(null,G__26900));
})());
es = G__26901;
tcoll__$1 = G__26902;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__26903 = ((ascending_QMARK_)?t.left:t.right);
var G__26904 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__26903;
stack__$1 = G__26904;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__26917 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26917) : cljs.core.deref.call(null,G__26917));
} else {
var init__$2 = (function (){var G__26918 = init__$1;
var G__26919 = node.key;
var G__26920 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26918,G__26919,G__26920) : f.call(null,G__26918,G__26919,G__26920));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26921 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26921) : cljs.core.deref.call(null,G__26921));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__26922 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26922) : cljs.core.deref.call(null,G__26922));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__26924 = null;
var G__26924__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26924__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26924 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26924__2.call(this,self__,k);
case 3:
return G__26924__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26924.cljs$core$IFn$_invoke$arity$2 = G__26924__2;
G__26924.cljs$core$IFn$_invoke$arity$3 = G__26924__3;
return G__26924;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args26923){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26923)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__26926 = null;
var G__26926__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26926__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26926 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26926__2.call(this,self__,k);
case 3:
return G__26926__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26926.cljs$core$IFn$_invoke$arity$2 = G__26926__2;
G__26926.cljs$core$IFn$_invoke$arity$3 = G__26926__3;
return G__26926;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args26925){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26925)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__26939 = k;
var G__26940 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__26939,G__26940) : comp.call(null,G__26939,G__26940));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__26959 = k;
var G__26960 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__26959,G__26960) : comp.call(null,G__26959,G__26960));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__26971 = k;
var G__26972 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__26971,G__26972) : comp.call(null,G__26971,G__26972));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__26974 = cljs.core.seq(coll);
var chunk__26975 = null;
var count__26976 = (0);
var i__26977 = (0);
while(true){
if((i__26977 < count__26976)){
var vec__26978 = chunk__26975.cljs$core$IIndexed$_nth$arity$2(null,i__26977);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26978,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26978,(1),null);
var G__26979_26991 = v;
var G__26980_26992 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26979_26991,G__26980_26992) : f.call(null,G__26979_26991,G__26980_26992));

var G__26993 = seq__26974;
var G__26994 = chunk__26975;
var G__26995 = count__26976;
var G__26996 = (i__26977 + (1));
seq__26974 = G__26993;
chunk__26975 = G__26994;
count__26976 = G__26995;
i__26977 = G__26996;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__26974);
if(temp__4126__auto__){
var seq__26974__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26974__$1)){
var c__4594__auto__ = cljs.core.chunk_first(seq__26974__$1);
var G__26997 = cljs.core.chunk_rest(seq__26974__$1);
var G__26998 = c__4594__auto__;
var G__26999 = cljs.core.count(c__4594__auto__);
var G__27000 = (0);
seq__26974 = G__26997;
chunk__26975 = G__26998;
count__26976 = G__26999;
i__26977 = G__27000;
continue;
} else {
var vec__26981 = cljs.core.first(seq__26974__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26981,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26981,(1),null);
var G__26982_27001 = v;
var G__26983_27002 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26982_27001,G__26983_27002) : f.call(null,G__26982_27001,G__26983_27002));

var G__27003 = cljs.core.next(seq__26974__$1);
var G__27004 = null;
var G__27005 = (0);
var G__27006 = (0);
seq__26974 = G__27003;
chunk__26975 = G__27004;
count__26976 = G__27005;
i__26977 = G__27006;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26984 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__26984) : cljs.core.keys.call(null,G__26984));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26985 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__26985) : cljs.core.vals.call(null,G__26985));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__26986 = k;
var G__26987 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__26986,G__26987) : self__.comp.call(null,G__26986,G__26987));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__27007 = t.left;
t = G__27007;
continue;
} else {
var G__27008 = t.right;
t = G__27008;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27009 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27010 = cljs.core.next(es);
ret = G__27009;
es = G__27010;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__27011 = null;
var G__27011__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27011__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27011 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27011__2.call(this,self__,k);
case 3:
return G__27011__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27011.cljs$core$IFn$_invoke$arity$2 = G__27011__2;
G__27011.cljs$core$IFn$_invoke$arity$3 = G__27011__3;
return G__27011;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args26973){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26973)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__26988 = k;
var G__26989 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__26988,G__26989) : self__.comp.call(null,G__26988,G__26989));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__27012 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27013 = t.left;
stack = G__27012;
t = G__27013;
continue;
} else {
var G__27014 = stack;
var G__27015 = t.right;
stack = G__27014;
t = G__27015;
continue;
}
} else {
if((c > (0))){
var G__27016 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27017 = t.right;
stack = G__27016;
t = G__27017;
continue;
} else {
var G__27018 = stack;
var G__27019 = t.left;
stack = G__27018;
t = G__27019;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__26990 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26990) : cljs.core.key.call(null,G__26990));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__27020 = cljs.core.nnext(in$);
var G__27021 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27020;
out = G__27021;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27022__i = 0, G__27022__a = new Array(arguments.length -  0);
while (G__27022__i < G__27022__a.length) {G__27022__a[G__27022__i] = arguments[G__27022__i + 0]; ++G__27022__i;}
  keyvals = new cljs.core.IndexedSeq(G__27022__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__27023){
var keyvals = cljs.core.seq(arglist__27023);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27024__i = 0, G__27024__a = new Array(arguments.length -  0);
while (G__27024__i < G__27024__a.length) {G__27024__a[G__27024__i] = arguments[G__27024__i + 0]; ++G__27024__i;}
  keyvals = new cljs.core.IndexedSeq(G__27024__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__27025){
var keyvals = cljs.core.seq(arglist__27025);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj27029 = {};
return obj27029;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__27030 = cljs.core.nnext(kvs);
kvs = G__27030;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27031__i = 0, G__27031__a = new Array(arguments.length -  0);
while (G__27031__i < G__27031__a.length) {G__27031__a[G__27031__i] = arguments[G__27031__i + 0]; ++G__27031__i;}
  keyvals = new cljs.core.IndexedSeq(G__27031__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__27032){
var keyvals = cljs.core.seq(arglist__27032);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__27033 = cljs.core.nnext(in$);
var G__27034 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27033;
out = G__27034;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27035__i = 0, G__27035__a = new Array(arguments.length -  0);
while (G__27035__i < G__27035__a.length) {G__27035__a[G__27035__i] = arguments[G__27035__i + 0]; ++G__27035__i;}
  keyvals = new cljs.core.IndexedSeq(G__27035__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__27036){
var keyvals = cljs.core.seq(arglist__27036);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__27037 = cljs.core.nnext(in$);
var G__27038 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27037;
out = G__27038;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__27039__i = 0, G__27039__a = new Array(arguments.length -  1);
while (G__27039__i < G__27039__a.length) {G__27039__a[G__27039__i] = arguments[G__27039__i + 1]; ++G__27039__i;}
  keyvals = new cljs.core.IndexedSeq(G__27039__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__27040){
var comparator = cljs.core.first(arglist__27040);
var keyvals = cljs.core.rest(arglist__27040);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27041 = self__.mseq;
if(G__27041){
var bit__4488__auto__ = (G__27041.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4488__auto__) || (G__27041.cljs$core$INext$)){
return true;
} else {
if((!G__27041.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27041);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27041);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27042 = self__.mseq;
if(G__27042){
var bit__4488__auto__ = (G__27042.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4488__auto__) || (G__27042.cljs$core$INext$)){
return true;
} else {
if((!G__27042.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27042);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27042);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27043 = self__.mseq;
if(G__27043){
var bit__4488__auto__ = (G__27043.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4488__auto__) || (G__27043.cljs$core$INext$)){
return true;
} else {
if((!G__27043.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27043);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27043);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27044 = self__.mseq;
if(G__27044){
var bit__4488__auto__ = (G__27044.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4488__auto__) || (G__27044.cljs$core$INext$)){
return true;
} else {
if((!G__27044.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27044);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27044);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__27045_SHARP_,p2__27046_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3807__auto__ = p1__27045_SHARP_;
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__27046_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__27047__i = 0, G__27047__a = new Array(arguments.length -  0);
while (G__27047__i < G__27047__a.length) {G__27047__a[G__27047__i] = arguments[G__27047__i + 0]; ++G__27047__i;}
  maps = new cljs.core.IndexedSeq(G__27047__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__27048){
var maps = cljs.core.seq(arglist__27048);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27051 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27052 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27051,G__27052) : f.call(null,G__27051,G__27052));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3807__auto__ = m1;
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__27053__i = 0, G__27053__a = new Array(arguments.length -  1);
while (G__27053__i < G__27053__a.length) {G__27053__a[G__27053__i] = arguments[G__27053__i + 1]; ++G__27053__i;}
  maps = new cljs.core.IndexedSeq(G__27053__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__27054){
var f = cljs.core.first(arglist__27054);
var maps = cljs.core.rest(arglist__27054);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__27055 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__27056 = cljs.core.next(keys);
ret = G__27055;
keys = G__27056;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27059 = cljs.core.seq(coll);
var chunk__27060 = null;
var count__27061 = (0);
var i__27062 = (0);
while(true){
if((i__27062 < count__27061)){
var vec__27063 = chunk__27060.cljs$core$IIndexed$_nth$arity$2(null,i__27062);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27063,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27063,(1),null);
var G__27064_27069 = v;
var G__27065_27070 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27064_27069,G__27065_27070) : f.call(null,G__27064_27069,G__27065_27070));

var G__27071 = seq__27059;
var G__27072 = chunk__27060;
var G__27073 = count__27061;
var G__27074 = (i__27062 + (1));
seq__27059 = G__27071;
chunk__27060 = G__27072;
count__27061 = G__27073;
i__27062 = G__27074;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27059);
if(temp__4126__auto__){
var seq__27059__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27059__$1)){
var c__4594__auto__ = cljs.core.chunk_first(seq__27059__$1);
var G__27075 = cljs.core.chunk_rest(seq__27059__$1);
var G__27076 = c__4594__auto__;
var G__27077 = cljs.core.count(c__4594__auto__);
var G__27078 = (0);
seq__27059 = G__27075;
chunk__27060 = G__27076;
count__27061 = G__27077;
i__27062 = G__27078;
continue;
} else {
var vec__27066 = cljs.core.first(seq__27059__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27066,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27066,(1),null);
var G__27067_27079 = v;
var G__27068_27080 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27067_27079,G__27068_27080) : f.call(null,G__27067_27079,G__27068_27080));

var G__27081 = cljs.core.next(seq__27059__$1);
var G__27082 = null;
var G__27083 = (0);
var G__27084 = (0);
seq__27059 = G__27081;
chunk__27060 = G__27082;
count__27061 = G__27083;
i__27062 = G__27084;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__27057_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__27057_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__27085 = null;
var G__27085__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27085__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27085 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27085__2.call(this,self__,k);
case 3:
return G__27085__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27085.cljs$core$IFn$_invoke$arity$2 = G__27085__2;
G__27085.cljs$core$IFn$_invoke$arity$3 = G__27085__3;
return G__27085;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args27058){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27058)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__27086 = (i + (1));
var G__27087 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__27086;
out = G__27087;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__27088 = (i + (1));
var G__27089 = cljs.core._conj_BANG_(out,(items[i]));
i = G__27088;
out = G__27089;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__27091 = null;
var G__27091__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__27091__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__27091 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27091__2.call(this,self__,k);
case 3:
return G__27091__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27091.cljs$core$IFn$_invoke$arity$2 = G__27091__2;
G__27091.cljs$core$IFn$_invoke$arity$3 = G__27091__3;
return G__27091;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args27090){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27090)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27094 = cljs.core.seq(coll);
var chunk__27095 = null;
var count__27096 = (0);
var i__27097 = (0);
while(true){
if((i__27097 < count__27096)){
var vec__27098 = chunk__27095.cljs$core$IIndexed$_nth$arity$2(null,i__27097);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27098,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27098,(1),null);
var G__27099_27104 = v;
var G__27100_27105 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27099_27104,G__27100_27105) : f.call(null,G__27099_27104,G__27100_27105));

var G__27106 = seq__27094;
var G__27107 = chunk__27095;
var G__27108 = count__27096;
var G__27109 = (i__27097 + (1));
seq__27094 = G__27106;
chunk__27095 = G__27107;
count__27096 = G__27108;
i__27097 = G__27109;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27094);
if(temp__4126__auto__){
var seq__27094__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27094__$1)){
var c__4594__auto__ = cljs.core.chunk_first(seq__27094__$1);
var G__27110 = cljs.core.chunk_rest(seq__27094__$1);
var G__27111 = c__4594__auto__;
var G__27112 = cljs.core.count(c__4594__auto__);
var G__27113 = (0);
seq__27094 = G__27110;
chunk__27095 = G__27111;
count__27096 = G__27112;
i__27097 = G__27113;
continue;
} else {
var vec__27101 = cljs.core.first(seq__27094__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27101,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27101,(1),null);
var G__27102_27114 = v;
var G__27103_27115 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27102_27114,G__27103_27115) : f.call(null,G__27102_27114,G__27103_27115));

var G__27116 = cljs.core.next(seq__27094__$1);
var G__27117 = null;
var G__27118 = (0);
var G__27119 = (0);
seq__27094 = G__27116;
chunk__27095 = G__27117;
count__27096 = G__27118;
i__27097 = G__27119;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__27092_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__27092_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__27120 = null;
var G__27120__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27120__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27120 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27120__2.call(this,self__,k);
case 3:
return G__27120__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27120.cljs$core$IFn$_invoke$arity$2 = G__27120__2;
G__27120.cljs$core$IFn$_invoke$arity$3 = G__27120__3;
return G__27120;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args27093){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27093)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4688__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4688__auto__.length)){
var G__27121 = (i + (1));
var G__27122 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__27121;
res = G__27122;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__27123 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__27124 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__27123;
out = G__27124;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__27125__delegate = function (keys){
return cljs.core.set(keys);
};
var G__27125 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__27126__i = 0, G__27126__a = new Array(arguments.length -  0);
while (G__27126__i < G__27126__a.length) {G__27126__a[G__27126__i] = arguments[G__27126__i + 0]; ++G__27126__i;}
  keys = new cljs.core.IndexedSeq(G__27126__a,0);
} 
return G__27125__delegate.call(this,keys);};
G__27125.cljs$lang$maxFixedArity = 0;
G__27125.cljs$lang$applyTo = (function (arglist__27127){
var keys = cljs.core.seq(arglist__27127);
return G__27125__delegate(keys);
});
G__27125.cljs$core$IFn$_invoke$arity$variadic = G__27125__delegate;
return G__27125;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__27128 = null;
if (arguments.length > 0) {
var G__27129__i = 0, G__27129__a = new Array(arguments.length -  0);
while (G__27129__i < G__27129__a.length) {G__27129__a[G__27129__i] = arguments[G__27129__i + 0]; ++G__27129__i;}
G__27128 = new cljs.core.IndexedSeq(G__27129__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__27128);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__27130__i = 0, G__27130__a = new Array(arguments.length -  0);
while (G__27130__i < G__27130__a.length) {G__27130__a[G__27130__i] = arguments[G__27130__i + 0]; ++G__27130__i;}
  keys = new cljs.core.IndexedSeq(G__27130__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__27131){
var keys = cljs.core.seq(arglist__27131);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__27132__i = 0, G__27132__a = new Array(arguments.length -  1);
while (G__27132__i < G__27132__a.length) {G__27132__a[G__27132__i] = arguments[G__27132__i + 1]; ++G__27132__i;}
  keys = new cljs.core.IndexedSeq(G__27132__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__27133){
var comparator = cljs.core.first(arglist__27133);
var keys = cljs.core.rest(arglist__27133);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__27134_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__27134_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__27134_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__27135_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__27135_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__27135_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__27156 = null;
var G__27156__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27156__1 = (function (result){
var G__27146 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27146) : rf.call(null,G__27146));
});
var G__27156__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__27147 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27147) : cljs.core.deref.call(null,G__27147));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__27148 = result;
var G__27149 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27148,G__27149) : rf.call(null,G__27148,G__27149));
}
});
G__27156 = function(result,input){
switch(arguments.length){
case 0:
return G__27156__0.call(this);
case 1:
return G__27156__1.call(this,result);
case 2:
return G__27156__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27156.cljs$core$IFn$_invoke$arity$0 = G__27156__0;
G__27156.cljs$core$IFn$_invoke$arity$1 = G__27156__1;
G__27156.cljs$core$IFn$_invoke$arity$2 = G__27156__2;
return G__27156;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__27154,seen__$1){
while(true){
var vec__27155 = p__27154;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27155,(0),null);
var xs__$1 = vec__27155;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__27157 = cljs.core.rest(s);
var G__27158 = seen__$1;
p__27154 = G__27157;
seen__$1 = G__27158;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__27159 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__27160 = cljs.core.next(s__$1);
ret = G__27159;
s__$1 = G__27160;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__27162 = x;
if(G__27162){
var bit__4481__auto__ = (G__27162.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4481__auto__) || (G__27162.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__27163 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__27164 = cljs.core.next(ks);
var G__27165 = cljs.core.next(vs);
map = G__27163;
ks = G__27164;
vs = G__27165;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__27176 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27176) : k.call(null,G__27176));
})() > (function (){var G__27177 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27177) : k.call(null,G__27177));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__27178__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27166_SHARP_,p2__27167_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__27166_SHARP_,p2__27167_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__27178 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__27179__i = 0, G__27179__a = new Array(arguments.length -  3);
while (G__27179__i < G__27179__a.length) {G__27179__a[G__27179__i] = arguments[G__27179__i + 3]; ++G__27179__i;}
  more = new cljs.core.IndexedSeq(G__27179__a,0);
} 
return G__27178__delegate.call(this,k,x,y,more);};
G__27178.cljs$lang$maxFixedArity = 3;
G__27178.cljs$lang$applyTo = (function (arglist__27180){
var k = cljs.core.first(arglist__27180);
arglist__27180 = cljs.core.next(arglist__27180);
var x = cljs.core.first(arglist__27180);
arglist__27180 = cljs.core.next(arglist__27180);
var y = cljs.core.first(arglist__27180);
var more = cljs.core.rest(arglist__27180);
return G__27178__delegate(k,x,y,more);
});
G__27178.cljs$core$IFn$_invoke$arity$variadic = G__27178__delegate;
return G__27178;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__27181 = null;
if (arguments.length > 3) {
var G__27182__i = 0, G__27182__a = new Array(arguments.length -  3);
while (G__27182__i < G__27182__a.length) {G__27182__a[G__27182__i] = arguments[G__27182__i + 3]; ++G__27182__i;}
G__27181 = new cljs.core.IndexedSeq(G__27182__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__27181);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__27193 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27193) : k.call(null,G__27193));
})() < (function (){var G__27194 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27194) : k.call(null,G__27194));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__27195__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27183_SHARP_,p2__27184_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__27183_SHARP_,p2__27184_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__27195 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__27196__i = 0, G__27196__a = new Array(arguments.length -  3);
while (G__27196__i < G__27196__a.length) {G__27196__a[G__27196__i] = arguments[G__27196__i + 3]; ++G__27196__i;}
  more = new cljs.core.IndexedSeq(G__27196__a,0);
} 
return G__27195__delegate.call(this,k,x,y,more);};
G__27195.cljs$lang$maxFixedArity = 3;
G__27195.cljs$lang$applyTo = (function (arglist__27197){
var k = cljs.core.first(arglist__27197);
arglist__27197 = cljs.core.next(arglist__27197);
var x = cljs.core.first(arglist__27197);
arglist__27197 = cljs.core.next(arglist__27197);
var y = cljs.core.first(arglist__27197);
var more = cljs.core.rest(arglist__27197);
return G__27195__delegate(k,x,y,more);
});
G__27195.cljs$core$IFn$_invoke$arity$variadic = G__27195__delegate;
return G__27195;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__27198 = null;
if (arguments.length > 3) {
var G__27199__i = 0, G__27199__a = new Array(arguments.length -  3);
while (G__27199__i < G__27199__a.length) {G__27199__a[G__27199__i] = arguments[G__27199__i + 3]; ++G__27199__i;}
G__27198 = new cljs.core.IndexedSeq(G__27199__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__27198);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__27216 = null;
var G__27216__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27216__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__27211 = result;
var G__27212 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27211,G__27212) : rf.call(null,G__27211,G__27212));
})());
})());
var G__27213 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27213) : rf.call(null,G__27213));
});
var G__27216__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__27214 = result;
var G__27215 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27214,G__27215) : rf.call(null,G__27214,G__27215));
} else {
return result;
}
});
G__27216 = function(result,input){
switch(arguments.length){
case 0:
return G__27216__0.call(this);
case 1:
return G__27216__1.call(this,result);
case 2:
return G__27216__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27216.cljs$core$IFn$_invoke$arity$0 = G__27216__0;
G__27216.cljs$core$IFn$_invoke$arity$1 = G__27216__1;
G__27216.cljs$core$IFn$_invoke$arity$2 = G__27216__2;
return G__27216;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__27229 = null;
var G__27229__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27229__1 = (function (result){
var G__27224 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27224) : rf.call(null,G__27224));
});
var G__27229__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__27225 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27225) : pred.call(null,G__27225));
})())){
var G__27226 = result;
var G__27227 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27226,G__27227) : rf.call(null,G__27226,G__27227));
} else {
return cljs.core.reduced(result);
}
});
G__27229 = function(result,input){
switch(arguments.length){
case 0:
return G__27229__0.call(this);
case 1:
return G__27229__1.call(this,result);
case 2:
return G__27229__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27229.cljs$core$IFn$_invoke$arity$0 = G__27229__0;
G__27229.cljs$core$IFn$_invoke$arity$1 = G__27229__1;
G__27229.cljs$core$IFn$_invoke$arity$2 = G__27229__2;
return G__27229;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__27228 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27228) : pred.call(null,G__27228));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__27234 = (function (){var G__27236 = cljs.core._entry_key(sc,e);
var G__27237 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27236,G__27237) : comp.call(null,G__27236,G__27237));
})();
var G__27235 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__27234,G__27235) : test.call(null,G__27234,G__27235));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27241 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27241,(0),null);
var s = vec__27241;
if(cljs.core.truth_((function (){var G__27242 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__27242) : include.call(null,G__27242));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27243 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27243,(0),null);
var s = vec__27243;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27247 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27247,(0),null);
var s = vec__27247;
if(cljs.core.truth_((function (){var G__27248 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__27248) : include.call(null,G__27248));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27249 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27249,(0),null);
var s = vec__27249;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__27250 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__27250) : Math.ceil.call(null,G__27250));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4228__auto__ = self__.__hash;
if(!((h__4228__auto__ == null))){
return h__4228__auto__;
} else {
var h__4228__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4228__auto____$1;

return h__4228__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__27251 = ret;
var G__27252 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27251,G__27252) : f.call(null,G__27251,G__27252));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__27253 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27253) : cljs.core.deref.call(null,G__27253));
} else {
var G__27254 = (i + self__.step);
var G__27255 = ret__$1;
i = G__27254;
ret = G__27255;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__27273 = null;
var G__27273__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27273__1 = (function (result){
var G__27270 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27270) : rf.call(null,G__27270));
});
var G__27273__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__27271 = result;
var G__27272 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27271,G__27272) : rf.call(null,G__27271,G__27272));
} else {
return result;
}
});
G__27273 = function(result,input){
switch(arguments.length){
case 0:
return G__27273__0.call(this);
case 1:
return G__27273__1.call(this,result);
case 2:
return G__27273__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27273.cljs$core$IFn$_invoke$arity$0 = G__27273__0;
G__27273.cljs$core$IFn$_invoke$arity$1 = G__27273__1;
G__27273.cljs$core$IFn$_invoke$arity$2 = G__27273__2;
return G__27273;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__27295 = null;
var G__27295__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27295__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__27286 = result;
var G__27287 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27286,G__27287) : rf.call(null,G__27286,G__27287));
})());
})());
var G__27288 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27288) : rf.call(null,G__27288));
});
var G__27295__2 = (function (result,input){
var pval = (function (){var G__27289 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27289) : cljs.core.deref.call(null,G__27289));
})();
var val = (function (){var G__27290 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27290) : f.call(null,G__27290));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__27291 = result;
var G__27292 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27291,G__27292) : rf.call(null,G__27291,G__27292));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__27295 = function(result,input){
switch(arguments.length){
case 0:
return G__27295__0.call(this);
case 1:
return G__27295__1.call(this,result);
case 2:
return G__27295__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27295.cljs$core$IFn$_invoke$arity$0 = G__27295__0;
G__27295.cljs$core$IFn$_invoke$arity$1 = G__27295__1;
G__27295.cljs$core$IFn$_invoke$arity$2 = G__27295__2;
return G__27295;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__27293 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27293) : f.call(null,G__27293));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__27274_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__27294 = p1__27274_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27294) : f.call(null,G__27294));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__27304 = init;
var G__27305 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27304,G__27305) : f.call(null,G__27304,G__27305));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__27400 = null;
var G__27400__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__27400__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27358 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27358) : f.call(null,G__27358));
})()],null));
});
var G__27400__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27359 = x;
var G__27360 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27359,G__27360) : f.call(null,G__27359,G__27360));
})()],null));
});
var G__27400__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27361 = x;
var G__27362 = y;
var G__27363 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27361,G__27362,G__27363) : f.call(null,G__27361,G__27362,G__27363));
})()],null));
});
var G__27400__4 = (function() { 
var G__27401__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__27401 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27402__i = 0, G__27402__a = new Array(arguments.length -  3);
while (G__27402__i < G__27402__a.length) {G__27402__a[G__27402__i] = arguments[G__27402__i + 3]; ++G__27402__i;}
  args = new cljs.core.IndexedSeq(G__27402__a,0);
} 
return G__27401__delegate.call(this,x,y,z,args);};
G__27401.cljs$lang$maxFixedArity = 3;
G__27401.cljs$lang$applyTo = (function (arglist__27403){
var x = cljs.core.first(arglist__27403);
arglist__27403 = cljs.core.next(arglist__27403);
var y = cljs.core.first(arglist__27403);
arglist__27403 = cljs.core.next(arglist__27403);
var z = cljs.core.first(arglist__27403);
var args = cljs.core.rest(arglist__27403);
return G__27401__delegate(x,y,z,args);
});
G__27401.cljs$core$IFn$_invoke$arity$variadic = G__27401__delegate;
return G__27401;
})()
;
G__27400 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27400__0.call(this);
case 1:
return G__27400__1.call(this,x);
case 2:
return G__27400__2.call(this,x,y);
case 3:
return G__27400__3.call(this,x,y,z);
default:
var G__27404 = null;
if (arguments.length > 3) {
var G__27405__i = 0, G__27405__a = new Array(arguments.length -  3);
while (G__27405__i < G__27405__a.length) {G__27405__a[G__27405__i] = arguments[G__27405__i + 3]; ++G__27405__i;}
G__27404 = new cljs.core.IndexedSeq(G__27405__a,0);
}
return G__27400__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27404);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27400.cljs$lang$maxFixedArity = 3;
G__27400.cljs$lang$applyTo = G__27400__4.cljs$lang$applyTo;
G__27400.cljs$core$IFn$_invoke$arity$0 = G__27400__0;
G__27400.cljs$core$IFn$_invoke$arity$1 = G__27400__1;
G__27400.cljs$core$IFn$_invoke$arity$2 = G__27400__2;
G__27400.cljs$core$IFn$_invoke$arity$3 = G__27400__3;
G__27400.cljs$core$IFn$_invoke$arity$variadic = G__27400__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27400;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__27406 = null;
var G__27406__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__27406__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27364 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27364) : f.call(null,G__27364));
})(),(function (){var G__27365 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__27365) : g.call(null,G__27365));
})()],null));
});
var G__27406__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27366 = x;
var G__27367 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27366,G__27367) : f.call(null,G__27366,G__27367));
})(),(function (){var G__27368 = x;
var G__27369 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__27368,G__27369) : g.call(null,G__27368,G__27369));
})()],null));
});
var G__27406__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27370 = x;
var G__27371 = y;
var G__27372 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27370,G__27371,G__27372) : f.call(null,G__27370,G__27371,G__27372));
})(),(function (){var G__27373 = x;
var G__27374 = y;
var G__27375 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__27373,G__27374,G__27375) : g.call(null,G__27373,G__27374,G__27375));
})()],null));
});
var G__27406__4 = (function() { 
var G__27407__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__27407 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27408__i = 0, G__27408__a = new Array(arguments.length -  3);
while (G__27408__i < G__27408__a.length) {G__27408__a[G__27408__i] = arguments[G__27408__i + 3]; ++G__27408__i;}
  args = new cljs.core.IndexedSeq(G__27408__a,0);
} 
return G__27407__delegate.call(this,x,y,z,args);};
G__27407.cljs$lang$maxFixedArity = 3;
G__27407.cljs$lang$applyTo = (function (arglist__27409){
var x = cljs.core.first(arglist__27409);
arglist__27409 = cljs.core.next(arglist__27409);
var y = cljs.core.first(arglist__27409);
arglist__27409 = cljs.core.next(arglist__27409);
var z = cljs.core.first(arglist__27409);
var args = cljs.core.rest(arglist__27409);
return G__27407__delegate(x,y,z,args);
});
G__27407.cljs$core$IFn$_invoke$arity$variadic = G__27407__delegate;
return G__27407;
})()
;
G__27406 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27406__0.call(this);
case 1:
return G__27406__1.call(this,x);
case 2:
return G__27406__2.call(this,x,y);
case 3:
return G__27406__3.call(this,x,y,z);
default:
var G__27410 = null;
if (arguments.length > 3) {
var G__27411__i = 0, G__27411__a = new Array(arguments.length -  3);
while (G__27411__i < G__27411__a.length) {G__27411__a[G__27411__i] = arguments[G__27411__i + 3]; ++G__27411__i;}
G__27410 = new cljs.core.IndexedSeq(G__27411__a,0);
}
return G__27406__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27410);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27406.cljs$lang$maxFixedArity = 3;
G__27406.cljs$lang$applyTo = G__27406__4.cljs$lang$applyTo;
G__27406.cljs$core$IFn$_invoke$arity$0 = G__27406__0;
G__27406.cljs$core$IFn$_invoke$arity$1 = G__27406__1;
G__27406.cljs$core$IFn$_invoke$arity$2 = G__27406__2;
G__27406.cljs$core$IFn$_invoke$arity$3 = G__27406__3;
G__27406.cljs$core$IFn$_invoke$arity$variadic = G__27406__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27406;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__27412 = null;
var G__27412__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__27412__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27376 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27376) : f.call(null,G__27376));
})(),(function (){var G__27377 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__27377) : g.call(null,G__27377));
})(),(function (){var G__27378 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__27378) : h.call(null,G__27378));
})()],null));
});
var G__27412__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27379 = x;
var G__27380 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27379,G__27380) : f.call(null,G__27379,G__27380));
})(),(function (){var G__27381 = x;
var G__27382 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__27381,G__27382) : g.call(null,G__27381,G__27382));
})(),(function (){var G__27383 = x;
var G__27384 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__27383,G__27384) : h.call(null,G__27383,G__27384));
})()],null));
});
var G__27412__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27385 = x;
var G__27386 = y;
var G__27387 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27385,G__27386,G__27387) : f.call(null,G__27385,G__27386,G__27387));
})(),(function (){var G__27388 = x;
var G__27389 = y;
var G__27390 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__27388,G__27389,G__27390) : g.call(null,G__27388,G__27389,G__27390));
})(),(function (){var G__27391 = x;
var G__27392 = y;
var G__27393 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__27391,G__27392,G__27393) : h.call(null,G__27391,G__27392,G__27393));
})()],null));
});
var G__27412__4 = (function() { 
var G__27413__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__27413 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27414__i = 0, G__27414__a = new Array(arguments.length -  3);
while (G__27414__i < G__27414__a.length) {G__27414__a[G__27414__i] = arguments[G__27414__i + 3]; ++G__27414__i;}
  args = new cljs.core.IndexedSeq(G__27414__a,0);
} 
return G__27413__delegate.call(this,x,y,z,args);};
G__27413.cljs$lang$maxFixedArity = 3;
G__27413.cljs$lang$applyTo = (function (arglist__27415){
var x = cljs.core.first(arglist__27415);
arglist__27415 = cljs.core.next(arglist__27415);
var y = cljs.core.first(arglist__27415);
arglist__27415 = cljs.core.next(arglist__27415);
var z = cljs.core.first(arglist__27415);
var args = cljs.core.rest(arglist__27415);
return G__27413__delegate(x,y,z,args);
});
G__27413.cljs$core$IFn$_invoke$arity$variadic = G__27413__delegate;
return G__27413;
})()
;
G__27412 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27412__0.call(this);
case 1:
return G__27412__1.call(this,x);
case 2:
return G__27412__2.call(this,x,y);
case 3:
return G__27412__3.call(this,x,y,z);
default:
var G__27416 = null;
if (arguments.length > 3) {
var G__27417__i = 0, G__27417__a = new Array(arguments.length -  3);
while (G__27417__i < G__27417__a.length) {G__27417__a[G__27417__i] = arguments[G__27417__i + 3]; ++G__27417__i;}
G__27416 = new cljs.core.IndexedSeq(G__27417__a,0);
}
return G__27412__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27416);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27412.cljs$lang$maxFixedArity = 3;
G__27412.cljs$lang$applyTo = G__27412__4.cljs$lang$applyTo;
G__27412.cljs$core$IFn$_invoke$arity$0 = G__27412__0;
G__27412.cljs$core$IFn$_invoke$arity$1 = G__27412__1;
G__27412.cljs$core$IFn$_invoke$arity$2 = G__27412__2;
G__27412.cljs$core$IFn$_invoke$arity$3 = G__27412__3;
G__27412.cljs$core$IFn$_invoke$arity$variadic = G__27412__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27412;
})()
});
var juxt__4 = (function() { 
var G__27418__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__27419 = null;
var G__27419__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27306_SHARP_,p2__27307_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27306_SHARP_,(function (){return (p2__27307_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__27307_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__27307_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27419__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27308_SHARP_,p2__27309_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27308_SHARP_,(function (){var G__27394 = x;
return (p2__27309_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__27309_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27394) : p2__27309_SHARP_.call(null,G__27394));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27419__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27310_SHARP_,p2__27311_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27310_SHARP_,(function (){var G__27395 = x;
var G__27396 = y;
return (p2__27311_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__27311_SHARP_.cljs$core$IFn$_invoke$arity$2(G__27395,G__27396) : p2__27311_SHARP_.call(null,G__27395,G__27396));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27419__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27312_SHARP_,p2__27313_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27312_SHARP_,(function (){var G__27397 = x;
var G__27398 = y;
var G__27399 = z;
return (p2__27313_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__27313_SHARP_.cljs$core$IFn$_invoke$arity$3(G__27397,G__27398,G__27399) : p2__27313_SHARP_.call(null,G__27397,G__27398,G__27399));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27419__4 = (function() { 
var G__27420__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27314_SHARP_,p2__27315_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27314_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__27315_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__27420 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27421__i = 0, G__27421__a = new Array(arguments.length -  3);
while (G__27421__i < G__27421__a.length) {G__27421__a[G__27421__i] = arguments[G__27421__i + 3]; ++G__27421__i;}
  args = new cljs.core.IndexedSeq(G__27421__a,0);
} 
return G__27420__delegate.call(this,x,y,z,args);};
G__27420.cljs$lang$maxFixedArity = 3;
G__27420.cljs$lang$applyTo = (function (arglist__27422){
var x = cljs.core.first(arglist__27422);
arglist__27422 = cljs.core.next(arglist__27422);
var y = cljs.core.first(arglist__27422);
arglist__27422 = cljs.core.next(arglist__27422);
var z = cljs.core.first(arglist__27422);
var args = cljs.core.rest(arglist__27422);
return G__27420__delegate(x,y,z,args);
});
G__27420.cljs$core$IFn$_invoke$arity$variadic = G__27420__delegate;
return G__27420;
})()
;
G__27419 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27419__0.call(this);
case 1:
return G__27419__1.call(this,x);
case 2:
return G__27419__2.call(this,x,y);
case 3:
return G__27419__3.call(this,x,y,z);
default:
var G__27423 = null;
if (arguments.length > 3) {
var G__27424__i = 0, G__27424__a = new Array(arguments.length -  3);
while (G__27424__i < G__27424__a.length) {G__27424__a[G__27424__i] = arguments[G__27424__i + 3]; ++G__27424__i;}
G__27423 = new cljs.core.IndexedSeq(G__27424__a,0);
}
return G__27419__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27423);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27419.cljs$lang$maxFixedArity = 3;
G__27419.cljs$lang$applyTo = G__27419__4.cljs$lang$applyTo;
G__27419.cljs$core$IFn$_invoke$arity$0 = G__27419__0;
G__27419.cljs$core$IFn$_invoke$arity$1 = G__27419__1;
G__27419.cljs$core$IFn$_invoke$arity$2 = G__27419__2;
G__27419.cljs$core$IFn$_invoke$arity$3 = G__27419__3;
G__27419.cljs$core$IFn$_invoke$arity$variadic = G__27419__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27419;
})()
;})(fs__$1))
};
var G__27418 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__27425__i = 0, G__27425__a = new Array(arguments.length -  3);
while (G__27425__i < G__27425__a.length) {G__27425__a[G__27425__i] = arguments[G__27425__i + 3]; ++G__27425__i;}
  fs = new cljs.core.IndexedSeq(G__27425__a,0);
} 
return G__27418__delegate.call(this,f,g,h,fs);};
G__27418.cljs$lang$maxFixedArity = 3;
G__27418.cljs$lang$applyTo = (function (arglist__27426){
var f = cljs.core.first(arglist__27426);
arglist__27426 = cljs.core.next(arglist__27426);
var g = cljs.core.first(arglist__27426);
arglist__27426 = cljs.core.next(arglist__27426);
var h = cljs.core.first(arglist__27426);
var fs = cljs.core.rest(arglist__27426);
return G__27418__delegate(f,g,h,fs);
});
G__27418.cljs$core$IFn$_invoke$arity$variadic = G__27418__delegate;
return G__27418;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__27427 = null;
if (arguments.length > 3) {
var G__27428__i = 0, G__27428__a = new Array(arguments.length -  3);
while (G__27428__i < G__27428__a.length) {G__27428__a[G__27428__i] = arguments[G__27428__i + 3]; ++G__27428__i;}
G__27427 = new cljs.core.IndexedSeq(G__27428__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__27427);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__27429 = cljs.core.next(coll);
coll = G__27429;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__27430 = (n - (1));
var G__27431 = cljs.core.next(coll);
n = G__27430;
coll = G__27431;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__27435 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27435,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27435,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27435,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_27443 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3807__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__27444_27450 = cljs.core.first(coll);
var G__27445_27451 = writer;
var G__27446_27452 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27444_27450,G__27445_27451,G__27446_27452) : print_one.call(null,G__27444_27450,G__27445_27451,G__27446_27452));
} else {
}

var coll_27453__$1 = cljs.core.next(coll);
var n_27454 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_27453__$1) && (((n_27454 == null)) || (!((n_27454 === (0)))))){
cljs.core._write(writer,sep);

var G__27447_27455 = cljs.core.first(coll_27453__$1);
var G__27448_27456 = writer;
var G__27449_27457 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27447_27455,G__27448_27456,G__27449_27457) : print_one.call(null,G__27447_27455,G__27448_27456,G__27449_27457));

var G__27458 = cljs.core.next(coll_27453__$1);
var G__27459 = (n_27454 - (1));
coll_27453__$1 = G__27458;
n_27454 = G__27459;
continue;
} else {
if((cljs.core.seq(coll_27453__$1)) && ((n_27454 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3807__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_27443;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__27464 = cljs.core.seq(ss);
var chunk__27465 = null;
var count__27466 = (0);
var i__27467 = (0);
while(true){
if((i__27467 < count__27466)){
var s = chunk__27465.cljs$core$IIndexed$_nth$arity$2(null,i__27467);
cljs.core._write(writer,s);

var G__27468 = seq__27464;
var G__27469 = chunk__27465;
var G__27470 = count__27466;
var G__27471 = (i__27467 + (1));
seq__27464 = G__27468;
chunk__27465 = G__27469;
count__27466 = G__27470;
i__27467 = G__27471;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27464);
if(temp__4126__auto__){
var seq__27464__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27464__$1)){
var c__4594__auto__ = cljs.core.chunk_first(seq__27464__$1);
var G__27472 = cljs.core.chunk_rest(seq__27464__$1);
var G__27473 = c__4594__auto__;
var G__27474 = cljs.core.count(c__4594__auto__);
var G__27475 = (0);
seq__27464 = G__27472;
chunk__27465 = G__27473;
count__27466 = G__27474;
i__27467 = G__27475;
continue;
} else {
var s = cljs.core.first(seq__27464__$1);
cljs.core._write(writer,s);

var G__27476 = cljs.core.next(seq__27464__$1);
var G__27477 = null;
var G__27478 = (0);
var G__27479 = (0);
seq__27464 = G__27476;
chunk__27465 = G__27477;
count__27466 = G__27478;
i__27467 = G__27479;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__27480__i = 0, G__27480__a = new Array(arguments.length -  1);
while (G__27480__i < G__27480__a.length) {G__27480__a[G__27480__i] = arguments[G__27480__i + 1]; ++G__27480__i;}
  ss = new cljs.core.IndexedSeq(G__27480__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__27481){
var writer = cljs.core.first(arglist__27481);
var ss = cljs.core.rest(arglist__27481);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj27483 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj27483;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__27486 = "[\\\\\"\b\f\n\r\t]";
var G__27487 = "g";
return RegExp(G__27486,G__27487);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3795__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3795__auto__)){
var and__3795__auto____$1 = (function (){var G__27501 = obj;
if(G__27501){
var bit__4488__auto__ = (G__27501.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4488__auto__) || (G__27501.cljs$core$IMeta$)){
return true;
} else {
if((!G__27501.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__27501);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__27501);
}
})();
if(and__3795__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3795__auto____$1;
}
} else {
return and__3795__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__27502_27512 = cljs.core.meta(obj);
var G__27503_27513 = writer;
var G__27504_27514 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__27502_27512,G__27503_27513,G__27504_27514) : cljs.core.pr_writer.call(null,G__27502_27512,G__27503_27513,G__27504_27514));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__27505 = obj;
if(G__27505){
var bit__4481__auto__ = (G__27505.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4481__auto__) || (G__27505.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__27506 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__27507 = cljs.core.pr_writer;
var G__27508 = writer;
var G__27509 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__27506,G__27507,G__27508,G__27509) : cljs.core.print_map.call(null,G__27506,G__27507,G__27508,G__27509));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__27510 = obj;
return goog.isString(G__27510);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__27515 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__27515;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__27511 = obj;
if(G__27511){
var bit__4488__auto__ = (G__27511.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4488__auto__) || (G__27511.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__27511.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__27511);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__27511);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__27519 = obj;
var G__27520 = writer;
var G__27521 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__27519,G__27520,G__27521) : alt_impl.call(null,G__27519,G__27520,G__27521));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__27526 = cljs.core.seq(cljs.core.next(objs));
var chunk__27527 = null;
var count__27528 = (0);
var i__27529 = (0);
while(true){
if((i__27529 < count__27528)){
var obj = chunk__27527.cljs$core$IIndexed$_nth$arity$2(null,i__27529);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__27530 = seq__27526;
var G__27531 = chunk__27527;
var G__27532 = count__27528;
var G__27533 = (i__27529 + (1));
seq__27526 = G__27530;
chunk__27527 = G__27531;
count__27528 = G__27532;
i__27529 = G__27533;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27526);
if(temp__4126__auto__){
var seq__27526__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27526__$1)){
var c__4594__auto__ = cljs.core.chunk_first(seq__27526__$1);
var G__27534 = cljs.core.chunk_rest(seq__27526__$1);
var G__27535 = c__4594__auto__;
var G__27536 = cljs.core.count(c__4594__auto__);
var G__27537 = (0);
seq__27526 = G__27534;
chunk__27527 = G__27535;
count__27528 = G__27536;
i__27529 = G__27537;
continue;
} else {
var obj = cljs.core.first(seq__27526__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__27538 = cljs.core.next(seq__27526__$1);
var G__27539 = null;
var G__27540 = (0);
var G__27541 = (0);
seq__27526 = G__27538;
chunk__27527 = G__27539;
count__27528 = G__27540;
i__27529 = G__27541;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27542__i = 0, G__27542__a = new Array(arguments.length -  0);
while (G__27542__i < G__27542__a.length) {G__27542__a[G__27542__i] = arguments[G__27542__i + 0]; ++G__27542__i;}
  objs = new cljs.core.IndexedSeq(G__27542__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__27543){
var objs = cljs.core.seq(arglist__27543);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27544__i = 0, G__27544__a = new Array(arguments.length -  0);
while (G__27544__i < G__27544__a.length) {G__27544__a[G__27544__i] = arguments[G__27544__i + 0]; ++G__27544__i;}
  objs = new cljs.core.IndexedSeq(G__27544__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__27545){
var objs = cljs.core.seq(arglist__27545);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27546__i = 0, G__27546__a = new Array(arguments.length -  0);
while (G__27546__i < G__27546__a.length) {G__27546__a[G__27546__i] = arguments[G__27546__i + 0]; ++G__27546__i;}
  objs = new cljs.core.IndexedSeq(G__27546__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__27547){
var objs = cljs.core.seq(arglist__27547);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27548__i = 0, G__27548__a = new Array(arguments.length -  0);
while (G__27548__i < G__27548__a.length) {G__27548__a[G__27548__i] = arguments[G__27548__i + 0]; ++G__27548__i;}
  objs = new cljs.core.IndexedSeq(G__27548__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__27549){
var objs = cljs.core.seq(arglist__27549);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27550__i = 0, G__27550__a = new Array(arguments.length -  0);
while (G__27550__i < G__27550__a.length) {G__27550__a[G__27550__i] = arguments[G__27550__i + 0]; ++G__27550__i;}
  objs = new cljs.core.IndexedSeq(G__27550__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__27551){
var objs = cljs.core.seq(arglist__27551);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27552__i = 0, G__27552__a = new Array(arguments.length -  0);
while (G__27552__i < G__27552__a.length) {G__27552__a[G__27552__i] = arguments[G__27552__i + 0]; ++G__27552__i;}
  objs = new cljs.core.IndexedSeq(G__27552__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__27553){
var objs = cljs.core.seq(arglist__27553);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27554__i = 0, G__27554__a = new Array(arguments.length -  0);
while (G__27554__i < G__27554__a.length) {G__27554__a[G__27554__i] = arguments[G__27554__i + 0]; ++G__27554__i;}
  objs = new cljs.core.IndexedSeq(G__27554__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__27555){
var objs = cljs.core.seq(arglist__27555);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27556__i = 0, G__27556__a = new Array(arguments.length -  0);
while (G__27556__i < G__27556__a.length) {G__27556__a[G__27556__i] = arguments[G__27556__i + 0]; ++G__27556__i;}
  objs = new cljs.core.IndexedSeq(G__27556__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__27557){
var objs = cljs.core.seq(arglist__27557);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__27564_27570 = cljs.core.key(e);
var G__27565_27571 = w;
var G__27566_27572 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27564_27570,G__27565_27571,G__27566_27572) : print_one.call(null,G__27564_27570,G__27565_27571,G__27566_27572));

cljs.core._write(w," ");

var G__27567 = cljs.core.val(e);
var G__27568 = w;
var G__27569 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27567,G__27568,G__27569) : print_one.call(null,G__27567,G__27568,G__27569));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__27573__i = 0, G__27573__a = new Array(arguments.length -  2);
while (G__27573__i < G__27573__a.length) {G__27573__a[G__27573__i] = arguments[G__27573__i + 2]; ++G__27573__i;}
  args = new cljs.core.IndexedSeq(G__27573__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__27574){
var iref = cljs.core.first(arglist__27574);
arglist__27574 = cljs.core.next(arglist__27574);
var f = cljs.core.first(arglist__27574);
var args = cljs.core.rest(arglist__27574);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__27577 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__27577) : cljs.core.atom.call(null,G__27577));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__27579 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27579) : cljs.core.deref.call(null,G__27579));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__27580_SHARP_,p2__27581_SHARP_){
var ret = (function (){var G__27584 = p1__27580_SHARP_;
var G__27585 = p2__27581_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27584,G__27585) : rf.call(null,G__27584,G__27585));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__27588 = null;
var G__27588__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27588__1 = (function (result){
var G__27587 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27587) : rf.call(null,G__27587));
});
var G__27588__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__27588 = function(result,input){
switch(arguments.length){
case 0:
return G__27588__0.call(this);
case 1:
return G__27588__1.call(this,result);
case 2:
return G__27588__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27588.cljs$core$IFn$_invoke$arity$0 = G__27588__0;
G__27588.cljs$core$IFn$_invoke$arity$1 = G__27588__1;
G__27588.cljs$core$IFn$_invoke$arity$2 = G__27588__2;
return G__27588;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__27597 = null;
var G__27597__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27597__1 = (function (result){
var G__27593 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27593) : rf.call(null,G__27593));
});
var G__27597__2 = (function (result,input){
var prior = (function (){var G__27594 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27594) : cljs.core.deref.call(null,G__27594));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__27595 = result;
var G__27596 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27595,G__27596) : rf.call(null,G__27595,G__27596));
}
});
G__27597 = function(result,input){
switch(arguments.length){
case 0:
return G__27597__0.call(this);
case 1:
return G__27597__1.call(this,result);
case 2:
return G__27597__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27597.cljs$core$IFn$_invoke$arity$0 = G__27597__0;
G__27597.cljs$core$IFn$_invoke$arity$1 = G__27597__1;
G__27597.cljs$core$IFn$_invoke$arity$2 = G__27597__2;
return G__27597;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4785__auto__ = this;
return cljs.core.es6_iterator(this__4785__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27599_SHARP_,p2__27598_SHARP_){
var G__27601 = p2__27598_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__27601) : proc.call(null,G__27601));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj27603 = {};
return obj27603;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3795__auto__ = x;
if(and__3795__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3795__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4451__auto__ = (((x == null))?null:x);
return (function (){var or__3807__auto__ = (cljs.core._clj__GT_js[(function (){var G__27607 = x__4451__auto__;
return goog.typeOf(G__27607);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3795__auto__ = x;
if(and__3795__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3795__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4451__auto__ = (((x == null))?null:x);
return (function (){var or__3807__auto__ = (cljs.core._key__GT_js[(function (){var G__27611 = x__4451__auto__;
return goog.typeOf(G__27611);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__27614 = k;
if(G__27614){
var bit__4488__auto__ = null;
if(cljs.core.truth_((function (){var or__3807__auto__ = bit__4488__auto__;
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return G__27614.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__27614.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27614);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27614);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__27615 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__27615) : cljs.core.clj__GT_js.call(null,G__27615));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__27631 = x;
if(G__27631){
var bit__4488__auto__ = null;
if(cljs.core.truth_((function (){var or__3807__auto__ = bit__4488__auto__;
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return G__27631.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__27631.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27631);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27631);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj27633 = {};
return obj27633;
})();
var seq__27634_27644 = cljs.core.seq(x);
var chunk__27635_27645 = null;
var count__27636_27646 = (0);
var i__27637_27647 = (0);
while(true){
if((i__27637_27647 < count__27636_27646)){
var vec__27638_27648 = chunk__27635_27645.cljs$core$IIndexed$_nth$arity$2(null,i__27637_27647);
var k_27649 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27638_27648,(0),null);
var v_27650 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27638_27648,(1),null);
(m[cljs.core.key__GT_js(k_27649)] = clj__GT_js(v_27650));

var G__27651 = seq__27634_27644;
var G__27652 = chunk__27635_27645;
var G__27653 = count__27636_27646;
var G__27654 = (i__27637_27647 + (1));
seq__27634_27644 = G__27651;
chunk__27635_27645 = G__27652;
count__27636_27646 = G__27653;
i__27637_27647 = G__27654;
continue;
} else {
var temp__4126__auto___27655 = cljs.core.seq(seq__27634_27644);
if(temp__4126__auto___27655){
var seq__27634_27656__$1 = temp__4126__auto___27655;
if(cljs.core.chunked_seq_QMARK_(seq__27634_27656__$1)){
var c__4594__auto___27657 = cljs.core.chunk_first(seq__27634_27656__$1);
var G__27658 = cljs.core.chunk_rest(seq__27634_27656__$1);
var G__27659 = c__4594__auto___27657;
var G__27660 = cljs.core.count(c__4594__auto___27657);
var G__27661 = (0);
seq__27634_27644 = G__27658;
chunk__27635_27645 = G__27659;
count__27636_27646 = G__27660;
i__27637_27647 = G__27661;
continue;
} else {
var vec__27639_27662 = cljs.core.first(seq__27634_27656__$1);
var k_27663 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27639_27662,(0),null);
var v_27664 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27639_27662,(1),null);
(m[cljs.core.key__GT_js(k_27663)] = clj__GT_js(v_27664));

var G__27665 = cljs.core.next(seq__27634_27656__$1);
var G__27666 = null;
var G__27667 = (0);
var G__27668 = (0);
seq__27634_27644 = G__27665;
chunk__27635_27645 = G__27666;
count__27636_27646 = G__27667;
i__27637_27647 = G__27668;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__27640_27669 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__27641_27670 = null;
var count__27642_27671 = (0);
var i__27643_27672 = (0);
while(true){
if((i__27643_27672 < count__27642_27671)){
var x_27673__$1 = chunk__27641_27670.cljs$core$IIndexed$_nth$arity$2(null,i__27643_27672);
arr.push(x_27673__$1);

var G__27674 = seq__27640_27669;
var G__27675 = chunk__27641_27670;
var G__27676 = count__27642_27671;
var G__27677 = (i__27643_27672 + (1));
seq__27640_27669 = G__27674;
chunk__27641_27670 = G__27675;
count__27642_27671 = G__27676;
i__27643_27672 = G__27677;
continue;
} else {
var temp__4126__auto___27678 = cljs.core.seq(seq__27640_27669);
if(temp__4126__auto___27678){
var seq__27640_27679__$1 = temp__4126__auto___27678;
if(cljs.core.chunked_seq_QMARK_(seq__27640_27679__$1)){
var c__4594__auto___27680 = cljs.core.chunk_first(seq__27640_27679__$1);
var G__27681 = cljs.core.chunk_rest(seq__27640_27679__$1);
var G__27682 = c__4594__auto___27680;
var G__27683 = cljs.core.count(c__4594__auto___27680);
var G__27684 = (0);
seq__27640_27669 = G__27681;
chunk__27641_27670 = G__27682;
count__27642_27671 = G__27683;
i__27643_27672 = G__27684;
continue;
} else {
var x_27685__$1 = cljs.core.first(seq__27640_27679__$1);
arr.push(x_27685__$1);

var G__27686 = cljs.core.next(seq__27640_27679__$1);
var G__27687 = null;
var G__27688 = (0);
var G__27689 = (0);
seq__27640_27669 = G__27686;
chunk__27641_27670 = G__27687;
count__27642_27671 = G__27688;
i__27643_27672 = G__27689;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj27691 = {};
return obj27691;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3795__auto__ = x;
if(and__3795__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3795__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4451__auto__ = (((x == null))?null:x);
return (function (){var or__3807__auto__ = (cljs.core._js__GT_clj[(function (){var G__27695 = x__4451__auto__;
return goog.typeOf(G__27695);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__27752__delegate = function (x,opts){
var map__27725 = opts;
var map__27725__$1 = ((cljs.core.seq_QMARK_(map__27725))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__27725):map__27725);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27725__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__27725,map__27725__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__27741 = x__$1;
if(G__27741){
var bit__4488__auto__ = null;
if(cljs.core.truth_((function (){var or__3807__auto__ = bit__4488__auto__;
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return G__27741.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__27741.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__27741);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__27741);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4563__auto__ = ((function (map__27725,map__27725__$1,keywordize_keys,keyfn){
return (function iter__27742(s__27743){
return (new cljs.core.LazySeq(null,((function (map__27725,map__27725__$1,keywordize_keys,keyfn){
return (function (){
var s__27743__$1 = s__27743;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__27743__$1);
if(temp__4126__auto__){
var s__27743__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__27743__$2)){
var c__4561__auto__ = cljs.core.chunk_first(s__27743__$2);
var size__4562__auto__ = cljs.core.count(c__4561__auto__);
var b__27745 = cljs.core.chunk_buffer(size__4562__auto__);
if((function (){var i__27744 = (0);
while(true){
if((i__27744 < size__4562__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4561__auto__,i__27744);
cljs.core.chunk_append(b__27745,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__27750 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__27750) : keyfn.call(null,G__27750));
})(),thisfn((x__$1[k]))], null));

var G__27753 = (i__27744 + (1));
i__27744 = G__27753;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__27745),iter__27742(cljs.core.chunk_rest(s__27743__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__27745),null);
}
} else {
var k = cljs.core.first(s__27743__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__27751 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__27751) : keyfn.call(null,G__27751));
})(),thisfn((x__$1[k]))], null),iter__27742(cljs.core.rest(s__27743__$2)));
}
} else {
return null;
}
break;
}
});})(map__27725,map__27725__$1,keywordize_keys,keyfn))
,null,null));
});})(map__27725,map__27725__$1,keywordize_keys,keyfn))
;
return iter__4563__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__27725,map__27725__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__27752 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__27754__i = 0, G__27754__a = new Array(arguments.length -  1);
while (G__27754__i < G__27754__a.length) {G__27754__a[G__27754__i] = arguments[G__27754__i + 1]; ++G__27754__i;}
  opts = new cljs.core.IndexedSeq(G__27754__a,0);
} 
return G__27752__delegate.call(this,x,opts);};
G__27752.cljs$lang$maxFixedArity = 1;
G__27752.cljs$lang$applyTo = (function (arglist__27755){
var x = cljs.core.first(arglist__27755);
var opts = cljs.core.rest(arglist__27755);
return G__27752__delegate(x,opts);
});
G__27752.cljs$core$IFn$_invoke$arity$variadic = G__27752__delegate;
return G__27752;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__27756 = null;
if (arguments.length > 1) {
var G__27757__i = 0, G__27757__a = new Array(arguments.length -  1);
while (G__27757__i < G__27757__a.length) {G__27757__a[G__27757__i] = arguments[G__27757__i + 1]; ++G__27757__i;}
G__27756 = new cljs.core.IndexedSeq(G__27757__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__27756);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__27760 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__27760) : cljs.core.atom.call(null,G__27760));
})();
return ((function (mem){
return (function() { 
var G__27762__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__27761 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27761) : cljs.core.deref.call(null,G__27761));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__27762 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__27763__i = 0, G__27763__a = new Array(arguments.length -  0);
while (G__27763__i < G__27763__a.length) {G__27763__a[G__27763__i] = arguments[G__27763__i + 0]; ++G__27763__i;}
  args = new cljs.core.IndexedSeq(G__27763__a,0);
} 
return G__27762__delegate.call(this,args);};
G__27762.cljs$lang$maxFixedArity = 0;
G__27762.cljs$lang$applyTo = (function (arglist__27764){
var args = cljs.core.seq(arglist__27764);
return G__27762__delegate(args);
});
G__27762.cljs$core$IFn$_invoke$arity$variadic = G__27762__delegate;
return G__27762;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__27766 = ret;
f = G__27766;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__27767__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__27767 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__27768__i = 0, G__27768__a = new Array(arguments.length -  1);
while (G__27768__i < G__27768__a.length) {G__27768__a[G__27768__i] = arguments[G__27768__i + 1]; ++G__27768__i;}
  args = new cljs.core.IndexedSeq(G__27768__a,0);
} 
return G__27767__delegate.call(this,f,args);};
G__27767.cljs$lang$maxFixedArity = 1;
G__27767.cljs$lang$applyTo = (function (arglist__27769){
var f = cljs.core.first(arglist__27769);
var args = cljs.core.rest(arglist__27769);
return G__27767__delegate(f,args);
});
G__27767.cljs$core$IFn$_invoke$arity$variadic = G__27767__delegate;
return G__27767;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__27770 = null;
if (arguments.length > 1) {
var G__27771__i = 0, G__27771__a = new Array(arguments.length -  1);
while (G__27771__i < G__27771__a.length) {G__27771__a[G__27771__i] = arguments[G__27771__i + 1]; ++G__27771__i;}
G__27770 = new cljs.core.IndexedSeq(G__27771__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__27770);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__27774 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__27774) : Math.floor.call(null,G__27774));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__27776 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27776) : f.call(null,G__27776));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__27778 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__27778) : cljs.core.atom.call(null,G__27778));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__27779__i = 0, G__27779__a = new Array(arguments.length -  1);
while (G__27779__i < G__27779__a.length) {G__27779__a[G__27779__i] = arguments[G__27779__i + 1]; ++G__27779__i;}
  args = new cljs.core.IndexedSeq(G__27779__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__27780){
var f = cljs.core.first(arglist__27780);
var args = cljs.core.rest(arglist__27780);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__27845 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27845) : cljs.core.deref.call(null,G__27845));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3807__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
var and__3795__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3795__auto__){
var and__3795__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3795__auto____$1){
var and__3795__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3795__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__27870 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__27868 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__27868) : child.call(null,G__27868));
})(),(function (){var G__27869 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__27869) : parent.call(null,G__27869));
})());
var G__27871 = (i + (1));
ret = G__27870;
i = G__27871;
continue;
}
break;
}
} else {
return and__3795__auto____$2;
}
} else {
return and__3795__auto____$1;
}
} else {
return and__3795__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__27875 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27875) : cljs.core.deref.call(null,G__27875));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__27879 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27879) : cljs.core.deref.call(null,G__27879));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__27883 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27883) : cljs.core.deref.call(null,G__27883));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__27892 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__27892) : targets.call(null,G__27892));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__27893 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__27893) : sources.call(null,G__27893));
})()));
});})(tp,td,ta))
;
var or__3807__auto__ = ((cljs.core.contains_QMARK_((function (){var G__27897 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__27897) : tp.call(null,G__27897));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__27898 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__27898) : ta.call(null,G__27898));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__27899 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__27899) : ta.call(null,G__27899));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__27906 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__27906) : parentMap.call(null,G__27906));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__27907 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__27907) : parentMap.call(null,G__27907));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__27900_SHARP_){
return cljs.core.cons(cljs.core.first(p1__27900_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__27900_SHARP_),cljs.core.second(p1__27900_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__27908 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__27908) : parentMap.call(null,G__27908));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__27901_SHARP_,p2__27902_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__27901_SHARP_,p2__27902_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__27911 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27911) : cljs.core.deref.call(null,G__27911));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__27912 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27912) : cljs.core.deref.call(null,G__27912));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__27928 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27928) : cljs.core.deref.call(null,G__27928));
})().call(null,x);
var or__3807__auto__ = (cljs.core.truth_((function (){var and__3795__auto__ = xprefs;
if(cljs.core.truth_(and__3795__auto__)){
var G__27930 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__27930) : xprefs.call(null,G__27930));
} else {
return and__3795__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__27931 = cljs.core.rest(ps);
ps = G__27931;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3807__auto____$1)){
return or__3807__auto____$1;
} else {
var or__3807__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__27932 = cljs.core.rest(ps);
ps = G__27932;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3807__auto____$2)){
return or__3807__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3807__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3807__auto__)){
return or__3807__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__27946){
var vec__27947 = p__27946;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27947,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27947,(1),null);
var e = vec__27947;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__27948 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27948) : cljs.core.deref.call(null,G__27948));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3807__auto__ = (be == null);
if(or__3807__auto__){
return or__3807__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__27949 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27949) : cljs.core.deref.call(null,G__27949));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__27950 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27950) : cljs.core.deref.call(null,G__27950));
})(),(function (){var G__27951 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27951) : cljs.core.deref.call(null,G__27951));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj27953 = {};
return obj27953;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3795__auto__ = mf;
if(and__3795__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3795__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4451__auto__ = (((mf == null))?null:mf);
return (function (){var or__3807__auto__ = (cljs.core._reset[(function (){var G__27957 = x__4451__auto__;
return goog.typeOf(G__27957);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._reset["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3795__auto__ = mf;
if(and__3795__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3795__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4451__auto__ = (((mf == null))?null:mf);
return (function (){var or__3807__auto__ = (cljs.core._add_method[(function (){var G__27961 = x__4451__auto__;
return goog.typeOf(G__27961);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._add_method["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3795__auto__ = mf;
if(and__3795__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3795__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4451__auto__ = (((mf == null))?null:mf);
return (function (){var or__3807__auto__ = (cljs.core._remove_method[(function (){var G__27965 = x__4451__auto__;
return goog.typeOf(G__27965);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3795__auto__ = mf;
if(and__3795__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3795__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4451__auto__ = (((mf == null))?null:mf);
return (function (){var or__3807__auto__ = (cljs.core._prefer_method[(function (){var G__27969 = x__4451__auto__;
return goog.typeOf(G__27969);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3795__auto__ = mf;
if(and__3795__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3795__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4451__auto__ = (((mf == null))?null:mf);
return (function (){var or__3807__auto__ = (cljs.core._get_method[(function (){var G__27973 = x__4451__auto__;
return goog.typeOf(G__27973);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._get_method["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3795__auto__ = mf;
if(and__3795__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3795__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4451__auto__ = (((mf == null))?null:mf);
return (function (){var or__3807__auto__ = (cljs.core._methods[(function (){var G__27977 = x__4451__auto__;
return goog.typeOf(G__27977);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._methods["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3795__auto__ = mf;
if(and__3795__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3795__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4451__auto__ = (((mf == null))?null:mf);
return (function (){var or__3807__auto__ = (cljs.core._prefers[(function (){var G__27981 = x__4451__auto__;
return goog.typeOf(G__27981);
})()]);
if(or__3807__auto__){
return or__3807__auto__;
} else {
var or__3807__auto____$1 = (cljs.core._prefers["_"]);
if(or__3807__auto____$1){
return or__3807__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__27983 = this$__$1;
return goog.getUid(G__27983);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__27984 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27984) : cljs.core.deref.call(null,G__27984));
})(),(function (){var G__27985 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27985) : cljs.core.deref.call(null,G__27985));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__27986 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27986) : cljs.core.deref.call(null,G__27986));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__27987 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27987) : cljs.core.deref.call(null,G__27987));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__27988 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27988) : cljs.core.deref.call(null,G__27988));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__27989 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27989) : cljs.core.deref.call(null,G__27989));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__28830 = null;
var G__28830__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__28830__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27990 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__27990) : self__.dispatch_fn.call(null,G__27990));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27991 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__27991) : target_fn.call(null,G__27991));
});
var G__28830__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27992 = a;
var G__27993 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__27992,G__27993) : self__.dispatch_fn.call(null,G__27992,G__27993));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27994 = a;
var G__27995 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__27994,G__27995) : target_fn.call(null,G__27994,G__27995));
});
var G__28830__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__27996 = a;
var G__27997 = b;
var G__27998 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__27996,G__27997,G__27998) : self__.dispatch_fn.call(null,G__27996,G__27997,G__27998));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27999 = a;
var G__28000 = b;
var G__28001 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__27999,G__28000,G__28001) : target_fn.call(null,G__27999,G__28000,G__28001));
});
var G__28830__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28002 = a;
var G__28003 = b;
var G__28004 = c;
var G__28005 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__28002,G__28003,G__28004,G__28005) : self__.dispatch_fn.call(null,G__28002,G__28003,G__28004,G__28005));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28006 = a;
var G__28007 = b;
var G__28008 = c;
var G__28009 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__28006,G__28007,G__28008,G__28009) : target_fn.call(null,G__28006,G__28007,G__28008,G__28009));
});
var G__28830__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28010 = a;
var G__28011 = b;
var G__28012 = c;
var G__28013 = d;
var G__28014 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__28010,G__28011,G__28012,G__28013,G__28014) : self__.dispatch_fn.call(null,G__28010,G__28011,G__28012,G__28013,G__28014));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28015 = a;
var G__28016 = b;
var G__28017 = c;
var G__28018 = d;
var G__28019 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__28015,G__28016,G__28017,G__28018,G__28019) : target_fn.call(null,G__28015,G__28016,G__28017,G__28018,G__28019));
});
var G__28830__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28020 = a;
var G__28021 = b;
var G__28022 = c;
var G__28023 = d;
var G__28024 = e;
var G__28025 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__28020,G__28021,G__28022,G__28023,G__28024,G__28025) : self__.dispatch_fn.call(null,G__28020,G__28021,G__28022,G__28023,G__28024,G__28025));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28026 = a;
var G__28027 = b;
var G__28028 = c;
var G__28029 = d;
var G__28030 = e;
var G__28031 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__28026,G__28027,G__28028,G__28029,G__28030,G__28031) : target_fn.call(null,G__28026,G__28027,G__28028,G__28029,G__28030,G__28031));
});
var G__28830__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28032 = a;
var G__28033 = b;
var G__28034 = c;
var G__28035 = d;
var G__28036 = e;
var G__28037 = f;
var G__28038 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__28032,G__28033,G__28034,G__28035,G__28036,G__28037,G__28038) : self__.dispatch_fn.call(null,G__28032,G__28033,G__28034,G__28035,G__28036,G__28037,G__28038));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28039 = a;
var G__28040 = b;
var G__28041 = c;
var G__28042 = d;
var G__28043 = e;
var G__28044 = f;
var G__28045 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__28039,G__28040,G__28041,G__28042,G__28043,G__28044,G__28045) : target_fn.call(null,G__28039,G__28040,G__28041,G__28042,G__28043,G__28044,G__28045));
});
var G__28830__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28046 = a;
var G__28047 = b;
var G__28048 = c;
var G__28049 = d;
var G__28050 = e;
var G__28051 = f;
var G__28052 = g;
var G__28053 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__28046,G__28047,G__28048,G__28049,G__28050,G__28051,G__28052,G__28053) : self__.dispatch_fn.call(null,G__28046,G__28047,G__28048,G__28049,G__28050,G__28051,G__28052,G__28053));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28054 = a;
var G__28055 = b;
var G__28056 = c;
var G__28057 = d;
var G__28058 = e;
var G__28059 = f;
var G__28060 = g;
var G__28061 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__28054,G__28055,G__28056,G__28057,G__28058,G__28059,G__28060,G__28061) : target_fn.call(null,G__28054,G__28055,G__28056,G__28057,G__28058,G__28059,G__28060,G__28061));
});
var G__28830__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28062 = a;
var G__28063 = b;
var G__28064 = c;
var G__28065 = d;
var G__28066 = e;
var G__28067 = f;
var G__28068 = g;
var G__28069 = h;
var G__28070 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__28062,G__28063,G__28064,G__28065,G__28066,G__28067,G__28068,G__28069,G__28070) : self__.dispatch_fn.call(null,G__28062,G__28063,G__28064,G__28065,G__28066,G__28067,G__28068,G__28069,G__28070));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28071 = a;
var G__28072 = b;
var G__28073 = c;
var G__28074 = d;
var G__28075 = e;
var G__28076 = f;
var G__28077 = g;
var G__28078 = h;
var G__28079 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__28071,G__28072,G__28073,G__28074,G__28075,G__28076,G__28077,G__28078,G__28079) : target_fn.call(null,G__28071,G__28072,G__28073,G__28074,G__28075,G__28076,G__28077,G__28078,G__28079));
});
var G__28830__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28080 = a;
var G__28081 = b;
var G__28082 = c;
var G__28083 = d;
var G__28084 = e;
var G__28085 = f;
var G__28086 = g;
var G__28087 = h;
var G__28088 = i;
var G__28089 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__28080,G__28081,G__28082,G__28083,G__28084,G__28085,G__28086,G__28087,G__28088,G__28089) : self__.dispatch_fn.call(null,G__28080,G__28081,G__28082,G__28083,G__28084,G__28085,G__28086,G__28087,G__28088,G__28089));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28090 = a;
var G__28091 = b;
var G__28092 = c;
var G__28093 = d;
var G__28094 = e;
var G__28095 = f;
var G__28096 = g;
var G__28097 = h;
var G__28098 = i;
var G__28099 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__28090,G__28091,G__28092,G__28093,G__28094,G__28095,G__28096,G__28097,G__28098,G__28099) : target_fn.call(null,G__28090,G__28091,G__28092,G__28093,G__28094,G__28095,G__28096,G__28097,G__28098,G__28099));
});
var G__28830__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28100 = a;
var G__28101 = b;
var G__28102 = c;
var G__28103 = d;
var G__28104 = e;
var G__28105 = f;
var G__28106 = g;
var G__28107 = h;
var G__28108 = i;
var G__28109 = j;
var G__28110 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__28100,G__28101,G__28102,G__28103,G__28104,G__28105,G__28106,G__28107,G__28108,G__28109,G__28110) : self__.dispatch_fn.call(null,G__28100,G__28101,G__28102,G__28103,G__28104,G__28105,G__28106,G__28107,G__28108,G__28109,G__28110));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28111 = a;
var G__28112 = b;
var G__28113 = c;
var G__28114 = d;
var G__28115 = e;
var G__28116 = f;
var G__28117 = g;
var G__28118 = h;
var G__28119 = i;
var G__28120 = j;
var G__28121 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__28111,G__28112,G__28113,G__28114,G__28115,G__28116,G__28117,G__28118,G__28119,G__28120,G__28121) : target_fn.call(null,G__28111,G__28112,G__28113,G__28114,G__28115,G__28116,G__28117,G__28118,G__28119,G__28120,G__28121));
});
var G__28830__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28122 = a;
var G__28123 = b;
var G__28124 = c;
var G__28125 = d;
var G__28126 = e;
var G__28127 = f;
var G__28128 = g;
var G__28129 = h;
var G__28130 = i;
var G__28131 = j;
var G__28132 = k;
var G__28133 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__28122,G__28123,G__28124,G__28125,G__28126,G__28127,G__28128,G__28129,G__28130,G__28131,G__28132,G__28133) : self__.dispatch_fn.call(null,G__28122,G__28123,G__28124,G__28125,G__28126,G__28127,G__28128,G__28129,G__28130,G__28131,G__28132,G__28133));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28134 = a;
var G__28135 = b;
var G__28136 = c;
var G__28137 = d;
var G__28138 = e;
var G__28139 = f;
var G__28140 = g;
var G__28141 = h;
var G__28142 = i;
var G__28143 = j;
var G__28144 = k;
var G__28145 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__28134,G__28135,G__28136,G__28137,G__28138,G__28139,G__28140,G__28141,G__28142,G__28143,G__28144,G__28145) : target_fn.call(null,G__28134,G__28135,G__28136,G__28137,G__28138,G__28139,G__28140,G__28141,G__28142,G__28143,G__28144,G__28145));
});
var G__28830__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28146 = a;
var G__28147 = b;
var G__28148 = c;
var G__28149 = d;
var G__28150 = e;
var G__28151 = f;
var G__28152 = g;
var G__28153 = h;
var G__28154 = i;
var G__28155 = j;
var G__28156 = k;
var G__28157 = l;
var G__28158 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__28146,G__28147,G__28148,G__28149,G__28150,G__28151,G__28152,G__28153,G__28154,G__28155,G__28156,G__28157,G__28158) : self__.dispatch_fn.call(null,G__28146,G__28147,G__28148,G__28149,G__28150,G__28151,G__28152,G__28153,G__28154,G__28155,G__28156,G__28157,G__28158));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28159 = a;
var G__28160 = b;
var G__28161 = c;
var G__28162 = d;
var G__28163 = e;
var G__28164 = f;
var G__28165 = g;
var G__28166 = h;
var G__28167 = i;
var G__28168 = j;
var G__28169 = k;
var G__28170 = l;
var G__28171 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__28159,G__28160,G__28161,G__28162,G__28163,G__28164,G__28165,G__28166,G__28167,G__28168,G__28169,G__28170,G__28171) : target_fn.call(null,G__28159,G__28160,G__28161,G__28162,G__28163,G__28164,G__28165,G__28166,G__28167,G__28168,G__28169,G__28170,G__28171));
});
var G__28830__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28172 = a;
var G__28173 = b;
var G__28174 = c;
var G__28175 = d;
var G__28176 = e;
var G__28177 = f;
var G__28178 = g;
var G__28179 = h;
var G__28180 = i;
var G__28181 = j;
var G__28182 = k;
var G__28183 = l;
var G__28184 = m;
var G__28185 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__28172,G__28173,G__28174,G__28175,G__28176,G__28177,G__28178,G__28179,G__28180,G__28181,G__28182,G__28183,G__28184,G__28185) : self__.dispatch_fn.call(null,G__28172,G__28173,G__28174,G__28175,G__28176,G__28177,G__28178,G__28179,G__28180,G__28181,G__28182,G__28183,G__28184,G__28185));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28186 = a;
var G__28187 = b;
var G__28188 = c;
var G__28189 = d;
var G__28190 = e;
var G__28191 = f;
var G__28192 = g;
var G__28193 = h;
var G__28194 = i;
var G__28195 = j;
var G__28196 = k;
var G__28197 = l;
var G__28198 = m;
var G__28199 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__28186,G__28187,G__28188,G__28189,G__28190,G__28191,G__28192,G__28193,G__28194,G__28195,G__28196,G__28197,G__28198,G__28199) : target_fn.call(null,G__28186,G__28187,G__28188,G__28189,G__28190,G__28191,G__28192,G__28193,G__28194,G__28195,G__28196,G__28197,G__28198,G__28199));
});
var G__28830__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28200 = a;
var G__28201 = b;
var G__28202 = c;
var G__28203 = d;
var G__28204 = e;
var G__28205 = f;
var G__28206 = g;
var G__28207 = h;
var G__28208 = i;
var G__28209 = j;
var G__28210 = k;
var G__28211 = l;
var G__28212 = m;
var G__28213 = n;
var G__28214 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__28200,G__28201,G__28202,G__28203,G__28204,G__28205,G__28206,G__28207,G__28208,G__28209,G__28210,G__28211,G__28212,G__28213,G__28214) : self__.dispatch_fn.call(null,G__28200,G__28201,G__28202,G__28203,G__28204,G__28205,G__28206,G__28207,G__28208,G__28209,G__28210,G__28211,G__28212,G__28213,G__28214));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28215 = a;
var G__28216 = b;
var G__28217 = c;
var G__28218 = d;
var G__28219 = e;
var G__28220 = f;
var G__28221 = g;
var G__28222 = h;
var G__28223 = i;
var G__28224 = j;
var G__28225 = k;
var G__28226 = l;
var G__28227 = m;
var G__28228 = n;
var G__28229 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__28215,G__28216,G__28217,G__28218,G__28219,G__28220,G__28221,G__28222,G__28223,G__28224,G__28225,G__28226,G__28227,G__28228,G__28229) : target_fn.call(null,G__28215,G__28216,G__28217,G__28218,G__28219,G__28220,G__28221,G__28222,G__28223,G__28224,G__28225,G__28226,G__28227,G__28228,G__28229));
});
var G__28830__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28230 = a;
var G__28231 = b;
var G__28232 = c;
var G__28233 = d;
var G__28234 = e;
var G__28235 = f;
var G__28236 = g;
var G__28237 = h;
var G__28238 = i;
var G__28239 = j;
var G__28240 = k;
var G__28241 = l;
var G__28242 = m;
var G__28243 = n;
var G__28244 = o;
var G__28245 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__28230,G__28231,G__28232,G__28233,G__28234,G__28235,G__28236,G__28237,G__28238,G__28239,G__28240,G__28241,G__28242,G__28243,G__28244,G__28245) : self__.dispatch_fn.call(null,G__28230,G__28231,G__28232,G__28233,G__28234,G__28235,G__28236,G__28237,G__28238,G__28239,G__28240,G__28241,G__28242,G__28243,G__28244,G__28245));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28246 = a;
var G__28247 = b;
var G__28248 = c;
var G__28249 = d;
var G__28250 = e;
var G__28251 = f;
var G__28252 = g;
var G__28253 = h;
var G__28254 = i;
var G__28255 = j;
var G__28256 = k;
var G__28257 = l;
var G__28258 = m;
var G__28259 = n;
var G__28260 = o;
var G__28261 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__28246,G__28247,G__28248,G__28249,G__28250,G__28251,G__28252,G__28253,G__28254,G__28255,G__28256,G__28257,G__28258,G__28259,G__28260,G__28261) : target_fn.call(null,G__28246,G__28247,G__28248,G__28249,G__28250,G__28251,G__28252,G__28253,G__28254,G__28255,G__28256,G__28257,G__28258,G__28259,G__28260,G__28261));
});
var G__28830__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28262 = a;
var G__28263 = b;
var G__28264 = c;
var G__28265 = d;
var G__28266 = e;
var G__28267 = f;
var G__28268 = g;
var G__28269 = h;
var G__28270 = i;
var G__28271 = j;
var G__28272 = k;
var G__28273 = l;
var G__28274 = m;
var G__28275 = n;
var G__28276 = o;
var G__28277 = p;
var G__28278 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__28262,G__28263,G__28264,G__28265,G__28266,G__28267,G__28268,G__28269,G__28270,G__28271,G__28272,G__28273,G__28274,G__28275,G__28276,G__28277,G__28278) : self__.dispatch_fn.call(null,G__28262,G__28263,G__28264,G__28265,G__28266,G__28267,G__28268,G__28269,G__28270,G__28271,G__28272,G__28273,G__28274,G__28275,G__28276,G__28277,G__28278));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28279 = a;
var G__28280 = b;
var G__28281 = c;
var G__28282 = d;
var G__28283 = e;
var G__28284 = f;
var G__28285 = g;
var G__28286 = h;
var G__28287 = i;
var G__28288 = j;
var G__28289 = k;
var G__28290 = l;
var G__28291 = m;
var G__28292 = n;
var G__28293 = o;
var G__28294 = p;
var G__28295 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__28279,G__28280,G__28281,G__28282,G__28283,G__28284,G__28285,G__28286,G__28287,G__28288,G__28289,G__28290,G__28291,G__28292,G__28293,G__28294,G__28295) : target_fn.call(null,G__28279,G__28280,G__28281,G__28282,G__28283,G__28284,G__28285,G__28286,G__28287,G__28288,G__28289,G__28290,G__28291,G__28292,G__28293,G__28294,G__28295));
});
var G__28830__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28296 = a;
var G__28297 = b;
var G__28298 = c;
var G__28299 = d;
var G__28300 = e;
var G__28301 = f;
var G__28302 = g;
var G__28303 = h;
var G__28304 = i;
var G__28305 = j;
var G__28306 = k;
var G__28307 = l;
var G__28308 = m;
var G__28309 = n;
var G__28310 = o;
var G__28311 = p;
var G__28312 = q;
var G__28313 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__28296,G__28297,G__28298,G__28299,G__28300,G__28301,G__28302,G__28303,G__28304,G__28305,G__28306,G__28307,G__28308,G__28309,G__28310,G__28311,G__28312,G__28313) : self__.dispatch_fn.call(null,G__28296,G__28297,G__28298,G__28299,G__28300,G__28301,G__28302,G__28303,G__28304,G__28305,G__28306,G__28307,G__28308,G__28309,G__28310,G__28311,G__28312,G__28313));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28314 = a;
var G__28315 = b;
var G__28316 = c;
var G__28317 = d;
var G__28318 = e;
var G__28319 = f;
var G__28320 = g;
var G__28321 = h;
var G__28322 = i;
var G__28323 = j;
var G__28324 = k;
var G__28325 = l;
var G__28326 = m;
var G__28327 = n;
var G__28328 = o;
var G__28329 = p;
var G__28330 = q;
var G__28331 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__28314,G__28315,G__28316,G__28317,G__28318,G__28319,G__28320,G__28321,G__28322,G__28323,G__28324,G__28325,G__28326,G__28327,G__28328,G__28329,G__28330,G__28331) : target_fn.call(null,G__28314,G__28315,G__28316,G__28317,G__28318,G__28319,G__28320,G__28321,G__28322,G__28323,G__28324,G__28325,G__28326,G__28327,G__28328,G__28329,G__28330,G__28331));
});
var G__28830__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28332 = a;
var G__28333 = b;
var G__28334 = c;
var G__28335 = d;
var G__28336 = e;
var G__28337 = f;
var G__28338 = g;
var G__28339 = h;
var G__28340 = i;
var G__28341 = j;
var G__28342 = k;
var G__28343 = l;
var G__28344 = m;
var G__28345 = n;
var G__28346 = o;
var G__28347 = p;
var G__28348 = q;
var G__28349 = r;
var G__28350 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__28332,G__28333,G__28334,G__28335,G__28336,G__28337,G__28338,G__28339,G__28340,G__28341,G__28342,G__28343,G__28344,G__28345,G__28346,G__28347,G__28348,G__28349,G__28350) : self__.dispatch_fn.call(null,G__28332,G__28333,G__28334,G__28335,G__28336,G__28337,G__28338,G__28339,G__28340,G__28341,G__28342,G__28343,G__28344,G__28345,G__28346,G__28347,G__28348,G__28349,G__28350));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28351 = a;
var G__28352 = b;
var G__28353 = c;
var G__28354 = d;
var G__28355 = e;
var G__28356 = f;
var G__28357 = g;
var G__28358 = h;
var G__28359 = i;
var G__28360 = j;
var G__28361 = k;
var G__28362 = l;
var G__28363 = m;
var G__28364 = n;
var G__28365 = o;
var G__28366 = p;
var G__28367 = q;
var G__28368 = r;
var G__28369 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__28351,G__28352,G__28353,G__28354,G__28355,G__28356,G__28357,G__28358,G__28359,G__28360,G__28361,G__28362,G__28363,G__28364,G__28365,G__28366,G__28367,G__28368,G__28369) : target_fn.call(null,G__28351,G__28352,G__28353,G__28354,G__28355,G__28356,G__28357,G__28358,G__28359,G__28360,G__28361,G__28362,G__28363,G__28364,G__28365,G__28366,G__28367,G__28368,G__28369));
});
var G__28830__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28370 = a;
var G__28371 = b;
var G__28372 = c;
var G__28373 = d;
var G__28374 = e;
var G__28375 = f;
var G__28376 = g;
var G__28377 = h;
var G__28378 = i;
var G__28379 = j;
var G__28380 = k;
var G__28381 = l;
var G__28382 = m;
var G__28383 = n;
var G__28384 = o;
var G__28385 = p;
var G__28386 = q;
var G__28387 = r;
var G__28388 = s;
var G__28389 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__28370,G__28371,G__28372,G__28373,G__28374,G__28375,G__28376,G__28377,G__28378,G__28379,G__28380,G__28381,G__28382,G__28383,G__28384,G__28385,G__28386,G__28387,G__28388,G__28389) : self__.dispatch_fn.call(null,G__28370,G__28371,G__28372,G__28373,G__28374,G__28375,G__28376,G__28377,G__28378,G__28379,G__28380,G__28381,G__28382,G__28383,G__28384,G__28385,G__28386,G__28387,G__28388,G__28389));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28390 = a;
var G__28391 = b;
var G__28392 = c;
var G__28393 = d;
var G__28394 = e;
var G__28395 = f;
var G__28396 = g;
var G__28397 = h;
var G__28398 = i;
var G__28399 = j;
var G__28400 = k;
var G__28401 = l;
var G__28402 = m;
var G__28403 = n;
var G__28404 = o;
var G__28405 = p;
var G__28406 = q;
var G__28407 = r;
var G__28408 = s;
var G__28409 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__28390,G__28391,G__28392,G__28393,G__28394,G__28395,G__28396,G__28397,G__28398,G__28399,G__28400,G__28401,G__28402,G__28403,G__28404,G__28405,G__28406,G__28407,G__28408,G__28409) : target_fn.call(null,G__28390,G__28391,G__28392,G__28393,G__28394,G__28395,G__28396,G__28397,G__28398,G__28399,G__28400,G__28401,G__28402,G__28403,G__28404,G__28405,G__28406,G__28407,G__28408,G__28409));
});
var G__28830__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__28830 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__28830__1.call(this,self__);
case 2:
return G__28830__2.call(this,self__,a);
case 3:
return G__28830__3.call(this,self__,a,b);
case 4:
return G__28830__4.call(this,self__,a,b,c);
case 5:
return G__28830__5.call(this,self__,a,b,c,d);
case 6:
return G__28830__6.call(this,self__,a,b,c,d,e);
case 7:
return G__28830__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__28830__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__28830__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__28830__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__28830__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__28830__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__28830__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__28830__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__28830__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__28830__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__28830__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__28830__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__28830__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__28830__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__28830__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__28830__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28830.cljs$core$IFn$_invoke$arity$1 = G__28830__1;
G__28830.cljs$core$IFn$_invoke$arity$2 = G__28830__2;
G__28830.cljs$core$IFn$_invoke$arity$3 = G__28830__3;
G__28830.cljs$core$IFn$_invoke$arity$4 = G__28830__4;
G__28830.cljs$core$IFn$_invoke$arity$5 = G__28830__5;
G__28830.cljs$core$IFn$_invoke$arity$6 = G__28830__6;
G__28830.cljs$core$IFn$_invoke$arity$7 = G__28830__7;
G__28830.cljs$core$IFn$_invoke$arity$8 = G__28830__8;
G__28830.cljs$core$IFn$_invoke$arity$9 = G__28830__9;
G__28830.cljs$core$IFn$_invoke$arity$10 = G__28830__10;
G__28830.cljs$core$IFn$_invoke$arity$11 = G__28830__11;
G__28830.cljs$core$IFn$_invoke$arity$12 = G__28830__12;
G__28830.cljs$core$IFn$_invoke$arity$13 = G__28830__13;
G__28830.cljs$core$IFn$_invoke$arity$14 = G__28830__14;
G__28830.cljs$core$IFn$_invoke$arity$15 = G__28830__15;
G__28830.cljs$core$IFn$_invoke$arity$16 = G__28830__16;
G__28830.cljs$core$IFn$_invoke$arity$17 = G__28830__17;
G__28830.cljs$core$IFn$_invoke$arity$18 = G__28830__18;
G__28830.cljs$core$IFn$_invoke$arity$19 = G__28830__19;
G__28830.cljs$core$IFn$_invoke$arity$20 = G__28830__20;
G__28830.cljs$core$IFn$_invoke$arity$21 = G__28830__21;
G__28830.cljs$core$IFn$_invoke$arity$22 = G__28830__22;
return G__28830;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args27982){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27982)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28410 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__28410) : self__.dispatch_fn.call(null,G__28410));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28411 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__28411) : target_fn.call(null,G__28411));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28412 = a;
var G__28413 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__28412,G__28413) : self__.dispatch_fn.call(null,G__28412,G__28413));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28414 = a;
var G__28415 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__28414,G__28415) : target_fn.call(null,G__28414,G__28415));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28416 = a;
var G__28417 = b;
var G__28418 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__28416,G__28417,G__28418) : self__.dispatch_fn.call(null,G__28416,G__28417,G__28418));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28419 = a;
var G__28420 = b;
var G__28421 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__28419,G__28420,G__28421) : target_fn.call(null,G__28419,G__28420,G__28421));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28422 = a;
var G__28423 = b;
var G__28424 = c;
var G__28425 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__28422,G__28423,G__28424,G__28425) : self__.dispatch_fn.call(null,G__28422,G__28423,G__28424,G__28425));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28426 = a;
var G__28427 = b;
var G__28428 = c;
var G__28429 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__28426,G__28427,G__28428,G__28429) : target_fn.call(null,G__28426,G__28427,G__28428,G__28429));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28430 = a;
var G__28431 = b;
var G__28432 = c;
var G__28433 = d;
var G__28434 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__28430,G__28431,G__28432,G__28433,G__28434) : self__.dispatch_fn.call(null,G__28430,G__28431,G__28432,G__28433,G__28434));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28435 = a;
var G__28436 = b;
var G__28437 = c;
var G__28438 = d;
var G__28439 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__28435,G__28436,G__28437,G__28438,G__28439) : target_fn.call(null,G__28435,G__28436,G__28437,G__28438,G__28439));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28440 = a;
var G__28441 = b;
var G__28442 = c;
var G__28443 = d;
var G__28444 = e;
var G__28445 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__28440,G__28441,G__28442,G__28443,G__28444,G__28445) : self__.dispatch_fn.call(null,G__28440,G__28441,G__28442,G__28443,G__28444,G__28445));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28446 = a;
var G__28447 = b;
var G__28448 = c;
var G__28449 = d;
var G__28450 = e;
var G__28451 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__28446,G__28447,G__28448,G__28449,G__28450,G__28451) : target_fn.call(null,G__28446,G__28447,G__28448,G__28449,G__28450,G__28451));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28452 = a;
var G__28453 = b;
var G__28454 = c;
var G__28455 = d;
var G__28456 = e;
var G__28457 = f;
var G__28458 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__28452,G__28453,G__28454,G__28455,G__28456,G__28457,G__28458) : self__.dispatch_fn.call(null,G__28452,G__28453,G__28454,G__28455,G__28456,G__28457,G__28458));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28459 = a;
var G__28460 = b;
var G__28461 = c;
var G__28462 = d;
var G__28463 = e;
var G__28464 = f;
var G__28465 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__28459,G__28460,G__28461,G__28462,G__28463,G__28464,G__28465) : target_fn.call(null,G__28459,G__28460,G__28461,G__28462,G__28463,G__28464,G__28465));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28466 = a;
var G__28467 = b;
var G__28468 = c;
var G__28469 = d;
var G__28470 = e;
var G__28471 = f;
var G__28472 = g;
var G__28473 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__28466,G__28467,G__28468,G__28469,G__28470,G__28471,G__28472,G__28473) : self__.dispatch_fn.call(null,G__28466,G__28467,G__28468,G__28469,G__28470,G__28471,G__28472,G__28473));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28474 = a;
var G__28475 = b;
var G__28476 = c;
var G__28477 = d;
var G__28478 = e;
var G__28479 = f;
var G__28480 = g;
var G__28481 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__28474,G__28475,G__28476,G__28477,G__28478,G__28479,G__28480,G__28481) : target_fn.call(null,G__28474,G__28475,G__28476,G__28477,G__28478,G__28479,G__28480,G__28481));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28482 = a;
var G__28483 = b;
var G__28484 = c;
var G__28485 = d;
var G__28486 = e;
var G__28487 = f;
var G__28488 = g;
var G__28489 = h;
var G__28490 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__28482,G__28483,G__28484,G__28485,G__28486,G__28487,G__28488,G__28489,G__28490) : self__.dispatch_fn.call(null,G__28482,G__28483,G__28484,G__28485,G__28486,G__28487,G__28488,G__28489,G__28490));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28491 = a;
var G__28492 = b;
var G__28493 = c;
var G__28494 = d;
var G__28495 = e;
var G__28496 = f;
var G__28497 = g;
var G__28498 = h;
var G__28499 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__28491,G__28492,G__28493,G__28494,G__28495,G__28496,G__28497,G__28498,G__28499) : target_fn.call(null,G__28491,G__28492,G__28493,G__28494,G__28495,G__28496,G__28497,G__28498,G__28499));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28500 = a;
var G__28501 = b;
var G__28502 = c;
var G__28503 = d;
var G__28504 = e;
var G__28505 = f;
var G__28506 = g;
var G__28507 = h;
var G__28508 = i;
var G__28509 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__28500,G__28501,G__28502,G__28503,G__28504,G__28505,G__28506,G__28507,G__28508,G__28509) : self__.dispatch_fn.call(null,G__28500,G__28501,G__28502,G__28503,G__28504,G__28505,G__28506,G__28507,G__28508,G__28509));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28510 = a;
var G__28511 = b;
var G__28512 = c;
var G__28513 = d;
var G__28514 = e;
var G__28515 = f;
var G__28516 = g;
var G__28517 = h;
var G__28518 = i;
var G__28519 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__28510,G__28511,G__28512,G__28513,G__28514,G__28515,G__28516,G__28517,G__28518,G__28519) : target_fn.call(null,G__28510,G__28511,G__28512,G__28513,G__28514,G__28515,G__28516,G__28517,G__28518,G__28519));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28520 = a;
var G__28521 = b;
var G__28522 = c;
var G__28523 = d;
var G__28524 = e;
var G__28525 = f;
var G__28526 = g;
var G__28527 = h;
var G__28528 = i;
var G__28529 = j;
var G__28530 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__28520,G__28521,G__28522,G__28523,G__28524,G__28525,G__28526,G__28527,G__28528,G__28529,G__28530) : self__.dispatch_fn.call(null,G__28520,G__28521,G__28522,G__28523,G__28524,G__28525,G__28526,G__28527,G__28528,G__28529,G__28530));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28531 = a;
var G__28532 = b;
var G__28533 = c;
var G__28534 = d;
var G__28535 = e;
var G__28536 = f;
var G__28537 = g;
var G__28538 = h;
var G__28539 = i;
var G__28540 = j;
var G__28541 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__28531,G__28532,G__28533,G__28534,G__28535,G__28536,G__28537,G__28538,G__28539,G__28540,G__28541) : target_fn.call(null,G__28531,G__28532,G__28533,G__28534,G__28535,G__28536,G__28537,G__28538,G__28539,G__28540,G__28541));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28542 = a;
var G__28543 = b;
var G__28544 = c;
var G__28545 = d;
var G__28546 = e;
var G__28547 = f;
var G__28548 = g;
var G__28549 = h;
var G__28550 = i;
var G__28551 = j;
var G__28552 = k;
var G__28553 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__28542,G__28543,G__28544,G__28545,G__28546,G__28547,G__28548,G__28549,G__28550,G__28551,G__28552,G__28553) : self__.dispatch_fn.call(null,G__28542,G__28543,G__28544,G__28545,G__28546,G__28547,G__28548,G__28549,G__28550,G__28551,G__28552,G__28553));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28554 = a;
var G__28555 = b;
var G__28556 = c;
var G__28557 = d;
var G__28558 = e;
var G__28559 = f;
var G__28560 = g;
var G__28561 = h;
var G__28562 = i;
var G__28563 = j;
var G__28564 = k;
var G__28565 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__28554,G__28555,G__28556,G__28557,G__28558,G__28559,G__28560,G__28561,G__28562,G__28563,G__28564,G__28565) : target_fn.call(null,G__28554,G__28555,G__28556,G__28557,G__28558,G__28559,G__28560,G__28561,G__28562,G__28563,G__28564,G__28565));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28566 = a;
var G__28567 = b;
var G__28568 = c;
var G__28569 = d;
var G__28570 = e;
var G__28571 = f;
var G__28572 = g;
var G__28573 = h;
var G__28574 = i;
var G__28575 = j;
var G__28576 = k;
var G__28577 = l;
var G__28578 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__28566,G__28567,G__28568,G__28569,G__28570,G__28571,G__28572,G__28573,G__28574,G__28575,G__28576,G__28577,G__28578) : self__.dispatch_fn.call(null,G__28566,G__28567,G__28568,G__28569,G__28570,G__28571,G__28572,G__28573,G__28574,G__28575,G__28576,G__28577,G__28578));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28579 = a;
var G__28580 = b;
var G__28581 = c;
var G__28582 = d;
var G__28583 = e;
var G__28584 = f;
var G__28585 = g;
var G__28586 = h;
var G__28587 = i;
var G__28588 = j;
var G__28589 = k;
var G__28590 = l;
var G__28591 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__28579,G__28580,G__28581,G__28582,G__28583,G__28584,G__28585,G__28586,G__28587,G__28588,G__28589,G__28590,G__28591) : target_fn.call(null,G__28579,G__28580,G__28581,G__28582,G__28583,G__28584,G__28585,G__28586,G__28587,G__28588,G__28589,G__28590,G__28591));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28592 = a;
var G__28593 = b;
var G__28594 = c;
var G__28595 = d;
var G__28596 = e;
var G__28597 = f;
var G__28598 = g;
var G__28599 = h;
var G__28600 = i;
var G__28601 = j;
var G__28602 = k;
var G__28603 = l;
var G__28604 = m;
var G__28605 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__28592,G__28593,G__28594,G__28595,G__28596,G__28597,G__28598,G__28599,G__28600,G__28601,G__28602,G__28603,G__28604,G__28605) : self__.dispatch_fn.call(null,G__28592,G__28593,G__28594,G__28595,G__28596,G__28597,G__28598,G__28599,G__28600,G__28601,G__28602,G__28603,G__28604,G__28605));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28606 = a;
var G__28607 = b;
var G__28608 = c;
var G__28609 = d;
var G__28610 = e;
var G__28611 = f;
var G__28612 = g;
var G__28613 = h;
var G__28614 = i;
var G__28615 = j;
var G__28616 = k;
var G__28617 = l;
var G__28618 = m;
var G__28619 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__28606,G__28607,G__28608,G__28609,G__28610,G__28611,G__28612,G__28613,G__28614,G__28615,G__28616,G__28617,G__28618,G__28619) : target_fn.call(null,G__28606,G__28607,G__28608,G__28609,G__28610,G__28611,G__28612,G__28613,G__28614,G__28615,G__28616,G__28617,G__28618,G__28619));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28620 = a;
var G__28621 = b;
var G__28622 = c;
var G__28623 = d;
var G__28624 = e;
var G__28625 = f;
var G__28626 = g;
var G__28627 = h;
var G__28628 = i;
var G__28629 = j;
var G__28630 = k;
var G__28631 = l;
var G__28632 = m;
var G__28633 = n;
var G__28634 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__28620,G__28621,G__28622,G__28623,G__28624,G__28625,G__28626,G__28627,G__28628,G__28629,G__28630,G__28631,G__28632,G__28633,G__28634) : self__.dispatch_fn.call(null,G__28620,G__28621,G__28622,G__28623,G__28624,G__28625,G__28626,G__28627,G__28628,G__28629,G__28630,G__28631,G__28632,G__28633,G__28634));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28635 = a;
var G__28636 = b;
var G__28637 = c;
var G__28638 = d;
var G__28639 = e;
var G__28640 = f;
var G__28641 = g;
var G__28642 = h;
var G__28643 = i;
var G__28644 = j;
var G__28645 = k;
var G__28646 = l;
var G__28647 = m;
var G__28648 = n;
var G__28649 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__28635,G__28636,G__28637,G__28638,G__28639,G__28640,G__28641,G__28642,G__28643,G__28644,G__28645,G__28646,G__28647,G__28648,G__28649) : target_fn.call(null,G__28635,G__28636,G__28637,G__28638,G__28639,G__28640,G__28641,G__28642,G__28643,G__28644,G__28645,G__28646,G__28647,G__28648,G__28649));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28650 = a;
var G__28651 = b;
var G__28652 = c;
var G__28653 = d;
var G__28654 = e;
var G__28655 = f;
var G__28656 = g;
var G__28657 = h;
var G__28658 = i;
var G__28659 = j;
var G__28660 = k;
var G__28661 = l;
var G__28662 = m;
var G__28663 = n;
var G__28664 = o;
var G__28665 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__28650,G__28651,G__28652,G__28653,G__28654,G__28655,G__28656,G__28657,G__28658,G__28659,G__28660,G__28661,G__28662,G__28663,G__28664,G__28665) : self__.dispatch_fn.call(null,G__28650,G__28651,G__28652,G__28653,G__28654,G__28655,G__28656,G__28657,G__28658,G__28659,G__28660,G__28661,G__28662,G__28663,G__28664,G__28665));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28666 = a;
var G__28667 = b;
var G__28668 = c;
var G__28669 = d;
var G__28670 = e;
var G__28671 = f;
var G__28672 = g;
var G__28673 = h;
var G__28674 = i;
var G__28675 = j;
var G__28676 = k;
var G__28677 = l;
var G__28678 = m;
var G__28679 = n;
var G__28680 = o;
var G__28681 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__28666,G__28667,G__28668,G__28669,G__28670,G__28671,G__28672,G__28673,G__28674,G__28675,G__28676,G__28677,G__28678,G__28679,G__28680,G__28681) : target_fn.call(null,G__28666,G__28667,G__28668,G__28669,G__28670,G__28671,G__28672,G__28673,G__28674,G__28675,G__28676,G__28677,G__28678,G__28679,G__28680,G__28681));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28682 = a;
var G__28683 = b;
var G__28684 = c;
var G__28685 = d;
var G__28686 = e;
var G__28687 = f;
var G__28688 = g;
var G__28689 = h;
var G__28690 = i;
var G__28691 = j;
var G__28692 = k;
var G__28693 = l;
var G__28694 = m;
var G__28695 = n;
var G__28696 = o;
var G__28697 = p;
var G__28698 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__28682,G__28683,G__28684,G__28685,G__28686,G__28687,G__28688,G__28689,G__28690,G__28691,G__28692,G__28693,G__28694,G__28695,G__28696,G__28697,G__28698) : self__.dispatch_fn.call(null,G__28682,G__28683,G__28684,G__28685,G__28686,G__28687,G__28688,G__28689,G__28690,G__28691,G__28692,G__28693,G__28694,G__28695,G__28696,G__28697,G__28698));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28699 = a;
var G__28700 = b;
var G__28701 = c;
var G__28702 = d;
var G__28703 = e;
var G__28704 = f;
var G__28705 = g;
var G__28706 = h;
var G__28707 = i;
var G__28708 = j;
var G__28709 = k;
var G__28710 = l;
var G__28711 = m;
var G__28712 = n;
var G__28713 = o;
var G__28714 = p;
var G__28715 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__28699,G__28700,G__28701,G__28702,G__28703,G__28704,G__28705,G__28706,G__28707,G__28708,G__28709,G__28710,G__28711,G__28712,G__28713,G__28714,G__28715) : target_fn.call(null,G__28699,G__28700,G__28701,G__28702,G__28703,G__28704,G__28705,G__28706,G__28707,G__28708,G__28709,G__28710,G__28711,G__28712,G__28713,G__28714,G__28715));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28716 = a;
var G__28717 = b;
var G__28718 = c;
var G__28719 = d;
var G__28720 = e;
var G__28721 = f;
var G__28722 = g;
var G__28723 = h;
var G__28724 = i;
var G__28725 = j;
var G__28726 = k;
var G__28727 = l;
var G__28728 = m;
var G__28729 = n;
var G__28730 = o;
var G__28731 = p;
var G__28732 = q;
var G__28733 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__28716,G__28717,G__28718,G__28719,G__28720,G__28721,G__28722,G__28723,G__28724,G__28725,G__28726,G__28727,G__28728,G__28729,G__28730,G__28731,G__28732,G__28733) : self__.dispatch_fn.call(null,G__28716,G__28717,G__28718,G__28719,G__28720,G__28721,G__28722,G__28723,G__28724,G__28725,G__28726,G__28727,G__28728,G__28729,G__28730,G__28731,G__28732,G__28733));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28734 = a;
var G__28735 = b;
var G__28736 = c;
var G__28737 = d;
var G__28738 = e;
var G__28739 = f;
var G__28740 = g;
var G__28741 = h;
var G__28742 = i;
var G__28743 = j;
var G__28744 = k;
var G__28745 = l;
var G__28746 = m;
var G__28747 = n;
var G__28748 = o;
var G__28749 = p;
var G__28750 = q;
var G__28751 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__28734,G__28735,G__28736,G__28737,G__28738,G__28739,G__28740,G__28741,G__28742,G__28743,G__28744,G__28745,G__28746,G__28747,G__28748,G__28749,G__28750,G__28751) : target_fn.call(null,G__28734,G__28735,G__28736,G__28737,G__28738,G__28739,G__28740,G__28741,G__28742,G__28743,G__28744,G__28745,G__28746,G__28747,G__28748,G__28749,G__28750,G__28751));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28752 = a;
var G__28753 = b;
var G__28754 = c;
var G__28755 = d;
var G__28756 = e;
var G__28757 = f;
var G__28758 = g;
var G__28759 = h;
var G__28760 = i;
var G__28761 = j;
var G__28762 = k;
var G__28763 = l;
var G__28764 = m;
var G__28765 = n;
var G__28766 = o;
var G__28767 = p;
var G__28768 = q;
var G__28769 = r;
var G__28770 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__28752,G__28753,G__28754,G__28755,G__28756,G__28757,G__28758,G__28759,G__28760,G__28761,G__28762,G__28763,G__28764,G__28765,G__28766,G__28767,G__28768,G__28769,G__28770) : self__.dispatch_fn.call(null,G__28752,G__28753,G__28754,G__28755,G__28756,G__28757,G__28758,G__28759,G__28760,G__28761,G__28762,G__28763,G__28764,G__28765,G__28766,G__28767,G__28768,G__28769,G__28770));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28771 = a;
var G__28772 = b;
var G__28773 = c;
var G__28774 = d;
var G__28775 = e;
var G__28776 = f;
var G__28777 = g;
var G__28778 = h;
var G__28779 = i;
var G__28780 = j;
var G__28781 = k;
var G__28782 = l;
var G__28783 = m;
var G__28784 = n;
var G__28785 = o;
var G__28786 = p;
var G__28787 = q;
var G__28788 = r;
var G__28789 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__28771,G__28772,G__28773,G__28774,G__28775,G__28776,G__28777,G__28778,G__28779,G__28780,G__28781,G__28782,G__28783,G__28784,G__28785,G__28786,G__28787,G__28788,G__28789) : target_fn.call(null,G__28771,G__28772,G__28773,G__28774,G__28775,G__28776,G__28777,G__28778,G__28779,G__28780,G__28781,G__28782,G__28783,G__28784,G__28785,G__28786,G__28787,G__28788,G__28789));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28790 = a;
var G__28791 = b;
var G__28792 = c;
var G__28793 = d;
var G__28794 = e;
var G__28795 = f;
var G__28796 = g;
var G__28797 = h;
var G__28798 = i;
var G__28799 = j;
var G__28800 = k;
var G__28801 = l;
var G__28802 = m;
var G__28803 = n;
var G__28804 = o;
var G__28805 = p;
var G__28806 = q;
var G__28807 = r;
var G__28808 = s;
var G__28809 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__28790,G__28791,G__28792,G__28793,G__28794,G__28795,G__28796,G__28797,G__28798,G__28799,G__28800,G__28801,G__28802,G__28803,G__28804,G__28805,G__28806,G__28807,G__28808,G__28809) : self__.dispatch_fn.call(null,G__28790,G__28791,G__28792,G__28793,G__28794,G__28795,G__28796,G__28797,G__28798,G__28799,G__28800,G__28801,G__28802,G__28803,G__28804,G__28805,G__28806,G__28807,G__28808,G__28809));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28810 = a;
var G__28811 = b;
var G__28812 = c;
var G__28813 = d;
var G__28814 = e;
var G__28815 = f;
var G__28816 = g;
var G__28817 = h;
var G__28818 = i;
var G__28819 = j;
var G__28820 = k;
var G__28821 = l;
var G__28822 = m;
var G__28823 = n;
var G__28824 = o;
var G__28825 = p;
var G__28826 = q;
var G__28827 = r;
var G__28828 = s;
var G__28829 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__28810,G__28811,G__28812,G__28813,G__28814,G__28815,G__28816,G__28817,G__28818,G__28819,G__28820,G__28821,G__28822,G__28823,G__28824,G__28825,G__28826,G__28827,G__28828,G__28829) : target_fn.call(null,G__28810,G__28811,G__28812,G__28813,G__28814,G__28815,G__28816,G__28817,G__28818,G__28819,G__28820,G__28821,G__28822,G__28823,G__28824,G__28825,G__28826,G__28827,G__28828,G__28829));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__28831 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__28831);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4394__auto__,writer__4395__auto__,opt__4396__auto__){
return cljs.core._write(writer__4395__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__28836 = msg;
return Error(G__28836);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__28841 = x;
var G__28842 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__28841,G__28842) : pred.call(null,G__28841,G__28842));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__28843 = y;
var G__28844 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__28843,G__28844) : pred.call(null,G__28843,G__28844));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map